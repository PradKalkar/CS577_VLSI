// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module keccak_absorb (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        s_address0,
        s_ce0,
        s_we0,
        s_d0,
        s_q0,
        s_address1,
        s_ce1,
        s_we1,
        s_d1,
        s_q1,
        r,
        pos_r,
        m_0_read,
        m_1_read,
        ap_return
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_state3 = 19'd4;
parameter    ap_ST_fsm_state4 = 19'd8;
parameter    ap_ST_fsm_state5 = 19'd16;
parameter    ap_ST_fsm_state6 = 19'd32;
parameter    ap_ST_fsm_state7 = 19'd64;
parameter    ap_ST_fsm_state8 = 19'd128;
parameter    ap_ST_fsm_state9 = 19'd256;
parameter    ap_ST_fsm_state10 = 19'd512;
parameter    ap_ST_fsm_state11 = 19'd1024;
parameter    ap_ST_fsm_state12 = 19'd2048;
parameter    ap_ST_fsm_state13 = 19'd4096;
parameter    ap_ST_fsm_state14 = 19'd8192;
parameter    ap_ST_fsm_state15 = 19'd16384;
parameter    ap_ST_fsm_state16 = 19'd32768;
parameter    ap_ST_fsm_state17 = 19'd65536;
parameter    ap_ST_fsm_state18 = 19'd131072;
parameter    ap_ST_fsm_state19 = 19'd262144;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] s_address0;
output   s_ce0;
output   s_we0;
output  [63:0] s_d0;
input  [63:0] s_q0;
output  [4:0] s_address1;
output   s_ce1;
output   s_we1;
output  [63:0] s_d1;
input  [63:0] s_q1;
input  [8:0] r;
input  [6:0] pos_r;
input  [7:0] m_0_read;
input  [7:0] m_1_read;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] s_address0;
reg s_ce0;
reg s_we0;
reg[63:0] s_d0;
reg s_ce1;
reg s_we1;
reg[31:0] ap_return;

(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] empty_fu_454_p1;
reg   [5:0] empty_reg_1100;
wire   [7:0] empty_77_fu_458_p1;
reg   [7:0] empty_77_reg_1106;
wire   [2:0] add_ln387_fu_462_p2;
wire    ap_CS_fsm_state2;
wire   [31:0] zext_ln389_fu_482_p1;
wire   [0:0] icmp_ln387_fu_473_p2;
wire   [4:0] zext_ln389_1_fu_486_p1;
reg   [4:0] zext_ln389_1_reg_1124;
wire  signed [2:0] xor_ln391_2_fu_530_p2;
reg  signed [2:0] xor_ln391_2_reg_1132;
wire   [0:0] icmp_ln389_fu_490_p2;
wire  signed [63:0] sext_ln391_fu_536_p1;
reg  signed [63:0] sext_ln391_reg_1137;
wire  signed [4:0] p_cast6_fu_540_p1;
reg  signed [4:0] p_cast6_reg_1142;
wire   [1:0] add_ln393_fu_552_p2;
reg   [1:0] add_ln393_reg_1147;
wire   [5:0] add_ln394_fu_558_p2;
reg   [5:0] add_ln394_reg_1152;
wire   [63:0] add_ln392_fu_572_p2;
wire    ap_CS_fsm_state3;
wire   [31:0] i_fu_585_p2;
wire   [0:0] exitcond_fu_567_p2;
wire   [3:0] i_38_fu_602_p2;
reg   [3:0] i_38_reg_1174;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln30_fu_596_p2;
reg   [4:0] s_addr_reg_1184;
wire   [63:0] r_2_fu_667_p2;
wire    ap_CS_fsm_state5;
wire  signed [8:0] sext_ln399_fu_684_p1;
reg  signed [8:0] sext_ln399_reg_1194;
wire    ap_CS_fsm_state7;
wire   [2:0] zext_ln399_fu_688_p1;
reg   [2:0] zext_ln399_reg_1199;
wire   [0:0] icmp_ln399_fu_696_p2;
reg   [0:0] icmp_ln399_reg_1206;
wire   [7:0] sub_ln399_fu_702_p2;
reg   [7:0] sub_ln399_reg_1210;
wire   [0:0] icmp_ln399_1_fu_707_p2;
reg   [0:0] icmp_ln399_1_reg_1216;
wire   [8:0] zext_ln402_fu_722_p1;
reg   [8:0] zext_ln402_reg_1220;
wire    ap_CS_fsm_state8;
wire    grp_KeccakF1600_StatePer_1_fu_432_ap_ready;
wire    grp_KeccakF1600_StatePer_1_fu_432_ap_done;
reg    ap_predicate_op112_call_state8;
reg    ap_block_state8_on_subcall_done;
wire  signed [63:0] sext_ln402_fu_730_p1;
wire   [0:0] trunc_ln402_fu_734_p1;
reg   [0:0] trunc_ln402_reg_1230;
wire   [0:0] trunc_ln402_2_fu_738_p1;
reg   [0:0] trunc_ln402_2_reg_1235;
wire  signed [63:0] sext_ln402_1_fu_747_p1;
reg  signed [63:0] sext_ln402_1_reg_1240;
wire   [63:0] empty_83_fu_751_p1;
reg   [63:0] empty_83_reg_1246;
reg   [4:0] tmp_1125_reg_1253;
wire   [29:0] zext_ln416_2_fu_778_p1;
reg   [29:0] zext_ln416_2_reg_1261;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln408_fu_763_p2;
reg   [4:0] tmp_1126_reg_1266;
wire   [4:0] i_39_fu_797_p2;
reg   [4:0] i_39_reg_1275;
wire    ap_CS_fsm_state10;
wire   [63:0] add_ln410_3_fu_821_p2;
reg   [63:0] add_ln410_3_reg_1280;
wire   [0:0] icmp_ln409_fu_792_p2;
reg   [4:0] s_addr_6_reg_1285;
wire   [63:0] add_ln411_fu_832_p2;
reg   [63:0] add_ln411_reg_1290;
wire   [63:0] sub_ln414_fu_837_p2;
reg   [63:0] sub_ln414_reg_1295;
wire   [4:0] add_ln416_fu_851_p2;
reg   [4:0] add_ln416_reg_1303;
wire    ap_CS_fsm_state13;
wire   [63:0] add_ln417_3_fu_875_p2;
reg   [63:0] add_ln417_3_reg_1308;
wire   [0:0] icmp_ln416_fu_846_p2;
reg   [4:0] s_addr_5_reg_1313;
wire   [63:0] sub_ln419_fu_906_p2;
reg   [63:0] sub_ln419_reg_1318;
wire   [32:0] trunc_ln419_fu_912_p1;
reg   [32:0] trunc_ln419_reg_1323;
wire   [8:0] add_ln420_fu_916_p2;
reg   [8:0] add_ln420_reg_1328;
wire   [31:0] zext_ln420_fu_921_p1;
reg   [31:0] zext_ln420_reg_1333;
wire   [0:0] icmp_ln422_fu_925_p2;
reg   [0:0] icmp_ln422_reg_1339;
wire   [3:0] i_40_fu_937_p2;
wire    ap_CS_fsm_state15;
wire   [0:0] trunc_ln426_fu_948_p1;
reg   [0:0] trunc_ln426_reg_1351;
wire   [0:0] icmp_ln423_fu_931_p2;
wire   [0:0] xor_ln426_fu_952_p2;
reg   [0:0] xor_ln426_reg_1356;
wire   [31:0] i_41_fu_970_p2;
wire    ap_CS_fsm_state16;
wire   [3:0] i_42_fu_1003_p2;
reg   [3:0] i_42_reg_1372;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln30_2_fu_997_p2;
reg   [4:0] s_addr_7_reg_1382;
wire   [31:0] trunc_ln428_fu_1028_p1;
reg   [31:0] trunc_ln428_reg_1387;
wire   [63:0] r_3_fu_1057_p2;
wire    ap_CS_fsm_state18;
reg   [2:0] t_address0;
reg    t_ce0;
reg    t_we0;
reg   [7:0] t_d0;
wire   [7:0] t_q0;
wire    grp_KeccakF1600_StatePer_1_fu_432_ap_start;
wire    grp_KeccakF1600_StatePer_1_fu_432_ap_idle;
wire   [4:0] grp_KeccakF1600_StatePer_1_fu_432_state_address0;
wire    grp_KeccakF1600_StatePer_1_fu_432_state_ce0;
wire    grp_KeccakF1600_StatePer_1_fu_432_state_we0;
wire   [63:0] grp_KeccakF1600_StatePer_1_fu_432_state_d0;
wire   [4:0] grp_KeccakF1600_StatePer_1_fu_432_state_address1;
wire    grp_KeccakF1600_StatePer_1_fu_432_state_ce1;
wire    grp_KeccakF1600_StatePer_1_fu_432_state_we1;
wire   [63:0] grp_KeccakF1600_StatePer_1_fu_432_state_d1;
wire    grp_load64_3_fu_440_ap_start;
wire    grp_load64_3_fu_440_ap_done;
wire    grp_load64_3_fu_440_ap_idle;
wire    grp_load64_3_fu_440_ap_ready;
reg   [63:0] grp_load64_3_fu_440_x_offset;
wire   [63:0] grp_load64_3_fu_440_ap_return;
reg   [2:0] phi_ln387_reg_205;
reg   [63:0] p_05_rec_reg_216;
reg   [31:0] i_0_reg_227;
reg   [3:0] i_0_i_reg_236;
reg   [63:0] r_0_i_reg_248;
reg  signed [2:0] p_1620_reg_260;
wire    ap_CS_fsm_state6;
reg   [5:0] p_12_reg_272;
reg   [1:0] p_1_reg_282;
reg   [7:0] ap_phi_mux_p_2722_phi_fu_297_p6;
reg   [7:0] p_2722_reg_293;
reg   [5:0] ap_phi_mux_p_23_phi_fu_310_p6;
reg   [5:0] p_23_reg_307;
wire   [2:0] sub_ln403_fu_716_p2;
reg   [2:0] ap_phi_mux_p_2_phi_fu_325_p6;
reg   [2:0] p_2_reg_322;
reg   [63:0] indvars_iv_reg_333;
wire    ap_CS_fsm_state12;
reg   [63:0] p_38_rec_reg_343;
reg   [4:0] i_2_reg_355;
wire    ap_CS_fsm_state11;
reg   [4:0] i_3_reg_366;
wire    ap_CS_fsm_state14;
reg   [3:0] i_4_reg_377;
reg   [31:0] i_5_reg_388;
wire   [0:0] icmp_ln425_fu_965_p2;
reg   [3:0] i_0_i1_reg_399;
reg   [63:0] r_0_i2_reg_411;
wire   [31:0] add_ln428_fu_1070_p2;
reg   [31:0] ap_phi_mux_p_34_phi_fu_426_p4;
reg   [31:0] p_34_reg_423;
wire    ap_CS_fsm_state19;
reg    grp_KeccakF1600_StatePer_1_fu_432_ap_start_reg;
reg    grp_load64_3_fu_440_ap_start_reg;
wire   [63:0] zext_ln387_fu_468_p1;
wire   [63:0] zext_ln392_fu_591_p1;
wire   [63:0] zext_ln31_fu_608_p1;
wire   [63:0] zext_ln396_fu_636_p1;
wire   [63:0] zext_ln410_1_fu_827_p1;
wire   [63:0] zext_ln417_1_fu_886_p1;
wire   [63:0] zext_ln424_fu_943_p1;
wire   [63:0] zext_ln425_fu_956_p1;
wire   [63:0] zext_ln31_15_fu_1009_p1;
wire   [63:0] zext_ln427_fu_1023_p1;
wire   [7:0] select_ln392_fu_578_p3;
wire   [7:0] select_ln426_fu_990_p3;
wire   [63:0] xor_ln396_fu_673_p2;
wire   [63:0] grp_fu_447_p2;
wire   [63:0] xor_ln427_fu_1063_p2;
wire   [2:0] trunc_ln389_fu_479_p1;
wire   [3:0] zext_ln391_fu_496_p1;
wire   [3:0] sub_ln391_fu_500_p2;
wire   [2:0] empty_79_fu_506_p1;
wire   [0:0] empty_80_fu_516_p2;
wire   [2:0] xor_ln391_1_fu_510_p2;
wire   [2:0] umax_fu_522_p3;
wire   [1:0] trunc_ln393_fu_548_p1;
wire  signed [5:0] sext_ln393_fu_544_p1;
wire   [0:0] empty_81_fu_563_p1;
wire   [4:0] add_ln390_fu_613_p2;
wire  signed [5:0] sext_ln396_fu_617_p1;
wire   [5:0] sub_ln396_fu_621_p2;
wire   [2:0] tmp_fu_626_p4;
wire   [2:0] trunc_ln31_fu_645_p1;
wire   [5:0] shl_ln_fu_649_p3;
wire   [63:0] zext_ln31_13_fu_641_p1;
wire   [63:0] zext_ln31_14_fu_657_p1;
wire   [63:0] shl_ln31_fu_661_p2;
wire   [7:0] zext_ln399_1_fu_680_p1;
wire   [7:0] zext_ln399_2_fu_692_p1;
wire   [2:0] trunc_ln403_fu_713_p1;
wire   [8:0] zext_ln402_1_fu_726_p1;
wire   [8:0] add_ln402_fu_742_p2;
wire   [2:0] tmp_102_fu_768_p4;
wire   [7:0] shl_ln20_fu_803_p3;
wire   [63:0] zext_ln410_fu_811_p1;
wire   [63:0] add_ln410_fu_815_p2;
wire   [7:0] shl_ln19_fu_857_p3;
wire   [63:0] zext_ln417_fu_865_p1;
wire   [63:0] add_ln417_fu_869_p2;
wire   [29:0] zext_ln416_fu_842_p1;
wire   [29:0] add_ln417_1_fu_881_p2;
wire   [7:0] and_ln_fu_891_p3;
wire   [63:0] zext_ln418_fu_902_p1;
wire   [8:0] zext_ln418_2_fu_898_p1;
wire   [32:0] zext_ln425_2_fu_961_p1;
wire   [0:0] trunc_ln426_1_fu_976_p1;
wire   [0:0] xor_ln426_1_fu_980_p2;
wire   [0:0] xor_ln426_2_fu_985_p2;
wire   [5:0] tmp_103_fu_1014_p4;
wire   [2:0] trunc_ln31_5_fu_1035_p1;
wire   [5:0] shl_ln31_7_fu_1039_p3;
wire   [63:0] zext_ln31_16_fu_1031_p1;
wire   [63:0] zext_ln31_17_fu_1047_p1;
wire   [63:0] shl_ln31_2_fu_1051_p2;
reg   [31:0] ap_return_preg;
reg   [18:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'd1;
#0 grp_KeccakF1600_StatePer_1_fu_432_ap_start_reg = 1'b0;
#0 grp_load64_3_fu_440_ap_start_reg = 1'b0;
#0 ap_return_preg = 32'd0;
end

keccak_absorb_2_t #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
t_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(t_address0),
    .ce0(t_ce0),
    .we0(t_we0),
    .d0(t_d0),
    .q0(t_q0)
);

KeccakF1600_StatePer_1 grp_KeccakF1600_StatePer_1_fu_432(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_KeccakF1600_StatePer_1_fu_432_ap_start),
    .ap_done(grp_KeccakF1600_StatePer_1_fu_432_ap_done),
    .ap_idle(grp_KeccakF1600_StatePer_1_fu_432_ap_idle),
    .ap_ready(grp_KeccakF1600_StatePer_1_fu_432_ap_ready),
    .state_address0(grp_KeccakF1600_StatePer_1_fu_432_state_address0),
    .state_ce0(grp_KeccakF1600_StatePer_1_fu_432_state_ce0),
    .state_we0(grp_KeccakF1600_StatePer_1_fu_432_state_we0),
    .state_d0(grp_KeccakF1600_StatePer_1_fu_432_state_d0),
    .state_q0(s_q0),
    .state_address1(grp_KeccakF1600_StatePer_1_fu_432_state_address1),
    .state_ce1(grp_KeccakF1600_StatePer_1_fu_432_state_ce1),
    .state_we1(grp_KeccakF1600_StatePer_1_fu_432_state_we1),
    .state_d1(grp_KeccakF1600_StatePer_1_fu_432_state_d1),
    .state_q1(s_q1)
);

load64_3 grp_load64_3_fu_440(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_load64_3_fu_440_ap_start),
    .ap_done(grp_load64_3_fu_440_ap_done),
    .ap_idle(grp_load64_3_fu_440_ap_idle),
    .ap_ready(grp_load64_3_fu_440_ap_ready),
    .x_0_read(m_0_read),
    .x_1_read(m_1_read),
    .x_offset(grp_load64_3_fu_440_x_offset),
    .ap_return(grp_load64_3_fu_440_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_return_preg <= ap_phi_mux_p_34_phi_fu_426_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_KeccakF1600_StatePer_1_fu_432_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln409_fu_792_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)) | ((icmp_ln399_1_fu_707_p2 == 1'd0) & (icmp_ln399_fu_696_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
            grp_KeccakF1600_StatePer_1_fu_432_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakF1600_StatePer_1_fu_432_ap_ready == 1'b1)) begin
            grp_KeccakF1600_StatePer_1_fu_432_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_load64_3_fu_440_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln416_fu_846_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((icmp_ln409_fu_792_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10)))) begin
            grp_load64_3_fu_440_ap_start_reg <= 1'b1;
        end else if ((grp_load64_3_fu_440_ap_ready == 1'b1)) begin
            grp_load64_3_fu_440_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln425_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        i_0_i1_reg_399 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        i_0_i1_reg_399 <= i_42_reg_1372;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_567_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_i_reg_236 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i_0_i_reg_236 <= i_38_reg_1174;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_567_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_reg_227 <= i_fu_585_p2;
    end else if (((icmp_ln389_fu_490_p2 == 1'd0) & (icmp_ln387_fu_473_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_reg_227 <= zext_ln389_fu_482_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln408_fu_763_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        i_2_reg_355 <= 5'd0;
    end else if (((grp_load64_3_fu_440_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        i_2_reg_355 <= i_39_reg_1275;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_load64_3_fu_440_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        i_3_reg_366 <= add_ln416_reg_1303;
    end else if (((icmp_ln408_fu_763_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        i_3_reg_366 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln422_fu_925_p2 == 1'd0) & (icmp_ln416_fu_846_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        i_4_reg_377 <= 4'd0;
    end else if (((icmp_ln423_fu_931_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        i_4_reg_377 <= i_40_fu_937_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln423_fu_931_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        i_5_reg_388 <= 32'd0;
    end else if (((icmp_ln425_fu_965_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        i_5_reg_388 <= i_41_fu_970_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8_on_subcall_done))) begin
        indvars_iv_reg_333 <= sext_ln402_fu_730_p1;
    end else if (((1'b1 == ap_CS_fsm_state12) & (grp_KeccakF1600_StatePer_1_fu_432_ap_done == 1'b1))) begin
        indvars_iv_reg_333 <= sub_ln414_reg_1295;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_567_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        p_05_rec_reg_216 <= add_ln392_fu_572_p2;
    end else if (((icmp_ln389_fu_490_p2 == 1'd0) & (icmp_ln387_fu_473_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_05_rec_reg_216 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln389_fu_490_p2 == 1'd1) & (icmp_ln387_fu_473_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_12_reg_272 <= empty_reg_1100;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        p_12_reg_272 <= add_ln394_reg_1152;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln389_fu_490_p2 == 1'd1) & (icmp_ln387_fu_473_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_1620_reg_260 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        p_1620_reg_260 <= xor_ln391_2_reg_1132;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln389_fu_490_p2 == 1'd1) & (icmp_ln387_fu_473_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_1_reg_282 <= 2'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        p_1_reg_282 <= add_ln393_reg_1147;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln399_fu_696_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln399_fu_696_p2 == 1'd0) & (icmp_ln399_1_fu_707_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7)))) begin
        p_23_reg_307 <= p_12_reg_272;
    end else if (((icmp_ln399_1_reg_1216 == 1'd0) & (icmp_ln399_reg_1206 == 1'd0) & (1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8_on_subcall_done))) begin
        p_23_reg_307 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln399_fu_696_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln399_fu_696_p2 == 1'd0) & (icmp_ln399_1_fu_707_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7)))) begin
        p_2722_reg_293 <= 8'd0;
    end else if (((icmp_ln399_1_reg_1216 == 1'd0) & (icmp_ln399_reg_1206 == 1'd0) & (1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8_on_subcall_done))) begin
        p_2722_reg_293 <= sub_ln399_reg_1210;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln399_fu_696_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln399_fu_696_p2 == 1'd0) & (icmp_ln399_1_fu_707_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7)))) begin
        p_2_reg_322 <= zext_ln399_fu_688_p1;
    end else if (((icmp_ln399_1_reg_1216 == 1'd0) & (icmp_ln399_reg_1206 == 1'd0) & (1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8_on_subcall_done))) begin
        p_2_reg_322 <= sub_ln403_fu_716_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln422_fu_925_p2 == 1'd1) & (icmp_ln416_fu_846_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        p_34_reg_423 <= zext_ln420_fu_921_p1;
    end else if (((icmp_ln422_reg_1339 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        p_34_reg_423 <= add_ln428_fu_1070_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8_on_subcall_done))) begin
        p_38_rec_reg_343 <= 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state12) & (grp_KeccakF1600_StatePer_1_fu_432_ap_done == 1'b1))) begin
        p_38_rec_reg_343 <= add_ln411_reg_1290;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_fu_473_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_ln387_reg_205 <= add_ln387_fu_462_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_ln387_reg_205 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln425_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        r_0_i2_reg_411 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        r_0_i2_reg_411 <= r_3_fu_1057_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_567_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        r_0_i_reg_248 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        r_0_i_reg_248 <= r_2_fu_667_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln389_fu_490_p2 == 1'd0) & (icmp_ln387_fu_473_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        add_ln393_reg_1147 <= add_ln393_fu_552_p2;
        add_ln394_reg_1152 <= add_ln394_fu_558_p2;
        p_cast6_reg_1142 <= p_cast6_fu_540_p1;
        sext_ln391_reg_1137 <= sext_ln391_fu_536_p1;
        xor_ln391_2_reg_1132 <= xor_ln391_2_fu_530_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln409_fu_792_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        add_ln410_3_reg_1280 <= add_ln410_3_fu_821_p2;
        s_addr_6_reg_1285 <= zext_ln410_1_fu_827_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln409_fu_792_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        add_ln411_reg_1290 <= add_ln411_fu_832_p2;
        sub_ln414_reg_1295 <= sub_ln414_fu_837_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_ln416_reg_1303 <= add_ln416_fu_851_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln416_fu_846_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        add_ln417_3_reg_1308 <= add_ln417_3_fu_875_p2;
        s_addr_5_reg_1313 <= zext_ln417_1_fu_886_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln416_fu_846_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        add_ln420_reg_1328 <= add_ln420_fu_916_p2;
        icmp_ln422_reg_1339 <= icmp_ln422_fu_925_p2;
        sub_ln419_reg_1318 <= sub_ln419_fu_906_p2;
        trunc_ln419_reg_1323 <= trunc_ln419_fu_912_p1;
        zext_ln420_reg_1333[8 : 0] <= zext_ln420_fu_921_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_77_reg_1106 <= empty_77_fu_458_p1;
        empty_reg_1100 <= empty_fu_454_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8_on_subcall_done))) begin
        empty_83_reg_1246[8 : 0] <= empty_83_fu_751_p1[8 : 0];
        sext_ln402_1_reg_1240 <= sext_ln402_1_fu_747_p1;
        tmp_1125_reg_1253 <= {{r[7:3]}};
        trunc_ln402_2_reg_1235 <= trunc_ln402_2_fu_738_p1;
        trunc_ln402_reg_1230 <= trunc_ln402_fu_734_p1;
        zext_ln402_reg_1220[5 : 0] <= zext_ln402_fu_722_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_38_reg_1174 <= i_38_fu_602_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_39_reg_1275 <= i_39_fu_797_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i_42_reg_1372 <= i_42_fu_1003_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln399_fu_696_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        icmp_ln399_1_reg_1216 <= icmp_ln399_1_fu_707_p2;
        sub_ln399_reg_1210 <= sub_ln399_fu_702_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        icmp_ln399_reg_1206 <= icmp_ln399_fu_696_p2;
        sext_ln399_reg_1194 <= sext_ln399_fu_684_p1;
        zext_ln399_reg_1199[1 : 0] <= zext_ln399_fu_688_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_2_fu_997_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        s_addr_7_reg_1382 <= zext_ln427_fu_1023_p1;
        trunc_ln428_reg_1387 <= trunc_ln428_fu_1028_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_fu_596_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        s_addr_reg_1184[2 : 0] <= zext_ln396_fu_636_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln408_fu_763_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        tmp_1126_reg_1266 <= {{indvars_iv_reg_333[7:3]}};
        zext_ln416_2_reg_1261[2 : 0] <= zext_ln416_2_fu_778_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln423_fu_931_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        trunc_ln426_reg_1351 <= trunc_ln426_fu_948_p1;
        xor_ln426_reg_1356 <= xor_ln426_fu_952_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_fu_473_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        zext_ln389_1_reg_1124[2 : 0] <= zext_ln389_1_fu_486_p1[2 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln399_1_reg_1216 == 1'd0) & (icmp_ln399_reg_1206 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_phi_mux_p_23_phi_fu_310_p6 = 6'd0;
    end else begin
        ap_phi_mux_p_23_phi_fu_310_p6 = p_23_reg_307;
    end
end

always @ (*) begin
    if (((icmp_ln399_1_reg_1216 == 1'd0) & (icmp_ln399_reg_1206 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_phi_mux_p_2722_phi_fu_297_p6 = sub_ln399_reg_1210;
    end else begin
        ap_phi_mux_p_2722_phi_fu_297_p6 = p_2722_reg_293;
    end
end

always @ (*) begin
    if (((icmp_ln399_1_reg_1216 == 1'd0) & (icmp_ln399_reg_1206 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_phi_mux_p_2_phi_fu_325_p6 = sub_ln403_fu_716_p2;
    end else begin
        ap_phi_mux_p_2_phi_fu_325_p6 = p_2_reg_322;
    end
end

always @ (*) begin
    if (((icmp_ln422_reg_1339 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        ap_phi_mux_p_34_phi_fu_426_p4 = add_ln428_fu_1070_p2;
    end else begin
        ap_phi_mux_p_34_phi_fu_426_p4 = p_34_reg_423;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_return = ap_phi_mux_p_34_phi_fu_426_p4;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_load64_3_fu_440_x_offset = add_ln417_3_reg_1308;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_load64_3_fu_440_x_offset = add_ln410_3_reg_1280;
    end else begin
        grp_load64_3_fu_440_x_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        s_address0 = s_addr_7_reg_1382;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        s_address0 = zext_ln427_fu_1023_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        s_address0 = s_addr_5_reg_1313;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        s_address0 = zext_ln417_1_fu_886_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        s_address0 = s_addr_6_reg_1285;
    end else if (((icmp_ln409_fu_792_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        s_address0 = zext_ln410_1_fu_827_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        s_address0 = s_addr_reg_1184;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        s_address0 = zext_ln396_fu_636_p1;
    end else if (((1'b1 == ap_CS_fsm_state12) | ((ap_predicate_op112_call_state8 == 1'b1) & (1'b1 == ap_CS_fsm_state8)))) begin
        s_address0 = grp_KeccakF1600_StatePer_1_fu_432_state_address0;
    end else begin
        s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state4) | ((grp_load64_3_fu_440_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((grp_load64_3_fu_440_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((icmp_ln409_fu_792_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10)))) begin
        s_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | ((ap_predicate_op112_call_state8 == 1'b1) & (1'b1 == ap_CS_fsm_state8)))) begin
        s_ce0 = grp_KeccakF1600_StatePer_1_fu_432_state_ce0;
    end else begin
        s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((ap_predicate_op112_call_state8 == 1'b1) & (1'b1 == ap_CS_fsm_state8)))) begin
        s_ce1 = grp_KeccakF1600_StatePer_1_fu_432_state_ce1;
    end else begin
        s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        s_d0 = xor_ln427_fu_1063_p2;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11))) begin
        s_d0 = grp_fu_447_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        s_d0 = xor_ln396_fu_673_p2;
    end else if (((1'b1 == ap_CS_fsm_state12) | ((ap_predicate_op112_call_state8 == 1'b1) & (1'b1 == ap_CS_fsm_state8)))) begin
        s_d0 = grp_KeccakF1600_StatePer_1_fu_432_state_d0;
    end else begin
        s_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((icmp_ln422_reg_1339 == 1'd0) & (1'b1 == ap_CS_fsm_state19)) | ((grp_load64_3_fu_440_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((grp_load64_3_fu_440_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11)))) begin
        s_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | ((ap_predicate_op112_call_state8 == 1'b1) & (1'b1 == ap_CS_fsm_state8)))) begin
        s_we0 = grp_KeccakF1600_StatePer_1_fu_432_state_we0;
    end else begin
        s_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((ap_predicate_op112_call_state8 == 1'b1) & (1'b1 == ap_CS_fsm_state8)))) begin
        s_we1 = grp_KeccakF1600_StatePer_1_fu_432_state_we1;
    end else begin
        s_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        t_address0 = zext_ln31_15_fu_1009_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        t_address0 = zext_ln425_fu_956_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        t_address0 = zext_ln424_fu_943_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_address0 = zext_ln31_fu_608_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_address0 = zext_ln392_fu_591_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t_address0 = zext_ln387_fu_468_p1;
    end else begin
        t_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        t_ce0 = 1'b1;
    end else begin
        t_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        t_d0 = select_ln426_fu_990_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_d0 = select_ln392_fu_578_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state15))) begin
        t_d0 = 8'd0;
    end else begin
        t_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln425_fu_965_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((icmp_ln423_fu_931_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15)) | ((exitcond_fu_567_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        t_we0 = 1'b1;
    end else begin
        t_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln389_fu_490_p2 == 1'd0) & (icmp_ln387_fu_473_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((icmp_ln389_fu_490_p2 == 1'd1) & (icmp_ln387_fu_473_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond_fu_567_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln30_fu_596_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln408_fu_763_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln409_fu_792_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((grp_load64_3_fu_440_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (grp_KeccakF1600_StatePer_1_fu_432_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln422_fu_925_p2 == 1'd0) & (icmp_ln416_fu_846_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else if (((icmp_ln422_fu_925_p2 == 1'd1) & (icmp_ln416_fu_846_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((grp_load64_3_fu_440_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln423_fu_931_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((icmp_ln425_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln30_2_fu_997_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln387_fu_462_p2 = (phi_ln387_reg_205 + 3'd1);

assign add_ln390_fu_613_p2 = ($signed(p_cast6_reg_1142) + $signed(zext_ln389_1_reg_1124));

assign add_ln392_fu_572_p2 = (64'd1 + p_05_rec_reg_216);

assign add_ln393_fu_552_p2 = ($signed(2'd3) + $signed(trunc_ln393_fu_548_p1));

assign add_ln394_fu_558_p2 = ($signed(sext_ln393_fu_544_p1) + $signed(empty_reg_1100));

assign add_ln402_fu_742_p2 = ($signed(zext_ln402_1_fu_726_p1) + $signed(sext_ln399_reg_1194));

assign add_ln410_3_fu_821_p2 = ($signed(sext_ln402_1_reg_1240) + $signed(add_ln410_fu_815_p2));

assign add_ln410_fu_815_p2 = (zext_ln410_fu_811_p1 + p_38_rec_reg_343);

assign add_ln411_fu_832_p2 = (empty_83_reg_1246 + p_38_rec_reg_343);

assign add_ln416_fu_851_p2 = (i_3_reg_366 + 5'd1);

assign add_ln417_1_fu_881_p2 = (zext_ln416_2_reg_1261 + zext_ln416_fu_842_p1);

assign add_ln417_3_fu_875_p2 = ($signed(sext_ln402_1_reg_1240) + $signed(add_ln417_fu_869_p2));

assign add_ln417_fu_869_p2 = (zext_ln417_fu_865_p1 + p_38_rec_reg_343);

assign add_ln420_fu_916_p2 = (zext_ln402_reg_1220 + zext_ln418_2_fu_898_p1);

assign add_ln428_fu_1070_p2 = (trunc_ln428_reg_1387 + zext_ln420_reg_1333);

assign and_ln_fu_891_p3 = {{tmp_1126_reg_1266}, {3'd0}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state8_on_subcall_done = ((grp_KeccakF1600_StatePer_1_fu_432_ap_done == 1'b0) & (ap_predicate_op112_call_state8 == 1'b1));
end

always @ (*) begin
    ap_predicate_op112_call_state8 = ((icmp_ln399_1_reg_1216 == 1'd0) & (icmp_ln399_reg_1206 == 1'd0));
end

assign empty_77_fu_458_p1 = r[7:0];

assign empty_79_fu_506_p1 = sub_ln391_fu_500_p2[2:0];

assign empty_80_fu_516_p2 = ((sub_ln391_fu_500_p2 > 4'd2) ? 1'b1 : 1'b0);

assign empty_81_fu_563_p1 = p_05_rec_reg_216[0:0];

assign empty_83_fu_751_p1 = r;

assign empty_fu_454_p1 = pos_r[5:0];

assign exitcond_fu_567_p2 = ((p_05_rec_reg_216 == sext_ln391_reg_1137) ? 1'b1 : 1'b0);

assign grp_KeccakF1600_StatePer_1_fu_432_ap_start = grp_KeccakF1600_StatePer_1_fu_432_ap_start_reg;

assign grp_fu_447_p2 = (s_q0 ^ grp_load64_3_fu_440_ap_return);

assign grp_load64_3_fu_440_ap_start = grp_load64_3_fu_440_ap_start_reg;

assign i_38_fu_602_p2 = (i_0_i_reg_236 + 4'd1);

assign i_39_fu_797_p2 = (i_2_reg_355 + 5'd1);

assign i_40_fu_937_p2 = (i_4_reg_377 + 4'd1);

assign i_41_fu_970_p2 = (i_5_reg_388 + 32'd1);

assign i_42_fu_1003_p2 = (i_0_i1_reg_399 + 4'd1);

assign i_fu_585_p2 = (i_0_reg_227 + 32'd1);

assign icmp_ln30_2_fu_997_p2 = ((i_0_i1_reg_399 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_596_p2 = ((i_0_i_reg_236 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln387_fu_473_p2 = ((phi_ln387_reg_205 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln389_fu_490_p2 = ((trunc_ln389_fu_479_p1 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln399_1_fu_707_p2 = ((zext_ln399_2_fu_692_p1 < sub_ln399_fu_702_p2) ? 1'b1 : 1'b0);

assign icmp_ln399_fu_696_p2 = ((p_12_reg_272 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln408_fu_763_p2 = ((indvars_iv_reg_333 < empty_83_reg_1246) ? 1'b1 : 1'b0);

assign icmp_ln409_fu_792_p2 = ((i_2_reg_355 == tmp_1125_reg_1253) ? 1'b1 : 1'b0);

assign icmp_ln416_fu_846_p2 = ((i_3_reg_366 == tmp_1126_reg_1266) ? 1'b1 : 1'b0);

assign icmp_ln422_fu_925_p2 = ((indvars_iv_reg_333 == zext_ln418_fu_902_p1) ? 1'b1 : 1'b0);

assign icmp_ln423_fu_931_p2 = ((i_4_reg_377 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln425_fu_965_p2 = ((zext_ln425_2_fu_961_p1 < trunc_ln419_reg_1323) ? 1'b1 : 1'b0);

assign p_cast6_fu_540_p1 = xor_ln391_2_fu_530_p2;

assign r_2_fu_667_p2 = (shl_ln31_fu_661_p2 | r_0_i_reg_248);

assign r_3_fu_1057_p2 = (shl_ln31_2_fu_1051_p2 | r_0_i2_reg_411);

assign s_address1 = grp_KeccakF1600_StatePer_1_fu_432_state_address1;

assign s_d1 = grp_KeccakF1600_StatePer_1_fu_432_state_d1;

assign select_ln392_fu_578_p3 = ((empty_81_fu_563_p1[0:0] === 1'b1) ? m_1_read : m_0_read);

assign select_ln426_fu_990_p3 = ((xor_ln426_2_fu_985_p2[0:0] === 1'b1) ? m_1_read : m_0_read);

assign sext_ln391_fu_536_p1 = xor_ln391_2_fu_530_p2;

assign sext_ln393_fu_544_p1 = xor_ln391_2_fu_530_p2;

assign sext_ln396_fu_617_p1 = $signed(add_ln390_fu_613_p2);

assign sext_ln399_fu_684_p1 = p_1620_reg_260;

assign sext_ln402_1_fu_747_p1 = $signed(add_ln402_fu_742_p2);

assign sext_ln402_fu_730_p1 = $signed(ap_phi_mux_p_2_phi_fu_325_p6);

assign shl_ln19_fu_857_p3 = {{i_3_reg_366}, {3'd0}};

assign shl_ln20_fu_803_p3 = {{i_2_reg_355}, {3'd0}};

assign shl_ln31_2_fu_1051_p2 = zext_ln31_16_fu_1031_p1 << zext_ln31_17_fu_1047_p1;

assign shl_ln31_7_fu_1039_p3 = {{trunc_ln31_5_fu_1035_p1}, {3'd0}};

assign shl_ln31_fu_661_p2 = zext_ln31_13_fu_641_p1 << zext_ln31_14_fu_657_p1;

assign shl_ln_fu_649_p3 = {{trunc_ln31_fu_645_p1}, {3'd0}};

assign sub_ln391_fu_500_p2 = ($signed(4'd8) - $signed(zext_ln391_fu_496_p1));

assign sub_ln396_fu_621_p2 = ($signed(add_ln394_reg_1152) - $signed(sext_ln396_fu_617_p1));

assign sub_ln399_fu_702_p2 = (empty_77_reg_1106 - zext_ln399_1_fu_680_p1);

assign sub_ln403_fu_716_p2 = (zext_ln399_reg_1199 - trunc_ln403_fu_713_p1);

assign sub_ln414_fu_837_p2 = (indvars_iv_reg_333 - empty_83_reg_1246);

assign sub_ln419_fu_906_p2 = (indvars_iv_reg_333 - zext_ln418_fu_902_p1);

assign tmp_102_fu_768_p4 = {{p_23_reg_307[5:3]}};

assign tmp_103_fu_1014_p4 = {{add_ln420_reg_1328[8:3]}};

assign tmp_fu_626_p4 = {{sub_ln396_fu_621_p2[5:3]}};

assign trunc_ln31_5_fu_1035_p1 = i_0_i1_reg_399[2:0];

assign trunc_ln31_fu_645_p1 = i_0_i_reg_236[2:0];

assign trunc_ln389_fu_479_p1 = pos_r[2:0];

assign trunc_ln393_fu_548_p1 = umax_fu_522_p3[1:0];

assign trunc_ln402_2_fu_738_p1 = p_1620_reg_260[0:0];

assign trunc_ln402_fu_734_p1 = ap_phi_mux_p_2722_phi_fu_297_p6[0:0];

assign trunc_ln403_fu_713_p1 = sub_ln399_reg_1210[2:0];

assign trunc_ln419_fu_912_p1 = sub_ln419_fu_906_p2[32:0];

assign trunc_ln426_1_fu_976_p1 = i_5_reg_388[0:0];

assign trunc_ln426_fu_948_p1 = p_38_rec_reg_343[0:0];

assign trunc_ln428_fu_1028_p1 = sub_ln419_reg_1318[31:0];

assign umax_fu_522_p3 = ((empty_80_fu_516_p2[0:0] === 1'b1) ? 3'd5 : xor_ln391_1_fu_510_p2);

assign xor_ln391_1_fu_510_p2 = (empty_79_fu_506_p1 ^ 3'd7);

assign xor_ln391_2_fu_530_p2 = (umax_fu_522_p3 ^ 3'd7);

assign xor_ln396_fu_673_p2 = (s_q0 ^ r_0_i_reg_248);

assign xor_ln426_1_fu_980_p2 = (trunc_ln426_reg_1351 ^ trunc_ln426_1_fu_976_p1);

assign xor_ln426_2_fu_985_p2 = (xor_ln426_reg_1356 ^ xor_ln426_1_fu_980_p2);

assign xor_ln426_fu_952_p2 = (trunc_ln402_reg_1230 ^ trunc_ln402_2_reg_1235);

assign xor_ln427_fu_1063_p2 = (s_q0 ^ r_0_i2_reg_411);

assign zext_ln31_13_fu_641_p1 = t_q0;

assign zext_ln31_14_fu_657_p1 = shl_ln_fu_649_p3;

assign zext_ln31_15_fu_1009_p1 = i_0_i1_reg_399;

assign zext_ln31_16_fu_1031_p1 = t_q0;

assign zext_ln31_17_fu_1047_p1 = shl_ln31_7_fu_1039_p3;

assign zext_ln31_fu_608_p1 = i_0_i_reg_236;

assign zext_ln387_fu_468_p1 = phi_ln387_reg_205;

assign zext_ln389_1_fu_486_p1 = trunc_ln389_fu_479_p1;

assign zext_ln389_fu_482_p1 = trunc_ln389_fu_479_p1;

assign zext_ln391_fu_496_p1 = trunc_ln389_fu_479_p1;

assign zext_ln392_fu_591_p1 = i_0_reg_227;

assign zext_ln396_fu_636_p1 = tmp_fu_626_p4;

assign zext_ln399_1_fu_680_p1 = p_12_reg_272;

assign zext_ln399_2_fu_692_p1 = p_1_reg_282;

assign zext_ln399_fu_688_p1 = p_1_reg_282;

assign zext_ln402_1_fu_726_p1 = ap_phi_mux_p_2722_phi_fu_297_p6;

assign zext_ln402_fu_722_p1 = ap_phi_mux_p_23_phi_fu_310_p6;

assign zext_ln410_1_fu_827_p1 = i_2_reg_355;

assign zext_ln410_fu_811_p1 = shl_ln20_fu_803_p3;

assign zext_ln416_2_fu_778_p1 = tmp_102_fu_768_p4;

assign zext_ln416_fu_842_p1 = i_3_reg_366;

assign zext_ln417_1_fu_886_p1 = add_ln417_1_fu_881_p2;

assign zext_ln417_fu_865_p1 = shl_ln19_fu_857_p3;

assign zext_ln418_2_fu_898_p1 = and_ln_fu_891_p3;

assign zext_ln418_fu_902_p1 = and_ln_fu_891_p3;

assign zext_ln420_fu_921_p1 = add_ln420_fu_916_p2;

assign zext_ln424_fu_943_p1 = i_4_reg_377;

assign zext_ln425_2_fu_961_p1 = i_5_reg_388;

assign zext_ln425_fu_956_p1 = i_5_reg_388;

assign zext_ln427_fu_1023_p1 = tmp_103_fu_1014_p4;

always @ (posedge ap_clk) begin
    zext_ln389_1_reg_1124[4:3] <= 2'b00;
    s_addr_reg_1184[4:3] <= 2'b00;
    zext_ln399_reg_1199[2] <= 1'b0;
    zext_ln402_reg_1220[8:6] <= 3'b000;
    empty_83_reg_1246[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln416_2_reg_1261[29:3] <= 27'b000000000000000000000000000;
    zext_ln420_reg_1333[31:9] <= 23'b00000000000000000000000;
end

endmodule //keccak_absorb
