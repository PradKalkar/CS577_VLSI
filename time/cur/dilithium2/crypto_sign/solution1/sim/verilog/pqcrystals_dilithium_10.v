// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pqcrystals_dilithium_10 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_coeffs_address0,
        a_coeffs_ce0,
        a_coeffs_we0,
        a_coeffs_d0,
        a_coeffs_offset,
        a_coeffs_offset1,
        seed_address0,
        seed_ce0,
        seed_q0,
        seed_address1,
        seed_ce1,
        seed_q1,
        nonce
);

parameter    ap_ST_fsm_state1 = 45'd1;
parameter    ap_ST_fsm_state2 = 45'd2;
parameter    ap_ST_fsm_state3 = 45'd4;
parameter    ap_ST_fsm_state4 = 45'd8;
parameter    ap_ST_fsm_state5 = 45'd16;
parameter    ap_ST_fsm_state6 = 45'd32;
parameter    ap_ST_fsm_state7 = 45'd64;
parameter    ap_ST_fsm_state8 = 45'd128;
parameter    ap_ST_fsm_state9 = 45'd256;
parameter    ap_ST_fsm_state10 = 45'd512;
parameter    ap_ST_fsm_state11 = 45'd1024;
parameter    ap_ST_fsm_state12 = 45'd2048;
parameter    ap_ST_fsm_state13 = 45'd4096;
parameter    ap_ST_fsm_pp0_stage0 = 45'd8192;
parameter    ap_ST_fsm_pp0_stage1 = 45'd16384;
parameter    ap_ST_fsm_pp0_stage2 = 45'd32768;
parameter    ap_ST_fsm_pp0_stage3 = 45'd65536;
parameter    ap_ST_fsm_state19 = 45'd131072;
parameter    ap_ST_fsm_state20 = 45'd262144;
parameter    ap_ST_fsm_state21 = 45'd524288;
parameter    ap_ST_fsm_state22 = 45'd1048576;
parameter    ap_ST_fsm_state23 = 45'd2097152;
parameter    ap_ST_fsm_state24 = 45'd4194304;
parameter    ap_ST_fsm_state25 = 45'd8388608;
parameter    ap_ST_fsm_state26 = 45'd16777216;
parameter    ap_ST_fsm_state27 = 45'd33554432;
parameter    ap_ST_fsm_state28 = 45'd67108864;
parameter    ap_ST_fsm_state29 = 45'd134217728;
parameter    ap_ST_fsm_state30 = 45'd268435456;
parameter    ap_ST_fsm_state31 = 45'd536870912;
parameter    ap_ST_fsm_state32 = 45'd1073741824;
parameter    ap_ST_fsm_state33 = 45'd2147483648;
parameter    ap_ST_fsm_state34 = 45'd4294967296;
parameter    ap_ST_fsm_state35 = 45'd8589934592;
parameter    ap_ST_fsm_state36 = 45'd17179869184;
parameter    ap_ST_fsm_state37 = 45'd34359738368;
parameter    ap_ST_fsm_state38 = 45'd68719476736;
parameter    ap_ST_fsm_state39 = 45'd137438953472;
parameter    ap_ST_fsm_state40 = 45'd274877906944;
parameter    ap_ST_fsm_state41 = 45'd549755813888;
parameter    ap_ST_fsm_state42 = 45'd1099511627776;
parameter    ap_ST_fsm_state43 = 45'd2199023255552;
parameter    ap_ST_fsm_state44 = 45'd4398046511104;
parameter    ap_ST_fsm_state45 = 45'd8796093022208;
parameter    ap_ST_fsm_state46 = 45'd17592186044416;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] a_coeffs_address0;
output   a_coeffs_ce0;
output   a_coeffs_we0;
output  [22:0] a_coeffs_d0;
input  [3:0] a_coeffs_offset;
input  [3:0] a_coeffs_offset1;
output  [7:0] seed_address0;
output   seed_ce0;
input  [7:0] seed_q0;
output  [7:0] seed_address1;
output   seed_ce1;
input  [7:0] seed_q1;
input  [10:0] nonce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_coeffs_ce0;
reg a_coeffs_we0;
reg[7:0] seed_address0;
reg seed_ce0;
reg[7:0] seed_address1;
reg seed_ce1;

(* fsm_encoding = "none" *) reg   [44:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] i_3_i_reg_502;
wire   [4:0] state_s_addr_71_reg_896;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state13;
wire   [7:0] t_0_fu_585_p1;
reg   [7:0] t_0_reg_912;
wire   [7:0] t_1_fu_599_p1;
reg   [7:0] t_1_reg_917;
wire   [0:0] icmp_ln423_fu_603_p2;
reg   [0:0] icmp_ln423_reg_922;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state14_pp0_stage0_iter0;
wire    ap_block_state18_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [2:0] add_ln423_fu_609_p2;
reg   [2:0] add_ln423_reg_926;
reg    ap_enable_reg_pp0_iter0;
wire   [4:0] shl_ln3_fu_624_p3;
reg   [4:0] shl_ln3_reg_931;
reg   [4:0] state_s_addr_77_reg_951;
reg   [7:0] seed_load_reg_957;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state15_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
reg   [7:0] seed_load_8_reg_962;
wire   [63:0] state_s_q1;
reg   [63:0] state_s_load_5_reg_977;
reg   [7:0] seed_load_9_reg_982;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state16_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
reg   [7:0] seed_load_10_reg_987;
reg   [7:0] seed_load_11_reg_1002;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state17_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
reg   [7:0] seed_load_12_reg_1007;
wire   [1:0] trunc_ln391_fu_728_p1;
reg   [1:0] trunc_ln391_reg_1022;
wire    ap_CS_fsm_state19;
wire   [1:0] trunc_ln391_1_fu_731_p1;
reg   [1:0] trunc_ln391_1_reg_1027;
wire   [31:0] grp_keccak_absorb_fu_547_ap_return;
reg   [31:0] state_pos_write_assi_reg_1032;
wire    ap_CS_fsm_state20;
wire    grp_keccak_absorb_fu_547_ap_ready;
wire    grp_keccak_absorb_fu_547_ap_done;
reg   [4:0] state_s_addr_76_reg_1037;
wire   [31:0] grp_rej_uniform_fu_569_ap_return;
wire    ap_CS_fsm_state28;
wire    grp_rej_uniform_fu_569_ap_ready;
wire    grp_rej_uniform_fu_569_ap_done;
wire   [10:0] zext_ln393_fu_788_p1;
reg   [10:0] zext_ln393_reg_1048;
wire    ap_CS_fsm_state29;
wire   [7:0] trunc_ln395_fu_814_p1;
reg   [7:0] trunc_ln395_reg_1056;
wire    ap_CS_fsm_state41;
wire   [1:0] trunc_ln395_1_fu_818_p1;
reg   [1:0] trunc_ln395_1_reg_1061;
wire   [10:0] sub_ln398_fu_826_p2;
reg   [10:0] sub_ln398_reg_1067;
wire   [1:0] i_fu_840_p2;
reg   [1:0] i_reg_1075;
wire    ap_CS_fsm_state42;
wire   [0:0] icmp_ln396_fu_835_p2;
wire   [8:0] zext_ln401_fu_870_p1;
reg   [8:0] zext_ln401_reg_1085;
wire    ap_CS_fsm_state45;
wire   [9:0] sub_ln402_fu_878_p2;
reg   [9:0] sub_ln402_reg_1090;
wire   [10:0] zext_ln402_fu_885_p1;
reg   [10:0] zext_ln402_reg_1095;
wire   [31:0] ctr_2_fu_890_p2;
wire    ap_CS_fsm_state46;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state14;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage3_subdone;
reg   [9:0] buf_address0;
reg    buf_ce0;
reg    buf_we0;
reg   [7:0] buf_d0;
wire   [7:0] buf_q0;
reg   [9:0] buf_address1;
reg    buf_ce1;
reg    buf_we1;
wire   [7:0] buf_q1;
reg   [4:0] state_s_address0;
reg    state_s_ce0;
reg    state_s_we0;
reg   [63:0] state_s_d0;
wire   [63:0] state_s_q0;
reg   [4:0] state_s_address1;
reg    state_s_ce1;
reg    state_s_we1;
reg   [63:0] state_s_d1;
wire    grp_keccak_absorb_fu_547_ap_start;
wire    grp_keccak_absorb_fu_547_ap_idle;
wire   [4:0] grp_keccak_absorb_fu_547_s_address0;
wire    grp_keccak_absorb_fu_547_s_ce0;
wire    grp_keccak_absorb_fu_547_s_we0;
wire   [63:0] grp_keccak_absorb_fu_547_s_d0;
wire   [4:0] grp_keccak_absorb_fu_547_s_address1;
wire    grp_keccak_absorb_fu_547_s_ce1;
wire    grp_keccak_absorb_fu_547_s_we1;
wire   [63:0] grp_keccak_absorb_fu_547_s_d1;
wire    grp_keccak_squeezeblocks_2_fu_558_ap_start;
wire    grp_keccak_squeezeblocks_2_fu_558_ap_done;
wire    grp_keccak_squeezeblocks_2_fu_558_ap_idle;
wire    grp_keccak_squeezeblocks_2_fu_558_ap_ready;
wire   [9:0] grp_keccak_squeezeblocks_2_fu_558_out_r_address0;
wire    grp_keccak_squeezeblocks_2_fu_558_out_r_ce0;
wire    grp_keccak_squeezeblocks_2_fu_558_out_r_we0;
wire   [7:0] grp_keccak_squeezeblocks_2_fu_558_out_r_d0;
wire   [9:0] grp_keccak_squeezeblocks_2_fu_558_out_r_address1;
wire    grp_keccak_squeezeblocks_2_fu_558_out_r_ce1;
wire    grp_keccak_squeezeblocks_2_fu_558_out_r_we1;
wire   [7:0] grp_keccak_squeezeblocks_2_fu_558_out_r_d1;
reg   [1:0] grp_keccak_squeezeblocks_2_fu_558_out_offset;
reg   [3:0] grp_keccak_squeezeblocks_2_fu_558_nblocks;
wire   [4:0] grp_keccak_squeezeblocks_2_fu_558_s_address0;
wire    grp_keccak_squeezeblocks_2_fu_558_s_ce0;
wire    grp_keccak_squeezeblocks_2_fu_558_s_we0;
wire   [63:0] grp_keccak_squeezeblocks_2_fu_558_s_d0;
wire   [4:0] grp_keccak_squeezeblocks_2_fu_558_s_address1;
wire    grp_keccak_squeezeblocks_2_fu_558_s_ce1;
wire    grp_keccak_squeezeblocks_2_fu_558_s_we1;
wire   [63:0] grp_keccak_squeezeblocks_2_fu_558_s_d1;
wire    grp_rej_uniform_fu_569_ap_start;
wire    grp_rej_uniform_fu_569_ap_idle;
wire   [11:0] grp_rej_uniform_fu_569_a_address0;
wire    grp_rej_uniform_fu_569_a_ce0;
wire    grp_rej_uniform_fu_569_a_we0;
wire   [22:0] grp_rej_uniform_fu_569_a_d0;
reg   [31:0] grp_rej_uniform_fu_569_a_offset2;
reg   [9:0] grp_rej_uniform_fu_569_len;
wire   [9:0] grp_rej_uniform_fu_569_buf_r_address0;
wire    grp_rej_uniform_fu_569_buf_r_ce0;
wire   [9:0] grp_rej_uniform_fu_569_buf_r_address1;
wire    grp_rej_uniform_fu_569_buf_r_ce1;
reg   [10:0] grp_rej_uniform_fu_569_buflen;
reg   [2:0] ap_phi_mux_i_3_i_phi_fu_506_p4;
wire    ap_block_pp0_stage0;
reg   [31:0] ctr_0_reg_513;
reg  signed [8:0] buflen_0_reg_523;
reg   [1:0] i_0_reg_535;
wire    ap_CS_fsm_state43;
reg    grp_keccak_absorb_fu_547_ap_start_reg;
reg    grp_keccak_squeezeblocks_2_fu_558_ap_start_reg;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state44;
reg    grp_rej_uniform_fu_569_ap_start_reg;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state12;
wire   [63:0] zext_ln425_fu_632_p1;
wire   [63:0] zext_ln32_fu_643_p1;
wire   [63:0] zext_ln423_fu_615_p1;
wire   [63:0] zext_ln32_7_fu_653_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln32_8_fu_663_p1;
wire   [63:0] zext_ln32_9_fu_673_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln32_10_fu_683_p1;
wire   [63:0] zext_ln32_11_fu_693_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln32_12_fu_703_p1;
wire   [63:0] zext_ln463_3_fu_744_p1;
wire   [63:0] zext_ln398_fu_855_p1;
wire   [63:0] zext_ln398_1_fu_860_p1;
wire   [63:0] xor_ln425_fu_722_p2;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire   [63:0] xor_ln463_fu_770_p2;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire   [63:0] xor_ln464_fu_777_p2;
wire   [1:0] tmp_s_fu_589_p4;
wire   [1:0] trunc_ln425_fu_620_p1;
wire   [4:0] or_ln32_fu_637_p2;
wire   [4:0] or_ln32_1_fu_648_p2;
wire   [4:0] or_ln32_2_fu_658_p2;
wire   [4:0] or_ln32_3_fu_668_p2;
wire   [4:0] or_ln32_4_fu_678_p2;
wire   [4:0] or_ln32_5_fu_688_p2;
wire   [4:0] or_ln32_6_fu_698_p2;
wire   [63:0] r_7_i4_i_fu_708_p9;
wire   [28:0] i_3_fu_734_p4;
wire   [2:0] trunc_ln463_fu_749_p1;
wire   [5:0] shl_ln_fu_752_p3;
wire   [63:0] zext_ln463_fu_760_p1;
wire   [63:0] shl_ln463_fu_764_p2;
wire  signed [9:0] sext_ln393_fu_784_p1;
wire   [23:0] tmp_938_fu_792_p4;
wire   [2:0] grp_fu_808_p1;
wire   [8:0] grp_fu_808_p2;
wire   [10:0] zext_ln395_fu_822_p1;
wire   [10:0] zext_ln396_fu_831_p1;
wire   [10:0] add_ln398_fu_846_p2;
wire  signed [31:0] sext_ln398_fu_851_p1;
wire   [7:0] buflen_fu_865_p2;
wire   [9:0] trunc_ln402_fu_874_p1;
wire   [0:0] icmp_ln393_fu_802_p2;
reg    grp_fu_808_ap_start;
wire    grp_fu_808_ap_done;
reg   [44:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 45'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_keccak_absorb_fu_547_ap_start_reg = 1'b0;
#0 grp_keccak_squeezeblocks_2_fu_558_ap_start_reg = 1'b0;
#0 grp_rej_uniform_fu_569_ap_start_reg = 1'b0;
end

pqcrystals_dilithbkb #(
    .DataWidth( 8 ),
    .AddressRange( 842 ),
    .AddressWidth( 10 ))
buf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_address0),
    .ce0(buf_ce0),
    .we0(buf_we0),
    .d0(buf_d0),
    .q0(buf_q0),
    .address1(buf_address1),
    .ce1(buf_ce1),
    .we1(buf_we1),
    .d1(grp_keccak_squeezeblocks_2_fu_558_out_r_d1),
    .q1(buf_q1)
);

pqcrystals_dilithcud #(
    .DataWidth( 64 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
state_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(state_s_address0),
    .ce0(state_s_ce0),
    .we0(state_s_we0),
    .d0(state_s_d0),
    .q0(state_s_q0),
    .address1(state_s_address1),
    .ce1(state_s_ce1),
    .we1(state_s_we1),
    .d1(state_s_d1),
    .q1(state_s_q1)
);

keccak_absorb grp_keccak_absorb_fu_547(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_keccak_absorb_fu_547_ap_start),
    .ap_done(grp_keccak_absorb_fu_547_ap_done),
    .ap_idle(grp_keccak_absorb_fu_547_ap_idle),
    .ap_ready(grp_keccak_absorb_fu_547_ap_ready),
    .s_address0(grp_keccak_absorb_fu_547_s_address0),
    .s_ce0(grp_keccak_absorb_fu_547_s_ce0),
    .s_we0(grp_keccak_absorb_fu_547_s_we0),
    .s_d0(grp_keccak_absorb_fu_547_s_d0),
    .s_q0(state_s_q0),
    .s_address1(grp_keccak_absorb_fu_547_s_address1),
    .s_ce1(grp_keccak_absorb_fu_547_s_ce1),
    .s_we1(grp_keccak_absorb_fu_547_s_we1),
    .s_d1(grp_keccak_absorb_fu_547_s_d1),
    .s_q1(state_s_q1),
    .r(9'd168),
    .pos_r(7'd32),
    .m_0_read(t_0_reg_912),
    .m_1_read(t_1_reg_917),
    .ap_return(grp_keccak_absorb_fu_547_ap_return)
);

keccak_squeezeblocks_2 grp_keccak_squeezeblocks_2_fu_558(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_keccak_squeezeblocks_2_fu_558_ap_start),
    .ap_done(grp_keccak_squeezeblocks_2_fu_558_ap_done),
    .ap_idle(grp_keccak_squeezeblocks_2_fu_558_ap_idle),
    .ap_ready(grp_keccak_squeezeblocks_2_fu_558_ap_ready),
    .out_r_address0(grp_keccak_squeezeblocks_2_fu_558_out_r_address0),
    .out_r_ce0(grp_keccak_squeezeblocks_2_fu_558_out_r_ce0),
    .out_r_we0(grp_keccak_squeezeblocks_2_fu_558_out_r_we0),
    .out_r_d0(grp_keccak_squeezeblocks_2_fu_558_out_r_d0),
    .out_r_address1(grp_keccak_squeezeblocks_2_fu_558_out_r_address1),
    .out_r_ce1(grp_keccak_squeezeblocks_2_fu_558_out_r_ce1),
    .out_r_we1(grp_keccak_squeezeblocks_2_fu_558_out_r_we1),
    .out_r_d1(grp_keccak_squeezeblocks_2_fu_558_out_r_d1),
    .out_offset(grp_keccak_squeezeblocks_2_fu_558_out_offset),
    .nblocks(grp_keccak_squeezeblocks_2_fu_558_nblocks),
    .s_address0(grp_keccak_squeezeblocks_2_fu_558_s_address0),
    .s_ce0(grp_keccak_squeezeblocks_2_fu_558_s_ce0),
    .s_we0(grp_keccak_squeezeblocks_2_fu_558_s_we0),
    .s_d0(grp_keccak_squeezeblocks_2_fu_558_s_d0),
    .s_q0(state_s_q0),
    .s_address1(grp_keccak_squeezeblocks_2_fu_558_s_address1),
    .s_ce1(grp_keccak_squeezeblocks_2_fu_558_s_ce1),
    .s_we1(grp_keccak_squeezeblocks_2_fu_558_s_we1),
    .s_d1(grp_keccak_squeezeblocks_2_fu_558_s_d1),
    .s_q1(state_s_q1)
);

rej_uniform grp_rej_uniform_fu_569(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_rej_uniform_fu_569_ap_start),
    .ap_done(grp_rej_uniform_fu_569_ap_done),
    .ap_idle(grp_rej_uniform_fu_569_ap_idle),
    .ap_ready(grp_rej_uniform_fu_569_ap_ready),
    .a_address0(grp_rej_uniform_fu_569_a_address0),
    .a_ce0(grp_rej_uniform_fu_569_a_ce0),
    .a_we0(grp_rej_uniform_fu_569_a_we0),
    .a_d0(grp_rej_uniform_fu_569_a_d0),
    .a_offset(trunc_ln391_reg_1022),
    .a_offset1(trunc_ln391_1_reg_1027),
    .a_offset2(grp_rej_uniform_fu_569_a_offset2),
    .len(grp_rej_uniform_fu_569_len),
    .buf_r_address0(grp_rej_uniform_fu_569_buf_r_address0),
    .buf_r_ce0(grp_rej_uniform_fu_569_buf_r_ce0),
    .buf_r_q0(buf_q0),
    .buf_r_address1(grp_rej_uniform_fu_569_buf_r_address1),
    .buf_r_ce1(grp_rej_uniform_fu_569_buf_r_ce1),
    .buf_r_q1(buf_q1),
    .buflen(grp_rej_uniform_fu_569_buflen),
    .ap_return(grp_rej_uniform_fu_569_ap_return)
);

crypto_sign_urem_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
crypto_sign_urem_dEe_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_808_ap_start),
    .done(grp_fu_808_ap_done),
    .din0(buflen_0_reg_523),
    .din1(grp_fu_808_p1),
    .ce(1'b1),
    .dout(grp_fu_808_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state14) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_keccak_absorb_fu_547_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state19)) begin
            grp_keccak_absorb_fu_547_ap_start_reg <= 1'b1;
        end else if ((grp_keccak_absorb_fu_547_ap_ready == 1'b1)) begin
            grp_keccak_absorb_fu_547_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_keccak_squeezeblocks_2_fu_558_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state25) | ((icmp_ln396_fu_835_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state42)))) begin
            grp_keccak_squeezeblocks_2_fu_558_ap_start_reg <= 1'b1;
        end else if ((grp_keccak_squeezeblocks_2_fu_558_ap_ready == 1'b1)) begin
            grp_keccak_squeezeblocks_2_fu_558_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_rej_uniform_fu_569_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state45))) begin
            grp_rej_uniform_fu_569_ap_start_reg <= 1'b1;
        end else if ((grp_rej_uniform_fu_569_ap_ready == 1'b1)) begin
            grp_rej_uniform_fu_569_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((grp_rej_uniform_fu_569_ap_done == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state46)) begin
                        buflen_0_reg_523[2 : 0] <= zext_ln401_reg_1085[2 : 0];
            buflen_0_reg_523[8 : 4] <= zext_ln401_reg_1085[8 : 4];
        end else if ((1'b1 == ap_CS_fsm_state28)) begin
                        buflen_0_reg_523[0] <= 1'b0;
            buflen_0_reg_523[1] <= 1'b0;
            buflen_0_reg_523[2] <= 1'b0;
            buflen_0_reg_523[4] <= 1'b0;
            buflen_0_reg_523[5] <= 1'b0;
            buflen_0_reg_523[6] <= 1'b1;
            buflen_0_reg_523[7] <= 1'b0;
            buflen_0_reg_523[8] <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((grp_rej_uniform_fu_569_ap_done == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state46)) begin
            ctr_0_reg_513 <= ctr_2_fu_890_p2;
        end else if ((1'b1 == ap_CS_fsm_state28)) begin
            ctr_0_reg_513 <= grp_rej_uniform_fu_569_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        i_0_reg_535 <= i_reg_1075;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        i_0_reg_535 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_3_i_reg_502 <= 3'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln423_reg_922 == 1'd0))) begin
        i_3_i_reg_502 <= add_ln423_reg_926;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln423_reg_926 <= add_ln423_fu_609_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        i_reg_1075 <= i_fu_840_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln423_reg_922 <= icmp_ln423_fu_603_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln423_reg_922 == 1'd0))) begin
        seed_load_10_reg_987 <= seed_q1;
        seed_load_9_reg_982 <= seed_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln423_reg_922 == 1'd0))) begin
        seed_load_11_reg_1002 <= seed_q0;
        seed_load_12_reg_1007 <= seed_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln423_reg_922 == 1'd0))) begin
        seed_load_8_reg_962 <= seed_q1;
        seed_load_reg_957 <= seed_q0;
        state_s_load_5_reg_977 <= state_s_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln423_fu_603_p2 == 1'd0))) begin
        shl_ln3_reg_931[4 : 3] <= shl_ln3_fu_624_p3[4 : 3];
        state_s_addr_77_reg_951[2 : 0] <= zext_ln423_fu_615_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_keccak_absorb_fu_547_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        state_pos_write_assi_reg_1032 <= grp_keccak_absorb_fu_547_ap_return;
        state_s_addr_76_reg_1037 <= zext_ln463_3_fu_744_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        sub_ln398_reg_1067 <= sub_ln398_fu_826_p2;
        trunc_ln395_1_reg_1061 <= trunc_ln395_1_fu_818_p1;
        trunc_ln395_reg_1056 <= trunc_ln395_fu_814_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        sub_ln402_reg_1090 <= sub_ln402_fu_878_p2;
        zext_ln401_reg_1085[2 : 0] <= zext_ln401_fu_870_p1[2 : 0];
zext_ln401_reg_1085[4] <= zext_ln401_fu_870_p1[4];
zext_ln401_reg_1085[6] <= zext_ln401_fu_870_p1[6];
        zext_ln402_reg_1095[2 : 0] <= zext_ln402_fu_885_p1[2 : 0];
zext_ln402_reg_1095[4] <= zext_ln402_fu_885_p1[4];
zext_ln402_reg_1095[6] <= zext_ln402_fu_885_p1[6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        t_0_reg_912 <= t_0_fu_585_p1;
        t_1_reg_917[1 : 0] <= t_1_fu_599_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        trunc_ln391_1_reg_1027 <= trunc_ln391_1_fu_731_p1;
        trunc_ln391_reg_1022 <= trunc_ln391_fu_728_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        zext_ln393_reg_1048[2 : 0] <= zext_ln393_fu_788_p1[2 : 0];
zext_ln393_reg_1048[9 : 4] <= zext_ln393_fu_788_p1[9 : 4];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state28))) begin
        a_coeffs_ce0 = grp_rej_uniform_fu_569_a_ce0;
    end else begin
        a_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state28))) begin
        a_coeffs_we0 = grp_rej_uniform_fu_569_a_we0;
    end else begin
        a_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln423_fu_603_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state29) & (icmp_ln393_fu_802_p2 == 1'd0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln423_reg_922 == 1'd0))) begin
        ap_phi_mux_i_3_i_phi_fu_506_p4 = add_ln423_reg_926;
    end else begin
        ap_phi_mux_i_3_i_phi_fu_506_p4 = i_3_i_reg_502;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln393_fu_802_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        buf_address0 = zext_ln398_1_fu_860_p1;
    end else if (((1'b1 == ap_CS_fsm_state42) & (icmp_ln396_fu_835_p2 == 1'd0))) begin
        buf_address0 = zext_ln398_fu_855_p1;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state28))) begin
        buf_address0 = grp_rej_uniform_fu_569_buf_r_address0;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        buf_address0 = grp_keccak_squeezeblocks_2_fu_558_out_r_address0;
    end else begin
        buf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state28))) begin
        buf_address1 = grp_rej_uniform_fu_569_buf_r_address1;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        buf_address1 = grp_keccak_squeezeblocks_2_fu_558_out_r_address1;
    end else begin
        buf_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | ((1'b1 == ap_CS_fsm_state42) & (icmp_ln396_fu_835_p2 == 1'd0)))) begin
        buf_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state28))) begin
        buf_ce0 = grp_rej_uniform_fu_569_buf_r_ce0;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        buf_ce0 = grp_keccak_squeezeblocks_2_fu_558_out_r_ce0;
    end else begin
        buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state28))) begin
        buf_ce1 = grp_rej_uniform_fu_569_buf_r_ce1;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        buf_ce1 = grp_keccak_squeezeblocks_2_fu_558_out_r_ce1;
    end else begin
        buf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        buf_d0 = buf_q0;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        buf_d0 = grp_keccak_squeezeblocks_2_fu_558_out_r_d0;
    end else begin
        buf_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        buf_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        buf_we0 = grp_keccak_squeezeblocks_2_fu_558_out_r_we0;
    end else begin
        buf_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        buf_we1 = grp_keccak_squeezeblocks_2_fu_558_out_r_we1;
    end else begin
        buf_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln393_fu_802_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        grp_fu_808_ap_start = 1'b1;
    end else begin
        grp_fu_808_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_keccak_squeezeblocks_2_fu_558_nblocks = 4'd1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_keccak_squeezeblocks_2_fu_558_nblocks = 4'd5;
    end else begin
        grp_keccak_squeezeblocks_2_fu_558_nblocks = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_keccak_squeezeblocks_2_fu_558_out_offset = trunc_ln395_1_reg_1061;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_keccak_squeezeblocks_2_fu_558_out_offset = 2'd0;
    end else begin
        grp_keccak_squeezeblocks_2_fu_558_out_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_rej_uniform_fu_569_a_offset2 = ctr_0_reg_513;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_rej_uniform_fu_569_a_offset2 = 32'd0;
    end else begin
        grp_rej_uniform_fu_569_a_offset2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_rej_uniform_fu_569_buflen = zext_ln402_reg_1095;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_rej_uniform_fu_569_buflen = 11'd840;
    end else begin
        grp_rej_uniform_fu_569_buflen = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_rej_uniform_fu_569_len = sub_ln402_reg_1090;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_rej_uniform_fu_569_len = 10'd256;
    end else begin
        grp_rej_uniform_fu_569_len = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            seed_address0 = zext_ln32_11_fu_693_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            seed_address0 = zext_ln32_9_fu_673_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            seed_address0 = zext_ln32_7_fu_653_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            seed_address0 = zext_ln425_fu_632_p1;
        end else begin
            seed_address0 = 'bx;
        end
    end else begin
        seed_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            seed_address1 = zext_ln32_12_fu_703_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            seed_address1 = zext_ln32_10_fu_683_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            seed_address1 = zext_ln32_8_fu_663_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            seed_address1 = zext_ln32_fu_643_p1;
        end else begin
            seed_address1 = 'bx;
        end
    end else begin
        seed_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        seed_ce0 = 1'b1;
    end else begin
        seed_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        seed_ce1 = 1'b1;
    end else begin
        seed_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        state_s_address0 = state_s_addr_71_reg_896;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        state_s_address0 = state_s_addr_76_reg_1037;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        state_s_address0 = state_s_addr_77_reg_951;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        state_s_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        state_s_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        state_s_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        state_s_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        state_s_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        state_s_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        state_s_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        state_s_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        state_s_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        state_s_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        state_s_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        state_s_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        state_s_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        state_s_address0 = grp_keccak_squeezeblocks_2_fu_558_s_address0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        state_s_address0 = grp_keccak_absorb_fu_547_s_address0;
    end else begin
        state_s_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        state_s_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        state_s_address1 = state_s_addr_76_reg_1037;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        state_s_address1 = zext_ln423_fu_615_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        state_s_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        state_s_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        state_s_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        state_s_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        state_s_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        state_s_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        state_s_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        state_s_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        state_s_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        state_s_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        state_s_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        state_s_address1 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        state_s_address1 = grp_keccak_squeezeblocks_2_fu_558_s_address1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        state_s_address1 = grp_keccak_absorb_fu_547_s_address1;
    end else begin
        state_s_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        state_s_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        state_s_ce0 = grp_keccak_squeezeblocks_2_fu_558_s_ce0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        state_s_ce0 = grp_keccak_absorb_fu_547_s_ce0;
    end else begin
        state_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        state_s_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        state_s_ce1 = grp_keccak_squeezeblocks_2_fu_558_s_ce1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        state_s_ce1 = grp_keccak_absorb_fu_547_s_ce1;
    end else begin
        state_s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        state_s_d0 = xor_ln464_fu_777_p2;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        state_s_d0 = xor_ln463_fu_770_p2;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        state_s_d0 = xor_ln425_fu_722_p2;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        state_s_d0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        state_s_d0 = grp_keccak_squeezeblocks_2_fu_558_s_d0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        state_s_d0 = grp_keccak_absorb_fu_547_s_d0;
    end else begin
        state_s_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        state_s_d1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        state_s_d1 = grp_keccak_squeezeblocks_2_fu_558_s_d1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        state_s_d1 = grp_keccak_absorb_fu_547_s_d1;
    end else begin
        state_s_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln423_reg_922 == 1'd0)))) begin
        state_s_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        state_s_we0 = grp_keccak_squeezeblocks_2_fu_558_s_we0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        state_s_we0 = grp_keccak_absorb_fu_547_s_we0;
    end else begin
        state_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        state_s_we1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        state_s_we1 = grp_keccak_squeezeblocks_2_fu_558_s_we1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        state_s_we1 = grp_keccak_absorb_fu_547_s_we1;
    end else begin
        state_s_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln423_fu_603_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln423_fu_603_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((grp_keccak_absorb_fu_547_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((grp_keccak_squeezeblocks_2_fu_558_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            if (((grp_rej_uniform_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln393_fu_802_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            if (((icmp_ln396_fu_835_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state44 : begin
            if (((grp_keccak_squeezeblocks_2_fu_558_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            if (((grp_rej_uniform_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state46))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_coeffs_address0 = grp_rej_uniform_fu_569_a_address0;

assign a_coeffs_d0 = grp_rej_uniform_fu_569_a_d0;

assign add_ln398_fu_846_p2 = (sub_ln398_reg_1067 + zext_ln396_fu_831_p1);

assign add_ln423_fu_609_p2 = (ap_phi_mux_i_3_i_phi_fu_506_p4 + 3'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign buflen_fu_865_p2 = (trunc_ln395_reg_1056 | 8'd168);

assign ctr_2_fu_890_p2 = (grp_rej_uniform_fu_569_ap_return + ctr_0_reg_513);

assign grp_fu_808_p1 = 9'd3;

assign grp_keccak_absorb_fu_547_ap_start = grp_keccak_absorb_fu_547_ap_start_reg;

assign grp_keccak_squeezeblocks_2_fu_558_ap_start = grp_keccak_squeezeblocks_2_fu_558_ap_start_reg;

assign grp_rej_uniform_fu_569_ap_start = grp_rej_uniform_fu_569_ap_start_reg;

assign i_3_fu_734_p4 = {{grp_keccak_absorb_fu_547_ap_return[31:3]}};

assign i_fu_840_p2 = (i_0_reg_535 + 2'd1);

assign icmp_ln393_fu_802_p2 = ((tmp_938_fu_792_p4 == 24'd0) ? 1'b1 : 1'b0);

assign icmp_ln396_fu_835_p2 = ((i_0_reg_535 == trunc_ln395_1_reg_1061) ? 1'b1 : 1'b0);

assign icmp_ln423_fu_603_p2 = ((ap_phi_mux_i_3_i_phi_fu_506_p4 == 3'd4) ? 1'b1 : 1'b0);

assign or_ln32_1_fu_648_p2 = (shl_ln3_reg_931 | 5'd2);

assign or_ln32_2_fu_658_p2 = (shl_ln3_reg_931 | 5'd3);

assign or_ln32_3_fu_668_p2 = (shl_ln3_reg_931 | 5'd4);

assign or_ln32_4_fu_678_p2 = (shl_ln3_reg_931 | 5'd5);

assign or_ln32_5_fu_688_p2 = (shl_ln3_reg_931 | 5'd6);

assign or_ln32_6_fu_698_p2 = (shl_ln3_reg_931 | 5'd7);

assign or_ln32_fu_637_p2 = (shl_ln3_fu_624_p3 | 5'd1);

assign r_7_i4_i_fu_708_p9 = {{{{{{{{seed_q1}, {seed_q0}}, {seed_load_12_reg_1007}}, {seed_load_11_reg_1002}}, {seed_load_10_reg_987}}, {seed_load_9_reg_982}}, {seed_load_8_reg_962}}, {seed_load_reg_957}};

assign sext_ln393_fu_784_p1 = buflen_0_reg_523;

assign sext_ln398_fu_851_p1 = $signed(add_ln398_fu_846_p2);

assign shl_ln3_fu_624_p3 = {{trunc_ln425_fu_620_p1}, {3'd0}};

assign shl_ln463_fu_764_p2 = 64'd31 << zext_ln463_fu_760_p1;

assign shl_ln_fu_752_p3 = {{trunc_ln463_fu_749_p1}, {3'd0}};

assign state_s_addr_71_reg_896 = 64'd20;

assign sub_ln398_fu_826_p2 = (zext_ln393_reg_1048 - zext_ln395_fu_822_p1);

assign sub_ln402_fu_878_p2 = (10'd256 - trunc_ln402_fu_874_p1);

assign t_0_fu_585_p1 = nonce[7:0];

assign t_1_fu_599_p1 = tmp_s_fu_589_p4;

assign tmp_938_fu_792_p4 = {{ctr_0_reg_513[31:8]}};

assign tmp_s_fu_589_p4 = {{nonce[9:8]}};

assign trunc_ln391_1_fu_731_p1 = a_coeffs_offset1[1:0];

assign trunc_ln391_fu_728_p1 = a_coeffs_offset[1:0];

assign trunc_ln395_1_fu_818_p1 = grp_fu_808_p2[1:0];

assign trunc_ln395_fu_814_p1 = grp_fu_808_p2[7:0];

assign trunc_ln402_fu_874_p1 = ctr_0_reg_513[9:0];

assign trunc_ln425_fu_620_p1 = ap_phi_mux_i_3_i_phi_fu_506_p4[1:0];

assign trunc_ln463_fu_749_p1 = state_pos_write_assi_reg_1032[2:0];

assign xor_ln425_fu_722_p2 = (state_s_load_5_reg_977 ^ r_7_i4_i_fu_708_p9);

assign xor_ln463_fu_770_p2 = (state_s_q1 ^ shl_ln463_fu_764_p2);

assign xor_ln464_fu_777_p2 = (state_s_q1 ^ 64'd9223372036854775808);

assign zext_ln32_10_fu_683_p1 = or_ln32_4_fu_678_p2;

assign zext_ln32_11_fu_693_p1 = or_ln32_5_fu_688_p2;

assign zext_ln32_12_fu_703_p1 = or_ln32_6_fu_698_p2;

assign zext_ln32_7_fu_653_p1 = or_ln32_1_fu_648_p2;

assign zext_ln32_8_fu_663_p1 = or_ln32_2_fu_658_p2;

assign zext_ln32_9_fu_673_p1 = or_ln32_3_fu_668_p2;

assign zext_ln32_fu_643_p1 = or_ln32_fu_637_p2;

assign zext_ln393_fu_788_p1 = $unsigned(sext_ln393_fu_784_p1);

assign zext_ln395_fu_822_p1 = grp_fu_808_p2;

assign zext_ln396_fu_831_p1 = i_0_reg_535;

assign zext_ln398_1_fu_860_p1 = i_0_reg_535;

assign zext_ln398_fu_855_p1 = $unsigned(sext_ln398_fu_851_p1);

assign zext_ln401_fu_870_p1 = buflen_fu_865_p2;

assign zext_ln402_fu_885_p1 = buflen_fu_865_p2;

assign zext_ln423_fu_615_p1 = ap_phi_mux_i_3_i_phi_fu_506_p4;

assign zext_ln425_fu_632_p1 = shl_ln3_fu_624_p3;

assign zext_ln463_3_fu_744_p1 = i_3_fu_734_p4;

assign zext_ln463_fu_760_p1 = shl_ln_fu_752_p3;

always @ (posedge ap_clk) begin
    t_1_reg_917[7:2] <= 6'b000000;
    shl_ln3_reg_931[2:0] <= 3'b000;
    state_s_addr_77_reg_951[4:3] <= 2'b00;
    zext_ln393_reg_1048[3] <= 1'b1;
    zext_ln393_reg_1048[10] <= 1'b0;
    zext_ln401_reg_1085[3] <= 1'b1;
    zext_ln401_reg_1085[5:5] <= 1'b1;
    zext_ln401_reg_1085[8:7] <= 2'b01;
    zext_ln402_reg_1095[3] <= 1'b1;
    zext_ln402_reg_1095[5:5] <= 1'b1;
    zext_ln402_reg_1095[10:7] <= 4'b0001;
    buflen_0_reg_523[3] <= 1'b1;
end

endmodule //pqcrystals_dilithium_10
