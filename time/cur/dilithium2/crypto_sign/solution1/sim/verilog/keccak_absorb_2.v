// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module keccak_absorb_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        s_address0,
        s_ce0,
        s_we0,
        s_d0,
        s_q0,
        s_address1,
        s_ce1,
        s_we1,
        s_d1,
        s_q1,
        pos_r,
        m_address0,
        m_ce0,
        m_q0,
        m_address1,
        m_ce1,
        m_q1,
        m_offset,
        mlen,
        ap_return
);

parameter    ap_ST_fsm_state1 = 35'd1;
parameter    ap_ST_fsm_state2 = 35'd2;
parameter    ap_ST_fsm_state3 = 35'd4;
parameter    ap_ST_fsm_state4 = 35'd8;
parameter    ap_ST_fsm_state5 = 35'd16;
parameter    ap_ST_fsm_state6 = 35'd32;
parameter    ap_ST_fsm_state7 = 35'd64;
parameter    ap_ST_fsm_state8 = 35'd128;
parameter    ap_ST_fsm_pp0_stage0 = 35'd256;
parameter    ap_ST_fsm_pp0_stage1 = 35'd512;
parameter    ap_ST_fsm_pp0_stage2 = 35'd1024;
parameter    ap_ST_fsm_pp0_stage3 = 35'd2048;
parameter    ap_ST_fsm_state14 = 35'd4096;
parameter    ap_ST_fsm_state15 = 35'd8192;
parameter    ap_ST_fsm_state16 = 35'd16384;
parameter    ap_ST_fsm_state17 = 35'd32768;
parameter    ap_ST_fsm_state18 = 35'd65536;
parameter    ap_ST_fsm_state19 = 35'd131072;
parameter    ap_ST_fsm_state20 = 35'd262144;
parameter    ap_ST_fsm_state21 = 35'd524288;
parameter    ap_ST_fsm_state22 = 35'd1048576;
parameter    ap_ST_fsm_pp1_stage0 = 35'd2097152;
parameter    ap_ST_fsm_pp1_stage1 = 35'd4194304;
parameter    ap_ST_fsm_pp1_stage2 = 35'd8388608;
parameter    ap_ST_fsm_pp1_stage3 = 35'd16777216;
parameter    ap_ST_fsm_state28 = 35'd33554432;
parameter    ap_ST_fsm_state29 = 35'd67108864;
parameter    ap_ST_fsm_state30 = 35'd134217728;
parameter    ap_ST_fsm_state31 = 35'd268435456;
parameter    ap_ST_fsm_pp2_stage0 = 35'd536870912;
parameter    ap_ST_fsm_state34 = 35'd1073741824;
parameter    ap_ST_fsm_state35 = 35'd2147483648;
parameter    ap_ST_fsm_state36 = 35'd4294967296;
parameter    ap_ST_fsm_state37 = 35'd8589934592;
parameter    ap_ST_fsm_state38 = 35'd17179869184;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] s_address0;
output   s_ce0;
output   s_we0;
output  [63:0] s_d0;
input  [63:0] s_q0;
output  [4:0] s_address1;
output   s_ce1;
output   s_we1;
output  [63:0] s_d1;
input  [63:0] s_q1;
input  [6:0] pos_r;
output  [12:0] m_address0;
output   m_ce0;
input  [7:0] m_q0;
output  [12:0] m_address1;
output   m_ce1;
input  [7:0] m_q1;
input  [12:0] m_offset;
input  [63:0] mlen;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] s_address0;
reg s_ce0;
reg s_we0;
reg[63:0] s_d0;
reg s_ce1;
reg s_we1;
reg[12:0] m_address0;
reg m_ce0;
reg[12:0] m_address1;
reg m_ce1;
reg[31:0] ap_return;

(* fsm_encoding = "none" *) reg   [34:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [28:0] i_1_reg_637;
reg   [4:0] i_3_reg_726;
reg   [31:0] i_5_reg_737;
wire   [7:0] t_q0;
reg   [7:0] reg_768;
wire    ap_CS_fsm_state5;
wire   [7:0] t_q1;
wire    ap_CS_fsm_state35;
reg   [7:0] reg_773;
reg   [7:0] reg_778;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state36;
reg   [7:0] reg_783;
reg   [7:0] reg_788;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state37;
reg   [7:0] reg_793;
reg   [7:0] reg_798;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state10_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln404_reg_1922;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state24_pp1_stage1_iter0;
wire    ap_block_pp1_stage1_11001;
reg   [0:0] icmp_ln423_reg_2091;
reg   [7:0] reg_803;
reg   [7:0] reg_808;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state11_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_state25_pp1_stage2_iter0;
wire    ap_block_pp1_stage2_11001;
reg   [7:0] reg_812;
reg   [63:0] reg_816;
reg   [7:0] reg_820;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state12_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_pp1_stage3;
wire    ap_block_state26_pp1_stage3_iter0;
wire    ap_block_pp1_stage3_11001;
reg   [7:0] reg_824;
wire   [13:0] grp_fu_764_p2;
reg   [13:0] reg_828;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln414_fu_1261_p2;
wire   [31:0] pos_cast1_fu_832_p1;
reg   [31:0] pos_cast1_reg_1771;
wire   [2:0] add_ln391_fu_836_p2;
wire    ap_CS_fsm_state2;
wire   [31:0] zext_ln393_fu_856_p1;
reg   [31:0] zext_ln393_reg_1785;
wire   [0:0] icmp_ln391_fu_847_p2;
wire   [0:0] icmp_ln393_fu_860_p2;
reg   [0:0] icmp_ln393_reg_1791;
wire   [63:0] xor_ln395_2_fu_913_p2;
reg   [63:0] xor_ln395_2_reg_1795;
wire   [13:0] xor_ln395_2_cast_fu_919_p2;
reg   [13:0] xor_ln395_2_cast_reg_1800;
wire   [31:0] empty_55_fu_925_p2;
reg   [31:0] empty_55_reg_1805;
wire   [63:0] add_ln397_1_fu_937_p2;
reg   [63:0] add_ln397_1_reg_1810;
wire   [31:0] add_ln398_fu_942_p2;
reg   [31:0] add_ln398_reg_1815;
wire   [13:0] m_offset_cast68_fu_947_p1;
reg   [13:0] m_offset_cast68_reg_1821;
wire    ap_CS_fsm_state3;
wire   [63:0] add_ln396_fu_969_p2;
reg   [63:0] add_ln396_reg_1834;
wire   [0:0] exitcond_fu_964_p2;
reg   [4:0] s_addr_reg_1849;
wire   [31:0] i_fu_999_p2;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln403_fu_1037_p2;
reg   [0:0] icmp_ln403_reg_1889;
wire    ap_CS_fsm_state8;
wire   [63:0] zext_ln403_fu_1049_p1;
reg   [63:0] zext_ln403_reg_1893;
wire   [13:0] trunc_ln403_fu_1053_p1;
reg   [13:0] trunc_ln403_reg_1898;
wire   [0:0] icmp_ln403_1_fu_1057_p2;
reg   [0:0] icmp_ln403_1_reg_1903;
wire   [29:0] zext_ln404_1_fu_1073_p1;
reg   [29:0] zext_ln404_1_reg_1907;
reg   [28:0] tmp_s_reg_1912;
wire   [13:0] zext_ln406_fu_1087_p1;
reg   [13:0] zext_ln406_reg_1917;
wire   [0:0] icmp_ln404_fu_1090_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state9_pp0_stage0_iter0;
wire    ap_block_state13_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [28:0] i_4_fu_1095_p2;
reg   [28:0] i_4_reg_1926;
wire   [13:0] add_ln406_2_fu_1122_p2;
reg   [13:0] add_ln406_2_reg_1931;
reg   [4:0] s_addr_1_reg_1951;
wire   [13:0] add_ln408_fu_1247_p2;
reg   [13:0] add_ln408_reg_1986;
wire    ap_CS_fsm_state15;
wire    grp_KeccakF1600_StatePer_1_fu_758_ap_ready;
wire    grp_KeccakF1600_StatePer_1_fu_758_ap_done;
reg    ap_predicate_op203_call_state15;
reg    ap_block_state15_on_subcall_done;
wire   [11:0] trunc_ln416_fu_1253_p1;
reg   [11:0] trunc_ln416_reg_1992;
wire   [13:0] trunc_ln414_fu_1256_p1;
reg   [13:0] trunc_ln414_reg_1998;
wire   [29:0] zext_ln423_1_fu_1277_p1;
reg   [29:0] zext_ln423_1_reg_2007;
reg   [4:0] tmp_6739_reg_2012;
wire   [4:0] i_6_fu_1297_p2;
reg   [4:0] i_6_reg_2021;
wire    ap_CS_fsm_state17;
wire   [13:0] add_ln416_2_fu_1324_p2;
reg   [13:0] add_ln416_2_reg_2026;
wire   [0:0] icmp_ln415_fu_1291_p2;
wire   [63:0] add_ln418_fu_1346_p2;
reg   [63:0] add_ln418_reg_2046;
reg   [4:0] s_addr_3_reg_2081;
wire   [63:0] add_ln421_fu_1444_p2;
wire    ap_CS_fsm_state22;
wire   [0:0] icmp_ln423_fu_1450_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state23_pp1_stage0_iter0;
wire    ap_block_state27_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [4:0] add_ln423_fu_1455_p2;
reg   [4:0] add_ln423_reg_2095;
wire   [13:0] add_ln425_3_fu_1490_p2;
reg   [13:0] add_ln425_3_reg_2100;
reg   [4:0] s_addr_2_reg_2120;
wire   [13:0] zext_ln428_fu_1624_p1;
reg   [13:0] zext_ln428_reg_2155;
wire    ap_CS_fsm_state28;
wire   [63:0] sub_ln428_fu_1628_p2;
reg   [63:0] sub_ln428_reg_2160;
wire   [32:0] trunc_ln428_fu_1634_p1;
reg   [32:0] trunc_ln428_reg_2165;
wire   [31:0] add_ln429_fu_1638_p2;
reg   [31:0] add_ln429_reg_2170;
wire   [0:0] icmp_ln431_fu_1644_p2;
reg   [0:0] icmp_ln431_reg_2177;
wire   [2:0] t_addr_10_gep_fu_484_p3;
wire   [2:0] t_addr_11_gep_fu_492_p3;
wire   [13:0] add_ln438_fu_1653_p2;
reg   [13:0] add_ln438_reg_2191;
wire   [2:0] t_addr_12_gep_fu_501_p3;
wire    ap_CS_fsm_state29;
wire   [2:0] t_addr_13_gep_fu_509_p3;
wire   [2:0] t_addr_14_gep_fu_517_p3;
wire    ap_CS_fsm_state30;
wire   [2:0] t_addr_15_gep_fu_525_p3;
wire   [2:0] t_addr_16_gep_fu_533_p3;
wire    ap_CS_fsm_state31;
wire   [2:0] t_addr_17_gep_fu_541_p3;
wire   [0:0] icmp_ln436_fu_1662_p2;
reg   [0:0] icmp_ln436_reg_2226;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state32_pp2_stage0_iter0;
wire    ap_block_state33_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [31:0] i_7_fu_1667_p2;
reg   [31:0] i_7_reg_2230;
reg    ap_enable_reg_pp2_iter0;
wire   [31:0] trunc_ln441_fu_1702_p1;
reg   [31:0] trunc_ln441_reg_2240;
wire    ap_CS_fsm_state34;
reg   [4:0] s_addr_4_reg_2245;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state23;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage3_subdone;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state32;
reg    ap_enable_reg_pp2_iter1;
reg   [2:0] t_address0;
reg    t_ce0;
reg    t_we0;
reg   [7:0] t_d0;
reg   [2:0] t_address1;
reg    t_ce1;
reg    t_we1;
reg   [7:0] t_d1;
wire    grp_KeccakF1600_StatePer_1_fu_758_ap_start;
wire    grp_KeccakF1600_StatePer_1_fu_758_ap_idle;
wire   [4:0] grp_KeccakF1600_StatePer_1_fu_758_state_address0;
wire    grp_KeccakF1600_StatePer_1_fu_758_state_ce0;
wire    grp_KeccakF1600_StatePer_1_fu_758_state_we0;
wire   [63:0] grp_KeccakF1600_StatePer_1_fu_758_state_d0;
wire   [4:0] grp_KeccakF1600_StatePer_1_fu_758_state_address1;
wire    grp_KeccakF1600_StatePer_1_fu_758_state_ce1;
wire    grp_KeccakF1600_StatePer_1_fu_758_state_we1;
wire   [63:0] grp_KeccakF1600_StatePer_1_fu_758_state_d1;
reg   [2:0] phi_ln391_reg_573;
reg   [63:0] p_05_rec_reg_584;
reg   [31:0] i_0_reg_595;
reg   [13:0] p_1626_reg_605;
reg   [31:0] ap_phi_mux_p_12_phi_fu_620_p4;
reg   [31:0] p_12_reg_617;
reg   [63:0] ap_phi_mux_p_1_phi_fu_630_p4;
reg   [63:0] p_1_reg_627;
reg   [28:0] ap_phi_mux_i_1_phi_fu_641_p4;
wire    ap_block_pp0_stage0;
reg   [13:0] ap_phi_mux_p_2728_phi_fu_652_p6;
reg   [13:0] p_2728_reg_648;
reg   [31:0] p_23_reg_662;
wire   [63:0] sub_ln409_fu_1241_p2;
reg   [63:0] ap_phi_mux_p_2_phi_fu_680_p6;
reg   [63:0] p_2_reg_677;
reg   [63:0] indvars_iv_reg_691;
reg   [63:0] p_38_rec_reg_702;
reg   [4:0] i_2_reg_714;
wire    ap_CS_fsm_state21;
reg   [4:0] ap_phi_mux_i_3_phi_fu_730_p4;
wire    ap_block_pp1_stage0;
reg   [31:0] ap_phi_mux_i_5_phi_fu_741_p4;
wire    ap_block_pp2_stage0;
wire   [31:0] add_ln441_fu_1746_p2;
reg   [31:0] ap_phi_mux_p_34_phi_fu_752_p4;
reg   [31:0] p_34_reg_749;
wire    ap_CS_fsm_state38;
reg    grp_KeccakF1600_StatePer_1_fu_758_ap_start_reg;
wire    ap_CS_fsm_state14;
wire   [63:0] zext_ln391_fu_842_p1;
wire   [63:0] sum1_cast_fu_959_p1;
wire   [63:0] zext_ln400_fu_994_p1;
wire   [63:0] zext_ln396_fu_1005_p1;
wire   [63:0] zext_ln406_2_fu_1128_p1;
wire   [63:0] zext_ln32_fu_1139_p1;
wire   [63:0] zext_ln406_1_fu_1149_p1;
wire   [63:0] zext_ln32_19_fu_1159_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln32_20_fu_1169_p1;
wire   [63:0] zext_ln32_21_fu_1179_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln32_22_fu_1189_p1;
wire   [63:0] zext_ln32_23_fu_1199_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln32_24_fu_1209_p1;
wire   [63:0] zext_ln416_3_fu_1330_p1;
wire   [63:0] zext_ln32_32_fu_1341_p1;
wire   [63:0] zext_ln32_33_fu_1357_p1;
wire   [63:0] zext_ln32_34_fu_1367_p1;
wire   [63:0] zext_ln32_35_fu_1377_p1;
wire   [63:0] zext_ln32_36_fu_1387_p1;
wire   [63:0] zext_ln32_37_fu_1397_p1;
wire   [63:0] zext_ln32_38_fu_1407_p1;
wire   [63:0] zext_ln416_1_fu_1412_p1;
wire   [63:0] zext_ln425_4_fu_1496_p1;
wire   [63:0] zext_ln32_25_fu_1507_p1;
wire   [63:0] zext_ln425_1_fu_1517_p1;
wire   [63:0] zext_ln32_26_fu_1527_p1;
wire    ap_block_pp1_stage1;
wire   [63:0] zext_ln32_27_fu_1537_p1;
wire   [63:0] zext_ln32_28_fu_1547_p1;
wire    ap_block_pp1_stage2;
wire   [63:0] zext_ln32_29_fu_1557_p1;
wire   [63:0] zext_ln32_30_fu_1567_p1;
wire    ap_block_pp1_stage3;
wire   [63:0] zext_ln32_31_fu_1577_p1;
wire   [63:0] zext_ln438_1_fu_1692_p1;
wire   [63:0] zext_ln436_fu_1697_p1;
wire   [63:0] zext_ln440_fu_1714_p1;
wire   [63:0] xor_ln400_fu_1030_p2;
wire   [63:0] xor_ln406_fu_1234_p2;
wire   [63:0] xor_ln416_fu_1437_p2;
wire   [63:0] xor_ln425_fu_1602_p2;
wire   [63:0] xor_ln440_fu_1739_p2;
wire   [2:0] trunc_ln393_fu_853_p1;
wire   [3:0] zext_ln395_fu_871_p1;
wire   [3:0] sub_ln395_fu_875_p2;
wire   [63:0] empty_53_fu_881_p1;
wire   [63:0] xor_ln395_fu_866_p2;
wire   [63:0] xor_ln395_1_fu_885_p2;
wire   [0:0] empty_54_fu_891_p2;
wire   [63:0] umax_fu_897_p3;
wire   [13:0] trunc_ln395_2_fu_909_p1;
wire   [31:0] trunc_ln395_fu_905_p1;
wire   [63:0] add_ln397_fu_931_p2;
wire   [13:0] empty_56_fu_950_p1;
wire   [13:0] sum1_fu_954_p2;
wire   [31:0] add_ln394_fu_975_p2;
wire   [31:0] sub_ln400_fu_979_p2;
wire   [28:0] lshr_ln_fu_984_p4;
wire   [63:0] r_7_i_fu_1010_p9;
wire   [31:0] sub_ln403_fu_1043_p2;
wire   [28:0] tmp_fu_1063_p4;
wire   [10:0] trunc_ln406_fu_1105_p1;
wire   [13:0] shl_ln_fu_1109_p3;
wire   [13:0] add_ln406_1_fu_1117_p2;
wire   [13:0] add_ln32_fu_1133_p2;
wire   [29:0] zext_ln404_fu_1101_p1;
wire   [29:0] add_ln406_fu_1144_p2;
wire   [13:0] add_ln32_13_fu_1154_p2;
wire   [13:0] add_ln32_14_fu_1164_p2;
wire   [13:0] add_ln32_15_fu_1174_p2;
wire   [13:0] add_ln32_16_fu_1184_p2;
wire   [13:0] add_ln32_17_fu_1194_p2;
wire   [13:0] add_ln32_18_fu_1204_p2;
wire   [63:0] r_7_i1_fu_1214_p9;
wire   [28:0] tmp_6738_fu_1267_p4;
wire   [7:0] shl_ln7_fu_1303_p3;
wire   [11:0] zext_ln416_fu_1311_p1;
wire   [11:0] add_ln416_1_fu_1315_p2;
wire   [13:0] zext_ln416_2_fu_1320_p1;
wire   [13:0] add_ln32_26_fu_1335_p2;
wire   [13:0] add_ln32_27_fu_1352_p2;
wire   [13:0] add_ln32_28_fu_1362_p2;
wire   [13:0] add_ln32_29_fu_1372_p2;
wire   [13:0] add_ln32_30_fu_1382_p2;
wire   [13:0] add_ln32_31_fu_1392_p2;
wire   [13:0] add_ln32_32_fu_1402_p2;
wire   [63:0] r_7_i4_fu_1417_p9;
wire   [3:0] trunc_ln425_fu_1465_p1;
wire   [6:0] shl_ln6_fu_1469_p3;
wire   [11:0] zext_ln425_fu_1477_p1;
wire   [11:0] add_ln425_2_fu_1481_p2;
wire   [13:0] zext_ln425_3_fu_1486_p1;
wire   [13:0] add_ln32_19_fu_1501_p2;
wire   [29:0] zext_ln423_fu_1461_p1;
wire   [29:0] add_ln425_1_fu_1512_p2;
wire   [13:0] add_ln32_20_fu_1522_p2;
wire   [13:0] add_ln32_21_fu_1532_p2;
wire   [13:0] add_ln32_22_fu_1542_p2;
wire   [13:0] add_ln32_23_fu_1552_p2;
wire   [13:0] add_ln32_24_fu_1562_p2;
wire   [13:0] add_ln32_25_fu_1572_p2;
wire   [63:0] r_7_i2_fu_1582_p9;
wire   [7:0] and_ln_fu_1609_p3;
wire   [63:0] zext_ln427_fu_1620_p1;
wire   [31:0] zext_ln427_1_fu_1616_p1;
wire   [13:0] zext_ln438_fu_1650_p1;
wire   [32:0] zext_ln436_1_fu_1658_p1;
wire   [13:0] trunc_ln436_fu_1673_p1;
wire   [13:0] add_ln438_1_fu_1677_p2;
wire   [13:0] add_ln438_2_fu_1682_p2;
wire   [13:0] add_ln438_3_fu_1687_p2;
wire   [28:0] lshr_ln9_fu_1705_p4;
wire   [63:0] r_7_i3_fu_1719_p9;
reg   [31:0] ap_return_preg;
reg   [34:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp1_stage1_subdone;
wire    ap_block_pp1_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;

// power-on initialization
initial begin
#0 ap_CS_fsm = 35'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 grp_KeccakF1600_StatePer_1_fu_758_ap_start_reg = 1'b0;
#0 ap_return_preg = 32'd0;
end

keccak_absorb_2_t #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
t_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(t_address0),
    .ce0(t_ce0),
    .we0(t_we0),
    .d0(t_d0),
    .q0(t_q0),
    .address1(t_address1),
    .ce1(t_ce1),
    .we1(t_we1),
    .d1(t_d1),
    .q1(t_q1)
);

KeccakF1600_StatePer_1 grp_KeccakF1600_StatePer_1_fu_758(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_KeccakF1600_StatePer_1_fu_758_ap_start),
    .ap_done(grp_KeccakF1600_StatePer_1_fu_758_ap_done),
    .ap_idle(grp_KeccakF1600_StatePer_1_fu_758_ap_idle),
    .ap_ready(grp_KeccakF1600_StatePer_1_fu_758_ap_ready),
    .state_address0(grp_KeccakF1600_StatePer_1_fu_758_state_address0),
    .state_ce0(grp_KeccakF1600_StatePer_1_fu_758_state_ce0),
    .state_we0(grp_KeccakF1600_StatePer_1_fu_758_state_we0),
    .state_d0(grp_KeccakF1600_StatePer_1_fu_758_state_d0),
    .state_q0(s_q0),
    .state_address1(grp_KeccakF1600_StatePer_1_fu_758_state_address1),
    .state_ce1(grp_KeccakF1600_StatePer_1_fu_758_state_ce1),
    .state_we1(grp_KeccakF1600_StatePer_1_fu_758_state_we1),
    .state_d1(grp_KeccakF1600_StatePer_1_fu_758_state_d1),
    .state_q1(s_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln403_1_fu_1057_p2 == 1'd0) & (icmp_ln403_fu_1037_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln403_1_fu_1057_p2 == 1'd0) & (icmp_ln403_fu_1037_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state23) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln414_fu_1261_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage3_subdone) & (1'b1 == ap_CS_fsm_pp1_stage3)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((icmp_ln414_fu_1261_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state32) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state31)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state32))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state32);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state31)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state38)) begin
            ap_return_preg <= ap_phi_mux_p_34_phi_fu_752_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_KeccakF1600_StatePer_1_fu_758_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state14) | ((icmp_ln415_fu_1291_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17)))) begin
            grp_KeccakF1600_StatePer_1_fu_758_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakF1600_StatePer_1_fu_758_ap_ready == 1'b1)) begin
            grp_KeccakF1600_StatePer_1_fu_758_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_0_reg_595 <= i_fu_999_p2;
    end else if (((icmp_ln391_fu_847_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln393_fu_860_p2 == 1'd0))) begin
        i_0_reg_595 <= zext_ln393_fu_856_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln403_1_fu_1057_p2 == 1'd0) & (icmp_ln403_fu_1037_p2 == 1'd0))) begin
        i_1_reg_637 <= 29'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln404_reg_1922 == 1'd0))) begin
        i_1_reg_637 <= i_4_reg_1926;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln414_fu_1261_p2 == 1'd0))) begin
        i_2_reg_714 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        i_2_reg_714 <= i_6_reg_2021;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln423_reg_2091 == 1'd0))) begin
        i_3_reg_726 <= add_ln423_reg_2095;
    end else if (((icmp_ln414_fu_1261_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        i_3_reg_726 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        i_5_reg_737 <= 32'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln436_reg_2226 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_5_reg_737 <= i_7_reg_2230;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15))) begin
        indvars_iv_reg_691 <= ap_phi_mux_p_2_phi_fu_680_p6;
    end else if (((grp_KeccakF1600_StatePer_1_fu_758_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
        indvars_iv_reg_691 <= add_ln421_fu_1444_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_05_rec_reg_584 <= add_ln396_reg_1834;
    end else if (((icmp_ln391_fu_847_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln393_fu_860_p2 == 1'd0))) begin
        p_05_rec_reg_584 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln393_fu_860_p2 == 1'd1) & (icmp_ln391_fu_847_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_12_reg_617 <= pos_cast1_reg_1771;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln393_reg_1791 == 1'd0))) begin
        p_12_reg_617 <= add_ln398_reg_1815;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln393_fu_860_p2 == 1'd1) & (icmp_ln391_fu_847_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_1626_reg_605 <= 14'd0;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln393_reg_1791 == 1'd0))) begin
        p_1626_reg_605 <= xor_ln395_2_cast_reg_1800;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln393_fu_860_p2 == 1'd1) & (icmp_ln391_fu_847_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_1_reg_627 <= mlen;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln393_reg_1791 == 1'd0))) begin
        p_1_reg_627 <= add_ln397_1_reg_1810;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln403_fu_1037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((icmp_ln403_1_fu_1057_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8) & (icmp_ln403_fu_1037_p2 == 1'd0)))) begin
        p_23_reg_662 <= ap_phi_mux_p_12_phi_fu_620_p4;
    end else if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15) & (icmp_ln403_1_reg_1903 == 1'd0) & (icmp_ln403_reg_1889 == 1'd0))) begin
        p_23_reg_662 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln403_fu_1037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((icmp_ln403_1_fu_1057_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8) & (icmp_ln403_fu_1037_p2 == 1'd0)))) begin
        p_2728_reg_648 <= 14'd0;
    end else if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15) & (icmp_ln403_1_reg_1903 == 1'd0) & (icmp_ln403_reg_1889 == 1'd0))) begin
        p_2728_reg_648 <= trunc_ln403_reg_1898;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln403_fu_1037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((icmp_ln403_1_fu_1057_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8) & (icmp_ln403_fu_1037_p2 == 1'd0)))) begin
        p_2_reg_677 <= ap_phi_mux_p_1_phi_fu_630_p4;
    end else if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15) & (icmp_ln403_1_reg_1903 == 1'd0) & (icmp_ln403_reg_1889 == 1'd0))) begin
        p_2_reg_677 <= sub_ln409_fu_1241_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln431_fu_1644_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        p_34_reg_749 <= add_ln429_fu_1638_p2;
    end else if (((1'b1 == ap_CS_fsm_state38) & (icmp_ln431_reg_2177 == 1'd0))) begin
        p_34_reg_749 <= add_ln441_fu_1746_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15))) begin
        p_38_rec_reg_702 <= 64'd0;
    end else if (((grp_KeccakF1600_StatePer_1_fu_758_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
        p_38_rec_reg_702 <= add_ln418_reg_2046;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln391_fu_847_p2 == 1'd0))) begin
        phi_ln391_reg_573 <= add_ln391_fu_836_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_ln391_reg_573 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        reg_768 <= t_q1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        reg_768 <= t_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        reg_773 <= t_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        reg_773 <= t_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        reg_778 <= t_q1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_778 <= t_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        reg_783 <= t_q0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_783 <= t_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        reg_788 <= t_q1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        reg_788 <= t_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        reg_793 <= t_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        reg_793 <= t_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln423_reg_2091 == 1'd0)))) begin
        reg_798 <= m_q1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln404_reg_1922 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        reg_798 <= m_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln423_reg_2091 == 1'd0)))) begin
        reg_803 <= m_q0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln404_reg_1922 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        reg_803 <= m_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln396_reg_1834 <= add_ln396_fu_969_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln391_fu_847_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln393_fu_860_p2 == 1'd0))) begin
        add_ln397_1_reg_1810 <= add_ln397_1_fu_937_p2;
        add_ln398_reg_1815 <= add_ln398_fu_942_p2;
        empty_55_reg_1805 <= empty_55_fu_925_p2;
        m_offset_cast68_reg_1821[12 : 0] <= m_offset_cast68_fu_947_p1[12 : 0];
        xor_ln395_2_cast_reg_1800 <= xor_ln395_2_cast_fu_919_p2;
        xor_ln395_2_reg_1795 <= xor_ln395_2_fu_913_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln404_fu_1090_p2 == 1'd0))) begin
        add_ln406_2_reg_1931 <= add_ln406_2_fu_1122_p2;
        s_addr_1_reg_1951 <= zext_ln406_1_fu_1149_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15))) begin
        add_ln408_reg_1986 <= add_ln408_fu_1247_p2;
        trunc_ln416_reg_1992 <= trunc_ln416_fu_1253_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln415_fu_1291_p2 == 1'd0))) begin
        add_ln416_2_reg_2026 <= add_ln416_2_fu_1324_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln415_fu_1291_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        add_ln418_reg_2046 <= add_ln418_fu_1346_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        add_ln423_reg_2095 <= add_ln423_fu_1455_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln423_fu_1450_p2 == 1'd0))) begin
        add_ln425_3_reg_2100 <= add_ln425_3_fu_1490_p2;
        s_addr_2_reg_2120 <= zext_ln425_1_fu_1517_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        add_ln429_reg_2170 <= add_ln429_fu_1638_p2;
        icmp_ln431_reg_2177 <= icmp_ln431_fu_1644_p2;
        sub_ln428_reg_2160 <= sub_ln428_fu_1628_p2;
        trunc_ln428_reg_2165 <= trunc_ln428_fu_1634_p1;
        zext_ln428_reg_2155[7 : 3] <= zext_ln428_fu_1624_p1[7 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln431_fu_1644_p2 == 1'd0))) begin
        add_ln438_reg_2191 <= add_ln438_fu_1653_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        i_4_reg_1926 <= i_4_fu_1095_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i_6_reg_2021 <= i_6_fu_1297_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_7_reg_2230 <= i_7_fu_1667_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln391_fu_847_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln393_reg_1791 <= icmp_ln393_fu_860_p2;
        zext_ln393_reg_1785[2 : 0] <= zext_ln393_fu_856_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln403_fu_1037_p2 == 1'd0))) begin
        icmp_ln403_1_reg_1903 <= icmp_ln403_1_fu_1057_p2;
        trunc_ln403_reg_1898 <= trunc_ln403_fu_1053_p1;
        zext_ln403_reg_1893[31 : 0] <= zext_ln403_fu_1049_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        icmp_ln403_reg_1889 <= icmp_ln403_fu_1037_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln404_reg_1922 <= icmp_ln404_fu_1090_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln423_reg_2091 <= icmp_ln423_fu_1450_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln436_reg_2226 <= icmp_ln436_fu_1662_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        pos_cast1_reg_1771[6 : 0] <= pos_cast1_fu_832_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001) & (icmp_ln423_reg_2091 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln404_reg_1922 == 1'd0)))) begin
        reg_808 <= m_q1;
        reg_812 <= m_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001) & (icmp_ln423_reg_2091 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln404_reg_1922 == 1'd0)))) begin
        reg_816 <= s_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln423_reg_2091 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln404_reg_1922 == 1'd0)))) begin
        reg_820 <= m_q1;
        reg_824 <= m_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln414_fu_1261_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln414_fu_1261_p2 == 1'd0)))) begin
        reg_828 <= grp_fu_764_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        s_addr_3_reg_2081 <= zext_ln416_1_fu_1412_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        s_addr_4_reg_2245 <= zext_ln440_fu_1714_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_964_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        s_addr_reg_1849 <= zext_ln400_fu_994_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln414_fu_1261_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        tmp_6739_reg_2012 <= {{indvars_iv_reg_691[7:3]}};
        zext_ln423_1_reg_2007[28 : 0] <= zext_ln423_1_fu_1277_p1[28 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln403_1_fu_1057_p2 == 1'd0) & (icmp_ln403_fu_1037_p2 == 1'd0))) begin
        tmp_s_reg_1912 <= {{sub_ln403_fu_1043_p2[31:3]}};
        zext_ln404_1_reg_1907[28 : 0] <= zext_ln404_1_fu_1073_p1[28 : 0];
        zext_ln406_reg_1917[12 : 0] <= zext_ln406_fu_1087_p1[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        trunc_ln414_reg_1998 <= trunc_ln414_fu_1256_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        trunc_ln441_reg_2240 <= trunc_ln441_fu_1702_p1;
    end
end

always @ (*) begin
    if ((icmp_ln404_fu_1090_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln423_fu_1450_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state23 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state23 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln436_fu_1662_p2 == 1'd0)) begin
        ap_condition_pp2_exit_iter0_state32 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state32 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln404_reg_1922 == 1'd0))) begin
        ap_phi_mux_i_1_phi_fu_641_p4 = i_4_reg_1926;
    end else begin
        ap_phi_mux_i_1_phi_fu_641_p4 = i_1_reg_637;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln423_reg_2091 == 1'd0))) begin
        ap_phi_mux_i_3_phi_fu_730_p4 = add_ln423_reg_2095;
    end else begin
        ap_phi_mux_i_3_phi_fu_730_p4 = i_3_reg_726;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (icmp_ln436_reg_2226 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_i_5_phi_fu_741_p4 = i_7_reg_2230;
    end else begin
        ap_phi_mux_i_5_phi_fu_741_p4 = i_5_reg_737;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln393_reg_1791 == 1'd0))) begin
        ap_phi_mux_p_12_phi_fu_620_p4 = add_ln398_reg_1815;
    end else begin
        ap_phi_mux_p_12_phi_fu_620_p4 = p_12_reg_617;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln393_reg_1791 == 1'd0))) begin
        ap_phi_mux_p_1_phi_fu_630_p4 = add_ln397_1_reg_1810;
    end else begin
        ap_phi_mux_p_1_phi_fu_630_p4 = p_1_reg_627;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln403_1_reg_1903 == 1'd0) & (icmp_ln403_reg_1889 == 1'd0))) begin
        ap_phi_mux_p_2728_phi_fu_652_p6 = trunc_ln403_reg_1898;
    end else begin
        ap_phi_mux_p_2728_phi_fu_652_p6 = p_2728_reg_648;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln403_1_reg_1903 == 1'd0) & (icmp_ln403_reg_1889 == 1'd0))) begin
        ap_phi_mux_p_2_phi_fu_680_p6 = sub_ln409_fu_1241_p2;
    end else begin
        ap_phi_mux_p_2_phi_fu_680_p6 = p_2_reg_677;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) & (icmp_ln431_reg_2177 == 1'd0))) begin
        ap_phi_mux_p_34_phi_fu_752_p4 = add_ln441_fu_1746_p2;
    end else begin
        ap_phi_mux_p_34_phi_fu_752_p4 = p_34_reg_749;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        ap_return = ap_phi_mux_p_34_phi_fu_752_p4;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        m_address0 = zext_ln32_31_fu_1577_p1;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        m_address0 = zext_ln32_29_fu_1557_p1;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        m_address0 = zext_ln32_27_fu_1537_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        m_address0 = zext_ln32_25_fu_1507_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        m_address0 = zext_ln32_38_fu_1407_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        m_address0 = zext_ln32_36_fu_1387_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        m_address0 = zext_ln32_34_fu_1367_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        m_address0 = zext_ln32_32_fu_1341_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        m_address0 = zext_ln32_24_fu_1209_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        m_address0 = zext_ln32_22_fu_1189_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        m_address0 = zext_ln32_20_fu_1169_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        m_address0 = zext_ln406_2_fu_1128_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        m_address0 = sum1_cast_fu_959_p1;
    end else begin
        m_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        m_address1 = zext_ln438_1_fu_1692_p1;
    end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        m_address1 = zext_ln32_30_fu_1567_p1;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        m_address1 = zext_ln32_28_fu_1547_p1;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        m_address1 = zext_ln32_26_fu_1527_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        m_address1 = zext_ln425_4_fu_1496_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        m_address1 = zext_ln32_37_fu_1397_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        m_address1 = zext_ln32_35_fu_1377_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        m_address1 = zext_ln32_33_fu_1357_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        m_address1 = zext_ln416_3_fu_1330_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        m_address1 = zext_ln32_23_fu_1199_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        m_address1 = zext_ln32_21_fu_1179_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        m_address1 = zext_ln32_19_fu_1159_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        m_address1 = zext_ln32_fu_1139_p1;
    end else begin
        m_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        m_ce0 = 1'b1;
    end else begin
        m_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        m_ce1 = 1'b1;
    end else begin
        m_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        s_address0 = s_addr_4_reg_2245;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        s_address0 = zext_ln440_fu_1714_p1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        s_address0 = s_addr_2_reg_2120;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        s_address0 = s_addr_3_reg_2081;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        s_address0 = zext_ln416_1_fu_1412_p1;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        s_address0 = s_addr_1_reg_1951;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        s_address0 = s_addr_reg_1849;
    end else if (((1'b1 == ap_CS_fsm_state22) | ((ap_predicate_op203_call_state15 == 1'b1) & (1'b1 == ap_CS_fsm_state15)))) begin
        s_address0 = grp_KeccakF1600_StatePer_1_fu_758_state_address0;
    end else begin
        s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        s_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state22) | ((ap_predicate_op203_call_state15 == 1'b1) & (1'b1 == ap_CS_fsm_state15)))) begin
        s_ce0 = grp_KeccakF1600_StatePer_1_fu_758_state_ce0;
    end else begin
        s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_predicate_op203_call_state15 == 1'b1) & (1'b1 == ap_CS_fsm_state15)))) begin
        s_ce1 = grp_KeccakF1600_StatePer_1_fu_758_state_ce1;
    end else begin
        s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        s_d0 = xor_ln440_fu_1739_p2;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        s_d0 = xor_ln425_fu_1602_p2;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        s_d0 = xor_ln416_fu_1437_p2;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_d0 = xor_ln406_fu_1234_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        s_d0 = xor_ln400_fu_1030_p2;
    end else if (((1'b1 == ap_CS_fsm_state22) | ((ap_predicate_op203_call_state15 == 1'b1) & (1'b1 == ap_CS_fsm_state15)))) begin
        s_d0 = grp_KeccakF1600_StatePer_1_fu_758_state_d0;
    end else begin
        s_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state38) & (icmp_ln431_reg_2177 == 1'd0)) | ((1'b1 == ap_CS_fsm_state8) & (icmp_ln393_reg_1791 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln423_reg_2091 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln404_reg_1922 == 1'd0)))) begin
        s_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state22) | ((ap_predicate_op203_call_state15 == 1'b1) & (1'b1 == ap_CS_fsm_state15)))) begin
        s_we0 = grp_KeccakF1600_StatePer_1_fu_758_state_we0;
    end else begin
        s_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_predicate_op203_call_state15 == 1'b1) & (1'b1 == ap_CS_fsm_state15)))) begin
        s_we1 = grp_KeccakF1600_StatePer_1_fu_758_state_we1;
    end else begin
        s_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        t_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        t_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        t_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        t_address0 = 64'd1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        t_address0 = zext_ln436_fu_1697_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        t_address0 = t_addr_16_gep_fu_533_p3;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        t_address0 = t_addr_14_gep_fu_517_p3;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        t_address0 = t_addr_12_gep_fu_501_p3;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        t_address0 = t_addr_10_gep_fu_484_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        t_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        t_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        t_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t_address0 = zext_ln391_fu_842_p1;
    end else begin
        t_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        t_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        t_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        t_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        t_address1 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        t_address1 = t_addr_17_gep_fu_541_p3;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        t_address1 = t_addr_15_gep_fu_525_p3;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        t_address1 = t_addr_13_gep_fu_509_p3;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        t_address1 = t_addr_11_gep_fu_492_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        t_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        t_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        t_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_address1 = zext_ln396_fu_1005_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_address1 = 64'd1;
    end else begin
        t_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state6) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        t_ce0 = 1'b1;
    end else begin
        t_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state6))) begin
        t_ce1 = 1'b1;
    end else begin
        t_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        t_d0 = m_q1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state2))) begin
        t_d0 = 8'd0;
    end else begin
        t_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        t_d1 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_d1 = m_q0;
    end else begin
        t_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln436_reg_2226 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b1 == ap_CS_fsm_state28) & (icmp_ln431_fu_1644_p2 == 1'd0)))) begin
        t_we0 = 1'b1;
    end else begin
        t_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state28) & (icmp_ln431_fu_1644_p2 == 1'd0)))) begin
        t_we1 = 1'b1;
    end else begin
        t_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln391_fu_847_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln393_fu_860_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((icmp_ln393_fu_860_p2 == 1'd1) & (icmp_ln391_fu_847_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond_fu_964_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln403_1_fu_1057_p2 == 1'd0) & (icmp_ln403_fu_1037_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln404_fu_1090_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln404_fu_1090_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((icmp_ln414_fu_1261_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln415_fu_1291_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state22 : begin
            if (((grp_KeccakF1600_StatePer_1_fu_758_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln423_fu_1450_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln423_fu_1450_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((1'b0 == ap_block_pp1_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((icmp_ln431_fu_1644_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln436_fu_1662_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln436_fu_1662_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln32_13_fu_1154_p2 = (14'd2 + add_ln406_2_reg_1931);

assign add_ln32_14_fu_1164_p2 = (14'd3 + add_ln406_2_reg_1931);

assign add_ln32_15_fu_1174_p2 = (14'd4 + add_ln406_2_reg_1931);

assign add_ln32_16_fu_1184_p2 = (14'd5 + add_ln406_2_reg_1931);

assign add_ln32_17_fu_1194_p2 = (14'd6 + add_ln406_2_reg_1931);

assign add_ln32_18_fu_1204_p2 = (14'd7 + add_ln406_2_reg_1931);

assign add_ln32_19_fu_1501_p2 = (14'd1 + add_ln425_3_fu_1490_p2);

assign add_ln32_20_fu_1522_p2 = (14'd2 + add_ln425_3_reg_2100);

assign add_ln32_21_fu_1532_p2 = (14'd3 + add_ln425_3_reg_2100);

assign add_ln32_22_fu_1542_p2 = (14'd4 + add_ln425_3_reg_2100);

assign add_ln32_23_fu_1552_p2 = (14'd5 + add_ln425_3_reg_2100);

assign add_ln32_24_fu_1562_p2 = (14'd6 + add_ln425_3_reg_2100);

assign add_ln32_25_fu_1572_p2 = (14'd7 + add_ln425_3_reg_2100);

assign add_ln32_26_fu_1335_p2 = (add_ln416_2_fu_1324_p2 + 14'd1);

assign add_ln32_27_fu_1352_p2 = (add_ln416_2_reg_2026 + 14'd2);

assign add_ln32_28_fu_1362_p2 = (add_ln416_2_reg_2026 + 14'd3);

assign add_ln32_29_fu_1372_p2 = (add_ln416_2_reg_2026 + 14'd4);

assign add_ln32_30_fu_1382_p2 = (add_ln416_2_reg_2026 + 14'd5);

assign add_ln32_31_fu_1392_p2 = (add_ln416_2_reg_2026 + 14'd6);

assign add_ln32_32_fu_1402_p2 = (add_ln416_2_reg_2026 + 14'd7);

assign add_ln32_fu_1133_p2 = (14'd1 + add_ln406_2_fu_1122_p2);

assign add_ln391_fu_836_p2 = (phi_ln391_reg_573 + 3'd1);

assign add_ln394_fu_975_p2 = (zext_ln393_reg_1785 + empty_55_reg_1805);

assign add_ln396_fu_969_p2 = (64'd1 + p_05_rec_reg_584);

assign add_ln397_1_fu_937_p2 = (mlen + add_ln397_fu_931_p2);

assign add_ln397_fu_931_p2 = (64'd1 + umax_fu_897_p3);

assign add_ln398_fu_942_p2 = (empty_55_fu_925_p2 + pos_cast1_reg_1771);

assign add_ln406_1_fu_1117_p2 = (zext_ln406_reg_1917 + shl_ln_fu_1109_p3);

assign add_ln406_2_fu_1122_p2 = (p_1626_reg_605 + add_ln406_1_fu_1117_p2);

assign add_ln406_fu_1144_p2 = (zext_ln404_1_reg_1907 + zext_ln404_fu_1101_p1);

assign add_ln408_fu_1247_p2 = (p_1626_reg_605 + ap_phi_mux_p_2728_phi_fu_652_p6);

assign add_ln416_1_fu_1315_p2 = (trunc_ln416_reg_1992 + zext_ln416_fu_1311_p1);

assign add_ln416_2_fu_1324_p2 = (reg_828 + zext_ln416_2_fu_1320_p1);

assign add_ln418_fu_1346_p2 = (p_38_rec_reg_702 + 64'd136);

assign add_ln421_fu_1444_p2 = ($signed(indvars_iv_reg_691) + $signed(64'd18446744073709551480));

assign add_ln423_fu_1455_p2 = (ap_phi_mux_i_3_phi_fu_730_p4 + 5'd1);

assign add_ln425_1_fu_1512_p2 = (zext_ln423_1_reg_2007 + zext_ln423_fu_1461_p1);

assign add_ln425_2_fu_1481_p2 = (trunc_ln416_reg_1992 + zext_ln425_fu_1477_p1);

assign add_ln425_3_fu_1490_p2 = (reg_828 + zext_ln425_3_fu_1486_p1);

assign add_ln429_fu_1638_p2 = (p_23_reg_662 + zext_ln427_1_fu_1616_p1);

assign add_ln438_1_fu_1677_p2 = (zext_ln428_reg_2155 + trunc_ln436_fu_1673_p1);

assign add_ln438_2_fu_1682_p2 = (add_ln438_1_fu_1677_p2 + trunc_ln414_reg_1998);

assign add_ln438_3_fu_1687_p2 = (add_ln438_2_fu_1682_p2 + add_ln438_reg_2191);

assign add_ln438_fu_1653_p2 = (add_ln408_reg_1986 + zext_ln438_fu_1650_p1);

assign add_ln441_fu_1746_p2 = (add_ln429_reg_2170 + trunc_ln441_reg_2240);

assign and_ln_fu_1609_p3 = {{tmp_6739_reg_2012}, {3'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_on_subcall_done = ((ap_predicate_op203_call_state15 == 1'b1) & (grp_KeccakF1600_StatePer_1_fu_758_ap_done == 1'b0));
end

assign ap_block_state23_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

always @ (*) begin
    ap_predicate_op203_call_state15 = ((icmp_ln403_1_reg_1903 == 1'd0) & (icmp_ln403_reg_1889 == 1'd0));
end

assign empty_53_fu_881_p1 = sub_ln395_fu_875_p2;

assign empty_54_fu_891_p2 = ((xor_ln395_fu_866_p2 > xor_ln395_1_fu_885_p2) ? 1'b1 : 1'b0);

assign empty_55_fu_925_p2 = (trunc_ln395_fu_905_p1 ^ 32'd4294967295);

assign empty_56_fu_950_p1 = p_05_rec_reg_584[13:0];

assign exitcond_fu_964_p2 = ((p_05_rec_reg_584 == xor_ln395_2_reg_1795) ? 1'b1 : 1'b0);

assign grp_KeccakF1600_StatePer_1_fu_758_ap_start = grp_KeccakF1600_StatePer_1_fu_758_ap_start_reg;

assign grp_fu_764_p2 = (trunc_ln414_fu_1256_p1 + add_ln408_reg_1986);

assign i_4_fu_1095_p2 = (ap_phi_mux_i_1_phi_fu_641_p4 + 29'd1);

assign i_6_fu_1297_p2 = (i_2_reg_714 + 5'd1);

assign i_7_fu_1667_p2 = (ap_phi_mux_i_5_phi_fu_741_p4 + 32'd1);

assign i_fu_999_p2 = (i_0_reg_595 + 32'd1);

assign icmp_ln391_fu_847_p2 = ((phi_ln391_reg_573 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln393_fu_860_p2 = ((trunc_ln393_fu_853_p1 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln403_1_fu_1057_p2 = ((ap_phi_mux_p_1_phi_fu_630_p4 < zext_ln403_fu_1049_p1) ? 1'b1 : 1'b0);

assign icmp_ln403_fu_1037_p2 = ((ap_phi_mux_p_12_phi_fu_620_p4 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln404_fu_1090_p2 = ((ap_phi_mux_i_1_phi_fu_641_p4 == tmp_s_reg_1912) ? 1'b1 : 1'b0);

assign icmp_ln414_fu_1261_p2 = ((indvars_iv_reg_691 < 64'd136) ? 1'b1 : 1'b0);

assign icmp_ln415_fu_1291_p2 = ((i_2_reg_714 == 5'd17) ? 1'b1 : 1'b0);

assign icmp_ln423_fu_1450_p2 = ((ap_phi_mux_i_3_phi_fu_730_p4 == tmp_6739_reg_2012) ? 1'b1 : 1'b0);

assign icmp_ln431_fu_1644_p2 = ((indvars_iv_reg_691 == zext_ln427_fu_1620_p1) ? 1'b1 : 1'b0);

assign icmp_ln436_fu_1662_p2 = ((zext_ln436_1_fu_1658_p1 < trunc_ln428_reg_2165) ? 1'b1 : 1'b0);

assign lshr_ln9_fu_1705_p4 = {{add_ln429_reg_2170[31:3]}};

assign lshr_ln_fu_984_p4 = {{sub_ln400_fu_979_p2[31:3]}};

assign m_offset_cast68_fu_947_p1 = m_offset;

assign pos_cast1_fu_832_p1 = pos_r;

assign r_7_i1_fu_1214_p9 = {{{{{{{{m_q0}, {m_q1}}, {reg_824}}, {reg_820}}, {reg_812}}, {reg_808}}, {reg_803}}, {reg_798}};

assign r_7_i2_fu_1582_p9 = {{{{{{{{m_q0}, {m_q1}}, {reg_824}}, {reg_820}}, {reg_812}}, {reg_808}}, {reg_803}}, {reg_798}};

assign r_7_i3_fu_1719_p9 = {{{{{{{{t_q0}, {t_q1}}, {reg_793}}, {reg_788}}, {reg_783}}, {reg_778}}, {reg_773}}, {reg_768}};

assign r_7_i4_fu_1417_p9 = {{{{{{{{m_q0}, {m_q1}}, {reg_824}}, {reg_820}}, {reg_812}}, {reg_808}}, {reg_803}}, {reg_798}};

assign r_7_i_fu_1010_p9 = {{{{{{{{t_q1}, {t_q0}}, {reg_793}}, {reg_788}}, {reg_783}}, {reg_778}}, {reg_773}}, {reg_768}};

assign s_address1 = grp_KeccakF1600_StatePer_1_fu_758_state_address1;

assign s_d1 = grp_KeccakF1600_StatePer_1_fu_758_state_d1;

assign shl_ln6_fu_1469_p3 = {{trunc_ln425_fu_1465_p1}, {3'd0}};

assign shl_ln7_fu_1303_p3 = {{i_2_reg_714}, {3'd0}};

assign shl_ln_fu_1109_p3 = {{trunc_ln406_fu_1105_p1}, {3'd0}};

assign sub_ln395_fu_875_p2 = ($signed(4'd8) - $signed(zext_ln395_fu_871_p1));

assign sub_ln400_fu_979_p2 = (add_ln398_reg_1815 - add_ln394_fu_975_p2);

assign sub_ln403_fu_1043_p2 = (32'd136 - ap_phi_mux_p_12_phi_fu_620_p4);

assign sub_ln409_fu_1241_p2 = (p_1_reg_627 - zext_ln403_reg_1893);

assign sub_ln428_fu_1628_p2 = (indvars_iv_reg_691 - zext_ln427_fu_1620_p1);

assign sum1_cast_fu_959_p1 = sum1_fu_954_p2;

assign sum1_fu_954_p2 = (empty_56_fu_950_p1 + m_offset_cast68_reg_1821);

assign t_addr_10_gep_fu_484_p3 = 64'd0;

assign t_addr_11_gep_fu_492_p3 = 64'd1;

assign t_addr_12_gep_fu_501_p3 = 64'd2;

assign t_addr_13_gep_fu_509_p3 = 64'd3;

assign t_addr_14_gep_fu_517_p3 = 64'd4;

assign t_addr_15_gep_fu_525_p3 = 64'd5;

assign t_addr_16_gep_fu_533_p3 = 64'd6;

assign t_addr_17_gep_fu_541_p3 = 64'd7;

assign tmp_6738_fu_1267_p4 = {{p_23_reg_662[31:3]}};

assign tmp_fu_1063_p4 = {{ap_phi_mux_p_12_phi_fu_620_p4[31:3]}};

assign trunc_ln393_fu_853_p1 = pos_r[2:0];

assign trunc_ln395_2_fu_909_p1 = umax_fu_897_p3[13:0];

assign trunc_ln395_fu_905_p1 = umax_fu_897_p3[31:0];

assign trunc_ln403_fu_1053_p1 = sub_ln403_fu_1043_p2[13:0];

assign trunc_ln406_fu_1105_p1 = ap_phi_mux_i_1_phi_fu_641_p4[10:0];

assign trunc_ln414_fu_1256_p1 = p_38_rec_reg_702[13:0];

assign trunc_ln416_fu_1253_p1 = m_offset[11:0];

assign trunc_ln425_fu_1465_p1 = ap_phi_mux_i_3_phi_fu_730_p4[3:0];

assign trunc_ln428_fu_1634_p1 = sub_ln428_fu_1628_p2[32:0];

assign trunc_ln436_fu_1673_p1 = ap_phi_mux_i_5_phi_fu_741_p4[13:0];

assign trunc_ln441_fu_1702_p1 = sub_ln428_reg_2160[31:0];

assign umax_fu_897_p3 = ((empty_54_fu_891_p2[0:0] === 1'b1) ? xor_ln395_fu_866_p2 : xor_ln395_1_fu_885_p2);

assign xor_ln395_1_fu_885_p2 = (empty_53_fu_881_p1 ^ 64'd18446744073709551615);

assign xor_ln395_2_cast_fu_919_p2 = (trunc_ln395_2_fu_909_p1 ^ 14'd16383);

assign xor_ln395_2_fu_913_p2 = (umax_fu_897_p3 ^ 64'd18446744073709551615);

assign xor_ln395_fu_866_p2 = (mlen ^ 64'd18446744073709551615);

assign xor_ln400_fu_1030_p2 = (s_q0 ^ r_7_i_fu_1010_p9);

assign xor_ln406_fu_1234_p2 = (reg_816 ^ r_7_i1_fu_1214_p9);

assign xor_ln416_fu_1437_p2 = (s_q0 ^ r_7_i4_fu_1417_p9);

assign xor_ln425_fu_1602_p2 = (reg_816 ^ r_7_i2_fu_1582_p9);

assign xor_ln440_fu_1739_p2 = (s_q0 ^ r_7_i3_fu_1719_p9);

assign zext_ln32_19_fu_1159_p1 = add_ln32_13_fu_1154_p2;

assign zext_ln32_20_fu_1169_p1 = add_ln32_14_fu_1164_p2;

assign zext_ln32_21_fu_1179_p1 = add_ln32_15_fu_1174_p2;

assign zext_ln32_22_fu_1189_p1 = add_ln32_16_fu_1184_p2;

assign zext_ln32_23_fu_1199_p1 = add_ln32_17_fu_1194_p2;

assign zext_ln32_24_fu_1209_p1 = add_ln32_18_fu_1204_p2;

assign zext_ln32_25_fu_1507_p1 = add_ln32_19_fu_1501_p2;

assign zext_ln32_26_fu_1527_p1 = add_ln32_20_fu_1522_p2;

assign zext_ln32_27_fu_1537_p1 = add_ln32_21_fu_1532_p2;

assign zext_ln32_28_fu_1547_p1 = add_ln32_22_fu_1542_p2;

assign zext_ln32_29_fu_1557_p1 = add_ln32_23_fu_1552_p2;

assign zext_ln32_30_fu_1567_p1 = add_ln32_24_fu_1562_p2;

assign zext_ln32_31_fu_1577_p1 = add_ln32_25_fu_1572_p2;

assign zext_ln32_32_fu_1341_p1 = add_ln32_26_fu_1335_p2;

assign zext_ln32_33_fu_1357_p1 = add_ln32_27_fu_1352_p2;

assign zext_ln32_34_fu_1367_p1 = add_ln32_28_fu_1362_p2;

assign zext_ln32_35_fu_1377_p1 = add_ln32_29_fu_1372_p2;

assign zext_ln32_36_fu_1387_p1 = add_ln32_30_fu_1382_p2;

assign zext_ln32_37_fu_1397_p1 = add_ln32_31_fu_1392_p2;

assign zext_ln32_38_fu_1407_p1 = add_ln32_32_fu_1402_p2;

assign zext_ln32_fu_1139_p1 = add_ln32_fu_1133_p2;

assign zext_ln391_fu_842_p1 = phi_ln391_reg_573;

assign zext_ln393_fu_856_p1 = trunc_ln393_fu_853_p1;

assign zext_ln395_fu_871_p1 = trunc_ln393_fu_853_p1;

assign zext_ln396_fu_1005_p1 = i_0_reg_595;

assign zext_ln400_fu_994_p1 = lshr_ln_fu_984_p4;

assign zext_ln403_fu_1049_p1 = sub_ln403_fu_1043_p2;

assign zext_ln404_1_fu_1073_p1 = tmp_fu_1063_p4;

assign zext_ln404_fu_1101_p1 = ap_phi_mux_i_1_phi_fu_641_p4;

assign zext_ln406_1_fu_1149_p1 = add_ln406_fu_1144_p2;

assign zext_ln406_2_fu_1128_p1 = add_ln406_2_fu_1122_p2;

assign zext_ln406_fu_1087_p1 = m_offset;

assign zext_ln416_1_fu_1412_p1 = i_2_reg_714;

assign zext_ln416_2_fu_1320_p1 = add_ln416_1_fu_1315_p2;

assign zext_ln416_3_fu_1330_p1 = add_ln416_2_fu_1324_p2;

assign zext_ln416_fu_1311_p1 = shl_ln7_fu_1303_p3;

assign zext_ln423_1_fu_1277_p1 = tmp_6738_fu_1267_p4;

assign zext_ln423_fu_1461_p1 = ap_phi_mux_i_3_phi_fu_730_p4;

assign zext_ln425_1_fu_1517_p1 = add_ln425_1_fu_1512_p2;

assign zext_ln425_3_fu_1486_p1 = add_ln425_2_fu_1481_p2;

assign zext_ln425_4_fu_1496_p1 = add_ln425_3_fu_1490_p2;

assign zext_ln425_fu_1477_p1 = shl_ln6_fu_1469_p3;

assign zext_ln427_1_fu_1616_p1 = and_ln_fu_1609_p3;

assign zext_ln427_fu_1620_p1 = and_ln_fu_1609_p3;

assign zext_ln428_fu_1624_p1 = and_ln_fu_1609_p3;

assign zext_ln436_1_fu_1658_p1 = ap_phi_mux_i_5_phi_fu_741_p4;

assign zext_ln436_fu_1697_p1 = i_5_reg_737;

assign zext_ln438_1_fu_1692_p1 = add_ln438_3_fu_1687_p2;

assign zext_ln438_fu_1650_p1 = m_offset;

assign zext_ln440_fu_1714_p1 = lshr_ln9_fu_1705_p4;

always @ (posedge ap_clk) begin
    pos_cast1_reg_1771[31:7] <= 25'b0000000000000000000000000;
    zext_ln393_reg_1785[31:3] <= 29'b00000000000000000000000000000;
    m_offset_cast68_reg_1821[13] <= 1'b0;
    zext_ln403_reg_1893[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln404_1_reg_1907[29] <= 1'b0;
    zext_ln406_reg_1917[13] <= 1'b0;
    zext_ln423_1_reg_2007[29] <= 1'b0;
    zext_ln428_reg_2155[2:0] <= 3'b000;
    zext_ln428_reg_2155[13:8] <= 6'b000000;
end

endmodule //keccak_absorb_2
