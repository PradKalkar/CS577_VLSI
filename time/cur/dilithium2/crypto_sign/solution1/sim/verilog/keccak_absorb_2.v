// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module keccak_absorb_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        s_address0,
        s_ce0,
        s_we0,
        s_d0,
        s_q0,
        s_address1,
        s_ce1,
        s_we1,
        s_d1,
        s_q1,
        pos_r,
        m_address0,
        m_ce0,
        m_q0,
        m_offset,
        mlen,
        ap_return
);

parameter    ap_ST_fsm_state1 = 22'd1;
parameter    ap_ST_fsm_state2 = 22'd2;
parameter    ap_ST_fsm_state3 = 22'd4;
parameter    ap_ST_fsm_state4 = 22'd8;
parameter    ap_ST_fsm_state5 = 22'd16;
parameter    ap_ST_fsm_state6 = 22'd32;
parameter    ap_ST_fsm_state7 = 22'd64;
parameter    ap_ST_fsm_state8 = 22'd128;
parameter    ap_ST_fsm_state9 = 22'd256;
parameter    ap_ST_fsm_state10 = 22'd512;
parameter    ap_ST_fsm_state11 = 22'd1024;
parameter    ap_ST_fsm_state12 = 22'd2048;
parameter    ap_ST_fsm_state13 = 22'd4096;
parameter    ap_ST_fsm_state14 = 22'd8192;
parameter    ap_ST_fsm_state15 = 22'd16384;
parameter    ap_ST_fsm_state16 = 22'd32768;
parameter    ap_ST_fsm_state17 = 22'd65536;
parameter    ap_ST_fsm_state18 = 22'd131072;
parameter    ap_ST_fsm_state19 = 22'd262144;
parameter    ap_ST_fsm_state20 = 22'd524288;
parameter    ap_ST_fsm_state21 = 22'd1048576;
parameter    ap_ST_fsm_state22 = 22'd2097152;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] s_address0;
output   s_ce0;
output   s_we0;
output  [63:0] s_d0;
input  [63:0] s_q0;
output  [4:0] s_address1;
output   s_ce1;
output   s_we1;
output  [63:0] s_d1;
input  [63:0] s_q1;
input  [6:0] pos_r;
output  [12:0] m_address0;
output   m_ce0;
input  [7:0] m_q0;
input  [12:0] m_offset;
input  [63:0] mlen;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] s_address0;
reg s_ce0;
reg s_we0;
reg[63:0] s_d0;
reg s_ce1;
reg s_we1;
reg[12:0] m_address0;
reg m_ce0;
reg[31:0] ap_return;

(* fsm_encoding = "none" *) reg   [21:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] m_offset_cast2_fu_495_p1;
reg   [63:0] m_offset_cast2_reg_1206;
wire   [31:0] pos_cast1_fu_499_p1;
reg   [31:0] pos_cast1_reg_1211;
wire   [2:0] add_ln387_fu_503_p2;
wire    ap_CS_fsm_state2;
wire   [31:0] zext_ln389_fu_523_p1;
reg   [31:0] zext_ln389_reg_1225;
wire   [0:0] icmp_ln387_fu_514_p2;
wire   [0:0] icmp_ln389_fu_527_p2;
reg   [0:0] icmp_ln389_reg_1231;
wire   [63:0] xor_ln391_2_fu_576_p2;
reg   [63:0] xor_ln391_2_reg_1235;
wire   [31:0] empty_68_fu_582_p2;
reg   [31:0] empty_68_reg_1241;
wire   [63:0] add_ln393_1_fu_594_p2;
reg   [63:0] add_ln393_1_reg_1246;
wire   [31:0] add_ln394_fu_599_p2;
reg   [31:0] add_ln394_reg_1251;
wire   [13:0] m_offset_cast17_fu_604_p1;
reg   [13:0] m_offset_cast17_reg_1257;
wire    ap_CS_fsm_state3;
wire   [63:0] add_ln392_fu_626_p2;
reg   [63:0] add_ln392_reg_1270;
wire   [31:0] i_fu_632_p2;
wire    ap_CS_fsm_state4;
wire   [3:0] i_27_fu_649_p2;
reg   [3:0] i_27_reg_1283;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln30_fu_643_p2;
reg   [4:0] s_addr_reg_1293;
wire   [63:0] r_fu_710_p2;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln399_fu_723_p2;
reg   [0:0] icmp_ln399_reg_1303;
wire    ap_CS_fsm_state7;
wire   [31:0] sub_ln399_fu_729_p2;
reg   [31:0] sub_ln399_reg_1307;
wire   [63:0] zext_ln399_fu_735_p1;
reg   [63:0] zext_ln399_reg_1312;
wire   [0:0] icmp_ln399_1_fu_739_p2;
reg   [0:0] icmp_ln399_1_reg_1317;
wire   [29:0] zext_ln400_1_fu_755_p1;
reg   [29:0] zext_ln400_1_reg_1321;
reg   [28:0] tmp_2874_reg_1326;
wire   [32:0] zext_ln401_2_fu_769_p1;
reg   [32:0] zext_ln401_2_reg_1331;
wire   [28:0] i_28_fu_781_p2;
reg   [28:0] i_28_reg_1339;
wire    ap_CS_fsm_state8;
wire   [63:0] add_ln401_2_fu_808_p2;
reg   [63:0] add_ln401_2_reg_1344;
wire   [0:0] icmp_ln400_fu_776_p2;
reg   [4:0] s_addr_1_reg_1349;
wire   [13:0] add_ln408_fu_849_p2;
reg   [13:0] add_ln408_reg_1354;
wire    ap_CS_fsm_state10;
wire    grp_KeccakF1600_StatePer_1_fu_473_ap_ready;
wire    grp_KeccakF1600_StatePer_1_fu_473_ap_done;
reg    ap_predicate_op138_call_state10;
reg    ap_block_state10_on_subcall_done;
wire   [63:0] add_ln410_fu_855_p2;
reg   [63:0] add_ln410_reg_1359;
wire   [13:0] trunc_ln408_fu_866_p1;
reg   [13:0] trunc_ln408_reg_1368;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln408_fu_860_p2;
wire   [29:0] zext_ln416_1_fu_880_p1;
reg   [29:0] zext_ln416_1_reg_1373;
reg   [4:0] tmp_2876_reg_1378;
wire   [4:0] i_29_fu_900_p2;
reg   [4:0] i_29_reg_1387;
wire    ap_CS_fsm_state12;
wire   [63:0] add_ln410_2_fu_924_p2;
reg   [63:0] add_ln410_2_reg_1392;
wire   [0:0] icmp_ln409_fu_894_p2;
reg   [4:0] s_addr_3_reg_1397;
wire   [63:0] add_ln411_fu_935_p2;
reg   [63:0] add_ln411_reg_1402;
wire   [63:0] add_ln414_fu_941_p2;
reg   [63:0] add_ln414_reg_1407;
wire   [4:0] add_ln416_fu_956_p2;
reg   [4:0] add_ln416_reg_1415;
wire    ap_CS_fsm_state15;
wire   [63:0] add_ln417_2_fu_984_p2;
reg   [63:0] add_ln417_2_reg_1420;
wire   [0:0] icmp_ln416_fu_951_p2;
reg   [4:0] s_addr_2_reg_1425;
wire   [13:0] zext_ln419_fu_1015_p1;
reg   [13:0] zext_ln419_reg_1430;
wire   [63:0] sub_ln419_fu_1019_p2;
reg   [63:0] sub_ln419_reg_1435;
wire   [32:0] trunc_ln419_fu_1025_p1;
reg   [32:0] trunc_ln419_reg_1440;
wire   [31:0] add_ln420_fu_1029_p2;
reg   [31:0] add_ln420_reg_1445;
wire   [0:0] icmp_ln422_fu_1035_p2;
reg   [0:0] icmp_ln422_reg_1452;
wire   [3:0] i_30_fu_1047_p2;
wire    ap_CS_fsm_state17;
wire   [13:0] add_ln426_fu_1061_p2;
reg   [13:0] add_ln426_reg_1464;
wire   [0:0] icmp_ln423_fu_1041_p2;
wire   [63:0] zext_ln425_fu_1066_p1;
reg   [63:0] zext_ln425_reg_1469;
wire    ap_CS_fsm_state18;
wire   [31:0] i_31_fu_1083_p2;
reg   [31:0] i_31_reg_1477;
wire   [0:0] icmp_ln425_fu_1078_p2;
wire   [3:0] i_32_fu_1115_p2;
reg   [3:0] i_32_reg_1490;
wire    ap_CS_fsm_state20;
wire   [0:0] icmp_ln30_1_fu_1109_p2;
reg   [4:0] s_addr_4_reg_1500;
wire   [31:0] trunc_ln428_fu_1140_p1;
reg   [31:0] trunc_ln428_reg_1505;
wire   [63:0] r_1_fu_1169_p2;
wire    ap_CS_fsm_state21;
reg   [2:0] t_address0;
reg    t_ce0;
reg    t_we0;
reg   [7:0] t_d0;
wire   [7:0] t_q0;
wire    grp_KeccakF1600_StatePer_1_fu_473_ap_start;
wire    grp_KeccakF1600_StatePer_1_fu_473_ap_idle;
wire   [4:0] grp_KeccakF1600_StatePer_1_fu_473_state_address0;
wire    grp_KeccakF1600_StatePer_1_fu_473_state_ce0;
wire    grp_KeccakF1600_StatePer_1_fu_473_state_we0;
wire   [63:0] grp_KeccakF1600_StatePer_1_fu_473_state_d0;
wire   [4:0] grp_KeccakF1600_StatePer_1_fu_473_state_address1;
wire    grp_KeccakF1600_StatePer_1_fu_473_state_ce1;
wire    grp_KeccakF1600_StatePer_1_fu_473_state_we1;
wire   [63:0] grp_KeccakF1600_StatePer_1_fu_473_state_d1;
wire    grp_load64_2_fu_481_ap_start;
wire    grp_load64_2_fu_481_ap_done;
wire    grp_load64_2_fu_481_ap_idle;
wire    grp_load64_2_fu_481_ap_ready;
wire   [12:0] grp_load64_2_fu_481_x_address0;
wire    grp_load64_2_fu_481_x_ce0;
reg   [63:0] grp_load64_2_fu_481_x_offset;
wire   [63:0] grp_load64_2_fu_481_ap_return;
reg   [2:0] phi_ln387_reg_231;
reg   [63:0] p_05_rec_reg_242;
reg   [31:0] i_0_reg_253;
reg   [3:0] i_0_i_reg_263;
wire   [0:0] exitcond_fu_621_p2;
reg   [63:0] r_0_i_reg_275;
reg   [63:0] p_1620_reg_287;
reg   [31:0] ap_phi_mux_p_12_phi_fu_302_p4;
reg   [31:0] p_12_reg_299;
reg   [63:0] ap_phi_mux_p_1_phi_fu_312_p4;
reg   [63:0] p_1_reg_309;
reg   [28:0] i_1_reg_319;
wire    ap_CS_fsm_state9;
reg   [31:0] ap_phi_mux_p_2722_phi_fu_334_p6;
reg   [31:0] p_2722_reg_330;
reg   [31:0] p_23_reg_344;
wire   [63:0] sub_ln403_fu_825_p2;
reg   [63:0] ap_phi_mux_p_2_phi_fu_362_p6;
reg   [63:0] p_2_reg_359;
reg   [63:0] indvars_iv_reg_373;
wire    ap_CS_fsm_state14;
reg   [63:0] p_38_rec_reg_384;
reg   [4:0] i_2_reg_396;
wire    ap_CS_fsm_state13;
reg   [4:0] i_3_reg_407;
wire    ap_CS_fsm_state16;
reg   [3:0] i_4_reg_418;
reg   [31:0] i_5_reg_429;
wire    ap_CS_fsm_state19;
reg   [3:0] i_0_i1_reg_440;
reg   [63:0] r_0_i2_reg_452;
wire   [31:0] add_ln428_fu_1182_p2;
reg   [31:0] ap_phi_mux_p_34_phi_fu_467_p4;
reg   [31:0] p_34_reg_464;
wire    ap_CS_fsm_state22;
reg    grp_KeccakF1600_StatePer_1_fu_473_ap_start_reg;
reg    grp_load64_2_fu_481_ap_start_reg;
wire   [63:0] zext_ln387_fu_509_p1;
wire   [63:0] sum1_cast_fu_616_p1;
wire   [63:0] zext_ln392_fu_638_p1;
wire   [63:0] zext_ln31_fu_655_p1;
wire   [63:0] zext_ln396_fu_679_p1;
wire   [63:0] zext_ln401_1_fu_820_p1;
wire   [63:0] zext_ln410_1_fu_930_p1;
wire   [63:0] zext_ln417_1_fu_995_p1;
wire   [63:0] zext_ln424_fu_1053_p1;
wire   [63:0] zext_ln426_1_fu_1104_p1;
wire   [63:0] zext_ln31_10_fu_1121_p1;
wire   [63:0] zext_ln427_fu_1135_p1;
wire   [63:0] xor_ln396_fu_716_p2;
wire   [63:0] grp_fu_488_p2;
wire   [63:0] xor_ln427_fu_1175_p2;
wire   [2:0] trunc_ln389_fu_520_p1;
wire   [3:0] zext_ln391_fu_538_p1;
wire   [3:0] sub_ln391_fu_542_p2;
wire   [63:0] empty_66_fu_548_p1;
wire   [63:0] xor_ln391_fu_533_p2;
wire   [63:0] xor_ln391_1_fu_552_p2;
wire   [0:0] empty_67_fu_558_p2;
wire   [63:0] umax_fu_564_p3;
wire   [31:0] trunc_ln391_fu_572_p1;
wire   [63:0] add_ln393_fu_588_p2;
wire   [13:0] empty_69_fu_607_p1;
wire   [13:0] sum1_fu_611_p2;
wire   [31:0] add_ln390_fu_660_p2;
wire   [31:0] sub_ln396_fu_664_p2;
wire   [28:0] lshr_ln_fu_669_p4;
wire   [2:0] trunc_ln31_fu_688_p1;
wire   [5:0] shl_ln_fu_692_p3;
wire   [63:0] zext_ln31_8_fu_684_p1;
wire   [63:0] zext_ln31_9_fu_700_p1;
wire   [63:0] shl_ln31_fu_704_p2;
wire   [28:0] tmp_s_fu_745_p4;
wire   [31:0] shl_ln14_fu_787_p3;
wire   [32:0] zext_ln401_fu_795_p1;
wire   [32:0] add_ln401_1_fu_799_p2;
wire   [63:0] zext_ln401_3_fu_804_p1;
wire   [29:0] zext_ln400_fu_772_p1;
wire   [29:0] add_ln401_fu_815_p2;
wire   [63:0] zext_ln402_fu_831_p1;
wire   [13:0] trunc_ln402_1_fu_839_p1;
wire   [13:0] trunc_ln402_fu_835_p1;
wire   [63:0] add_ln402_fu_843_p2;
wire   [28:0] tmp_2875_fu_870_p4;
wire   [7:0] shl_ln16_fu_906_p3;
wire   [63:0] zext_ln410_fu_914_p1;
wire   [63:0] add_ln410_1_fu_918_p2;
wire   [3:0] trunc_ln417_fu_962_p1;
wire   [6:0] shl_ln15_fu_966_p3;
wire   [63:0] zext_ln417_fu_974_p1;
wire   [63:0] add_ln417_fu_978_p2;
wire   [29:0] zext_ln416_fu_947_p1;
wire   [29:0] add_ln417_1_fu_990_p2;
wire   [7:0] and_ln_fu_1000_p3;
wire   [63:0] zext_ln418_fu_1011_p1;
wire   [31:0] zext_ln418_1_fu_1007_p1;
wire   [13:0] zext_ln426_fu_1058_p1;
wire   [32:0] zext_ln425_1_fu_1074_p1;
wire   [13:0] trunc_ln425_fu_1070_p1;
wire   [13:0] add_ln426_1_fu_1089_p2;
wire   [13:0] add_ln426_2_fu_1094_p2;
wire   [13:0] add_ln426_3_fu_1099_p2;
wire   [28:0] lshr_ln9_fu_1126_p4;
wire   [2:0] trunc_ln31_4_fu_1147_p1;
wire   [5:0] shl_ln31_4_fu_1151_p3;
wire   [63:0] zext_ln31_11_fu_1143_p1;
wire   [63:0] zext_ln31_12_fu_1159_p1;
wire   [63:0] shl_ln31_1_fu_1163_p2;
reg   [31:0] ap_return_preg;
reg   [21:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 22'd1;
#0 grp_KeccakF1600_StatePer_1_fu_473_ap_start_reg = 1'b0;
#0 grp_load64_2_fu_481_ap_start_reg = 1'b0;
#0 ap_return_preg = 32'd0;
end

keccak_absorb_2_t #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
t_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(t_address0),
    .ce0(t_ce0),
    .we0(t_we0),
    .d0(t_d0),
    .q0(t_q0)
);

KeccakF1600_StatePer_1 grp_KeccakF1600_StatePer_1_fu_473(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_KeccakF1600_StatePer_1_fu_473_ap_start),
    .ap_done(grp_KeccakF1600_StatePer_1_fu_473_ap_done),
    .ap_idle(grp_KeccakF1600_StatePer_1_fu_473_ap_idle),
    .ap_ready(grp_KeccakF1600_StatePer_1_fu_473_ap_ready),
    .state_address0(grp_KeccakF1600_StatePer_1_fu_473_state_address0),
    .state_ce0(grp_KeccakF1600_StatePer_1_fu_473_state_ce0),
    .state_we0(grp_KeccakF1600_StatePer_1_fu_473_state_we0),
    .state_d0(grp_KeccakF1600_StatePer_1_fu_473_state_d0),
    .state_q0(s_q0),
    .state_address1(grp_KeccakF1600_StatePer_1_fu_473_state_address1),
    .state_ce1(grp_KeccakF1600_StatePer_1_fu_473_state_ce1),
    .state_we1(grp_KeccakF1600_StatePer_1_fu_473_state_we1),
    .state_d1(grp_KeccakF1600_StatePer_1_fu_473_state_d1),
    .state_q1(s_q1)
);

load64_2 grp_load64_2_fu_481(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_load64_2_fu_481_ap_start),
    .ap_done(grp_load64_2_fu_481_ap_done),
    .ap_idle(grp_load64_2_fu_481_ap_idle),
    .ap_ready(grp_load64_2_fu_481_ap_ready),
    .x_address0(grp_load64_2_fu_481_x_address0),
    .x_ce0(grp_load64_2_fu_481_x_ce0),
    .x_q0(m_q0),
    .x_offset(grp_load64_2_fu_481_x_offset),
    .ap_return(grp_load64_2_fu_481_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_return_preg <= ap_phi_mux_p_34_phi_fu_467_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_KeccakF1600_StatePer_1_fu_473_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln409_fu_894_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)) | ((icmp_ln400_fu_776_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8)))) begin
            grp_KeccakF1600_StatePer_1_fu_473_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakF1600_StatePer_1_fu_473_ap_ready == 1'b1)) begin
            grp_KeccakF1600_StatePer_1_fu_473_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_load64_2_fu_481_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln416_fu_951_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15)) | ((icmp_ln409_fu_894_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)) | ((icmp_ln400_fu_776_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
            grp_load64_2_fu_481_ap_start_reg <= 1'b1;
        end else if ((grp_load64_2_fu_481_ap_ready == 1'b1)) begin
            grp_load64_2_fu_481_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln425_fu_1078_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        i_0_i1_reg_440 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        i_0_i1_reg_440 <= i_32_reg_1490;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_i_reg_263 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        i_0_i_reg_263 <= i_27_reg_1283;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_0_reg_253 <= i_fu_632_p2;
    end else if (((icmp_ln389_fu_527_p2 == 1'd0) & (icmp_ln387_fu_514_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_reg_253 <= zext_ln389_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln399_1_fu_739_p2 == 1'd0) & (icmp_ln399_fu_723_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        i_1_reg_319 <= 29'd0;
    end else if (((grp_load64_2_fu_481_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        i_1_reg_319 <= i_28_reg_1339;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln408_fu_860_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        i_2_reg_396 <= 5'd0;
    end else if (((grp_load64_2_fu_481_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        i_2_reg_396 <= i_29_reg_1387;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_load64_2_fu_481_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        i_3_reg_407 <= add_ln416_reg_1415;
    end else if (((icmp_ln408_fu_860_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        i_3_reg_407 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln422_fu_1035_p2 == 1'd0) & (icmp_ln416_fu_951_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        i_4_reg_418 <= 4'd0;
    end else if (((icmp_ln423_fu_1041_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        i_4_reg_418 <= i_30_fu_1047_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln423_fu_1041_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        i_5_reg_429 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        i_5_reg_429 <= i_31_reg_1477;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'b0 == ap_block_state10_on_subcall_done))) begin
        indvars_iv_reg_373 <= ap_phi_mux_p_2_phi_fu_362_p6;
    end else if (((1'b1 == ap_CS_fsm_state14) & (grp_KeccakF1600_StatePer_1_fu_473_ap_done == 1'b1))) begin
        indvars_iv_reg_373 <= add_ln414_reg_1407;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_05_rec_reg_242 <= add_ln392_reg_1270;
    end else if (((icmp_ln389_fu_527_p2 == 1'd0) & (icmp_ln387_fu_514_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_05_rec_reg_242 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln389_fu_527_p2 == 1'd1) & (icmp_ln387_fu_514_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_12_reg_299 <= pos_cast1_reg_1211;
    end else if (((icmp_ln389_reg_1231 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        p_12_reg_299 <= add_ln394_reg_1251;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln389_fu_527_p2 == 1'd1) & (icmp_ln387_fu_514_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_1620_reg_287 <= 64'd0;
    end else if (((icmp_ln389_reg_1231 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        p_1620_reg_287 <= xor_ln391_2_reg_1235;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln389_fu_527_p2 == 1'd1) & (icmp_ln387_fu_514_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_1_reg_309 <= mlen;
    end else if (((icmp_ln389_reg_1231 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        p_1_reg_309 <= add_ln393_1_reg_1246;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln399_fu_723_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln399_fu_723_p2 == 1'd0) & (icmp_ln399_1_fu_739_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7)))) begin
        p_23_reg_344 <= ap_phi_mux_p_12_phi_fu_302_p4;
    end else if (((icmp_ln399_1_reg_1317 == 1'd0) & (icmp_ln399_reg_1303 == 1'd0) & (1'b1 == ap_CS_fsm_state10) & (1'b0 == ap_block_state10_on_subcall_done))) begin
        p_23_reg_344 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln399_fu_723_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln399_fu_723_p2 == 1'd0) & (icmp_ln399_1_fu_739_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7)))) begin
        p_2722_reg_330 <= 32'd0;
    end else if (((icmp_ln399_1_reg_1317 == 1'd0) & (icmp_ln399_reg_1303 == 1'd0) & (1'b1 == ap_CS_fsm_state10) & (1'b0 == ap_block_state10_on_subcall_done))) begin
        p_2722_reg_330 <= sub_ln399_reg_1307;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln399_fu_723_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln399_fu_723_p2 == 1'd0) & (icmp_ln399_1_fu_739_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7)))) begin
        p_2_reg_359 <= ap_phi_mux_p_1_phi_fu_312_p4;
    end else if (((icmp_ln399_1_reg_1317 == 1'd0) & (icmp_ln399_reg_1303 == 1'd0) & (1'b1 == ap_CS_fsm_state10) & (1'b0 == ap_block_state10_on_subcall_done))) begin
        p_2_reg_359 <= sub_ln403_fu_825_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln422_fu_1035_p2 == 1'd1) & (icmp_ln416_fu_951_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        p_34_reg_464 <= add_ln420_fu_1029_p2;
    end else if (((icmp_ln422_reg_1452 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        p_34_reg_464 <= add_ln428_fu_1182_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'b0 == ap_block_state10_on_subcall_done))) begin
        p_38_rec_reg_384 <= 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state14) & (grp_KeccakF1600_StatePer_1_fu_473_ap_done == 1'b1))) begin
        p_38_rec_reg_384 <= add_ln411_reg_1402;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_fu_514_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_ln387_reg_231 <= add_ln387_fu_503_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_ln387_reg_231 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln425_fu_1078_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        r_0_i2_reg_452 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        r_0_i2_reg_452 <= r_1_fu_1169_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        r_0_i_reg_275 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        r_0_i_reg_275 <= r_fu_710_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln392_reg_1270 <= add_ln392_fu_626_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln389_fu_527_p2 == 1'd0) & (icmp_ln387_fu_514_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        add_ln393_1_reg_1246 <= add_ln393_1_fu_594_p2;
        add_ln394_reg_1251 <= add_ln394_fu_599_p2;
        empty_68_reg_1241 <= empty_68_fu_582_p2;
        m_offset_cast17_reg_1257[12 : 0] <= m_offset_cast17_fu_604_p1[12 : 0];
        xor_ln391_2_reg_1235 <= xor_ln391_2_fu_576_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln400_fu_776_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        add_ln401_2_reg_1344 <= add_ln401_2_fu_808_p2;
        s_addr_1_reg_1349 <= zext_ln401_1_fu_820_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'b0 == ap_block_state10_on_subcall_done))) begin
        add_ln408_reg_1354 <= add_ln408_fu_849_p2;
        add_ln410_reg_1359 <= add_ln410_fu_855_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln409_fu_894_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        add_ln410_2_reg_1392 <= add_ln410_2_fu_924_p2;
        s_addr_3_reg_1397 <= zext_ln410_1_fu_930_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln409_fu_894_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        add_ln411_reg_1402 <= add_ln411_fu_935_p2;
        add_ln414_reg_1407 <= add_ln414_fu_941_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        add_ln416_reg_1415 <= add_ln416_fu_956_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln416_fu_951_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        add_ln417_2_reg_1420 <= add_ln417_2_fu_984_p2;
        s_addr_2_reg_1425 <= zext_ln417_1_fu_995_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln416_fu_951_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        add_ln420_reg_1445 <= add_ln420_fu_1029_p2;
        icmp_ln422_reg_1452 <= icmp_ln422_fu_1035_p2;
        sub_ln419_reg_1435 <= sub_ln419_fu_1019_p2;
        trunc_ln419_reg_1440 <= trunc_ln419_fu_1025_p1;
        zext_ln419_reg_1430[7 : 3] <= zext_ln419_fu_1015_p1[7 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln423_fu_1041_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        add_ln426_reg_1464 <= add_ln426_fu_1061_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_27_reg_1283 <= i_27_fu_649_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_28_reg_1339 <= i_28_fu_781_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_29_reg_1387 <= i_29_fu_900_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i_31_reg_1477 <= i_31_fu_1083_p2;
        zext_ln425_reg_1469[31 : 0] <= zext_ln425_fu_1066_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        i_32_reg_1490 <= i_32_fu_1115_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_fu_514_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln389_reg_1231 <= icmp_ln389_fu_527_p2;
        zext_ln389_reg_1225[2 : 0] <= zext_ln389_fu_523_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln399_fu_723_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        icmp_ln399_1_reg_1317 <= icmp_ln399_1_fu_739_p2;
        sub_ln399_reg_1307 <= sub_ln399_fu_729_p2;
        zext_ln399_reg_1312[31 : 0] <= zext_ln399_fu_735_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        icmp_ln399_reg_1303 <= icmp_ln399_fu_723_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        m_offset_cast2_reg_1206[12 : 0] <= m_offset_cast2_fu_495_p1[12 : 0];
        pos_cast1_reg_1211[6 : 0] <= pos_cast1_fu_499_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_1_fu_1109_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        s_addr_4_reg_1500 <= zext_ln427_fu_1135_p1;
        trunc_ln428_reg_1505 <= trunc_ln428_fu_1140_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_fu_643_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        s_addr_reg_1293 <= zext_ln396_fu_679_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln399_1_fu_739_p2 == 1'd0) & (icmp_ln399_fu_723_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        tmp_2874_reg_1326 <= {{sub_ln399_fu_729_p2[31:3]}};
        zext_ln400_1_reg_1321[28 : 0] <= zext_ln400_1_fu_755_p1[28 : 0];
        zext_ln401_2_reg_1331[12 : 0] <= zext_ln401_2_fu_769_p1[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln408_fu_860_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        tmp_2876_reg_1378 <= {{indvars_iv_reg_373[7:3]}};
        trunc_ln408_reg_1368 <= trunc_ln408_fu_866_p1;
        zext_ln416_1_reg_1373[28 : 0] <= zext_ln416_1_fu_880_p1[28 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln389_reg_1231 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        ap_phi_mux_p_12_phi_fu_302_p4 = add_ln394_reg_1251;
    end else begin
        ap_phi_mux_p_12_phi_fu_302_p4 = p_12_reg_299;
    end
end

always @ (*) begin
    if (((icmp_ln389_reg_1231 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        ap_phi_mux_p_1_phi_fu_312_p4 = add_ln393_1_reg_1246;
    end else begin
        ap_phi_mux_p_1_phi_fu_312_p4 = p_1_reg_309;
    end
end

always @ (*) begin
    if (((icmp_ln399_1_reg_1317 == 1'd0) & (icmp_ln399_reg_1303 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        ap_phi_mux_p_2722_phi_fu_334_p6 = sub_ln399_reg_1307;
    end else begin
        ap_phi_mux_p_2722_phi_fu_334_p6 = p_2722_reg_330;
    end
end

always @ (*) begin
    if (((icmp_ln399_1_reg_1317 == 1'd0) & (icmp_ln399_reg_1303 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        ap_phi_mux_p_2_phi_fu_362_p6 = sub_ln403_fu_825_p2;
    end else begin
        ap_phi_mux_p_2_phi_fu_362_p6 = p_2_reg_359;
    end
end

always @ (*) begin
    if (((icmp_ln422_reg_1452 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        ap_phi_mux_p_34_phi_fu_467_p4 = add_ln428_fu_1182_p2;
    end else begin
        ap_phi_mux_p_34_phi_fu_467_p4 = p_34_reg_464;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_return = ap_phi_mux_p_34_phi_fu_467_p4;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_load64_2_fu_481_x_offset = add_ln417_2_reg_1420;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_load64_2_fu_481_x_offset = add_ln410_2_reg_1392;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_load64_2_fu_481_x_offset = add_ln401_2_reg_1344;
    end else begin
        grp_load64_2_fu_481_x_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        m_address0 = zext_ln426_1_fu_1104_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        m_address0 = sum1_cast_fu_616_p1;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9))) begin
        m_address0 = grp_load64_2_fu_481_x_address0;
    end else begin
        m_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state3))) begin
        m_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9))) begin
        m_ce0 = grp_load64_2_fu_481_x_ce0;
    end else begin
        m_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        s_address0 = s_addr_4_reg_1500;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        s_address0 = zext_ln427_fu_1135_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        s_address0 = s_addr_2_reg_1425;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        s_address0 = zext_ln417_1_fu_995_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        s_address0 = s_addr_3_reg_1397;
    end else if (((icmp_ln409_fu_894_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        s_address0 = zext_ln410_1_fu_930_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        s_address0 = s_addr_1_reg_1349;
    end else if (((icmp_ln400_fu_776_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        s_address0 = zext_ln401_1_fu_820_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        s_address0 = s_addr_reg_1293;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        s_address0 = zext_ln396_fu_679_p1;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((ap_predicate_op138_call_state10 == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        s_address0 = grp_KeccakF1600_StatePer_1_fu_473_state_address0;
    end else begin
        s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | ((grp_load64_2_fu_481_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((grp_load64_2_fu_481_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((grp_load64_2_fu_481_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((icmp_ln409_fu_894_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)) | ((icmp_ln400_fu_776_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        s_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((ap_predicate_op138_call_state10 == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        s_ce0 = grp_KeccakF1600_StatePer_1_fu_473_state_ce0;
    end else begin
        s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_predicate_op138_call_state10 == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        s_ce1 = grp_KeccakF1600_StatePer_1_fu_473_state_ce1;
    end else begin
        s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        s_d0 = xor_ln427_fu_1175_p2;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9))) begin
        s_d0 = grp_fu_488_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        s_d0 = xor_ln396_fu_716_p2;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((ap_predicate_op138_call_state10 == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        s_d0 = grp_KeccakF1600_StatePer_1_fu_473_state_d0;
    end else begin
        s_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln422_reg_1452 == 1'd0) & (1'b1 == ap_CS_fsm_state22)) | ((grp_load64_2_fu_481_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((grp_load64_2_fu_481_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((grp_load64_2_fu_481_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((icmp_ln389_reg_1231 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        s_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((ap_predicate_op138_call_state10 == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        s_we0 = grp_KeccakF1600_StatePer_1_fu_473_state_we0;
    end else begin
        s_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_predicate_op138_call_state10 == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        s_we1 = grp_KeccakF1600_StatePer_1_fu_473_state_we1;
    end else begin
        s_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        t_address0 = zext_ln31_10_fu_1121_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        t_address0 = zext_ln425_reg_1469;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        t_address0 = zext_ln424_fu_1053_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        t_address0 = zext_ln31_fu_655_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_address0 = zext_ln392_fu_638_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t_address0 = zext_ln387_fu_509_p1;
    end else begin
        t_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        t_ce0 = 1'b1;
    end else begin
        t_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state4))) begin
        t_d0 = m_q0;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state17))) begin
        t_d0 = 8'd0;
    end else begin
        t_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state4) | ((icmp_ln423_fu_1041_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        t_we0 = 1'b1;
    end else begin
        t_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln389_fu_527_p2 == 1'd0) & (icmp_ln387_fu_514_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((icmp_ln389_fu_527_p2 == 1'd1) & (icmp_ln387_fu_514_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln30_fu_643_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln399_1_fu_739_p2 == 1'd0) & (icmp_ln399_fu_723_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln400_fu_776_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((grp_load64_2_fu_481_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (1'b0 == ap_block_state10_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln408_fu_860_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln409_fu_894_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((grp_load64_2_fu_481_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (grp_KeccakF1600_StatePer_1_fu_473_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln422_fu_1035_p2 == 1'd0) & (icmp_ln416_fu_951_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else if (((icmp_ln422_fu_1035_p2 == 1'd1) & (icmp_ln416_fu_951_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((grp_load64_2_fu_481_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln423_fu_1041_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln425_fu_1078_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln30_1_fu_1109_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln387_fu_503_p2 = (phi_ln387_reg_231 + 3'd1);

assign add_ln390_fu_660_p2 = (zext_ln389_reg_1225 + empty_68_reg_1241);

assign add_ln392_fu_626_p2 = (64'd1 + p_05_rec_reg_242);

assign add_ln393_1_fu_594_p2 = (mlen + add_ln393_fu_588_p2);

assign add_ln393_fu_588_p2 = (64'd1 + umax_fu_564_p3);

assign add_ln394_fu_599_p2 = (empty_68_fu_582_p2 + pos_cast1_reg_1211);

assign add_ln401_1_fu_799_p2 = (zext_ln401_fu_795_p1 + zext_ln401_2_reg_1331);

assign add_ln401_2_fu_808_p2 = (zext_ln401_3_fu_804_p1 + p_1620_reg_287);

assign add_ln401_fu_815_p2 = (zext_ln400_fu_772_p1 + zext_ln400_1_reg_1321);

assign add_ln402_fu_843_p2 = (zext_ln402_fu_831_p1 + p_1620_reg_287);

assign add_ln408_fu_849_p2 = (trunc_ln402_1_fu_839_p1 + trunc_ln402_fu_835_p1);

assign add_ln410_1_fu_918_p2 = (zext_ln410_fu_914_p1 + p_38_rec_reg_384);

assign add_ln410_2_fu_924_p2 = (add_ln410_reg_1359 + add_ln410_1_fu_918_p2);

assign add_ln410_fu_855_p2 = (add_ln402_fu_843_p2 + m_offset_cast2_reg_1206);

assign add_ln411_fu_935_p2 = (p_38_rec_reg_384 + 64'd136);

assign add_ln414_fu_941_p2 = ($signed(indvars_iv_reg_373) + $signed(64'd18446744073709551480));

assign add_ln416_fu_956_p2 = (i_3_reg_407 + 5'd1);

assign add_ln417_1_fu_990_p2 = (zext_ln416_1_reg_1373 + zext_ln416_fu_947_p1);

assign add_ln417_2_fu_984_p2 = (add_ln410_reg_1359 + add_ln417_fu_978_p2);

assign add_ln417_fu_978_p2 = (zext_ln417_fu_974_p1 + p_38_rec_reg_384);

assign add_ln420_fu_1029_p2 = (p_23_reg_344 + zext_ln418_1_fu_1007_p1);

assign add_ln426_1_fu_1089_p2 = (trunc_ln425_fu_1070_p1 + zext_ln419_reg_1430);

assign add_ln426_2_fu_1094_p2 = (trunc_ln408_reg_1368 + add_ln426_1_fu_1089_p2);

assign add_ln426_3_fu_1099_p2 = (add_ln426_reg_1464 + add_ln426_2_fu_1094_p2);

assign add_ln426_fu_1061_p2 = (zext_ln426_fu_1058_p1 + add_ln408_reg_1354);

assign add_ln428_fu_1182_p2 = (trunc_ln428_reg_1505 + add_ln420_reg_1445);

assign and_ln_fu_1000_p3 = {{tmp_2876_reg_1378}, {3'd0}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state10_on_subcall_done = ((ap_predicate_op138_call_state10 == 1'b1) & (grp_KeccakF1600_StatePer_1_fu_473_ap_done == 1'b0));
end

always @ (*) begin
    ap_predicate_op138_call_state10 = ((icmp_ln399_1_reg_1317 == 1'd0) & (icmp_ln399_reg_1303 == 1'd0));
end

assign empty_66_fu_548_p1 = sub_ln391_fu_542_p2;

assign empty_67_fu_558_p2 = ((xor_ln391_fu_533_p2 > xor_ln391_1_fu_552_p2) ? 1'b1 : 1'b0);

assign empty_68_fu_582_p2 = (trunc_ln391_fu_572_p1 ^ 32'd4294967295);

assign empty_69_fu_607_p1 = p_05_rec_reg_242[13:0];

assign exitcond_fu_621_p2 = ((p_05_rec_reg_242 == xor_ln391_2_reg_1235) ? 1'b1 : 1'b0);

assign grp_KeccakF1600_StatePer_1_fu_473_ap_start = grp_KeccakF1600_StatePer_1_fu_473_ap_start_reg;

assign grp_fu_488_p2 = (s_q0 ^ grp_load64_2_fu_481_ap_return);

assign grp_load64_2_fu_481_ap_start = grp_load64_2_fu_481_ap_start_reg;

assign i_27_fu_649_p2 = (i_0_i_reg_263 + 4'd1);

assign i_28_fu_781_p2 = (i_1_reg_319 + 29'd1);

assign i_29_fu_900_p2 = (i_2_reg_396 + 5'd1);

assign i_30_fu_1047_p2 = (i_4_reg_418 + 4'd1);

assign i_31_fu_1083_p2 = (32'd1 + i_5_reg_429);

assign i_32_fu_1115_p2 = (i_0_i1_reg_440 + 4'd1);

assign i_fu_632_p2 = (i_0_reg_253 + 32'd1);

assign icmp_ln30_1_fu_1109_p2 = ((i_0_i1_reg_440 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_643_p2 = ((i_0_i_reg_263 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln387_fu_514_p2 = ((phi_ln387_reg_231 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln389_fu_527_p2 = ((trunc_ln389_fu_520_p1 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln399_1_fu_739_p2 = ((ap_phi_mux_p_1_phi_fu_312_p4 < zext_ln399_fu_735_p1) ? 1'b1 : 1'b0);

assign icmp_ln399_fu_723_p2 = ((ap_phi_mux_p_12_phi_fu_302_p4 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln400_fu_776_p2 = ((i_1_reg_319 == tmp_2874_reg_1326) ? 1'b1 : 1'b0);

assign icmp_ln408_fu_860_p2 = ((indvars_iv_reg_373 < 64'd136) ? 1'b1 : 1'b0);

assign icmp_ln409_fu_894_p2 = ((i_2_reg_396 == 5'd17) ? 1'b1 : 1'b0);

assign icmp_ln416_fu_951_p2 = ((i_3_reg_407 == tmp_2876_reg_1378) ? 1'b1 : 1'b0);

assign icmp_ln422_fu_1035_p2 = ((indvars_iv_reg_373 == zext_ln418_fu_1011_p1) ? 1'b1 : 1'b0);

assign icmp_ln423_fu_1041_p2 = ((i_4_reg_418 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln425_fu_1078_p2 = ((zext_ln425_1_fu_1074_p1 < trunc_ln419_reg_1440) ? 1'b1 : 1'b0);

assign lshr_ln9_fu_1126_p4 = {{add_ln420_reg_1445[31:3]}};

assign lshr_ln_fu_669_p4 = {{sub_ln396_fu_664_p2[31:3]}};

assign m_offset_cast17_fu_604_p1 = m_offset;

assign m_offset_cast2_fu_495_p1 = m_offset;

assign pos_cast1_fu_499_p1 = pos_r;

assign r_1_fu_1169_p2 = (shl_ln31_1_fu_1163_p2 | r_0_i2_reg_452);

assign r_fu_710_p2 = (shl_ln31_fu_704_p2 | r_0_i_reg_275);

assign s_address1 = grp_KeccakF1600_StatePer_1_fu_473_state_address1;

assign s_d1 = grp_KeccakF1600_StatePer_1_fu_473_state_d1;

assign shl_ln14_fu_787_p3 = {{i_1_reg_319}, {3'd0}};

assign shl_ln15_fu_966_p3 = {{trunc_ln417_fu_962_p1}, {3'd0}};

assign shl_ln16_fu_906_p3 = {{i_2_reg_396}, {3'd0}};

assign shl_ln31_1_fu_1163_p2 = zext_ln31_11_fu_1143_p1 << zext_ln31_12_fu_1159_p1;

assign shl_ln31_4_fu_1151_p3 = {{trunc_ln31_4_fu_1147_p1}, {3'd0}};

assign shl_ln31_fu_704_p2 = zext_ln31_8_fu_684_p1 << zext_ln31_9_fu_700_p1;

assign shl_ln_fu_692_p3 = {{trunc_ln31_fu_688_p1}, {3'd0}};

assign sub_ln391_fu_542_p2 = ($signed(4'd8) - $signed(zext_ln391_fu_538_p1));

assign sub_ln396_fu_664_p2 = (add_ln394_reg_1251 - add_ln390_fu_660_p2);

assign sub_ln399_fu_729_p2 = (32'd136 - ap_phi_mux_p_12_phi_fu_302_p4);

assign sub_ln403_fu_825_p2 = (p_1_reg_309 - zext_ln399_reg_1312);

assign sub_ln419_fu_1019_p2 = (indvars_iv_reg_373 - zext_ln418_fu_1011_p1);

assign sum1_cast_fu_616_p1 = sum1_fu_611_p2;

assign sum1_fu_611_p2 = (m_offset_cast17_reg_1257 + empty_69_fu_607_p1);

assign tmp_2875_fu_870_p4 = {{p_23_reg_344[31:3]}};

assign tmp_s_fu_745_p4 = {{ap_phi_mux_p_12_phi_fu_302_p4[31:3]}};

assign trunc_ln31_4_fu_1147_p1 = i_0_i1_reg_440[2:0];

assign trunc_ln31_fu_688_p1 = i_0_i_reg_263[2:0];

assign trunc_ln389_fu_520_p1 = pos_r[2:0];

assign trunc_ln391_fu_572_p1 = umax_fu_564_p3[31:0];

assign trunc_ln402_1_fu_839_p1 = p_1620_reg_287[13:0];

assign trunc_ln402_fu_835_p1 = ap_phi_mux_p_2722_phi_fu_334_p6[13:0];

assign trunc_ln408_fu_866_p1 = p_38_rec_reg_384[13:0];

assign trunc_ln417_fu_962_p1 = i_3_reg_407[3:0];

assign trunc_ln419_fu_1025_p1 = sub_ln419_fu_1019_p2[32:0];

assign trunc_ln425_fu_1070_p1 = i_5_reg_429[13:0];

assign trunc_ln428_fu_1140_p1 = sub_ln419_reg_1435[31:0];

assign umax_fu_564_p3 = ((empty_67_fu_558_p2[0:0] === 1'b1) ? xor_ln391_fu_533_p2 : xor_ln391_1_fu_552_p2);

assign xor_ln391_1_fu_552_p2 = (empty_66_fu_548_p1 ^ 64'd18446744073709551615);

assign xor_ln391_2_fu_576_p2 = (umax_fu_564_p3 ^ 64'd18446744073709551615);

assign xor_ln391_fu_533_p2 = (mlen ^ 64'd18446744073709551615);

assign xor_ln396_fu_716_p2 = (s_q0 ^ r_0_i_reg_275);

assign xor_ln427_fu_1175_p2 = (s_q0 ^ r_0_i2_reg_452);

assign zext_ln31_10_fu_1121_p1 = i_0_i1_reg_440;

assign zext_ln31_11_fu_1143_p1 = t_q0;

assign zext_ln31_12_fu_1159_p1 = shl_ln31_4_fu_1151_p3;

assign zext_ln31_8_fu_684_p1 = t_q0;

assign zext_ln31_9_fu_700_p1 = shl_ln_fu_692_p3;

assign zext_ln31_fu_655_p1 = i_0_i_reg_263;

assign zext_ln387_fu_509_p1 = phi_ln387_reg_231;

assign zext_ln389_fu_523_p1 = trunc_ln389_fu_520_p1;

assign zext_ln391_fu_538_p1 = trunc_ln389_fu_520_p1;

assign zext_ln392_fu_638_p1 = i_0_reg_253;

assign zext_ln396_fu_679_p1 = lshr_ln_fu_669_p4;

assign zext_ln399_fu_735_p1 = sub_ln399_fu_729_p2;

assign zext_ln400_1_fu_755_p1 = tmp_s_fu_745_p4;

assign zext_ln400_fu_772_p1 = i_1_reg_319;

assign zext_ln401_1_fu_820_p1 = add_ln401_fu_815_p2;

assign zext_ln401_2_fu_769_p1 = m_offset;

assign zext_ln401_3_fu_804_p1 = add_ln401_1_fu_799_p2;

assign zext_ln401_fu_795_p1 = shl_ln14_fu_787_p3;

assign zext_ln402_fu_831_p1 = ap_phi_mux_p_2722_phi_fu_334_p6;

assign zext_ln410_1_fu_930_p1 = i_2_reg_396;

assign zext_ln410_fu_914_p1 = shl_ln16_fu_906_p3;

assign zext_ln416_1_fu_880_p1 = tmp_2875_fu_870_p4;

assign zext_ln416_fu_947_p1 = i_3_reg_407;

assign zext_ln417_1_fu_995_p1 = add_ln417_1_fu_990_p2;

assign zext_ln417_fu_974_p1 = shl_ln15_fu_966_p3;

assign zext_ln418_1_fu_1007_p1 = and_ln_fu_1000_p3;

assign zext_ln418_fu_1011_p1 = and_ln_fu_1000_p3;

assign zext_ln419_fu_1015_p1 = and_ln_fu_1000_p3;

assign zext_ln424_fu_1053_p1 = i_4_reg_418;

assign zext_ln425_1_fu_1074_p1 = i_5_reg_429;

assign zext_ln425_fu_1066_p1 = i_5_reg_429;

assign zext_ln426_1_fu_1104_p1 = add_ln426_3_fu_1099_p2;

assign zext_ln426_fu_1058_p1 = m_offset;

assign zext_ln427_fu_1135_p1 = lshr_ln9_fu_1126_p4;

always @ (posedge ap_clk) begin
    m_offset_cast2_reg_1206[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    pos_cast1_reg_1211[31:7] <= 25'b0000000000000000000000000;
    zext_ln389_reg_1225[31:3] <= 29'b00000000000000000000000000000;
    m_offset_cast17_reg_1257[13] <= 1'b0;
    zext_ln399_reg_1312[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln400_1_reg_1321[29] <= 1'b0;
    zext_ln401_2_reg_1331[32:13] <= 20'b00000000000000000000;
    zext_ln416_1_reg_1373[29] <= 1'b0;
    zext_ln419_reg_1430[2:0] <= 3'b000;
    zext_ln419_reg_1430[13:8] <= 6'b000000;
    zext_ln425_reg_1469[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //keccak_absorb_2
