// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _polyvecl_pointwise_a_HH_
#define _polyvecl_pointwise_a_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "polyvecl_pointwishbi.h"

namespace ap_rtl {

struct polyvecl_pointwise_a : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > w_coeffs_address0;
    sc_out< sc_logic > w_coeffs_ce0;
    sc_out< sc_logic > w_coeffs_we0;
    sc_out< sc_lv<32> > w_coeffs_d0;
    sc_in< sc_lv<32> > w_coeffs_q0;
    sc_in< sc_lv<3> > w_coeffs_offset;
    sc_out< sc_lv<12> > u_vec_coeffs_address0;
    sc_out< sc_logic > u_vec_coeffs_ce0;
    sc_in< sc_lv<23> > u_vec_coeffs_q0;
    sc_out< sc_lv<10> > v_vec_coeffs_address0;
    sc_out< sc_logic > v_vec_coeffs_ce0;
    sc_in< sc_lv<32> > v_vec_coeffs_q0;


    // Module declarations
    polyvecl_pointwise_a(sc_module_name name);
    SC_HAS_PROCESS(polyvecl_pointwise_a);

    ~polyvecl_pointwise_a();

    sc_trace_file* mVcdFile;

    polyvecl_pointwishbi* t_coeffs_U;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > i_0_i_reg_162;
    sc_signal< sc_lv<9> > i_0_i1_reg_185;
    sc_signal< sc_lv<12> > zext_ln186_2_fu_216_p1;
    sc_signal< sc_lv<12> > zext_ln186_2_reg_531;
    sc_signal< sc_lv<6> > zext_ln186_3_cast_fu_228_p1;
    sc_signal< sc_lv<6> > zext_ln186_3_cast_reg_537;
    sc_signal< sc_lv<1> > icmp_ln184_fu_232_p2;
    sc_signal< sc_lv<1> > icmp_ln184_reg_542;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<9> > i_14_fu_238_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<12> > add_ln186_fu_253_p2;
    sc_signal< sc_lv<12> > add_ln186_reg_551;
    sc_signal< sc_lv<1> > icmp_ln141_fu_339_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<14> > tmp_918_cast_fu_354_p3;
    sc_signal< sc_lv<14> > tmp_918_cast_reg_570;
    sc_signal< sc_lv<12> > zext_ln180_fu_370_p1;
    sc_signal< sc_lv<12> > zext_ln180_reg_575;
    sc_signal< sc_lv<1> > icmp_ln184_1_fu_374_p2;
    sc_signal< sc_lv<1> > icmp_ln184_1_reg_580;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< bool > ap_block_state6_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state7_pp1_stage0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<9> > i_15_fu_380_p2;
    sc_signal< sc_lv<9> > i_15_reg_584;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<9> > i_16_fu_488_p2;
    sc_signal< sc_lv<9> > i_16_reg_602;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<10> > w_coeffs_addr_1_reg_607;
    sc_signal< sc_lv<1> > icmp_ln91_fu_482_p2;
    sc_signal< sc_lv<3> > i_fu_513_p2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state6;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_lv<8> > t_coeffs_address0;
    sc_signal< sc_logic > t_coeffs_ce0;
    sc_signal< sc_logic > t_coeffs_we0;
    sc_signal< sc_lv<32> > t_coeffs_d0;
    sc_signal< sc_lv<32> > t_coeffs_q0;
    sc_signal< sc_lv<3> > i_0_reg_173;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<9> > ap_phi_mux_i_0_i1_phi_fu_189_p4;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<9> > i_0_i20_reg_197;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<64> > zext_ln186_4_fu_267_p1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln186_fu_244_p1;
    sc_signal< sc_lv<64> > zext_ln186_5_fu_272_p1;
    sc_signal< sc_lv<64> > zext_ln186_10_fu_399_p1;
    sc_signal< sc_lv<64> > zext_ln186_11_fu_409_p1;
    sc_signal< sc_lv<64> > zext_ln186_1_fu_414_p1;
    sc_signal< sc_lv<64> > zext_ln92_2_fu_508_p1;
    sc_signal< sc_lv<64> > zext_ln92_fu_494_p1;
    sc_signal< sc_lv<32> > t_2_fu_334_p1;
    sc_signal< sc_lv<32> > add_ln92_fu_519_p2;
    sc_signal< sc_lv<11> > tmp_fu_208_p3;
    sc_signal< sc_lv<5> > tmp_s_fu_220_p3;
    sc_signal< sc_lv<12> > zext_ln186_3_fu_249_p1;
    sc_signal< sc_lv<13> > tmp_512_fu_258_p4;
    sc_signal< sc_lv<23> > mul_ln186_fu_284_p0;
    sc_signal< sc_lv<32> > mul_ln186_fu_284_p1;
    sc_signal< sc_lv<55> > mul_ln186_fu_284_p2;
    sc_signal< sc_lv<32> > trunc_ln18_fu_294_p1;
    sc_signal< sc_lv<32> > t_fu_298_p2;
    sc_signal< sc_lv<32> > mul_ln19_fu_308_p1;
    sc_signal< sc_lv<55> > mul_ln19_fu_308_p2;
    sc_signal< sc_lv<56> > sext_ln186_1_fu_290_p1;
    sc_signal< sc_lv<56> > sext_ln19_1_fu_314_p1;
    sc_signal< sc_lv<56> > add_ln19_fu_318_p2;
    sc_signal< sc_lv<24> > tmp_1_fu_324_p4;
    sc_signal< sc_lv<6> > zext_ln186_7_fu_345_p1;
    sc_signal< sc_lv<6> > add_ln186_1_fu_349_p2;
    sc_signal< sc_lv<11> > tmp_513_fu_362_p3;
    sc_signal< sc_lv<14> > zext_ln186_9_fu_390_p1;
    sc_signal< sc_lv<14> > add_ln186_2_fu_394_p2;
    sc_signal< sc_lv<12> > zext_ln186_8_fu_386_p1;
    sc_signal< sc_lv<12> > add_ln186_3_fu_404_p2;
    sc_signal< sc_lv<23> > mul_ln186_1_fu_427_p0;
    sc_signal< sc_lv<32> > mul_ln186_1_fu_427_p1;
    sc_signal< sc_lv<55> > mul_ln186_1_fu_427_p2;
    sc_signal< sc_lv<32> > trunc_ln18_1_fu_437_p1;
    sc_signal< sc_lv<32> > t_3_fu_441_p2;
    sc_signal< sc_lv<32> > mul_ln19_1_fu_451_p1;
    sc_signal< sc_lv<55> > mul_ln19_1_fu_451_p2;
    sc_signal< sc_lv<56> > sext_ln186_3_fu_433_p1;
    sc_signal< sc_lv<56> > sext_ln19_4_fu_457_p1;
    sc_signal< sc_lv<56> > add_ln19_1_fu_461_p2;
    sc_signal< sc_lv<24> > tmp_2_fu_467_p4;
    sc_signal< sc_lv<12> > zext_ln92_1_fu_499_p1;
    sc_signal< sc_lv<12> > add_ln92_1_fu_503_p2;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< sc_lv<55> > mul_ln186_1_fu_427_p00;
    sc_signal< sc_lv<55> > mul_ln186_fu_284_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_pp0_stage0;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_pp1_stage0;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<8> ap_ST_fsm_state9;
    static const sc_lv<8> ap_ST_fsm_state10;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<9> ap_const_lv9_100;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<32> ap_const_lv32_3802001;
    static const sc_lv<55> ap_const_lv55_7FFFFFFF801FFF;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_37;
    static const sc_lv<3> ap_const_lv3_4;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln186_1_fu_349_p2();
    void thread_add_ln186_2_fu_394_p2();
    void thread_add_ln186_3_fu_404_p2();
    void thread_add_ln186_fu_253_p2();
    void thread_add_ln19_1_fu_461_p2();
    void thread_add_ln19_fu_318_p2();
    void thread_add_ln92_1_fu_503_p2();
    void thread_add_ln92_fu_519_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state6_pp1_stage0_iter0();
    void thread_ap_block_state7_pp1_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_condition_pp1_exit_iter0_state6();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_phi_mux_i_0_i1_phi_fu_189_p4();
    void thread_ap_ready();
    void thread_i_14_fu_238_p2();
    void thread_i_15_fu_380_p2();
    void thread_i_16_fu_488_p2();
    void thread_i_fu_513_p2();
    void thread_icmp_ln141_fu_339_p2();
    void thread_icmp_ln184_1_fu_374_p2();
    void thread_icmp_ln184_fu_232_p2();
    void thread_icmp_ln91_fu_482_p2();
    void thread_mul_ln186_1_fu_427_p0();
    void thread_mul_ln186_1_fu_427_p00();
    void thread_mul_ln186_1_fu_427_p1();
    void thread_mul_ln186_1_fu_427_p2();
    void thread_mul_ln186_fu_284_p0();
    void thread_mul_ln186_fu_284_p00();
    void thread_mul_ln186_fu_284_p1();
    void thread_mul_ln186_fu_284_p2();
    void thread_mul_ln19_1_fu_451_p1();
    void thread_mul_ln19_1_fu_451_p2();
    void thread_mul_ln19_fu_308_p1();
    void thread_mul_ln19_fu_308_p2();
    void thread_sext_ln186_1_fu_290_p1();
    void thread_sext_ln186_3_fu_433_p1();
    void thread_sext_ln19_1_fu_314_p1();
    void thread_sext_ln19_4_fu_457_p1();
    void thread_t_2_fu_334_p1();
    void thread_t_3_fu_441_p2();
    void thread_t_coeffs_address0();
    void thread_t_coeffs_ce0();
    void thread_t_coeffs_d0();
    void thread_t_coeffs_we0();
    void thread_t_fu_298_p2();
    void thread_tmp_1_fu_324_p4();
    void thread_tmp_2_fu_467_p4();
    void thread_tmp_512_fu_258_p4();
    void thread_tmp_513_fu_362_p3();
    void thread_tmp_918_cast_fu_354_p3();
    void thread_tmp_fu_208_p3();
    void thread_tmp_s_fu_220_p3();
    void thread_trunc_ln18_1_fu_437_p1();
    void thread_trunc_ln18_fu_294_p1();
    void thread_u_vec_coeffs_address0();
    void thread_u_vec_coeffs_ce0();
    void thread_v_vec_coeffs_address0();
    void thread_v_vec_coeffs_ce0();
    void thread_w_coeffs_address0();
    void thread_w_coeffs_ce0();
    void thread_w_coeffs_d0();
    void thread_w_coeffs_we0();
    void thread_zext_ln180_fu_370_p1();
    void thread_zext_ln186_10_fu_399_p1();
    void thread_zext_ln186_11_fu_409_p1();
    void thread_zext_ln186_1_fu_414_p1();
    void thread_zext_ln186_2_fu_216_p1();
    void thread_zext_ln186_3_cast_fu_228_p1();
    void thread_zext_ln186_3_fu_249_p1();
    void thread_zext_ln186_4_fu_267_p1();
    void thread_zext_ln186_5_fu_272_p1();
    void thread_zext_ln186_7_fu_345_p1();
    void thread_zext_ln186_8_fu_386_p1();
    void thread_zext_ln186_9_fu_390_p1();
    void thread_zext_ln186_fu_244_p1();
    void thread_zext_ln92_1_fu_499_p1();
    void thread_zext_ln92_2_fu_508_p1();
    void thread_zext_ln92_fu_494_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
