// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pqcrystals_dilithium_29_HH_
#define _pqcrystals_dilithium_29_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "crypto_sign_mac_mjbC.h"
#include "crypto_sign_mac_mkbM.h"

namespace ap_rtl {

struct pqcrystals_dilithium_29 : public sc_module {
    // Port declarations 4
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > a;
    sc_out< sc_lv<32> > ap_return_0;
    sc_out< sc_lv<32> > ap_return_1;


    // Module declarations
    pqcrystals_dilithium_29(sc_module_name name);
    SC_HAS_PROCESS(pqcrystals_dilithium_29);

    ~pqcrystals_dilithium_29();

    sc_trace_file* mVcdFile;

    crypto_sign_mac_mjbC<1,1,15,25,25,32>* crypto_sign_mac_mjbC_U88;
    crypto_sign_mac_mkbM<1,1,19,8,32,32>* crypto_sign_mac_mkbM_U89;
    sc_signal< sc_lv<32> > add_ln42_fu_50_p2;
    sc_signal< sc_lv<25> > trunc_ln_fu_56_p4;
    sc_signal< sc_lv<32> > grp_fu_163_p3;
    sc_signal< sc_lv<8> > trunc_ln5_fu_70_p4;
    sc_signal< sc_lv<9> > sext_ln47_fu_79_p1;
    sc_signal< sc_lv<9> > sub_ln48_fu_83_p2;
    sc_signal< sc_lv<1> > tmp_fu_89_p3;
    sc_signal< sc_lv<1> > xor_ln48_fu_97_p2;
    sc_signal< sc_lv<8> > select_ln48_fu_103_p3;
    sc_signal< sc_lv<8> > a1_1_fu_111_p2;
    sc_signal< sc_lv<32> > grp_fu_172_p3;
    sc_signal< sc_lv<32> > sub_ln52_fu_125_p2;
    sc_signal< sc_lv<1> > tmp_637_fu_130_p3;
    sc_signal< sc_lv<32> > select_ln52_fu_138_p3;
    sc_signal< sc_lv<32> > sext_ln48_1_fu_121_p1;
    sc_signal< sc_lv<32> > sub_ln52_1_fu_146_p2;
    sc_signal< sc_lv<15> > grp_fu_163_p0;
    sc_signal< sc_lv<25> > grp_fu_163_p2;
    sc_signal< sc_lv<19> > grp_fu_172_p0;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_7F;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<9> ap_const_lv9_2B;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_3FF000;
    static const sc_lv<32> ap_const_lv32_7FE001;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2C0B;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<27> ap_const_lv27_7FD1800;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_a1_1_fu_111_p2();
    void thread_add_ln42_fu_50_p2();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_grp_fu_163_p0();
    void thread_grp_fu_163_p2();
    void thread_grp_fu_172_p0();
    void thread_select_ln48_fu_103_p3();
    void thread_select_ln52_fu_138_p3();
    void thread_sext_ln47_fu_79_p1();
    void thread_sext_ln48_1_fu_121_p1();
    void thread_sub_ln48_fu_83_p2();
    void thread_sub_ln52_1_fu_146_p2();
    void thread_sub_ln52_fu_125_p2();
    void thread_tmp_637_fu_130_p3();
    void thread_tmp_fu_89_p3();
    void thread_trunc_ln5_fu_70_p4();
    void thread_trunc_ln_fu_56_p4();
    void thread_xor_ln48_fu_97_p2();
};

}

using namespace ap_rtl;

#endif
