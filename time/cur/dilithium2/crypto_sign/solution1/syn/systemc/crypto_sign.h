// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _crypto_sign_HH_
#define _crypto_sign_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "pqcrystals_dilithium_1.h"

namespace ap_rtl {

struct crypto_sign : public sc_module {
    // Port declarations 29
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<13> > sm_address0;
    sc_out< sc_logic > sm_ce0;
    sc_out< sc_logic > sm_we0;
    sc_out< sc_lv<8> > sm_d0;
    sc_in< sc_lv<8> > sm_q0;
    sc_out< sc_lv<13> > sm_address1;
    sc_out< sc_logic > sm_ce1;
    sc_out< sc_logic > sm_we1;
    sc_out< sc_lv<8> > sm_d1;
    sc_in< sc_lv<8> > sm_q1;
    sc_out< sc_lv<64> > smlen;
    sc_out< sc_logic > smlen_ap_vld;
    sc_out< sc_lv<12> > m_address0;
    sc_out< sc_logic > m_ce0;
    sc_in< sc_lv<8> > m_q0;
    sc_in< sc_lv<64> > mlen;
    sc_out< sc_lv<12> > sk_address0;
    sc_out< sc_logic > sk_ce0;
    sc_in< sc_lv<8> > sk_q0;
    sc_out< sc_lv<12> > sk_address1;
    sc_out< sc_logic > sk_ce1;
    sc_in< sc_lv<8> > sk_q1;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    crypto_sign(sc_module_name name);
    SC_HAS_PROCESS(crypto_sign);

    ~crypto_sign();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    pqcrystals_dilithium_1* grp_pqcrystals_dilithium_1_fu_101;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<64> > i_0_reg_90;
    sc_signal< sc_lv<13> > add_ln207_fu_116_p2;
    sc_signal< sc_lv<13> > add_ln207_reg_183;
    sc_signal< sc_lv<14> > add_ln207_1_fu_126_p2;
    sc_signal< sc_lv<14> > add_ln207_1_reg_188;
    sc_signal< sc_lv<1> > icmp_ln205_fu_132_p2;
    sc_signal< sc_lv<1> > icmp_ln205_reg_193;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<64> > i_fu_137_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<14> > sub_ln207_1_fu_161_p2;
    sc_signal< sc_lv<14> > sub_ln207_1_reg_207;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_1_fu_101_ap_start;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_1_fu_101_ap_done;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_1_fu_101_ap_idle;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_1_fu_101_ap_ready;
    sc_signal< sc_lv<13> > grp_pqcrystals_dilithium_1_fu_101_sig_address0;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_1_fu_101_sig_ce0;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_1_fu_101_sig_we0;
    sc_signal< sc_lv<8> > grp_pqcrystals_dilithium_1_fu_101_sig_d0;
    sc_signal< sc_lv<13> > grp_pqcrystals_dilithium_1_fu_101_sig_address1;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_1_fu_101_sig_ce1;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_1_fu_101_sig_we1;
    sc_signal< sc_lv<8> > grp_pqcrystals_dilithium_1_fu_101_sig_d1;
    sc_signal< sc_lv<12> > grp_pqcrystals_dilithium_1_fu_101_sk_address0;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_1_fu_101_sk_ce0;
    sc_signal< sc_lv<12> > grp_pqcrystals_dilithium_1_fu_101_sk_address1;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_1_fu_101_sk_ce1;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_1_fu_101_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > zext_ln207_fu_156_p1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln207_1_fu_166_p1;
    sc_signal< sc_lv<13> > trunc_ln207_fu_112_p1;
    sc_signal< sc_lv<14> > trunc_ln207_1_fu_122_p1;
    sc_signal< sc_lv<13> > trunc_ln205_1_fu_147_p1;
    sc_signal< sc_lv<13> > sub_ln207_fu_151_p2;
    sc_signal< sc_lv<14> > trunc_ln205_fu_143_p1;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<4> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<13> ap_const_lv13_1FFF;
    static const sc_lv<14> ap_const_lv14_973;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_974;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln207_1_fu_126_p2();
    void thread_add_ln207_fu_116_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_pqcrystals_dilithium_1_fu_101_ap_start();
    void thread_i_fu_137_p2();
    void thread_icmp_ln205_fu_132_p2();
    void thread_m_address0();
    void thread_m_ce0();
    void thread_sk_address0();
    void thread_sk_address1();
    void thread_sk_ce0();
    void thread_sk_ce1();
    void thread_sm_address0();
    void thread_sm_address1();
    void thread_sm_ce0();
    void thread_sm_ce1();
    void thread_sm_d0();
    void thread_sm_d1();
    void thread_sm_we0();
    void thread_sm_we1();
    void thread_smlen();
    void thread_smlen_ap_vld();
    void thread_sub_ln207_1_fu_161_p2();
    void thread_sub_ln207_fu_151_p2();
    void thread_trunc_ln205_1_fu_147_p1();
    void thread_trunc_ln205_fu_143_p1();
    void thread_trunc_ln207_1_fu_122_p1();
    void thread_trunc_ln207_fu_112_p1();
    void thread_zext_ln207_1_fu_166_p1();
    void thread_zext_ln207_fu_156_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
