// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "keccak_absorb.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic keccak_absorb::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic keccak_absorb::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<25> keccak_absorb::ap_ST_fsm_state1 = "1";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state2 = "10";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state3 = "100";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state4 = "1000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state5 = "10000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state6 = "100000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state7 = "1000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state8 = "10000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state9 = "100000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state10 = "1000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state11 = "10000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state12 = "100000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state25 = "1000000000000000000000000";
const bool keccak_absorb::ap_const_boolean_1 = true;
const sc_lv<32> keccak_absorb::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> keccak_absorb::ap_const_lv32_3 = "11";
const sc_lv<32> keccak_absorb::ap_const_lv32_15 = "10101";
const sc_lv<32> keccak_absorb::ap_const_lv32_4 = "100";
const sc_lv<32> keccak_absorb::ap_const_lv32_16 = "10110";
const sc_lv<32> keccak_absorb::ap_const_lv32_5 = "101";
const sc_lv<32> keccak_absorb::ap_const_lv32_17 = "10111";
const sc_lv<32> keccak_absorb::ap_const_lv32_1 = "1";
const sc_lv<1> keccak_absorb::ap_const_lv1_1 = "1";
const sc_lv<1> keccak_absorb::ap_const_lv1_0 = "0";
const sc_lv<32> keccak_absorb::ap_const_lv32_2 = "10";
const sc_lv<32> keccak_absorb::ap_const_lv32_7 = "111";
const sc_lv<32> keccak_absorb::ap_const_lv32_8 = "1000";
const bool keccak_absorb::ap_const_boolean_0 = false;
const sc_lv<32> keccak_absorb::ap_const_lv32_9 = "1001";
const sc_lv<32> keccak_absorb::ap_const_lv32_A = "1010";
const sc_lv<32> keccak_absorb::ap_const_lv32_D = "1101";
const sc_lv<32> keccak_absorb::ap_const_lv32_F = "1111";
const sc_lv<32> keccak_absorb::ap_const_lv32_10 = "10000";
const sc_lv<32> keccak_absorb::ap_const_lv32_11 = "10001";
const sc_lv<32> keccak_absorb::ap_const_lv32_12 = "10010";
const sc_lv<32> keccak_absorb::ap_const_lv32_13 = "10011";
const sc_lv<32> keccak_absorb::ap_const_lv32_14 = "10100";
const sc_lv<3> keccak_absorb::ap_const_lv3_0 = "000";
const sc_lv<64> keccak_absorb::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> keccak_absorb::ap_const_lv32_6 = "110";
const sc_lv<2> keccak_absorb::ap_const_lv2_2 = "10";
const sc_lv<6> keccak_absorb::ap_const_lv6_0 = "000000";
const sc_lv<32> keccak_absorb::ap_const_lv32_C = "1100";
const sc_lv<32> keccak_absorb::ap_const_lv32_B = "1011";
const sc_lv<5> keccak_absorb::ap_const_lv5_0 = "00000";
const sc_lv<32> keccak_absorb::ap_const_lv32_E = "1110";
const sc_lv<32> keccak_absorb::ap_const_lv32_18 = "11000";
const sc_lv<64> keccak_absorb::ap_const_lv64_1 = "1";
const sc_lv<64> keccak_absorb::ap_const_lv64_2 = "10";
const sc_lv<64> keccak_absorb::ap_const_lv64_3 = "11";
const sc_lv<64> keccak_absorb::ap_const_lv64_4 = "100";
const sc_lv<64> keccak_absorb::ap_const_lv64_5 = "101";
const sc_lv<64> keccak_absorb::ap_const_lv64_6 = "110";
const sc_lv<64> keccak_absorb::ap_const_lv64_7 = "111";
const sc_lv<8> keccak_absorb::ap_const_lv8_0 = "00000000";
const sc_lv<3> keccak_absorb::ap_const_lv3_1 = "1";
const sc_lv<3> keccak_absorb::ap_const_lv3_7 = "111";
const sc_lv<4> keccak_absorb::ap_const_lv4_8 = "1000";
const sc_lv<4> keccak_absorb::ap_const_lv4_2 = "10";
const sc_lv<3> keccak_absorb::ap_const_lv3_5 = "101";
const sc_lv<2> keccak_absorb::ap_const_lv2_3 = "11";
const sc_lv<5> keccak_absorb::ap_const_lv5_1 = "1";

keccak_absorb::keccak_absorb(sc_module_name name) : sc_module(name), mVcdFile(0) {
    t_U = new keccak_absorb_2_t("t_U");
    t_U->clk(ap_clk);
    t_U->reset(ap_rst);
    t_U->address0(t_address0);
    t_U->ce0(t_ce0);
    t_U->we0(t_we0);
    t_U->d0(t_d0);
    t_U->q0(t_q0);
    t_U->address1(t_address1);
    t_U->ce1(t_ce1);
    t_U->we1(t_we1);
    t_U->d1(t_d1);
    t_U->q1(t_q1);
    grp_KeccakF1600_StatePer_1_fu_504 = new KeccakF1600_StatePer_1("grp_KeccakF1600_StatePer_1_fu_504");
    grp_KeccakF1600_StatePer_1_fu_504->ap_clk(ap_clk);
    grp_KeccakF1600_StatePer_1_fu_504->ap_rst(ap_rst);
    grp_KeccakF1600_StatePer_1_fu_504->ap_start(grp_KeccakF1600_StatePer_1_fu_504_ap_start);
    grp_KeccakF1600_StatePer_1_fu_504->ap_done(grp_KeccakF1600_StatePer_1_fu_504_ap_done);
    grp_KeccakF1600_StatePer_1_fu_504->ap_idle(grp_KeccakF1600_StatePer_1_fu_504_ap_idle);
    grp_KeccakF1600_StatePer_1_fu_504->ap_ready(grp_KeccakF1600_StatePer_1_fu_504_ap_ready);
    grp_KeccakF1600_StatePer_1_fu_504->state_address0(grp_KeccakF1600_StatePer_1_fu_504_state_address0);
    grp_KeccakF1600_StatePer_1_fu_504->state_ce0(grp_KeccakF1600_StatePer_1_fu_504_state_ce0);
    grp_KeccakF1600_StatePer_1_fu_504->state_we0(grp_KeccakF1600_StatePer_1_fu_504_state_we0);
    grp_KeccakF1600_StatePer_1_fu_504->state_d0(grp_KeccakF1600_StatePer_1_fu_504_state_d0);
    grp_KeccakF1600_StatePer_1_fu_504->state_q0(s_q0);
    grp_KeccakF1600_StatePer_1_fu_504->state_address1(grp_KeccakF1600_StatePer_1_fu_504_state_address1);
    grp_KeccakF1600_StatePer_1_fu_504->state_ce1(grp_KeccakF1600_StatePer_1_fu_504_state_ce1);
    grp_KeccakF1600_StatePer_1_fu_504->state_we1(grp_KeccakF1600_StatePer_1_fu_504_state_we1);
    grp_KeccakF1600_StatePer_1_fu_504->state_d1(grp_KeccakF1600_StatePer_1_fu_504_state_d1);
    grp_KeccakF1600_StatePer_1_fu_504->state_q1(s_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln391_fu_544_p2);
    sensitive << ( phi_ln391_reg_336 );

    SC_METHOD(thread_add_ln394_fu_678_p2);
    sensitive << ( zext_ln393_1_reg_1148 );
    sensitive << ( p_cast6_reg_1166 );

    SC_METHOD(thread_add_ln396_fu_654_p2);
    sensitive << ( p_05_rec_reg_347 );

    SC_METHOD(thread_add_ln397_fu_634_p2);
    sensitive << ( trunc_ln397_fu_630_p1 );

    SC_METHOD(thread_add_ln398_fu_640_p2);
    sensitive << ( empty_reg_1124 );
    sensitive << ( sext_ln397_fu_626_p1 );

    SC_METHOD(thread_add_ln418_fu_890_p2);
    sensitive << ( empty_68_reg_1285 );
    sensitive << ( p_38_rec_reg_450 );

    SC_METHOD(thread_add_ln423_fu_924_p2);
    sensitive << ( i_3_reg_473 );

    SC_METHOD(thread_add_ln425_1_fu_934_p2);
    sensitive << ( zext_ln423_2_reg_1324 );
    sensitive << ( zext_ln423_fu_930_p1 );

    SC_METHOD(thread_add_ln429_fu_988_p2);
    sensitive << ( zext_ln408_reg_1275 );
    sensitive << ( zext_ln427_2_fu_970_p1 );

    SC_METHOD(thread_add_ln441_fu_1088_p2);
    sensitive << ( zext_ln429_reg_1407 );
    sensitive << ( trunc_ln441_reg_1470 );

    SC_METHOD(thread_and_ln_fu_963_p3);
    sensitive << ( tmp_6740_reg_1329 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state9_on_subcall_done);
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_504_ap_done );
    sensitive << ( ap_predicate_op126_call_state9 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_p_23_phi_fu_417_p6);
    sensitive << ( icmp_ln403_reg_1257 );
    sensitive << ( icmp_ln403_1_reg_1261 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( p_23_reg_414 );

    SC_METHOD(thread_ap_phi_mux_p_2_phi_fu_432_p6);
    sensitive << ( icmp_ln403_reg_1257 );
    sensitive << ( icmp_ln403_1_reg_1261 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( sub_ln409_fu_772_p2 );
    sensitive << ( p_2_reg_429 );

    SC_METHOD(thread_ap_phi_mux_p_34_phi_fu_498_p4);
    sensitive << ( icmp_ln431_reg_1413 );
    sensitive << ( add_ln441_fu_1088_p2 );
    sensitive << ( p_34_reg_495 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_ap_phi_mux_phi_ln408_1_phi_fu_404_p6);
    sensitive << ( icmp_ln403_reg_1257 );
    sensitive << ( icmp_ln403_1_reg_1261 );
    sensitive << ( trunc_ln412_reg_1270 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( phi_ln408_1_reg_400 );

    SC_METHOD(thread_ap_predicate_op126_call_state9);
    sensitive << ( icmp_ln403_reg_1257 );
    sensitive << ( icmp_ln403_1_reg_1261 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_phi_mux_p_34_phi_fu_498_p4 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_empty_62_fu_540_p1);
    sensitive << ( r );

    SC_METHOD(thread_empty_65_fu_588_p1);
    sensitive << ( sub_ln395_fu_582_p2 );

    SC_METHOD(thread_empty_66_fu_598_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln391_fu_555_p2 );
    sensitive << ( icmp_ln393_fu_572_p2 );
    sensitive << ( sub_ln395_fu_582_p2 );

    SC_METHOD(thread_empty_67_fu_645_p1);
    sensitive << ( p_05_rec_reg_347 );

    SC_METHOD(thread_empty_68_fu_785_p1);
    sensitive << ( r );

    SC_METHOD(thread_empty_fu_536_p1);
    sensitive << ( pos_r );

    SC_METHOD(thread_exitcond_fu_649_p2);
    sensitive << ( sext_ln395_reg_1161 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_05_rec_reg_347 );

    SC_METHOD(thread_grp_KeccakF1600_StatePer_1_fu_504_ap_start);
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_504_ap_start_reg );

    SC_METHOD(thread_i_8_fu_879_p2);
    sensitive << ( i_2_reg_462 );

    SC_METHOD(thread_i_9_fu_1012_p2);
    sensitive << ( i_5_reg_484 );

    SC_METHOD(thread_i_fu_667_p2);
    sensitive << ( i_0_reg_358 );

    SC_METHOD(thread_icmp_ln391_fu_555_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( phi_ln391_reg_336 );

    SC_METHOD(thread_icmp_ln393_fu_572_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln391_fu_555_p2 );
    sensitive << ( trunc_ln393_fu_561_p1 );

    SC_METHOD(thread_icmp_ln403_1_fu_758_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln403_fu_747_p2 );
    sensitive << ( zext_ln403_2_fu_743_p1 );
    sensitive << ( sub_ln403_fu_753_p2 );

    SC_METHOD(thread_icmp_ln403_fu_747_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( p_12_reg_379 );

    SC_METHOD(thread_icmp_ln414_fu_803_p2);
    sensitive << ( empty_68_reg_1285 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( indvars_iv_reg_440 );

    SC_METHOD(thread_icmp_ln415_fu_874_p2);
    sensitive << ( tmp_s_reg_1292 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( i_2_reg_462 );

    SC_METHOD(thread_icmp_ln423_fu_919_p2);
    sensitive << ( tmp_6740_reg_1329 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( i_3_reg_473 );

    SC_METHOD(thread_icmp_ln431_fu_997_p2);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( indvars_iv_reg_440 );
    sensitive << ( zext_ln427_fu_974_p1 );

    SC_METHOD(thread_icmp_ln436_fu_1007_p2);
    sensitive << ( trunc_ln428_reg_1397 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( zext_ln436_2_fu_1003_p1 );

    SC_METHOD(thread_p_cast6_fu_622_p1);
    sensitive << ( xor_ln395_2_fu_612_p2 );

    SC_METHOD(thread_r_7_i5_fu_1061_p9);
    sensitive << ( t_q0 );
    sensitive << ( reg_510 );
    sensitive << ( t_q1 );
    sensitive << ( reg_515 );
    sensitive << ( reg_520 );
    sensitive << ( reg_524 );
    sensitive << ( reg_528 );
    sensitive << ( reg_532 );

    SC_METHOD(thread_r_7_i6_fu_900_p9);
    sensitive << ( select_ln32_2_reg_1308 );
    sensitive << ( select_ln32_3_reg_1316 );

    SC_METHOD(thread_r_7_i7_fu_944_p9);
    sensitive << ( select_ln32_reg_1340 );
    sensitive << ( select_ln32_1_reg_1348 );

    SC_METHOD(thread_r_7_i_fu_708_p9);
    sensitive << ( t_q0 );
    sensitive << ( reg_510 );
    sensitive << ( t_q1 );
    sensitive << ( reg_515 );
    sensitive << ( reg_520 );
    sensitive << ( reg_524 );
    sensitive << ( reg_528 );
    sensitive << ( reg_532 );

    SC_METHOD(thread_s_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( s_addr_reg_1245 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_predicate_op126_call_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( s_addr_6_reg_1364 );
    sensitive << ( icmp_ln415_fu_874_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( s_addr_5_reg_1387 );
    sensitive << ( s_addr_7_reg_1465 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_504_state_address0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( zext_ln400_fu_704_p1 );
    sensitive << ( zext_ln416_1_fu_885_p1 );
    sensitive << ( zext_ln425_1_fu_939_p1 );

    SC_METHOD(thread_s_address1);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_predicate_op126_call_state9 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_504_state_address1 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_s_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_predicate_op126_call_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln415_fu_874_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_504_state_ce0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_s_ce1);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_predicate_op126_call_state9 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_504_state_ce1 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_s_d0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_predicate_op126_call_state9 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_504_state_d0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( xor_ln400_fu_728_p2 );
    sensitive << ( xor_ln416_fu_912_p2 );
    sensitive << ( xor_ln425_fu_956_p2 );
    sensitive << ( xor_ln440_fu_1081_p2 );

    SC_METHOD(thread_s_d1);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_predicate_op126_call_state9 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_504_state_d1 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_s_we0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_predicate_op126_call_state9 );
    sensitive << ( icmp_ln431_reg_1413 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_504_state_we0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_s_we1);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_predicate_op126_call_state9 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_504_state_we1 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_select_ln32_1_fu_868_p3);
    sensitive << ( m_0_read );
    sensitive << ( m_1_read );
    sensitive << ( xor_ln32_fu_857_p2 );

    SC_METHOD(thread_select_ln32_2_fu_817_p3);
    sensitive << ( m_0_read );
    sensitive << ( m_1_read );
    sensitive << ( xor_ln32_1_fu_812_p2 );

    SC_METHOD(thread_select_ln32_3_fu_823_p3);
    sensitive << ( m_0_read );
    sensitive << ( m_1_read );
    sensitive << ( xor_ln32_1_fu_812_p2 );

    SC_METHOD(thread_select_ln32_fu_862_p3);
    sensitive << ( m_0_read );
    sensitive << ( m_1_read );
    sensitive << ( xor_ln32_fu_857_p2 );

    SC_METHOD(thread_select_ln396_fu_660_p3);
    sensitive << ( m_0_read );
    sensitive << ( m_1_read );
    sensitive << ( empty_67_fu_645_p1 );

    SC_METHOD(thread_select_ln438_fu_1037_p3);
    sensitive << ( m_0_read );
    sensitive << ( m_1_read );
    sensitive << ( xor_ln438_1_fu_1032_p2 );

    SC_METHOD(thread_sext_ln395_fu_618_p1);
    sensitive << ( xor_ln395_2_fu_612_p2 );

    SC_METHOD(thread_sext_ln397_fu_626_p1);
    sensitive << ( xor_ln395_2_fu_612_p2 );

    SC_METHOD(thread_sext_ln400_fu_682_p1);
    sensitive << ( add_ln394_fu_678_p2 );

    SC_METHOD(thread_sext_ln408_fu_781_p1);
    sensitive << ( ap_phi_mux_p_2_phi_fu_432_p6 );

    SC_METHOD(thread_sub_ln395_fu_582_p2);
    sensitive << ( zext_ln395_fu_578_p1 );

    SC_METHOD(thread_sub_ln400_fu_686_p2);
    sensitive << ( add_ln398_reg_1176 );
    sensitive << ( sext_ln400_fu_682_p1 );

    SC_METHOD(thread_sub_ln403_fu_753_p2);
    sensitive << ( empty_62_reg_1130 );
    sensitive << ( zext_ln403_1_fu_735_p1 );

    SC_METHOD(thread_sub_ln409_fu_772_p2);
    sensitive << ( zext_ln403_reg_1250 );
    sensitive << ( trunc_ln409_reg_1265 );

    SC_METHOD(thread_sub_ln421_fu_895_p2);
    sensitive << ( empty_68_reg_1285 );
    sensitive << ( indvars_iv_reg_440 );

    SC_METHOD(thread_sub_ln428_fu_978_p2);
    sensitive << ( indvars_iv_reg_440 );
    sensitive << ( zext_ln427_fu_974_p1 );

    SC_METHOD(thread_t_addr_28_reg_1417);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln431_fu_997_p2 );

    SC_METHOD(thread_t_addr_29_reg_1422);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln431_fu_997_p2 );

    SC_METHOD(thread_t_addr_30_gep_fu_274_p3);
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_t_addr_30_reg_1427);
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_t_addr_31_gep_fu_282_p3);
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_t_addr_31_reg_1432);
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_t_addr_32_gep_fu_290_p3);
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_t_addr_32_reg_1437);
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_t_addr_33_gep_fu_298_p3);
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_t_addr_33_reg_1442);
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_t_addr_34_gep_fu_306_p3);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_t_addr_34_reg_1447);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_t_addr_35_gep_fu_314_p3);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_t_addr_35_reg_1452);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_t_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_649_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( t_addr_29_reg_1422 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( t_addr_31_gep_fu_282_p3 );
    sensitive << ( t_addr_31_reg_1432 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( t_addr_33_gep_fu_298_p3 );
    sensitive << ( t_addr_33_reg_1442 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( t_addr_35_gep_fu_314_p3 );
    sensitive << ( t_addr_35_reg_1452 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( zext_ln391_fu_550_p1 );
    sensitive << ( zext_ln396_fu_673_p1 );

    SC_METHOD(thread_t_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( t_addr_28_reg_1417 );
    sensitive << ( t_addr_30_gep_fu_274_p3 );
    sensitive << ( t_addr_30_reg_1427 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( t_addr_32_gep_fu_290_p3 );
    sensitive << ( t_addr_32_reg_1437 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( t_addr_34_gep_fu_306_p3 );
    sensitive << ( t_addr_34_reg_1447 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( zext_ln436_fu_1018_p1 );

    SC_METHOD(thread_t_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_649_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_t_ce1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_t_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_649_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( select_ln396_fu_660_p3 );

    SC_METHOD(thread_t_d1);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( select_ln438_fu_1037_p3 );

    SC_METHOD(thread_t_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_649_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln431_fu_997_p2 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_t_we1);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln431_fu_997_p2 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( icmp_ln436_fu_1007_p2 );

    SC_METHOD(thread_tmp_939_fu_829_p4);
    sensitive << ( p_23_reg_414 );

    SC_METHOD(thread_tmp_940_fu_1044_p4);
    sensitive << ( add_ln429_reg_1402 );

    SC_METHOD(thread_trunc_ln393_fu_561_p1);
    sensitive << ( pos_r );

    SC_METHOD(thread_trunc_ln397_fu_630_p1);
    sensitive << ( umax_fu_604_p3 );

    SC_METHOD(thread_trunc_ln401_fu_701_p1);
    sensitive << ( xor_ln395_2_reg_1156 );

    SC_METHOD(thread_trunc_ln409_fu_764_p1);
    sensitive << ( sub_ln403_fu_753_p2 );

    SC_METHOD(thread_trunc_ln412_fu_768_p1);
    sensitive << ( sub_ln403_fu_753_p2 );

    SC_METHOD(thread_trunc_ln416_fu_808_p1);
    sensitive << ( p_38_rec_reg_450 );

    SC_METHOD(thread_trunc_ln425_fu_853_p1);
    sensitive << ( p_38_rec_reg_450 );

    SC_METHOD(thread_trunc_ln428_fu_984_p1);
    sensitive << ( sub_ln428_fu_978_p2 );

    SC_METHOD(thread_trunc_ln438_fu_1023_p1);
    sensitive << ( i_5_reg_484 );

    SC_METHOD(thread_trunc_ln441_fu_1058_p1);
    sensitive << ( sub_ln428_reg_1392 );

    SC_METHOD(thread_umax_fu_604_p3);
    sensitive << ( empty_66_fu_598_p2 );
    sensitive << ( xor_ln395_1_fu_592_p2 );

    SC_METHOD(thread_xor_ln32_1_fu_812_p2);
    sensitive << ( xor_ln416_1_reg_1297 );
    sensitive << ( trunc_ln416_fu_808_p1 );

    SC_METHOD(thread_xor_ln32_fu_857_p2);
    sensitive << ( xor_ln416_1_reg_1297 );
    sensitive << ( trunc_ln425_fu_853_p1 );

    SC_METHOD(thread_xor_ln395_1_fu_592_p2);
    sensitive << ( empty_65_fu_588_p1 );

    SC_METHOD(thread_xor_ln395_2_fu_612_p2);
    sensitive << ( umax_fu_604_p3 );

    SC_METHOD(thread_xor_ln400_fu_728_p2);
    sensitive << ( s_q0 );
    sensitive << ( r_7_i_fu_708_p9 );

    SC_METHOD(thread_xor_ln416_1_fu_797_p2);
    sensitive << ( phi_ln408_reg_367 );
    sensitive << ( ap_phi_mux_phi_ln408_1_phi_fu_404_p6 );

    SC_METHOD(thread_xor_ln416_fu_912_p2);
    sensitive << ( s_q0 );
    sensitive << ( r_7_i6_fu_900_p9 );

    SC_METHOD(thread_xor_ln425_fu_956_p2);
    sensitive << ( s_q0 );
    sensitive << ( r_7_i7_fu_944_p9 );

    SC_METHOD(thread_xor_ln438_1_fu_1032_p2);
    sensitive << ( xor_ln416_1_reg_1297 );
    sensitive << ( xor_ln438_fu_1027_p2 );

    SC_METHOD(thread_xor_ln438_fu_1027_p2);
    sensitive << ( trunc_ln425_reg_1335 );
    sensitive << ( trunc_ln438_fu_1023_p1 );

    SC_METHOD(thread_xor_ln440_fu_1081_p2);
    sensitive << ( s_q0 );
    sensitive << ( r_7_i5_fu_1061_p9 );

    SC_METHOD(thread_zext_ln391_fu_550_p1);
    sensitive << ( phi_ln391_reg_336 );

    SC_METHOD(thread_zext_ln393_1_fu_568_p1);
    sensitive << ( trunc_ln393_fu_561_p1 );

    SC_METHOD(thread_zext_ln393_fu_564_p1);
    sensitive << ( trunc_ln393_fu_561_p1 );

    SC_METHOD(thread_zext_ln395_fu_578_p1);
    sensitive << ( trunc_ln393_fu_561_p1 );

    SC_METHOD(thread_zext_ln396_fu_673_p1);
    sensitive << ( i_0_reg_358 );

    SC_METHOD(thread_zext_ln400_fu_704_p1);
    sensitive << ( tmp_reg_1205 );

    SC_METHOD(thread_zext_ln403_1_fu_735_p1);
    sensitive << ( p_12_reg_379 );

    SC_METHOD(thread_zext_ln403_2_fu_743_p1);
    sensitive << ( p_1_reg_389 );

    SC_METHOD(thread_zext_ln403_fu_739_p1);
    sensitive << ( p_1_reg_389 );

    SC_METHOD(thread_zext_ln408_fu_777_p1);
    sensitive << ( ap_phi_mux_p_23_phi_fu_417_p6 );

    SC_METHOD(thread_zext_ln416_1_fu_885_p1);
    sensitive << ( i_2_reg_462 );

    SC_METHOD(thread_zext_ln423_2_fu_839_p1);
    sensitive << ( tmp_939_fu_829_p4 );

    SC_METHOD(thread_zext_ln423_fu_930_p1);
    sensitive << ( i_3_reg_473 );

    SC_METHOD(thread_zext_ln425_1_fu_939_p1);
    sensitive << ( add_ln425_1_fu_934_p2 );

    SC_METHOD(thread_zext_ln427_2_fu_970_p1);
    sensitive << ( and_ln_fu_963_p3 );

    SC_METHOD(thread_zext_ln427_fu_974_p1);
    sensitive << ( and_ln_fu_963_p3 );

    SC_METHOD(thread_zext_ln429_fu_993_p1);
    sensitive << ( add_ln429_fu_988_p2 );

    SC_METHOD(thread_zext_ln436_2_fu_1003_p1);
    sensitive << ( i_5_reg_484 );

    SC_METHOD(thread_zext_ln436_fu_1018_p1);
    sensitive << ( i_5_reg_484 );

    SC_METHOD(thread_zext_ln440_fu_1053_p1);
    sensitive << ( tmp_940_fu_1044_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln391_fu_555_p2 );
    sensitive << ( icmp_ln393_fu_572_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_649_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_504_ap_done );
    sensitive << ( ap_block_state9_on_subcall_done );
    sensitive << ( icmp_ln414_fu_803_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln415_fu_874_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( icmp_ln423_fu_919_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln431_fu_997_p2 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( icmp_ln436_fu_1007_p2 );

    ap_CS_fsm = "0000000000000000000000001";
    grp_KeccakF1600_StatePer_1_fu_504_ap_start_reg = SC_LOGIC_0;
    ap_return_preg = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "keccak_absorb_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, s_address0, "(port)s_address0");
    sc_trace(mVcdFile, s_ce0, "(port)s_ce0");
    sc_trace(mVcdFile, s_we0, "(port)s_we0");
    sc_trace(mVcdFile, s_d0, "(port)s_d0");
    sc_trace(mVcdFile, s_q0, "(port)s_q0");
    sc_trace(mVcdFile, s_address1, "(port)s_address1");
    sc_trace(mVcdFile, s_ce1, "(port)s_ce1");
    sc_trace(mVcdFile, s_we1, "(port)s_we1");
    sc_trace(mVcdFile, s_d1, "(port)s_d1");
    sc_trace(mVcdFile, s_q1, "(port)s_q1");
    sc_trace(mVcdFile, r, "(port)r");
    sc_trace(mVcdFile, pos_r, "(port)pos_r");
    sc_trace(mVcdFile, m_0_read, "(port)m_0_read");
    sc_trace(mVcdFile, m_1_read, "(port)m_1_read");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, t_q0, "t_q0");
    sc_trace(mVcdFile, reg_510, "reg_510");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, t_q1, "t_q1");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, reg_515, "reg_515");
    sc_trace(mVcdFile, reg_520, "reg_520");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, reg_524, "reg_524");
    sc_trace(mVcdFile, reg_528, "reg_528");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, reg_532, "reg_532");
    sc_trace(mVcdFile, empty_fu_536_p1, "empty_fu_536_p1");
    sc_trace(mVcdFile, empty_reg_1124, "empty_reg_1124");
    sc_trace(mVcdFile, empty_62_fu_540_p1, "empty_62_fu_540_p1");
    sc_trace(mVcdFile, empty_62_reg_1130, "empty_62_reg_1130");
    sc_trace(mVcdFile, add_ln391_fu_544_p2, "add_ln391_fu_544_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln393_fu_564_p1, "zext_ln393_fu_564_p1");
    sc_trace(mVcdFile, icmp_ln391_fu_555_p2, "icmp_ln391_fu_555_p2");
    sc_trace(mVcdFile, zext_ln393_1_fu_568_p1, "zext_ln393_1_fu_568_p1");
    sc_trace(mVcdFile, zext_ln393_1_reg_1148, "zext_ln393_1_reg_1148");
    sc_trace(mVcdFile, xor_ln395_2_fu_612_p2, "xor_ln395_2_fu_612_p2");
    sc_trace(mVcdFile, xor_ln395_2_reg_1156, "xor_ln395_2_reg_1156");
    sc_trace(mVcdFile, icmp_ln393_fu_572_p2, "icmp_ln393_fu_572_p2");
    sc_trace(mVcdFile, sext_ln395_fu_618_p1, "sext_ln395_fu_618_p1");
    sc_trace(mVcdFile, sext_ln395_reg_1161, "sext_ln395_reg_1161");
    sc_trace(mVcdFile, p_cast6_fu_622_p1, "p_cast6_fu_622_p1");
    sc_trace(mVcdFile, p_cast6_reg_1166, "p_cast6_reg_1166");
    sc_trace(mVcdFile, add_ln397_fu_634_p2, "add_ln397_fu_634_p2");
    sc_trace(mVcdFile, add_ln397_reg_1171, "add_ln397_reg_1171");
    sc_trace(mVcdFile, add_ln398_fu_640_p2, "add_ln398_fu_640_p2");
    sc_trace(mVcdFile, add_ln398_reg_1176, "add_ln398_reg_1176");
    sc_trace(mVcdFile, add_ln396_fu_654_p2, "add_ln396_fu_654_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_fu_667_p2, "i_fu_667_p2");
    sc_trace(mVcdFile, exitcond_fu_649_p2, "exitcond_fu_649_p2");
    sc_trace(mVcdFile, tmp_reg_1205, "tmp_reg_1205");
    sc_trace(mVcdFile, trunc_ln401_fu_701_p1, "trunc_ln401_fu_701_p1");
    sc_trace(mVcdFile, trunc_ln401_reg_1210, "trunc_ln401_reg_1210");
    sc_trace(mVcdFile, s_addr_reg_1245, "s_addr_reg_1245");
    sc_trace(mVcdFile, zext_ln403_fu_739_p1, "zext_ln403_fu_739_p1");
    sc_trace(mVcdFile, zext_ln403_reg_1250, "zext_ln403_reg_1250");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, icmp_ln403_fu_747_p2, "icmp_ln403_fu_747_p2");
    sc_trace(mVcdFile, icmp_ln403_reg_1257, "icmp_ln403_reg_1257");
    sc_trace(mVcdFile, icmp_ln403_1_fu_758_p2, "icmp_ln403_1_fu_758_p2");
    sc_trace(mVcdFile, icmp_ln403_1_reg_1261, "icmp_ln403_1_reg_1261");
    sc_trace(mVcdFile, trunc_ln409_fu_764_p1, "trunc_ln409_fu_764_p1");
    sc_trace(mVcdFile, trunc_ln409_reg_1265, "trunc_ln409_reg_1265");
    sc_trace(mVcdFile, trunc_ln412_fu_768_p1, "trunc_ln412_fu_768_p1");
    sc_trace(mVcdFile, trunc_ln412_reg_1270, "trunc_ln412_reg_1270");
    sc_trace(mVcdFile, zext_ln408_fu_777_p1, "zext_ln408_fu_777_p1");
    sc_trace(mVcdFile, zext_ln408_reg_1275, "zext_ln408_reg_1275");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_504_ap_ready, "grp_KeccakF1600_StatePer_1_fu_504_ap_ready");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_504_ap_done, "grp_KeccakF1600_StatePer_1_fu_504_ap_done");
    sc_trace(mVcdFile, ap_predicate_op126_call_state9, "ap_predicate_op126_call_state9");
    sc_trace(mVcdFile, ap_block_state9_on_subcall_done, "ap_block_state9_on_subcall_done");
    sc_trace(mVcdFile, sext_ln408_fu_781_p1, "sext_ln408_fu_781_p1");
    sc_trace(mVcdFile, empty_68_fu_785_p1, "empty_68_fu_785_p1");
    sc_trace(mVcdFile, empty_68_reg_1285, "empty_68_reg_1285");
    sc_trace(mVcdFile, tmp_s_reg_1292, "tmp_s_reg_1292");
    sc_trace(mVcdFile, xor_ln416_1_fu_797_p2, "xor_ln416_1_fu_797_p2");
    sc_trace(mVcdFile, xor_ln416_1_reg_1297, "xor_ln416_1_reg_1297");
    sc_trace(mVcdFile, icmp_ln414_fu_803_p2, "icmp_ln414_fu_803_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, select_ln32_2_fu_817_p3, "select_ln32_2_fu_817_p3");
    sc_trace(mVcdFile, select_ln32_2_reg_1308, "select_ln32_2_reg_1308");
    sc_trace(mVcdFile, select_ln32_3_fu_823_p3, "select_ln32_3_fu_823_p3");
    sc_trace(mVcdFile, select_ln32_3_reg_1316, "select_ln32_3_reg_1316");
    sc_trace(mVcdFile, zext_ln423_2_fu_839_p1, "zext_ln423_2_fu_839_p1");
    sc_trace(mVcdFile, zext_ln423_2_reg_1324, "zext_ln423_2_reg_1324");
    sc_trace(mVcdFile, tmp_6740_reg_1329, "tmp_6740_reg_1329");
    sc_trace(mVcdFile, trunc_ln425_fu_853_p1, "trunc_ln425_fu_853_p1");
    sc_trace(mVcdFile, trunc_ln425_reg_1335, "trunc_ln425_reg_1335");
    sc_trace(mVcdFile, select_ln32_fu_862_p3, "select_ln32_fu_862_p3");
    sc_trace(mVcdFile, select_ln32_reg_1340, "select_ln32_reg_1340");
    sc_trace(mVcdFile, select_ln32_1_fu_868_p3, "select_ln32_1_fu_868_p3");
    sc_trace(mVcdFile, select_ln32_1_reg_1348, "select_ln32_1_reg_1348");
    sc_trace(mVcdFile, i_8_fu_879_p2, "i_8_fu_879_p2");
    sc_trace(mVcdFile, i_8_reg_1359, "i_8_reg_1359");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, s_addr_6_reg_1364, "s_addr_6_reg_1364");
    sc_trace(mVcdFile, icmp_ln415_fu_874_p2, "icmp_ln415_fu_874_p2");
    sc_trace(mVcdFile, add_ln418_fu_890_p2, "add_ln418_fu_890_p2");
    sc_trace(mVcdFile, add_ln418_reg_1369, "add_ln418_reg_1369");
    sc_trace(mVcdFile, sub_ln421_fu_895_p2, "sub_ln421_fu_895_p2");
    sc_trace(mVcdFile, sub_ln421_reg_1374, "sub_ln421_reg_1374");
    sc_trace(mVcdFile, add_ln423_fu_924_p2, "add_ln423_fu_924_p2");
    sc_trace(mVcdFile, add_ln423_reg_1382, "add_ln423_reg_1382");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, s_addr_5_reg_1387, "s_addr_5_reg_1387");
    sc_trace(mVcdFile, icmp_ln423_fu_919_p2, "icmp_ln423_fu_919_p2");
    sc_trace(mVcdFile, sub_ln428_fu_978_p2, "sub_ln428_fu_978_p2");
    sc_trace(mVcdFile, sub_ln428_reg_1392, "sub_ln428_reg_1392");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, trunc_ln428_fu_984_p1, "trunc_ln428_fu_984_p1");
    sc_trace(mVcdFile, trunc_ln428_reg_1397, "trunc_ln428_reg_1397");
    sc_trace(mVcdFile, add_ln429_fu_988_p2, "add_ln429_fu_988_p2");
    sc_trace(mVcdFile, add_ln429_reg_1402, "add_ln429_reg_1402");
    sc_trace(mVcdFile, zext_ln429_fu_993_p1, "zext_ln429_fu_993_p1");
    sc_trace(mVcdFile, zext_ln429_reg_1407, "zext_ln429_reg_1407");
    sc_trace(mVcdFile, icmp_ln431_fu_997_p2, "icmp_ln431_fu_997_p2");
    sc_trace(mVcdFile, icmp_ln431_reg_1413, "icmp_ln431_reg_1413");
    sc_trace(mVcdFile, t_addr_28_reg_1417, "t_addr_28_reg_1417");
    sc_trace(mVcdFile, t_addr_29_reg_1422, "t_addr_29_reg_1422");
    sc_trace(mVcdFile, t_addr_30_gep_fu_274_p3, "t_addr_30_gep_fu_274_p3");
    sc_trace(mVcdFile, t_addr_30_reg_1427, "t_addr_30_reg_1427");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, t_addr_31_gep_fu_282_p3, "t_addr_31_gep_fu_282_p3");
    sc_trace(mVcdFile, t_addr_31_reg_1432, "t_addr_31_reg_1432");
    sc_trace(mVcdFile, t_addr_32_gep_fu_290_p3, "t_addr_32_gep_fu_290_p3");
    sc_trace(mVcdFile, t_addr_32_reg_1437, "t_addr_32_reg_1437");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, t_addr_33_gep_fu_298_p3, "t_addr_33_gep_fu_298_p3");
    sc_trace(mVcdFile, t_addr_33_reg_1442, "t_addr_33_reg_1442");
    sc_trace(mVcdFile, t_addr_34_gep_fu_306_p3, "t_addr_34_gep_fu_306_p3");
    sc_trace(mVcdFile, t_addr_34_reg_1447, "t_addr_34_reg_1447");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, t_addr_35_gep_fu_314_p3, "t_addr_35_gep_fu_314_p3");
    sc_trace(mVcdFile, t_addr_35_reg_1452, "t_addr_35_reg_1452");
    sc_trace(mVcdFile, i_9_fu_1012_p2, "i_9_fu_1012_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, s_addr_7_reg_1465, "s_addr_7_reg_1465");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, trunc_ln441_fu_1058_p1, "trunc_ln441_fu_1058_p1");
    sc_trace(mVcdFile, trunc_ln441_reg_1470, "trunc_ln441_reg_1470");
    sc_trace(mVcdFile, t_address0, "t_address0");
    sc_trace(mVcdFile, t_ce0, "t_ce0");
    sc_trace(mVcdFile, t_we0, "t_we0");
    sc_trace(mVcdFile, t_d0, "t_d0");
    sc_trace(mVcdFile, t_address1, "t_address1");
    sc_trace(mVcdFile, t_ce1, "t_ce1");
    sc_trace(mVcdFile, t_we1, "t_we1");
    sc_trace(mVcdFile, t_d1, "t_d1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_504_ap_start, "grp_KeccakF1600_StatePer_1_fu_504_ap_start");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_504_ap_idle, "grp_KeccakF1600_StatePer_1_fu_504_ap_idle");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_504_state_address0, "grp_KeccakF1600_StatePer_1_fu_504_state_address0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_504_state_ce0, "grp_KeccakF1600_StatePer_1_fu_504_state_ce0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_504_state_we0, "grp_KeccakF1600_StatePer_1_fu_504_state_we0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_504_state_d0, "grp_KeccakF1600_StatePer_1_fu_504_state_d0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_504_state_address1, "grp_KeccakF1600_StatePer_1_fu_504_state_address1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_504_state_ce1, "grp_KeccakF1600_StatePer_1_fu_504_state_ce1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_504_state_we1, "grp_KeccakF1600_StatePer_1_fu_504_state_we1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_504_state_d1, "grp_KeccakF1600_StatePer_1_fu_504_state_d1");
    sc_trace(mVcdFile, phi_ln391_reg_336, "phi_ln391_reg_336");
    sc_trace(mVcdFile, p_05_rec_reg_347, "p_05_rec_reg_347");
    sc_trace(mVcdFile, i_0_reg_358, "i_0_reg_358");
    sc_trace(mVcdFile, phi_ln408_reg_367, "phi_ln408_reg_367");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, p_12_reg_379, "p_12_reg_379");
    sc_trace(mVcdFile, p_1_reg_389, "p_1_reg_389");
    sc_trace(mVcdFile, ap_phi_mux_phi_ln408_1_phi_fu_404_p6, "ap_phi_mux_phi_ln408_1_phi_fu_404_p6");
    sc_trace(mVcdFile, phi_ln408_1_reg_400, "phi_ln408_1_reg_400");
    sc_trace(mVcdFile, ap_phi_mux_p_23_phi_fu_417_p6, "ap_phi_mux_p_23_phi_fu_417_p6");
    sc_trace(mVcdFile, p_23_reg_414, "p_23_reg_414");
    sc_trace(mVcdFile, sub_ln409_fu_772_p2, "sub_ln409_fu_772_p2");
    sc_trace(mVcdFile, ap_phi_mux_p_2_phi_fu_432_p6, "ap_phi_mux_p_2_phi_fu_432_p6");
    sc_trace(mVcdFile, p_2_reg_429, "p_2_reg_429");
    sc_trace(mVcdFile, indvars_iv_reg_440, "indvars_iv_reg_440");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, p_38_rec_reg_450, "p_38_rec_reg_450");
    sc_trace(mVcdFile, i_2_reg_462, "i_2_reg_462");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, i_3_reg_473, "i_3_reg_473");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, i_5_reg_484, "i_5_reg_484");
    sc_trace(mVcdFile, icmp_ln436_fu_1007_p2, "icmp_ln436_fu_1007_p2");
    sc_trace(mVcdFile, add_ln441_fu_1088_p2, "add_ln441_fu_1088_p2");
    sc_trace(mVcdFile, ap_phi_mux_p_34_phi_fu_498_p4, "ap_phi_mux_p_34_phi_fu_498_p4");
    sc_trace(mVcdFile, p_34_reg_495, "p_34_reg_495");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_504_ap_start_reg, "grp_KeccakF1600_StatePer_1_fu_504_ap_start_reg");
    sc_trace(mVcdFile, zext_ln391_fu_550_p1, "zext_ln391_fu_550_p1");
    sc_trace(mVcdFile, zext_ln396_fu_673_p1, "zext_ln396_fu_673_p1");
    sc_trace(mVcdFile, zext_ln400_fu_704_p1, "zext_ln400_fu_704_p1");
    sc_trace(mVcdFile, zext_ln416_1_fu_885_p1, "zext_ln416_1_fu_885_p1");
    sc_trace(mVcdFile, zext_ln425_1_fu_939_p1, "zext_ln425_1_fu_939_p1");
    sc_trace(mVcdFile, zext_ln436_fu_1018_p1, "zext_ln436_fu_1018_p1");
    sc_trace(mVcdFile, zext_ln440_fu_1053_p1, "zext_ln440_fu_1053_p1");
    sc_trace(mVcdFile, select_ln396_fu_660_p3, "select_ln396_fu_660_p3");
    sc_trace(mVcdFile, select_ln438_fu_1037_p3, "select_ln438_fu_1037_p3");
    sc_trace(mVcdFile, xor_ln400_fu_728_p2, "xor_ln400_fu_728_p2");
    sc_trace(mVcdFile, xor_ln416_fu_912_p2, "xor_ln416_fu_912_p2");
    sc_trace(mVcdFile, xor_ln425_fu_956_p2, "xor_ln425_fu_956_p2");
    sc_trace(mVcdFile, xor_ln440_fu_1081_p2, "xor_ln440_fu_1081_p2");
    sc_trace(mVcdFile, trunc_ln393_fu_561_p1, "trunc_ln393_fu_561_p1");
    sc_trace(mVcdFile, zext_ln395_fu_578_p1, "zext_ln395_fu_578_p1");
    sc_trace(mVcdFile, sub_ln395_fu_582_p2, "sub_ln395_fu_582_p2");
    sc_trace(mVcdFile, empty_65_fu_588_p1, "empty_65_fu_588_p1");
    sc_trace(mVcdFile, empty_66_fu_598_p2, "empty_66_fu_598_p2");
    sc_trace(mVcdFile, xor_ln395_1_fu_592_p2, "xor_ln395_1_fu_592_p2");
    sc_trace(mVcdFile, umax_fu_604_p3, "umax_fu_604_p3");
    sc_trace(mVcdFile, trunc_ln397_fu_630_p1, "trunc_ln397_fu_630_p1");
    sc_trace(mVcdFile, sext_ln397_fu_626_p1, "sext_ln397_fu_626_p1");
    sc_trace(mVcdFile, empty_67_fu_645_p1, "empty_67_fu_645_p1");
    sc_trace(mVcdFile, add_ln394_fu_678_p2, "add_ln394_fu_678_p2");
    sc_trace(mVcdFile, sext_ln400_fu_682_p1, "sext_ln400_fu_682_p1");
    sc_trace(mVcdFile, sub_ln400_fu_686_p2, "sub_ln400_fu_686_p2");
    sc_trace(mVcdFile, r_7_i_fu_708_p9, "r_7_i_fu_708_p9");
    sc_trace(mVcdFile, zext_ln403_1_fu_735_p1, "zext_ln403_1_fu_735_p1");
    sc_trace(mVcdFile, zext_ln403_2_fu_743_p1, "zext_ln403_2_fu_743_p1");
    sc_trace(mVcdFile, sub_ln403_fu_753_p2, "sub_ln403_fu_753_p2");
    sc_trace(mVcdFile, trunc_ln416_fu_808_p1, "trunc_ln416_fu_808_p1");
    sc_trace(mVcdFile, xor_ln32_1_fu_812_p2, "xor_ln32_1_fu_812_p2");
    sc_trace(mVcdFile, tmp_939_fu_829_p4, "tmp_939_fu_829_p4");
    sc_trace(mVcdFile, xor_ln32_fu_857_p2, "xor_ln32_fu_857_p2");
    sc_trace(mVcdFile, r_7_i6_fu_900_p9, "r_7_i6_fu_900_p9");
    sc_trace(mVcdFile, zext_ln423_fu_930_p1, "zext_ln423_fu_930_p1");
    sc_trace(mVcdFile, add_ln425_1_fu_934_p2, "add_ln425_1_fu_934_p2");
    sc_trace(mVcdFile, r_7_i7_fu_944_p9, "r_7_i7_fu_944_p9");
    sc_trace(mVcdFile, and_ln_fu_963_p3, "and_ln_fu_963_p3");
    sc_trace(mVcdFile, zext_ln427_fu_974_p1, "zext_ln427_fu_974_p1");
    sc_trace(mVcdFile, zext_ln427_2_fu_970_p1, "zext_ln427_2_fu_970_p1");
    sc_trace(mVcdFile, zext_ln436_2_fu_1003_p1, "zext_ln436_2_fu_1003_p1");
    sc_trace(mVcdFile, trunc_ln438_fu_1023_p1, "trunc_ln438_fu_1023_p1");
    sc_trace(mVcdFile, xor_ln438_fu_1027_p2, "xor_ln438_fu_1027_p2");
    sc_trace(mVcdFile, xor_ln438_1_fu_1032_p2, "xor_ln438_1_fu_1032_p2");
    sc_trace(mVcdFile, tmp_940_fu_1044_p4, "tmp_940_fu_1044_p4");
    sc_trace(mVcdFile, r_7_i5_fu_1061_p9, "r_7_i5_fu_1061_p9");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

keccak_absorb::~keccak_absorb() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete t_U;
    delete grp_KeccakF1600_StatePer_1_fu_504;
}

void keccak_absorb::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
            ap_return_preg = ap_phi_mux_p_34_phi_fu_498_p4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_KeccakF1600_StatePer_1_fu_504_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln403_fu_747_p2.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln403_1_fu_758_p2.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln415_fu_874_p2.read())))) {
            grp_KeccakF1600_StatePer_1_fu_504_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_KeccakF1600_StatePer_1_fu_504_ap_ready.read())) {
            grp_KeccakF1600_StatePer_1_fu_504_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_649_p2.read()))) {
        i_0_reg_358 = i_fu_667_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln391_fu_555_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(icmp_ln393_fu_572_p2.read(), ap_const_lv1_0))) {
        i_0_reg_358 = zext_ln393_fu_564_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln414_fu_803_p2.read()))) {
        i_2_reg_462 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        i_2_reg_462 = i_8_reg_1359.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        i_3_reg_473 = add_ln423_reg_1382.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln414_fu_803_p2.read()))) {
        i_3_reg_473 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        i_5_reg_484 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln436_fu_1007_p2.read()))) {
        i_5_reg_484 = i_9_fu_1012_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_block_state9_on_subcall_done.read(), ap_const_boolean_0))) {
        indvars_iv_reg_440 = sext_ln408_fu_781_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_1_fu_504_ap_done.read(), ap_const_logic_1))) {
        indvars_iv_reg_440 = sub_ln421_reg_1374.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_649_p2.read()))) {
        p_05_rec_reg_347 = add_ln396_fu_654_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln391_fu_555_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(icmp_ln393_fu_572_p2.read(), ap_const_lv1_0))) {
        p_05_rec_reg_347 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln391_fu_555_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln393_fu_572_p2.read()))) {
        p_12_reg_379 = empty_reg_1124.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        p_12_reg_379 = add_ln398_reg_1176.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln391_fu_555_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln393_fu_572_p2.read()))) {
        p_1_reg_389 = ap_const_lv2_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        p_1_reg_389 = add_ln397_reg_1171.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln403_fu_747_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln403_fu_747_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln403_1_fu_758_p2.read())))) {
        p_23_reg_414 = p_12_reg_379.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln403_reg_1257.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln403_1_reg_1261.read()) && 
                esl_seteq<1,1,1>(ap_block_state9_on_subcall_done.read(), ap_const_boolean_0))) {
        p_23_reg_414 = ap_const_lv6_0;
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln403_fu_747_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln403_fu_747_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln403_1_fu_758_p2.read())))) {
        p_2_reg_429 = zext_ln403_fu_739_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln403_reg_1257.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln403_1_reg_1261.read()) && 
                esl_seteq<1,1,1>(ap_block_state9_on_subcall_done.read(), ap_const_boolean_0))) {
        p_2_reg_429 = sub_ln409_fu_772_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln431_fu_997_p2.read()))) {
        p_34_reg_495 = zext_ln429_fu_993_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln431_reg_1413.read()))) {
        p_34_reg_495 = add_ln441_fu_1088_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_block_state9_on_subcall_done.read(), ap_const_boolean_0))) {
        p_38_rec_reg_450 = ap_const_lv64_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_1_fu_504_ap_done.read(), ap_const_logic_1))) {
        p_38_rec_reg_450 = add_ln418_reg_1369.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln391_fu_555_p2.read(), ap_const_lv1_0))) {
        phi_ln391_reg_336 = add_ln391_fu_544_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_ln391_reg_336 = ap_const_lv3_0;
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln403_fu_747_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln403_fu_747_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln403_1_fu_758_p2.read())))) {
        phi_ln408_1_reg_400 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln403_reg_1257.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln403_1_reg_1261.read()) && 
                esl_seteq<1,1,1>(ap_block_state9_on_subcall_done.read(), ap_const_boolean_0))) {
        phi_ln408_1_reg_400 = trunc_ln412_reg_1270.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln391_fu_555_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln393_fu_572_p2.read()))) {
        phi_ln408_reg_367 = ap_const_lv1_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        phi_ln408_reg_367 = trunc_ln401_reg_1210.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        reg_510 = t_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        reg_510 = t_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        reg_515 = t_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        reg_515 = t_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln391_fu_555_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(icmp_ln393_fu_572_p2.read(), ap_const_lv1_0))) {
        add_ln397_reg_1171 = add_ln397_fu_634_p2.read();
        add_ln398_reg_1176 = add_ln398_fu_640_p2.read();
        p_cast6_reg_1166 = p_cast6_fu_622_p1.read();
        sext_ln395_reg_1161 = sext_ln395_fu_618_p1.read();
        xor_ln395_2_reg_1156 = xor_ln395_2_fu_612_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln415_fu_874_p2.read()))) {
        add_ln418_reg_1369 = add_ln418_fu_890_p2.read();
        sub_ln421_reg_1374 = sub_ln421_fu_895_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        add_ln423_reg_1382 = add_ln423_fu_924_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        add_ln429_reg_1402 = add_ln429_fu_988_p2.read();
        icmp_ln431_reg_1413 = icmp_ln431_fu_997_p2.read();
        sub_ln428_reg_1392 = sub_ln428_fu_978_p2.read();
        trunc_ln428_reg_1397 = trunc_ln428_fu_984_p1.read();
        zext_ln429_reg_1407 = zext_ln429_fu_993_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        empty_62_reg_1130 = empty_62_fu_540_p1.read();
        empty_reg_1124 = empty_fu_536_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_block_state9_on_subcall_done.read(), ap_const_boolean_0))) {
        empty_68_reg_1285 = empty_68_fu_785_p1.read();
        tmp_s_reg_1292 = r.read().range(7, 3);
        xor_ln416_1_reg_1297 = xor_ln416_1_fu_797_p2.read();
        zext_ln408_reg_1275 = zext_ln408_fu_777_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_8_reg_1359 = i_8_fu_879_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln403_fu_747_p2.read()))) {
        icmp_ln403_1_reg_1261 = icmp_ln403_1_fu_758_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        icmp_ln403_reg_1257 = icmp_ln403_fu_747_p2.read();
        zext_ln403_reg_1250 = zext_ln403_fu_739_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        reg_520 = t_q1.read();
        reg_524 = t_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        reg_528 = t_q1.read();
        reg_532 = t_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln423_fu_919_p2.read()))) {
        s_addr_5_reg_1387 =  (sc_lv<5>) (zext_ln425_1_fu_939_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln415_fu_874_p2.read()))) {
        s_addr_6_reg_1364 =  (sc_lv<5>) (zext_ln416_1_fu_885_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        s_addr_7_reg_1465 =  (sc_lv<5>) (zext_ln440_fu_1053_p1.read());
        trunc_ln441_reg_1470 = trunc_ln441_fu_1058_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        s_addr_reg_1245 =  (sc_lv<5>) (zext_ln400_fu_704_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln414_fu_803_p2.read()))) {
        select_ln32_1_reg_1348 = select_ln32_1_fu_868_p3.read();
        select_ln32_reg_1340 = select_ln32_fu_862_p3.read();
        tmp_6740_reg_1329 = indvars_iv_reg_440.read().range(7, 3);
        trunc_ln425_reg_1335 = trunc_ln425_fu_853_p1.read();
        zext_ln423_2_reg_1324 = zext_ln423_2_fu_839_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln414_fu_803_p2.read()))) {
        select_ln32_2_reg_1308 = select_ln32_2_fu_817_p3.read();
        select_ln32_3_reg_1316 = select_ln32_3_fu_823_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_649_p2.read()))) {
        tmp_reg_1205 = sub_ln400_fu_686_p2.read().range(5, 3);
        trunc_ln401_reg_1210 = trunc_ln401_fu_701_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln403_fu_747_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln403_1_fu_758_p2.read()))) {
        trunc_ln409_reg_1265 = trunc_ln409_fu_764_p1.read();
        trunc_ln412_reg_1270 = trunc_ln412_fu_768_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln391_fu_555_p2.read(), ap_const_lv1_1))) {
        zext_ln393_1_reg_1148 = zext_ln393_1_fu_568_p1.read();
    }
}

void keccak_absorb::thread_add_ln391_fu_544_p2() {
    add_ln391_fu_544_p2 = (!phi_ln391_reg_336.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(phi_ln391_reg_336.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void keccak_absorb::thread_add_ln394_fu_678_p2() {
    add_ln394_fu_678_p2 = (!zext_ln393_1_reg_1148.read().is_01() || !p_cast6_reg_1166.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln393_1_reg_1148.read()) + sc_bigint<5>(p_cast6_reg_1166.read()));
}

void keccak_absorb::thread_add_ln396_fu_654_p2() {
    add_ln396_fu_654_p2 = (!ap_const_lv64_1.is_01() || !p_05_rec_reg_347.read().is_01())? sc_lv<64>(): (sc_biguint<64>(ap_const_lv64_1) + sc_biguint<64>(p_05_rec_reg_347.read()));
}

void keccak_absorb::thread_add_ln397_fu_634_p2() {
    add_ln397_fu_634_p2 = (!ap_const_lv2_3.is_01() || !trunc_ln397_fu_630_p1.read().is_01())? sc_lv<2>(): (sc_bigint<2>(ap_const_lv2_3) + sc_biguint<2>(trunc_ln397_fu_630_p1.read()));
}

void keccak_absorb::thread_add_ln398_fu_640_p2() {
    add_ln398_fu_640_p2 = (!sext_ln397_fu_626_p1.read().is_01() || !empty_reg_1124.read().is_01())? sc_lv<6>(): (sc_bigint<6>(sext_ln397_fu_626_p1.read()) + sc_biguint<6>(empty_reg_1124.read()));
}

void keccak_absorb::thread_add_ln418_fu_890_p2() {
    add_ln418_fu_890_p2 = (!empty_68_reg_1285.read().is_01() || !p_38_rec_reg_450.read().is_01())? sc_lv<64>(): (sc_biguint<64>(empty_68_reg_1285.read()) + sc_biguint<64>(p_38_rec_reg_450.read()));
}

void keccak_absorb::thread_add_ln423_fu_924_p2() {
    add_ln423_fu_924_p2 = (!i_3_reg_473.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_3_reg_473.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void keccak_absorb::thread_add_ln425_1_fu_934_p2() {
    add_ln425_1_fu_934_p2 = (!zext_ln423_2_reg_1324.read().is_01() || !zext_ln423_fu_930_p1.read().is_01())? sc_lv<30>(): (sc_biguint<30>(zext_ln423_2_reg_1324.read()) + sc_biguint<30>(zext_ln423_fu_930_p1.read()));
}

void keccak_absorb::thread_add_ln429_fu_988_p2() {
    add_ln429_fu_988_p2 = (!zext_ln408_reg_1275.read().is_01() || !zext_ln427_2_fu_970_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln408_reg_1275.read()) + sc_biguint<9>(zext_ln427_2_fu_970_p1.read()));
}

void keccak_absorb::thread_add_ln441_fu_1088_p2() {
    add_ln441_fu_1088_p2 = (!zext_ln429_reg_1407.read().is_01() || !trunc_ln441_reg_1470.read().is_01())? sc_lv<32>(): (sc_biguint<32>(zext_ln429_reg_1407.read()) + sc_biguint<32>(trunc_ln441_reg_1470.read()));
}

void keccak_absorb::thread_and_ln_fu_963_p3() {
    and_ln_fu_963_p3 = esl_concat<5,3>(tmp_6740_reg_1329.read(), ap_const_lv3_0);
}

void keccak_absorb::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void keccak_absorb::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void keccak_absorb::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void keccak_absorb::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void keccak_absorb::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void keccak_absorb::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void keccak_absorb::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void keccak_absorb::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void keccak_absorb::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void keccak_absorb::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void keccak_absorb::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void keccak_absorb::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void keccak_absorb::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void keccak_absorb::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void keccak_absorb::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void keccak_absorb::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void keccak_absorb::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void keccak_absorb::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void keccak_absorb::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void keccak_absorb::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void keccak_absorb::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void keccak_absorb::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void keccak_absorb::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void keccak_absorb::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void keccak_absorb::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void keccak_absorb::thread_ap_block_state9_on_subcall_done() {
    ap_block_state9_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_KeccakF1600_StatePer_1_fu_504_ap_done.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op126_call_state9.read()));
}

void keccak_absorb::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void keccak_absorb::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void keccak_absorb::thread_ap_phi_mux_p_23_phi_fu_417_p6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln403_reg_1257.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln403_1_reg_1261.read()))) {
        ap_phi_mux_p_23_phi_fu_417_p6 = ap_const_lv6_0;
    } else {
        ap_phi_mux_p_23_phi_fu_417_p6 = p_23_reg_414.read();
    }
}

void keccak_absorb::thread_ap_phi_mux_p_2_phi_fu_432_p6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln403_reg_1257.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln403_1_reg_1261.read()))) {
        ap_phi_mux_p_2_phi_fu_432_p6 = sub_ln409_fu_772_p2.read();
    } else {
        ap_phi_mux_p_2_phi_fu_432_p6 = p_2_reg_429.read();
    }
}

void keccak_absorb::thread_ap_phi_mux_p_34_phi_fu_498_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln431_reg_1413.read()))) {
        ap_phi_mux_p_34_phi_fu_498_p4 = add_ln441_fu_1088_p2.read();
    } else {
        ap_phi_mux_p_34_phi_fu_498_p4 = p_34_reg_495.read();
    }
}

void keccak_absorb::thread_ap_phi_mux_phi_ln408_1_phi_fu_404_p6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln403_reg_1257.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln403_1_reg_1261.read()))) {
        ap_phi_mux_phi_ln408_1_phi_fu_404_p6 = trunc_ln412_reg_1270.read();
    } else {
        ap_phi_mux_phi_ln408_1_phi_fu_404_p6 = phi_ln408_1_reg_400.read();
    }
}

void keccak_absorb::thread_ap_predicate_op126_call_state9() {
    ap_predicate_op126_call_state9 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln403_reg_1257.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln403_1_reg_1261.read()));
}

void keccak_absorb::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void keccak_absorb::thread_ap_return() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        ap_return = ap_phi_mux_p_34_phi_fu_498_p4.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void keccak_absorb::thread_empty_62_fu_540_p1() {
    empty_62_fu_540_p1 = r.read().range(8-1, 0);
}

void keccak_absorb::thread_empty_65_fu_588_p1() {
    empty_65_fu_588_p1 = sub_ln395_fu_582_p2.read().range(3-1, 0);
}

void keccak_absorb::thread_empty_66_fu_598_p2() {
    empty_66_fu_598_p2 = (!sub_ln395_fu_582_p2.read().is_01() || !ap_const_lv4_2.is_01())? sc_lv<1>(): (sc_biguint<4>(sub_ln395_fu_582_p2.read()) > sc_biguint<4>(ap_const_lv4_2));
}

void keccak_absorb::thread_empty_67_fu_645_p1() {
    empty_67_fu_645_p1 = p_05_rec_reg_347.read().range(1-1, 0);
}

void keccak_absorb::thread_empty_68_fu_785_p1() {
    empty_68_fu_785_p1 = esl_zext<64,9>(r.read());
}

void keccak_absorb::thread_empty_fu_536_p1() {
    empty_fu_536_p1 = pos_r.read().range(6-1, 0);
}

void keccak_absorb::thread_exitcond_fu_649_p2() {
    exitcond_fu_649_p2 = (!p_05_rec_reg_347.read().is_01() || !sext_ln395_reg_1161.read().is_01())? sc_lv<1>(): sc_lv<1>(p_05_rec_reg_347.read() == sext_ln395_reg_1161.read());
}

void keccak_absorb::thread_grp_KeccakF1600_StatePer_1_fu_504_ap_start() {
    grp_KeccakF1600_StatePer_1_fu_504_ap_start = grp_KeccakF1600_StatePer_1_fu_504_ap_start_reg.read();
}

void keccak_absorb::thread_i_8_fu_879_p2() {
    i_8_fu_879_p2 = (!i_2_reg_462.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_2_reg_462.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void keccak_absorb::thread_i_9_fu_1012_p2() {
    i_9_fu_1012_p2 = (!i_5_reg_484.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_5_reg_484.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void keccak_absorb::thread_i_fu_667_p2() {
    i_fu_667_p2 = (!i_0_reg_358.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_0_reg_358.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void keccak_absorb::thread_icmp_ln391_fu_555_p2() {
    icmp_ln391_fu_555_p2 = (!phi_ln391_reg_336.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln391_reg_336.read() == ap_const_lv3_7);
}

void keccak_absorb::thread_icmp_ln393_fu_572_p2() {
    icmp_ln393_fu_572_p2 = (!trunc_ln393_fu_561_p1.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln393_fu_561_p1.read() == ap_const_lv3_0);
}

void keccak_absorb::thread_icmp_ln403_1_fu_758_p2() {
    icmp_ln403_1_fu_758_p2 = (!zext_ln403_2_fu_743_p1.read().is_01() || !sub_ln403_fu_753_p2.read().is_01())? sc_lv<1>(): (sc_biguint<8>(zext_ln403_2_fu_743_p1.read()) < sc_biguint<8>(sub_ln403_fu_753_p2.read()));
}

void keccak_absorb::thread_icmp_ln403_fu_747_p2() {
    icmp_ln403_fu_747_p2 = (!p_12_reg_379.read().is_01() || !ap_const_lv6_0.is_01())? sc_lv<1>(): sc_lv<1>(p_12_reg_379.read() == ap_const_lv6_0);
}

void keccak_absorb::thread_icmp_ln414_fu_803_p2() {
    icmp_ln414_fu_803_p2 = (!indvars_iv_reg_440.read().is_01() || !empty_68_reg_1285.read().is_01())? sc_lv<1>(): (sc_biguint<64>(indvars_iv_reg_440.read()) < sc_biguint<64>(empty_68_reg_1285.read()));
}

void keccak_absorb::thread_icmp_ln415_fu_874_p2() {
    icmp_ln415_fu_874_p2 = (!i_2_reg_462.read().is_01() || !tmp_s_reg_1292.read().is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_462.read() == tmp_s_reg_1292.read());
}

void keccak_absorb::thread_icmp_ln423_fu_919_p2() {
    icmp_ln423_fu_919_p2 = (!i_3_reg_473.read().is_01() || !tmp_6740_reg_1329.read().is_01())? sc_lv<1>(): sc_lv<1>(i_3_reg_473.read() == tmp_6740_reg_1329.read());
}

void keccak_absorb::thread_icmp_ln431_fu_997_p2() {
    icmp_ln431_fu_997_p2 = (!indvars_iv_reg_440.read().is_01() || !zext_ln427_fu_974_p1.read().is_01())? sc_lv<1>(): sc_lv<1>(indvars_iv_reg_440.read() == zext_ln427_fu_974_p1.read());
}

void keccak_absorb::thread_icmp_ln436_fu_1007_p2() {
    icmp_ln436_fu_1007_p2 = (!zext_ln436_2_fu_1003_p1.read().is_01() || !trunc_ln428_reg_1397.read().is_01())? sc_lv<1>(): (sc_biguint<33>(zext_ln436_2_fu_1003_p1.read()) < sc_biguint<33>(trunc_ln428_reg_1397.read()));
}

void keccak_absorb::thread_p_cast6_fu_622_p1() {
    p_cast6_fu_622_p1 = esl_sext<5,3>(xor_ln395_2_fu_612_p2.read());
}

void keccak_absorb::thread_r_7_i5_fu_1061_p9() {
    r_7_i5_fu_1061_p9 = esl_concat<56,8>(esl_concat<48,8>(esl_concat<40,8>(esl_concat<32,8>(esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(t_q0.read(), t_q1.read()), reg_532.read()), reg_528.read()), reg_524.read()), reg_520.read()), reg_515.read()), reg_510.read());
}

void keccak_absorb::thread_r_7_i6_fu_900_p9() {
    r_7_i6_fu_900_p9 = esl_concat<56,8>(esl_concat<48,8>(esl_concat<40,8>(esl_concat<32,8>(esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(select_ln32_3_reg_1316.read(), select_ln32_2_reg_1308.read()), select_ln32_3_reg_1316.read()), select_ln32_2_reg_1308.read()), select_ln32_3_reg_1316.read()), select_ln32_2_reg_1308.read()), select_ln32_3_reg_1316.read()), select_ln32_2_reg_1308.read());
}

void keccak_absorb::thread_r_7_i7_fu_944_p9() {
    r_7_i7_fu_944_p9 = esl_concat<56,8>(esl_concat<48,8>(esl_concat<40,8>(esl_concat<32,8>(esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(select_ln32_1_reg_1348.read(), select_ln32_reg_1340.read()), select_ln32_1_reg_1348.read()), select_ln32_reg_1340.read()), select_ln32_1_reg_1348.read()), select_ln32_reg_1340.read()), select_ln32_1_reg_1348.read()), select_ln32_reg_1340.read());
}

void keccak_absorb::thread_r_7_i_fu_708_p9() {
    r_7_i_fu_708_p9 = esl_concat<56,8>(esl_concat<48,8>(esl_concat<40,8>(esl_concat<32,8>(esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(t_q0.read(), t_q1.read()), reg_532.read()), reg_528.read()), reg_524.read()), reg_520.read()), reg_515.read()), reg_510.read());
}

void keccak_absorb::thread_s_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        s_address0 = s_addr_7_reg_1465.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        s_address0 = s_addr_5_reg_1387.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        s_address0 =  (sc_lv<5>) (zext_ln425_1_fu_939_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        s_address0 = s_addr_6_reg_1364.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln415_fu_874_p2.read()))) {
        s_address0 =  (sc_lv<5>) (zext_ln416_1_fu_885_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        s_address0 = s_addr_reg_1245.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        s_address0 =  (sc_lv<5>) (zext_ln400_fu_704_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op126_call_state9.read())))) {
        s_address0 = grp_KeccakF1600_StatePer_1_fu_504_state_address0.read();
    } else {
        s_address0 = "XXXXX";
    }
}

void keccak_absorb::thread_s_address1() {
    s_address1 = grp_KeccakF1600_StatePer_1_fu_504_state_address1.read();
}

void keccak_absorb::thread_s_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln415_fu_874_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        s_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op126_call_state9.read())))) {
        s_ce0 = grp_KeccakF1600_StatePer_1_fu_504_state_ce0.read();
    } else {
        s_ce0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_s_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op126_call_state9.read())))) {
        s_ce1 = grp_KeccakF1600_StatePer_1_fu_504_state_ce1.read();
    } else {
        s_ce1 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_s_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        s_d0 = xor_ln440_fu_1081_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        s_d0 = xor_ln425_fu_956_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        s_d0 = xor_ln416_fu_912_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        s_d0 = xor_ln400_fu_728_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op126_call_state9.read())))) {
        s_d0 = grp_KeccakF1600_StatePer_1_fu_504_state_d0.read();
    } else {
        s_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void keccak_absorb::thread_s_d1() {
    s_d1 = grp_KeccakF1600_StatePer_1_fu_504_state_d1.read();
}

void keccak_absorb::thread_s_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln431_reg_1413.read())))) {
        s_we0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op126_call_state9.read())))) {
        s_we0 = grp_KeccakF1600_StatePer_1_fu_504_state_we0.read();
    } else {
        s_we0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_s_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op126_call_state9.read())))) {
        s_we1 = grp_KeccakF1600_StatePer_1_fu_504_state_we1.read();
    } else {
        s_we1 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_select_ln32_1_fu_868_p3() {
    select_ln32_1_fu_868_p3 = (!xor_ln32_fu_857_p2.read()[0].is_01())? sc_lv<8>(): ((xor_ln32_fu_857_p2.read()[0].to_bool())? m_0_read.read(): m_1_read.read());
}

void keccak_absorb::thread_select_ln32_2_fu_817_p3() {
    select_ln32_2_fu_817_p3 = (!xor_ln32_1_fu_812_p2.read()[0].is_01())? sc_lv<8>(): ((xor_ln32_1_fu_812_p2.read()[0].to_bool())? m_1_read.read(): m_0_read.read());
}

void keccak_absorb::thread_select_ln32_3_fu_823_p3() {
    select_ln32_3_fu_823_p3 = (!xor_ln32_1_fu_812_p2.read()[0].is_01())? sc_lv<8>(): ((xor_ln32_1_fu_812_p2.read()[0].to_bool())? m_0_read.read(): m_1_read.read());
}

void keccak_absorb::thread_select_ln32_fu_862_p3() {
    select_ln32_fu_862_p3 = (!xor_ln32_fu_857_p2.read()[0].is_01())? sc_lv<8>(): ((xor_ln32_fu_857_p2.read()[0].to_bool())? m_1_read.read(): m_0_read.read());
}

void keccak_absorb::thread_select_ln396_fu_660_p3() {
    select_ln396_fu_660_p3 = (!empty_67_fu_645_p1.read()[0].is_01())? sc_lv<8>(): ((empty_67_fu_645_p1.read()[0].to_bool())? m_1_read.read(): m_0_read.read());
}

void keccak_absorb::thread_select_ln438_fu_1037_p3() {
    select_ln438_fu_1037_p3 = (!xor_ln438_1_fu_1032_p2.read()[0].is_01())? sc_lv<8>(): ((xor_ln438_1_fu_1032_p2.read()[0].to_bool())? m_1_read.read(): m_0_read.read());
}

void keccak_absorb::thread_sext_ln395_fu_618_p1() {
    sext_ln395_fu_618_p1 = esl_sext<64,3>(xor_ln395_2_fu_612_p2.read());
}

void keccak_absorb::thread_sext_ln397_fu_626_p1() {
    sext_ln397_fu_626_p1 = esl_sext<6,3>(xor_ln395_2_fu_612_p2.read());
}

void keccak_absorb::thread_sext_ln400_fu_682_p1() {
    sext_ln400_fu_682_p1 = esl_sext<6,5>(add_ln394_fu_678_p2.read());
}

void keccak_absorb::thread_sext_ln408_fu_781_p1() {
    sext_ln408_fu_781_p1 = esl_sext<64,3>(ap_phi_mux_p_2_phi_fu_432_p6.read());
}

void keccak_absorb::thread_sub_ln395_fu_582_p2() {
    sub_ln395_fu_582_p2 = (!ap_const_lv4_8.is_01() || !zext_ln395_fu_578_p1.read().is_01())? sc_lv<4>(): (sc_bigint<4>(ap_const_lv4_8) - sc_biguint<4>(zext_ln395_fu_578_p1.read()));
}

void keccak_absorb::thread_sub_ln400_fu_686_p2() {
    sub_ln400_fu_686_p2 = (!add_ln398_reg_1176.read().is_01() || !sext_ln400_fu_682_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(add_ln398_reg_1176.read()) - sc_bigint<6>(sext_ln400_fu_682_p1.read()));
}

void keccak_absorb::thread_sub_ln403_fu_753_p2() {
    sub_ln403_fu_753_p2 = (!empty_62_reg_1130.read().is_01() || !zext_ln403_1_fu_735_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(empty_62_reg_1130.read()) - sc_biguint<8>(zext_ln403_1_fu_735_p1.read()));
}

void keccak_absorb::thread_sub_ln409_fu_772_p2() {
    sub_ln409_fu_772_p2 = (!zext_ln403_reg_1250.read().is_01() || !trunc_ln409_reg_1265.read().is_01())? sc_lv<3>(): (sc_biguint<3>(zext_ln403_reg_1250.read()) - sc_biguint<3>(trunc_ln409_reg_1265.read()));
}

void keccak_absorb::thread_sub_ln421_fu_895_p2() {
    sub_ln421_fu_895_p2 = (!indvars_iv_reg_440.read().is_01() || !empty_68_reg_1285.read().is_01())? sc_lv<64>(): (sc_biguint<64>(indvars_iv_reg_440.read()) - sc_biguint<64>(empty_68_reg_1285.read()));
}

void keccak_absorb::thread_sub_ln428_fu_978_p2() {
    sub_ln428_fu_978_p2 = (!indvars_iv_reg_440.read().is_01() || !zext_ln427_fu_974_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(indvars_iv_reg_440.read()) - sc_biguint<64>(zext_ln427_fu_974_p1.read()));
}

void keccak_absorb::thread_t_addr_28_reg_1417() {
    t_addr_28_reg_1417 =  (sc_lv<3>) (ap_const_lv64_0);
}

void keccak_absorb::thread_t_addr_29_reg_1422() {
    t_addr_29_reg_1422 =  (sc_lv<3>) (ap_const_lv64_1);
}

void keccak_absorb::thread_t_addr_30_gep_fu_274_p3() {
    t_addr_30_gep_fu_274_p3 =  (sc_lv<3>) (ap_const_lv64_2);
}

void keccak_absorb::thread_t_addr_30_reg_1427() {
    t_addr_30_reg_1427 =  (sc_lv<3>) (ap_const_lv64_2);
}

void keccak_absorb::thread_t_addr_31_gep_fu_282_p3() {
    t_addr_31_gep_fu_282_p3 =  (sc_lv<3>) (ap_const_lv64_3);
}

void keccak_absorb::thread_t_addr_31_reg_1432() {
    t_addr_31_reg_1432 =  (sc_lv<3>) (ap_const_lv64_3);
}

void keccak_absorb::thread_t_addr_32_gep_fu_290_p3() {
    t_addr_32_gep_fu_290_p3 =  (sc_lv<3>) (ap_const_lv64_4);
}

void keccak_absorb::thread_t_addr_32_reg_1437() {
    t_addr_32_reg_1437 =  (sc_lv<3>) (ap_const_lv64_4);
}

void keccak_absorb::thread_t_addr_33_gep_fu_298_p3() {
    t_addr_33_gep_fu_298_p3 =  (sc_lv<3>) (ap_const_lv64_5);
}

void keccak_absorb::thread_t_addr_33_reg_1442() {
    t_addr_33_reg_1442 =  (sc_lv<3>) (ap_const_lv64_5);
}

void keccak_absorb::thread_t_addr_34_gep_fu_306_p3() {
    t_addr_34_gep_fu_306_p3 =  (sc_lv<3>) (ap_const_lv64_6);
}

void keccak_absorb::thread_t_addr_34_reg_1447() {
    t_addr_34_reg_1447 =  (sc_lv<3>) (ap_const_lv64_6);
}

void keccak_absorb::thread_t_addr_35_gep_fu_314_p3() {
    t_addr_35_gep_fu_314_p3 =  (sc_lv<3>) (ap_const_lv64_7);
}

void keccak_absorb::thread_t_addr_35_reg_1452() {
    t_addr_35_reg_1452 =  (sc_lv<3>) (ap_const_lv64_7);
}

void keccak_absorb::thread_t_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        t_address0 = t_addr_35_reg_1452.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        t_address0 = t_addr_33_reg_1442.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        t_address0 = t_addr_31_reg_1432.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        t_address0 = t_addr_29_reg_1422.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        t_address0 = t_addr_35_gep_fu_314_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        t_address0 = t_addr_33_gep_fu_298_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        t_address0 = t_addr_31_gep_fu_282_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_3);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_649_p2.read()))) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_649_p2.read()))) {
        t_address0 =  (sc_lv<3>) (zext_ln396_fu_673_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        t_address0 =  (sc_lv<3>) (zext_ln391_fu_550_p1.read());
    } else {
        t_address0 =  (sc_lv<3>) ("XXX");
    }
}

void keccak_absorb::thread_t_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        t_address1 = t_addr_34_reg_1447.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        t_address1 = t_addr_32_reg_1437.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        t_address1 = t_addr_30_reg_1427.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        t_address1 = t_addr_28_reg_1417.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        t_address1 =  (sc_lv<3>) (zext_ln436_fu_1018_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        t_address1 = t_addr_34_gep_fu_306_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        t_address1 = t_addr_32_gep_fu_290_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        t_address1 = t_addr_30_gep_fu_274_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_1);
    } else {
        t_address1 =  (sc_lv<3>) ("XXX");
    }
}

void keccak_absorb::thread_t_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_649_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_649_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        t_ce0 = ap_const_logic_1;
    } else {
        t_ce0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_t_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        t_ce1 = ap_const_logic_1;
    } else {
        t_ce1 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_t_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_649_p2.read()))) {
        t_d0 = select_ln396_fu_660_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        t_d0 = ap_const_lv8_0;
    } else {
        t_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void keccak_absorb::thread_t_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        t_d1 = select_ln438_fu_1037_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        t_d1 = ap_const_lv8_0;
    } else {
        t_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void keccak_absorb::thread_t_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_649_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln431_fu_997_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        t_we0 = ap_const_logic_1;
    } else {
        t_we0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_t_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln431_fu_997_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln436_fu_1007_p2.read())))) {
        t_we1 = ap_const_logic_1;
    } else {
        t_we1 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_tmp_939_fu_829_p4() {
    tmp_939_fu_829_p4 = p_23_reg_414.read().range(5, 3);
}

void keccak_absorb::thread_tmp_940_fu_1044_p4() {
    tmp_940_fu_1044_p4 = add_ln429_reg_1402.read().range(8, 3);
}

void keccak_absorb::thread_trunc_ln393_fu_561_p1() {
    trunc_ln393_fu_561_p1 = pos_r.read().range(3-1, 0);
}

void keccak_absorb::thread_trunc_ln397_fu_630_p1() {
    trunc_ln397_fu_630_p1 = umax_fu_604_p3.read().range(2-1, 0);
}

void keccak_absorb::thread_trunc_ln401_fu_701_p1() {
    trunc_ln401_fu_701_p1 = xor_ln395_2_reg_1156.read().range(1-1, 0);
}

void keccak_absorb::thread_trunc_ln409_fu_764_p1() {
    trunc_ln409_fu_764_p1 = sub_ln403_fu_753_p2.read().range(3-1, 0);
}

void keccak_absorb::thread_trunc_ln412_fu_768_p1() {
    trunc_ln412_fu_768_p1 = sub_ln403_fu_753_p2.read().range(1-1, 0);
}

void keccak_absorb::thread_trunc_ln416_fu_808_p1() {
    trunc_ln416_fu_808_p1 = p_38_rec_reg_450.read().range(1-1, 0);
}

void keccak_absorb::thread_trunc_ln425_fu_853_p1() {
    trunc_ln425_fu_853_p1 = p_38_rec_reg_450.read().range(1-1, 0);
}

void keccak_absorb::thread_trunc_ln428_fu_984_p1() {
    trunc_ln428_fu_984_p1 = sub_ln428_fu_978_p2.read().range(33-1, 0);
}

void keccak_absorb::thread_trunc_ln438_fu_1023_p1() {
    trunc_ln438_fu_1023_p1 = i_5_reg_484.read().range(1-1, 0);
}

void keccak_absorb::thread_trunc_ln441_fu_1058_p1() {
    trunc_ln441_fu_1058_p1 = sub_ln428_reg_1392.read().range(32-1, 0);
}

void keccak_absorb::thread_umax_fu_604_p3() {
    umax_fu_604_p3 = (!empty_66_fu_598_p2.read()[0].is_01())? sc_lv<3>(): ((empty_66_fu_598_p2.read()[0].to_bool())? ap_const_lv3_5: xor_ln395_1_fu_592_p2.read());
}

void keccak_absorb::thread_xor_ln32_1_fu_812_p2() {
    xor_ln32_1_fu_812_p2 = (xor_ln416_1_reg_1297.read() ^ trunc_ln416_fu_808_p1.read());
}

void keccak_absorb::thread_xor_ln32_fu_857_p2() {
    xor_ln32_fu_857_p2 = (xor_ln416_1_reg_1297.read() ^ trunc_ln425_fu_853_p1.read());
}

void keccak_absorb::thread_xor_ln395_1_fu_592_p2() {
    xor_ln395_1_fu_592_p2 = (empty_65_fu_588_p1.read() ^ ap_const_lv3_7);
}

void keccak_absorb::thread_xor_ln395_2_fu_612_p2() {
    xor_ln395_2_fu_612_p2 = (umax_fu_604_p3.read() ^ ap_const_lv3_7);
}

void keccak_absorb::thread_xor_ln400_fu_728_p2() {
    xor_ln400_fu_728_p2 = (s_q0.read() ^ r_7_i_fu_708_p9.read());
}

void keccak_absorb::thread_xor_ln416_1_fu_797_p2() {
    xor_ln416_1_fu_797_p2 = (phi_ln408_reg_367.read() ^ ap_phi_mux_phi_ln408_1_phi_fu_404_p6.read());
}

void keccak_absorb::thread_xor_ln416_fu_912_p2() {
    xor_ln416_fu_912_p2 = (s_q0.read() ^ r_7_i6_fu_900_p9.read());
}

void keccak_absorb::thread_xor_ln425_fu_956_p2() {
    xor_ln425_fu_956_p2 = (s_q0.read() ^ r_7_i7_fu_944_p9.read());
}

void keccak_absorb::thread_xor_ln438_1_fu_1032_p2() {
    xor_ln438_1_fu_1032_p2 = (xor_ln438_fu_1027_p2.read() ^ xor_ln416_1_reg_1297.read());
}

void keccak_absorb::thread_xor_ln438_fu_1027_p2() {
    xor_ln438_fu_1027_p2 = (trunc_ln438_fu_1023_p1.read() ^ trunc_ln425_reg_1335.read());
}

void keccak_absorb::thread_xor_ln440_fu_1081_p2() {
    xor_ln440_fu_1081_p2 = (s_q0.read() ^ r_7_i5_fu_1061_p9.read());
}

void keccak_absorb::thread_zext_ln391_fu_550_p1() {
    zext_ln391_fu_550_p1 = esl_zext<64,3>(phi_ln391_reg_336.read());
}

void keccak_absorb::thread_zext_ln393_1_fu_568_p1() {
    zext_ln393_1_fu_568_p1 = esl_zext<5,3>(trunc_ln393_fu_561_p1.read());
}

void keccak_absorb::thread_zext_ln393_fu_564_p1() {
    zext_ln393_fu_564_p1 = esl_zext<32,3>(trunc_ln393_fu_561_p1.read());
}

void keccak_absorb::thread_zext_ln395_fu_578_p1() {
    zext_ln395_fu_578_p1 = esl_zext<4,3>(trunc_ln393_fu_561_p1.read());
}

void keccak_absorb::thread_zext_ln396_fu_673_p1() {
    zext_ln396_fu_673_p1 = esl_zext<64,32>(i_0_reg_358.read());
}

void keccak_absorb::thread_zext_ln400_fu_704_p1() {
    zext_ln400_fu_704_p1 = esl_zext<64,3>(tmp_reg_1205.read());
}

void keccak_absorb::thread_zext_ln403_1_fu_735_p1() {
    zext_ln403_1_fu_735_p1 = esl_zext<8,6>(p_12_reg_379.read());
}

void keccak_absorb::thread_zext_ln403_2_fu_743_p1() {
    zext_ln403_2_fu_743_p1 = esl_zext<8,2>(p_1_reg_389.read());
}

void keccak_absorb::thread_zext_ln403_fu_739_p1() {
    zext_ln403_fu_739_p1 = esl_zext<3,2>(p_1_reg_389.read());
}

void keccak_absorb::thread_zext_ln408_fu_777_p1() {
    zext_ln408_fu_777_p1 = esl_zext<9,6>(ap_phi_mux_p_23_phi_fu_417_p6.read());
}

void keccak_absorb::thread_zext_ln416_1_fu_885_p1() {
    zext_ln416_1_fu_885_p1 = esl_zext<64,5>(i_2_reg_462.read());
}

void keccak_absorb::thread_zext_ln423_2_fu_839_p1() {
    zext_ln423_2_fu_839_p1 = esl_zext<30,3>(tmp_939_fu_829_p4.read());
}

void keccak_absorb::thread_zext_ln423_fu_930_p1() {
    zext_ln423_fu_930_p1 = esl_zext<30,5>(i_3_reg_473.read());
}

void keccak_absorb::thread_zext_ln425_1_fu_939_p1() {
    zext_ln425_1_fu_939_p1 = esl_zext<64,30>(add_ln425_1_fu_934_p2.read());
}

void keccak_absorb::thread_zext_ln427_2_fu_970_p1() {
    zext_ln427_2_fu_970_p1 = esl_zext<9,8>(and_ln_fu_963_p3.read());
}

void keccak_absorb::thread_zext_ln427_fu_974_p1() {
    zext_ln427_fu_974_p1 = esl_zext<64,8>(and_ln_fu_963_p3.read());
}

void keccak_absorb::thread_zext_ln429_fu_993_p1() {
    zext_ln429_fu_993_p1 = esl_zext<32,9>(add_ln429_fu_988_p2.read());
}

void keccak_absorb::thread_zext_ln436_2_fu_1003_p1() {
    zext_ln436_2_fu_1003_p1 = esl_zext<33,32>(i_5_reg_484.read());
}

void keccak_absorb::thread_zext_ln436_fu_1018_p1() {
    zext_ln436_fu_1018_p1 = esl_zext<64,32>(i_5_reg_484.read());
}

void keccak_absorb::thread_zext_ln440_fu_1053_p1() {
    zext_ln440_fu_1053_p1 = esl_zext<64,6>(tmp_940_fu_1044_p4.read());
}

void keccak_absorb::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln391_fu_555_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(icmp_ln393_fu_572_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln391_fu_555_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln393_fu_572_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_649_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_block_state9_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln414_fu_803_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln415_fu_874_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_1_fu_504_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln423_fu_919_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln431_fu_997_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state25;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln436_fu_1007_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_state21;
            }
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<25>) ("XXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

