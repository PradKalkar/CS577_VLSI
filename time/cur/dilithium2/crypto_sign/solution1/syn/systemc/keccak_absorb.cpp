// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "keccak_absorb.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic keccak_absorb::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic keccak_absorb::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<25> keccak_absorb::ap_ST_fsm_state1 = "1";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state2 = "10";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state3 = "100";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state4 = "1000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state5 = "10000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state6 = "100000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state7 = "1000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state8 = "10000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state9 = "100000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state10 = "1000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_pp0_stage0 = "10000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state13 = "100000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state14 = "1000000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state15 = "10000000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state16 = "100000000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state17 = "1000000000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state18 = "10000000000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state19 = "100000000000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state20 = "1000000000000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state21 = "10000000000000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state22 = "100000000000000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state23 = "1000000000000000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state24 = "10000000000000000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state25 = "100000000000000000000000";
const sc_lv<25> keccak_absorb::ap_ST_fsm_state26 = "1000000000000000000000000";
const bool keccak_absorb::ap_const_boolean_1 = true;
const sc_lv<32> keccak_absorb::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> keccak_absorb::ap_const_lv32_3 = "11";
const sc_lv<32> keccak_absorb::ap_const_lv32_15 = "10101";
const sc_lv<32> keccak_absorb::ap_const_lv32_4 = "100";
const sc_lv<32> keccak_absorb::ap_const_lv32_16 = "10110";
const sc_lv<32> keccak_absorb::ap_const_lv32_5 = "101";
const sc_lv<32> keccak_absorb::ap_const_lv32_17 = "10111";
const sc_lv<32> keccak_absorb::ap_const_lv32_1 = "1";
const sc_lv<1> keccak_absorb::ap_const_lv1_1 = "1";
const sc_lv<1> keccak_absorb::ap_const_lv1_0 = "0";
const sc_lv<32> keccak_absorb::ap_const_lv32_2 = "10";
const sc_lv<32> keccak_absorb::ap_const_lv32_7 = "111";
const sc_lv<32> keccak_absorb::ap_const_lv32_8 = "1000";
const bool keccak_absorb::ap_const_boolean_0 = false;
const sc_lv<32> keccak_absorb::ap_const_lv32_9 = "1001";
const sc_lv<32> keccak_absorb::ap_const_lv32_A = "1010";
const sc_lv<32> keccak_absorb::ap_const_lv32_B = "1011";
const sc_lv<32> keccak_absorb::ap_const_lv32_D = "1101";
const sc_lv<32> keccak_absorb::ap_const_lv32_F = "1111";
const sc_lv<32> keccak_absorb::ap_const_lv32_10 = "10000";
const sc_lv<32> keccak_absorb::ap_const_lv32_11 = "10001";
const sc_lv<32> keccak_absorb::ap_const_lv32_12 = "10010";
const sc_lv<32> keccak_absorb::ap_const_lv32_13 = "10011";
const sc_lv<32> keccak_absorb::ap_const_lv32_14 = "10100";
const sc_lv<3> keccak_absorb::ap_const_lv3_0 = "000";
const sc_lv<64> keccak_absorb::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> keccak_absorb::ap_const_lv32_6 = "110";
const sc_lv<2> keccak_absorb::ap_const_lv2_2 = "10";
const sc_lv<6> keccak_absorb::ap_const_lv6_0 = "000000";
const sc_lv<32> keccak_absorb::ap_const_lv32_C = "1100";
const sc_lv<5> keccak_absorb::ap_const_lv5_0 = "00000";
const sc_lv<32> keccak_absorb::ap_const_lv32_E = "1110";
const sc_lv<32> keccak_absorb::ap_const_lv32_18 = "11000";
const sc_lv<64> keccak_absorb::ap_const_lv64_1 = "1";
const sc_lv<64> keccak_absorb::ap_const_lv64_2 = "10";
const sc_lv<64> keccak_absorb::ap_const_lv64_3 = "11";
const sc_lv<64> keccak_absorb::ap_const_lv64_4 = "100";
const sc_lv<64> keccak_absorb::ap_const_lv64_5 = "101";
const sc_lv<64> keccak_absorb::ap_const_lv64_6 = "110";
const sc_lv<64> keccak_absorb::ap_const_lv64_7 = "111";
const sc_lv<8> keccak_absorb::ap_const_lv8_0 = "00000000";
const sc_lv<3> keccak_absorb::ap_const_lv3_1 = "1";
const sc_lv<3> keccak_absorb::ap_const_lv3_7 = "111";
const sc_lv<4> keccak_absorb::ap_const_lv4_8 = "1000";
const sc_lv<4> keccak_absorb::ap_const_lv4_2 = "10";
const sc_lv<3> keccak_absorb::ap_const_lv3_5 = "101";
const sc_lv<2> keccak_absorb::ap_const_lv2_3 = "11";
const sc_lv<5> keccak_absorb::ap_const_lv5_1 = "1";

keccak_absorb::keccak_absorb(sc_module_name name) : sc_module(name), mVcdFile(0) {
    t_U = new keccak_absorb_2_t("t_U");
    t_U->clk(ap_clk);
    t_U->reset(ap_rst);
    t_U->address0(t_address0);
    t_U->ce0(t_ce0);
    t_U->we0(t_we0);
    t_U->d0(t_d0);
    t_U->q0(t_q0);
    t_U->address1(t_address1);
    t_U->ce1(t_ce1);
    t_U->we1(t_we1);
    t_U->d1(t_d1);
    t_U->q1(t_q1);
    grp_KeccakF1600_StatePer_1_fu_510 = new KeccakF1600_StatePer_1("grp_KeccakF1600_StatePer_1_fu_510");
    grp_KeccakF1600_StatePer_1_fu_510->ap_clk(ap_clk);
    grp_KeccakF1600_StatePer_1_fu_510->ap_rst(ap_rst);
    grp_KeccakF1600_StatePer_1_fu_510->ap_start(grp_KeccakF1600_StatePer_1_fu_510_ap_start);
    grp_KeccakF1600_StatePer_1_fu_510->ap_done(grp_KeccakF1600_StatePer_1_fu_510_ap_done);
    grp_KeccakF1600_StatePer_1_fu_510->ap_idle(grp_KeccakF1600_StatePer_1_fu_510_ap_idle);
    grp_KeccakF1600_StatePer_1_fu_510->ap_ready(grp_KeccakF1600_StatePer_1_fu_510_ap_ready);
    grp_KeccakF1600_StatePer_1_fu_510->state_address0(grp_KeccakF1600_StatePer_1_fu_510_state_address0);
    grp_KeccakF1600_StatePer_1_fu_510->state_ce0(grp_KeccakF1600_StatePer_1_fu_510_state_ce0);
    grp_KeccakF1600_StatePer_1_fu_510->state_we0(grp_KeccakF1600_StatePer_1_fu_510_state_we0);
    grp_KeccakF1600_StatePer_1_fu_510->state_d0(grp_KeccakF1600_StatePer_1_fu_510_state_d0);
    grp_KeccakF1600_StatePer_1_fu_510->state_q0(s_q0);
    grp_KeccakF1600_StatePer_1_fu_510->state_address1(grp_KeccakF1600_StatePer_1_fu_510_state_address1);
    grp_KeccakF1600_StatePer_1_fu_510->state_ce1(grp_KeccakF1600_StatePer_1_fu_510_state_ce1);
    grp_KeccakF1600_StatePer_1_fu_510->state_we1(grp_KeccakF1600_StatePer_1_fu_510_state_we1);
    grp_KeccakF1600_StatePer_1_fu_510->state_d1(grp_KeccakF1600_StatePer_1_fu_510_state_d1);
    grp_KeccakF1600_StatePer_1_fu_510->state_q1(s_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln389_fu_550_p2);
    sensitive << ( phi_ln389_reg_342 );

    SC_METHOD(thread_add_ln392_fu_684_p2);
    sensitive << ( zext_ln391_1_reg_1154 );
    sensitive << ( p_cast6_reg_1172 );

    SC_METHOD(thread_add_ln394_fu_660_p2);
    sensitive << ( p_05_rec_reg_353 );

    SC_METHOD(thread_add_ln395_fu_640_p2);
    sensitive << ( trunc_ln395_fu_636_p1 );

    SC_METHOD(thread_add_ln396_fu_646_p2);
    sensitive << ( empty_reg_1130 );
    sensitive << ( sext_ln395_fu_632_p1 );

    SC_METHOD(thread_add_ln417_fu_915_p2);
    sensitive << ( empty_107_reg_1291 );
    sensitive << ( p_38_rec_reg_456 );

    SC_METHOD(thread_add_ln422_fu_930_p2);
    sensitive << ( i_3_reg_479 );

    SC_METHOD(thread_add_ln424_1_fu_940_p2);
    sensitive << ( zext_ln422_2_reg_1330 );
    sensitive << ( zext_ln422_fu_936_p1 );

    SC_METHOD(thread_add_ln428_fu_994_p2);
    sensitive << ( zext_ln406_reg_1281 );
    sensitive << ( zext_ln426_2_fu_976_p1 );

    SC_METHOD(thread_add_ln440_fu_1094_p2);
    sensitive << ( zext_ln428_reg_1415 );
    sensitive << ( trunc_ln440_reg_1479 );

    SC_METHOD(thread_and_ln_fu_969_p3);
    sensitive << ( tmp_3266_reg_1335 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state9_on_subcall_done);
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_510_ap_done );
    sensitive << ( ap_predicate_op127_call_state9 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state11);
    sensitive << ( icmp_ln413_fu_880_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_p_23_phi_fu_423_p6);
    sensitive << ( icmp_ln401_reg_1263 );
    sensitive << ( icmp_ln401_1_reg_1267 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( p_23_reg_420 );

    SC_METHOD(thread_ap_phi_mux_p_2_phi_fu_438_p6);
    sensitive << ( icmp_ln401_reg_1263 );
    sensitive << ( icmp_ln401_1_reg_1267 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( sub_ln407_fu_778_p2 );
    sensitive << ( p_2_reg_435 );

    SC_METHOD(thread_ap_phi_mux_p_34_phi_fu_504_p4);
    sensitive << ( icmp_ln430_reg_1421 );
    sensitive << ( add_ln440_fu_1094_p2 );
    sensitive << ( p_34_reg_501 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_ap_phi_mux_phi_ln406_1_phi_fu_410_p6);
    sensitive << ( icmp_ln401_reg_1263 );
    sensitive << ( icmp_ln401_1_reg_1267 );
    sensitive << ( trunc_ln410_reg_1276 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( phi_ln406_1_reg_406 );

    SC_METHOD(thread_ap_predicate_op127_call_state9);
    sensitive << ( icmp_ln401_reg_1263 );
    sensitive << ( icmp_ln401_1_reg_1267 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_phi_mux_p_34_phi_fu_504_p4 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_empty_101_fu_546_p1);
    sensitive << ( r );

    SC_METHOD(thread_empty_104_fu_594_p1);
    sensitive << ( sub_ln393_fu_588_p2 );

    SC_METHOD(thread_empty_105_fu_604_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln389_fu_561_p2 );
    sensitive << ( icmp_ln391_fu_578_p2 );
    sensitive << ( sub_ln393_fu_588_p2 );

    SC_METHOD(thread_empty_106_fu_651_p1);
    sensitive << ( p_05_rec_reg_353 );

    SC_METHOD(thread_empty_107_fu_791_p1);
    sensitive << ( r );

    SC_METHOD(thread_empty_fu_542_p1);
    sensitive << ( pos_r );

    SC_METHOD(thread_exitcond_fu_655_p2);
    sensitive << ( sext_ln393_reg_1167 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_05_rec_reg_353 );

    SC_METHOD(thread_grp_KeccakF1600_StatePer_1_fu_510_ap_start);
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_510_ap_start_reg );

    SC_METHOD(thread_i_33_fu_885_p2);
    sensitive << ( i_2_reg_468 );

    SC_METHOD(thread_i_34_fu_1018_p2);
    sensitive << ( i_5_reg_490 );

    SC_METHOD(thread_i_fu_673_p2);
    sensitive << ( i_0_reg_364 );

    SC_METHOD(thread_icmp_ln389_fu_561_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( phi_ln389_reg_342 );

    SC_METHOD(thread_icmp_ln391_fu_578_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln389_fu_561_p2 );
    sensitive << ( trunc_ln391_fu_567_p1 );

    SC_METHOD(thread_icmp_ln401_1_fu_764_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln401_fu_753_p2 );
    sensitive << ( zext_ln401_2_fu_749_p1 );
    sensitive << ( sub_ln401_fu_759_p2 );

    SC_METHOD(thread_icmp_ln401_fu_753_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( p_12_reg_385 );

    SC_METHOD(thread_icmp_ln412_fu_809_p2);
    sensitive << ( empty_107_reg_1291 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( indvars_iv_reg_446 );

    SC_METHOD(thread_icmp_ln413_fu_880_p2);
    sensitive << ( i_2_reg_468 );
    sensitive << ( tmp_s_reg_1298 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln422_fu_925_p2);
    sensitive << ( tmp_3266_reg_1335 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( i_3_reg_479 );

    SC_METHOD(thread_icmp_ln430_fu_1003_p2);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( indvars_iv_reg_446 );
    sensitive << ( zext_ln426_fu_980_p1 );

    SC_METHOD(thread_icmp_ln435_fu_1013_p2);
    sensitive << ( trunc_ln427_reg_1405 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( zext_ln435_2_fu_1009_p1 );

    SC_METHOD(thread_p_cast6_fu_628_p1);
    sensitive << ( xor_ln393_2_fu_618_p2 );

    SC_METHOD(thread_r_7_i5_fu_1067_p9);
    sensitive << ( t_q0 );
    sensitive << ( reg_516 );
    sensitive << ( t_q1 );
    sensitive << ( reg_521 );
    sensitive << ( reg_526 );
    sensitive << ( reg_530 );
    sensitive << ( reg_534 );
    sensitive << ( reg_538 );

    SC_METHOD(thread_r_7_i6_fu_896_p9);
    sensitive << ( select_ln32_2_reg_1314 );
    sensitive << ( select_ln32_3_reg_1322 );

    SC_METHOD(thread_r_7_i7_fu_950_p9);
    sensitive << ( select_ln32_reg_1346 );
    sensitive << ( select_ln32_1_reg_1354 );

    SC_METHOD(thread_r_7_i_fu_714_p9);
    sensitive << ( t_q0 );
    sensitive << ( reg_516 );
    sensitive << ( t_q1 );
    sensitive << ( reg_521 );
    sensitive << ( reg_526 );
    sensitive << ( reg_530 );
    sensitive << ( reg_534 );
    sensitive << ( reg_538 );

    SC_METHOD(thread_s_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( s_addr_reg_1251 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_predicate_op127_call_state9 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( s_addr_7_reg_1473 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_510_state_address0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( zext_ln398_fu_710_p1 );
    sensitive << ( zext_ln415_1_fu_891_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_s_address1);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_predicate_op127_call_state9 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( s_addr_6_reg_1371 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( s_addr_5_reg_1395 );
    sensitive << ( s_addr_7_reg_1473 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_510_state_address1 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln424_1_fu_945_p1 );

    SC_METHOD(thread_s_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_predicate_op127_call_state9 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_510_state_ce0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_s_ce1);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_predicate_op127_call_state9 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_510_state_ce1 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_s_d0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_predicate_op127_call_state9 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_510_state_d0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( xor_ln398_fu_734_p2 );

    SC_METHOD(thread_s_d1);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_predicate_op127_call_state9 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_510_state_d1 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( xor_ln415_fu_908_p2 );
    sensitive << ( xor_ln424_fu_962_p2 );
    sensitive << ( xor_ln439_fu_1087_p2 );

    SC_METHOD(thread_s_we0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_predicate_op127_call_state9 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_510_state_we0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_s_we1);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_predicate_op127_call_state9 );
    sensitive << ( icmp_ln413_reg_1362 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln430_reg_1421 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_510_state_we1 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_select_ln32_1_fu_874_p3);
    sensitive << ( m_0_read );
    sensitive << ( m_1_read );
    sensitive << ( xor_ln32_fu_863_p2 );

    SC_METHOD(thread_select_ln32_2_fu_823_p3);
    sensitive << ( m_0_read );
    sensitive << ( m_1_read );
    sensitive << ( xor_ln32_1_fu_818_p2 );

    SC_METHOD(thread_select_ln32_3_fu_829_p3);
    sensitive << ( m_0_read );
    sensitive << ( m_1_read );
    sensitive << ( xor_ln32_1_fu_818_p2 );

    SC_METHOD(thread_select_ln32_fu_868_p3);
    sensitive << ( m_0_read );
    sensitive << ( m_1_read );
    sensitive << ( xor_ln32_fu_863_p2 );

    SC_METHOD(thread_select_ln394_fu_666_p3);
    sensitive << ( m_0_read );
    sensitive << ( m_1_read );
    sensitive << ( empty_106_fu_651_p1 );

    SC_METHOD(thread_select_ln437_fu_1043_p3);
    sensitive << ( m_0_read );
    sensitive << ( m_1_read );
    sensitive << ( xor_ln437_1_fu_1038_p2 );

    SC_METHOD(thread_sext_ln393_fu_624_p1);
    sensitive << ( xor_ln393_2_fu_618_p2 );

    SC_METHOD(thread_sext_ln395_fu_632_p1);
    sensitive << ( xor_ln393_2_fu_618_p2 );

    SC_METHOD(thread_sext_ln398_fu_688_p1);
    sensitive << ( add_ln392_fu_684_p2 );

    SC_METHOD(thread_sext_ln406_fu_787_p1);
    sensitive << ( ap_phi_mux_p_2_phi_fu_438_p6 );

    SC_METHOD(thread_sub_ln393_fu_588_p2);
    sensitive << ( zext_ln393_fu_584_p1 );

    SC_METHOD(thread_sub_ln398_fu_692_p2);
    sensitive << ( add_ln396_reg_1182 );
    sensitive << ( sext_ln398_fu_688_p1 );

    SC_METHOD(thread_sub_ln401_fu_759_p2);
    sensitive << ( empty_101_reg_1136 );
    sensitive << ( zext_ln401_1_fu_741_p1 );

    SC_METHOD(thread_sub_ln407_fu_778_p2);
    sensitive << ( zext_ln401_reg_1256 );
    sensitive << ( trunc_ln407_reg_1271 );

    SC_METHOD(thread_sub_ln420_fu_920_p2);
    sensitive << ( empty_107_reg_1291 );
    sensitive << ( indvars_iv_reg_446 );

    SC_METHOD(thread_sub_ln427_fu_984_p2);
    sensitive << ( indvars_iv_reg_446 );
    sensitive << ( zext_ln426_fu_980_p1 );

    SC_METHOD(thread_t_addr_28_reg_1425);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( icmp_ln430_fu_1003_p2 );

    SC_METHOD(thread_t_addr_29_reg_1430);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( icmp_ln430_fu_1003_p2 );

    SC_METHOD(thread_t_addr_30_gep_fu_280_p3);
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_t_addr_30_reg_1435);
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_t_addr_31_gep_fu_288_p3);
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_t_addr_31_reg_1440);
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_t_addr_32_gep_fu_296_p3);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_t_addr_32_reg_1445);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_t_addr_33_gep_fu_304_p3);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_t_addr_33_reg_1450);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_t_addr_34_gep_fu_312_p3);
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_t_addr_34_reg_1455);
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_t_addr_35_gep_fu_320_p3);
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_t_addr_35_reg_1460);
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_t_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_655_p2 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( t_addr_29_reg_1430 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( t_addr_31_gep_fu_288_p3 );
    sensitive << ( t_addr_31_reg_1440 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( t_addr_33_gep_fu_304_p3 );
    sensitive << ( t_addr_33_reg_1450 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( t_addr_35_gep_fu_320_p3 );
    sensitive << ( t_addr_35_reg_1460 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( zext_ln389_fu_556_p1 );
    sensitive << ( zext_ln394_fu_679_p1 );

    SC_METHOD(thread_t_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( t_addr_28_reg_1425 );
    sensitive << ( t_addr_30_gep_fu_280_p3 );
    sensitive << ( t_addr_30_reg_1435 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( t_addr_32_gep_fu_296_p3 );
    sensitive << ( t_addr_32_reg_1445 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( t_addr_34_gep_fu_312_p3 );
    sensitive << ( t_addr_34_reg_1455 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( zext_ln435_fu_1024_p1 );

    SC_METHOD(thread_t_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_655_p2 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_t_ce1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_t_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_655_p2 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( select_ln394_fu_666_p3 );

    SC_METHOD(thread_t_d1);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( select_ln437_fu_1043_p3 );

    SC_METHOD(thread_t_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_655_p2 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( icmp_ln430_fu_1003_p2 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_t_we1);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( icmp_ln430_fu_1003_p2 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( icmp_ln435_fu_1013_p2 );

    SC_METHOD(thread_tmp_496_fu_835_p4);
    sensitive << ( p_23_reg_420 );

    SC_METHOD(thread_tmp_497_fu_1050_p4);
    sensitive << ( add_ln428_reg_1410 );

    SC_METHOD(thread_trunc_ln391_fu_567_p1);
    sensitive << ( pos_r );

    SC_METHOD(thread_trunc_ln395_fu_636_p1);
    sensitive << ( umax_fu_610_p3 );

    SC_METHOD(thread_trunc_ln399_fu_707_p1);
    sensitive << ( xor_ln393_2_reg_1162 );

    SC_METHOD(thread_trunc_ln407_fu_770_p1);
    sensitive << ( sub_ln401_fu_759_p2 );

    SC_METHOD(thread_trunc_ln410_fu_774_p1);
    sensitive << ( sub_ln401_fu_759_p2 );

    SC_METHOD(thread_trunc_ln415_fu_814_p1);
    sensitive << ( p_38_rec_reg_456 );

    SC_METHOD(thread_trunc_ln424_fu_859_p1);
    sensitive << ( p_38_rec_reg_456 );

    SC_METHOD(thread_trunc_ln427_fu_990_p1);
    sensitive << ( sub_ln427_fu_984_p2 );

    SC_METHOD(thread_trunc_ln437_fu_1029_p1);
    sensitive << ( i_5_reg_490 );

    SC_METHOD(thread_trunc_ln440_fu_1064_p1);
    sensitive << ( sub_ln427_reg_1400 );

    SC_METHOD(thread_umax_fu_610_p3);
    sensitive << ( empty_105_fu_604_p2 );
    sensitive << ( xor_ln393_1_fu_598_p2 );

    SC_METHOD(thread_xor_ln32_1_fu_818_p2);
    sensitive << ( xor_ln415_1_reg_1303 );
    sensitive << ( trunc_ln415_fu_814_p1 );

    SC_METHOD(thread_xor_ln32_fu_863_p2);
    sensitive << ( xor_ln415_1_reg_1303 );
    sensitive << ( trunc_ln424_fu_859_p1 );

    SC_METHOD(thread_xor_ln393_1_fu_598_p2);
    sensitive << ( empty_104_fu_594_p1 );

    SC_METHOD(thread_xor_ln393_2_fu_618_p2);
    sensitive << ( umax_fu_610_p3 );

    SC_METHOD(thread_xor_ln398_fu_734_p2);
    sensitive << ( s_q0 );
    sensitive << ( r_7_i_fu_714_p9 );

    SC_METHOD(thread_xor_ln415_1_fu_803_p2);
    sensitive << ( phi_ln406_reg_373 );
    sensitive << ( ap_phi_mux_phi_ln406_1_phi_fu_410_p6 );

    SC_METHOD(thread_xor_ln415_fu_908_p2);
    sensitive << ( s_q0 );
    sensitive << ( r_7_i6_fu_896_p9 );

    SC_METHOD(thread_xor_ln424_fu_962_p2);
    sensitive << ( s_q1 );
    sensitive << ( r_7_i7_fu_950_p9 );

    SC_METHOD(thread_xor_ln437_1_fu_1038_p2);
    sensitive << ( xor_ln415_1_reg_1303 );
    sensitive << ( xor_ln437_fu_1033_p2 );

    SC_METHOD(thread_xor_ln437_fu_1033_p2);
    sensitive << ( trunc_ln424_reg_1341 );
    sensitive << ( trunc_ln437_fu_1029_p1 );

    SC_METHOD(thread_xor_ln439_fu_1087_p2);
    sensitive << ( s_q0 );
    sensitive << ( r_7_i5_fu_1067_p9 );

    SC_METHOD(thread_zext_ln389_fu_556_p1);
    sensitive << ( phi_ln389_reg_342 );

    SC_METHOD(thread_zext_ln391_1_fu_574_p1);
    sensitive << ( trunc_ln391_fu_567_p1 );

    SC_METHOD(thread_zext_ln391_fu_570_p1);
    sensitive << ( trunc_ln391_fu_567_p1 );

    SC_METHOD(thread_zext_ln393_fu_584_p1);
    sensitive << ( trunc_ln391_fu_567_p1 );

    SC_METHOD(thread_zext_ln394_fu_679_p1);
    sensitive << ( i_0_reg_364 );

    SC_METHOD(thread_zext_ln398_fu_710_p1);
    sensitive << ( tmp_reg_1211 );

    SC_METHOD(thread_zext_ln401_1_fu_741_p1);
    sensitive << ( p_12_reg_385 );

    SC_METHOD(thread_zext_ln401_2_fu_749_p1);
    sensitive << ( p_1_reg_395 );

    SC_METHOD(thread_zext_ln401_fu_745_p1);
    sensitive << ( p_1_reg_395 );

    SC_METHOD(thread_zext_ln406_fu_783_p1);
    sensitive << ( ap_phi_mux_p_23_phi_fu_423_p6 );

    SC_METHOD(thread_zext_ln415_1_fu_891_p1);
    sensitive << ( i_2_reg_468 );

    SC_METHOD(thread_zext_ln422_2_fu_845_p1);
    sensitive << ( tmp_496_fu_835_p4 );

    SC_METHOD(thread_zext_ln422_fu_936_p1);
    sensitive << ( i_3_reg_479 );

    SC_METHOD(thread_zext_ln424_1_fu_945_p1);
    sensitive << ( add_ln424_1_fu_940_p2 );

    SC_METHOD(thread_zext_ln426_2_fu_976_p1);
    sensitive << ( and_ln_fu_969_p3 );

    SC_METHOD(thread_zext_ln426_fu_980_p1);
    sensitive << ( and_ln_fu_969_p3 );

    SC_METHOD(thread_zext_ln428_fu_999_p1);
    sensitive << ( add_ln428_fu_994_p2 );

    SC_METHOD(thread_zext_ln435_2_fu_1009_p1);
    sensitive << ( i_5_reg_490 );

    SC_METHOD(thread_zext_ln435_fu_1024_p1);
    sensitive << ( i_5_reg_490 );

    SC_METHOD(thread_zext_ln439_fu_1059_p1);
    sensitive << ( tmp_497_fu_1050_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln389_fu_561_p2 );
    sensitive << ( icmp_ln391_fu_578_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_655_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_510_ap_done );
    sensitive << ( ap_block_state9_on_subcall_done );
    sensitive << ( icmp_ln412_fu_809_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln413_fu_880_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( icmp_ln422_fu_925_p2 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( icmp_ln430_fu_1003_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( icmp_ln435_fu_1013_p2 );

    ap_CS_fsm = "0000000000000000000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    grp_KeccakF1600_StatePer_1_fu_510_ap_start_reg = SC_LOGIC_0;
    ap_return_preg = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "keccak_absorb_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, s_address0, "(port)s_address0");
    sc_trace(mVcdFile, s_ce0, "(port)s_ce0");
    sc_trace(mVcdFile, s_we0, "(port)s_we0");
    sc_trace(mVcdFile, s_d0, "(port)s_d0");
    sc_trace(mVcdFile, s_q0, "(port)s_q0");
    sc_trace(mVcdFile, s_address1, "(port)s_address1");
    sc_trace(mVcdFile, s_ce1, "(port)s_ce1");
    sc_trace(mVcdFile, s_we1, "(port)s_we1");
    sc_trace(mVcdFile, s_d1, "(port)s_d1");
    sc_trace(mVcdFile, s_q1, "(port)s_q1");
    sc_trace(mVcdFile, r, "(port)r");
    sc_trace(mVcdFile, pos_r, "(port)pos_r");
    sc_trace(mVcdFile, m_0_read, "(port)m_0_read");
    sc_trace(mVcdFile, m_1_read, "(port)m_1_read");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_2_reg_468, "i_2_reg_468");
    sc_trace(mVcdFile, t_q0, "t_q0");
    sc_trace(mVcdFile, reg_516, "reg_516");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, t_q1, "t_q1");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, reg_521, "reg_521");
    sc_trace(mVcdFile, reg_526, "reg_526");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, reg_530, "reg_530");
    sc_trace(mVcdFile, reg_534, "reg_534");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, reg_538, "reg_538");
    sc_trace(mVcdFile, empty_fu_542_p1, "empty_fu_542_p1");
    sc_trace(mVcdFile, empty_reg_1130, "empty_reg_1130");
    sc_trace(mVcdFile, empty_101_fu_546_p1, "empty_101_fu_546_p1");
    sc_trace(mVcdFile, empty_101_reg_1136, "empty_101_reg_1136");
    sc_trace(mVcdFile, add_ln389_fu_550_p2, "add_ln389_fu_550_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln391_fu_570_p1, "zext_ln391_fu_570_p1");
    sc_trace(mVcdFile, icmp_ln389_fu_561_p2, "icmp_ln389_fu_561_p2");
    sc_trace(mVcdFile, zext_ln391_1_fu_574_p1, "zext_ln391_1_fu_574_p1");
    sc_trace(mVcdFile, zext_ln391_1_reg_1154, "zext_ln391_1_reg_1154");
    sc_trace(mVcdFile, xor_ln393_2_fu_618_p2, "xor_ln393_2_fu_618_p2");
    sc_trace(mVcdFile, xor_ln393_2_reg_1162, "xor_ln393_2_reg_1162");
    sc_trace(mVcdFile, icmp_ln391_fu_578_p2, "icmp_ln391_fu_578_p2");
    sc_trace(mVcdFile, sext_ln393_fu_624_p1, "sext_ln393_fu_624_p1");
    sc_trace(mVcdFile, sext_ln393_reg_1167, "sext_ln393_reg_1167");
    sc_trace(mVcdFile, p_cast6_fu_628_p1, "p_cast6_fu_628_p1");
    sc_trace(mVcdFile, p_cast6_reg_1172, "p_cast6_reg_1172");
    sc_trace(mVcdFile, add_ln395_fu_640_p2, "add_ln395_fu_640_p2");
    sc_trace(mVcdFile, add_ln395_reg_1177, "add_ln395_reg_1177");
    sc_trace(mVcdFile, add_ln396_fu_646_p2, "add_ln396_fu_646_p2");
    sc_trace(mVcdFile, add_ln396_reg_1182, "add_ln396_reg_1182");
    sc_trace(mVcdFile, add_ln394_fu_660_p2, "add_ln394_fu_660_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_fu_673_p2, "i_fu_673_p2");
    sc_trace(mVcdFile, exitcond_fu_655_p2, "exitcond_fu_655_p2");
    sc_trace(mVcdFile, tmp_reg_1211, "tmp_reg_1211");
    sc_trace(mVcdFile, trunc_ln399_fu_707_p1, "trunc_ln399_fu_707_p1");
    sc_trace(mVcdFile, trunc_ln399_reg_1216, "trunc_ln399_reg_1216");
    sc_trace(mVcdFile, s_addr_reg_1251, "s_addr_reg_1251");
    sc_trace(mVcdFile, zext_ln401_fu_745_p1, "zext_ln401_fu_745_p1");
    sc_trace(mVcdFile, zext_ln401_reg_1256, "zext_ln401_reg_1256");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, icmp_ln401_fu_753_p2, "icmp_ln401_fu_753_p2");
    sc_trace(mVcdFile, icmp_ln401_reg_1263, "icmp_ln401_reg_1263");
    sc_trace(mVcdFile, icmp_ln401_1_fu_764_p2, "icmp_ln401_1_fu_764_p2");
    sc_trace(mVcdFile, icmp_ln401_1_reg_1267, "icmp_ln401_1_reg_1267");
    sc_trace(mVcdFile, trunc_ln407_fu_770_p1, "trunc_ln407_fu_770_p1");
    sc_trace(mVcdFile, trunc_ln407_reg_1271, "trunc_ln407_reg_1271");
    sc_trace(mVcdFile, trunc_ln410_fu_774_p1, "trunc_ln410_fu_774_p1");
    sc_trace(mVcdFile, trunc_ln410_reg_1276, "trunc_ln410_reg_1276");
    sc_trace(mVcdFile, zext_ln406_fu_783_p1, "zext_ln406_fu_783_p1");
    sc_trace(mVcdFile, zext_ln406_reg_1281, "zext_ln406_reg_1281");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_510_ap_ready, "grp_KeccakF1600_StatePer_1_fu_510_ap_ready");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_510_ap_done, "grp_KeccakF1600_StatePer_1_fu_510_ap_done");
    sc_trace(mVcdFile, ap_predicate_op127_call_state9, "ap_predicate_op127_call_state9");
    sc_trace(mVcdFile, ap_block_state9_on_subcall_done, "ap_block_state9_on_subcall_done");
    sc_trace(mVcdFile, sext_ln406_fu_787_p1, "sext_ln406_fu_787_p1");
    sc_trace(mVcdFile, empty_107_fu_791_p1, "empty_107_fu_791_p1");
    sc_trace(mVcdFile, empty_107_reg_1291, "empty_107_reg_1291");
    sc_trace(mVcdFile, tmp_s_reg_1298, "tmp_s_reg_1298");
    sc_trace(mVcdFile, xor_ln415_1_fu_803_p2, "xor_ln415_1_fu_803_p2");
    sc_trace(mVcdFile, xor_ln415_1_reg_1303, "xor_ln415_1_reg_1303");
    sc_trace(mVcdFile, icmp_ln412_fu_809_p2, "icmp_ln412_fu_809_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, select_ln32_2_fu_823_p3, "select_ln32_2_fu_823_p3");
    sc_trace(mVcdFile, select_ln32_2_reg_1314, "select_ln32_2_reg_1314");
    sc_trace(mVcdFile, select_ln32_3_fu_829_p3, "select_ln32_3_fu_829_p3");
    sc_trace(mVcdFile, select_ln32_3_reg_1322, "select_ln32_3_reg_1322");
    sc_trace(mVcdFile, zext_ln422_2_fu_845_p1, "zext_ln422_2_fu_845_p1");
    sc_trace(mVcdFile, zext_ln422_2_reg_1330, "zext_ln422_2_reg_1330");
    sc_trace(mVcdFile, tmp_3266_reg_1335, "tmp_3266_reg_1335");
    sc_trace(mVcdFile, trunc_ln424_fu_859_p1, "trunc_ln424_fu_859_p1");
    sc_trace(mVcdFile, trunc_ln424_reg_1341, "trunc_ln424_reg_1341");
    sc_trace(mVcdFile, select_ln32_fu_868_p3, "select_ln32_fu_868_p3");
    sc_trace(mVcdFile, select_ln32_reg_1346, "select_ln32_reg_1346");
    sc_trace(mVcdFile, select_ln32_1_fu_874_p3, "select_ln32_1_fu_874_p3");
    sc_trace(mVcdFile, select_ln32_1_reg_1354, "select_ln32_1_reg_1354");
    sc_trace(mVcdFile, icmp_ln413_fu_880_p2, "icmp_ln413_fu_880_p2");
    sc_trace(mVcdFile, icmp_ln413_reg_1362, "icmp_ln413_reg_1362");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter0, "ap_block_state11_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter1, "ap_block_state12_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_33_fu_885_p2, "i_33_fu_885_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, s_addr_6_reg_1371, "s_addr_6_reg_1371");
    sc_trace(mVcdFile, add_ln417_fu_915_p2, "add_ln417_fu_915_p2");
    sc_trace(mVcdFile, add_ln417_reg_1377, "add_ln417_reg_1377");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, sub_ln420_fu_920_p2, "sub_ln420_fu_920_p2");
    sc_trace(mVcdFile, sub_ln420_reg_1382, "sub_ln420_reg_1382");
    sc_trace(mVcdFile, add_ln422_fu_930_p2, "add_ln422_fu_930_p2");
    sc_trace(mVcdFile, add_ln422_reg_1390, "add_ln422_reg_1390");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, s_addr_5_reg_1395, "s_addr_5_reg_1395");
    sc_trace(mVcdFile, icmp_ln422_fu_925_p2, "icmp_ln422_fu_925_p2");
    sc_trace(mVcdFile, sub_ln427_fu_984_p2, "sub_ln427_fu_984_p2");
    sc_trace(mVcdFile, sub_ln427_reg_1400, "sub_ln427_reg_1400");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, trunc_ln427_fu_990_p1, "trunc_ln427_fu_990_p1");
    sc_trace(mVcdFile, trunc_ln427_reg_1405, "trunc_ln427_reg_1405");
    sc_trace(mVcdFile, add_ln428_fu_994_p2, "add_ln428_fu_994_p2");
    sc_trace(mVcdFile, add_ln428_reg_1410, "add_ln428_reg_1410");
    sc_trace(mVcdFile, zext_ln428_fu_999_p1, "zext_ln428_fu_999_p1");
    sc_trace(mVcdFile, zext_ln428_reg_1415, "zext_ln428_reg_1415");
    sc_trace(mVcdFile, icmp_ln430_fu_1003_p2, "icmp_ln430_fu_1003_p2");
    sc_trace(mVcdFile, icmp_ln430_reg_1421, "icmp_ln430_reg_1421");
    sc_trace(mVcdFile, t_addr_28_reg_1425, "t_addr_28_reg_1425");
    sc_trace(mVcdFile, t_addr_29_reg_1430, "t_addr_29_reg_1430");
    sc_trace(mVcdFile, t_addr_30_gep_fu_280_p3, "t_addr_30_gep_fu_280_p3");
    sc_trace(mVcdFile, t_addr_30_reg_1435, "t_addr_30_reg_1435");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, t_addr_31_gep_fu_288_p3, "t_addr_31_gep_fu_288_p3");
    sc_trace(mVcdFile, t_addr_31_reg_1440, "t_addr_31_reg_1440");
    sc_trace(mVcdFile, t_addr_32_gep_fu_296_p3, "t_addr_32_gep_fu_296_p3");
    sc_trace(mVcdFile, t_addr_32_reg_1445, "t_addr_32_reg_1445");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, t_addr_33_gep_fu_304_p3, "t_addr_33_gep_fu_304_p3");
    sc_trace(mVcdFile, t_addr_33_reg_1450, "t_addr_33_reg_1450");
    sc_trace(mVcdFile, t_addr_34_gep_fu_312_p3, "t_addr_34_gep_fu_312_p3");
    sc_trace(mVcdFile, t_addr_34_reg_1455, "t_addr_34_reg_1455");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, t_addr_35_gep_fu_320_p3, "t_addr_35_gep_fu_320_p3");
    sc_trace(mVcdFile, t_addr_35_reg_1460, "t_addr_35_reg_1460");
    sc_trace(mVcdFile, i_34_fu_1018_p2, "i_34_fu_1018_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, s_addr_7_reg_1473, "s_addr_7_reg_1473");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, trunc_ln440_fu_1064_p1, "trunc_ln440_fu_1064_p1");
    sc_trace(mVcdFile, trunc_ln440_reg_1479, "trunc_ln440_reg_1479");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state11, "ap_condition_pp0_exit_iter0_state11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, t_address0, "t_address0");
    sc_trace(mVcdFile, t_ce0, "t_ce0");
    sc_trace(mVcdFile, t_we0, "t_we0");
    sc_trace(mVcdFile, t_d0, "t_d0");
    sc_trace(mVcdFile, t_address1, "t_address1");
    sc_trace(mVcdFile, t_ce1, "t_ce1");
    sc_trace(mVcdFile, t_we1, "t_we1");
    sc_trace(mVcdFile, t_d1, "t_d1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_510_ap_start, "grp_KeccakF1600_StatePer_1_fu_510_ap_start");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_510_ap_idle, "grp_KeccakF1600_StatePer_1_fu_510_ap_idle");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_510_state_address0, "grp_KeccakF1600_StatePer_1_fu_510_state_address0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_510_state_ce0, "grp_KeccakF1600_StatePer_1_fu_510_state_ce0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_510_state_we0, "grp_KeccakF1600_StatePer_1_fu_510_state_we0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_510_state_d0, "grp_KeccakF1600_StatePer_1_fu_510_state_d0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_510_state_address1, "grp_KeccakF1600_StatePer_1_fu_510_state_address1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_510_state_ce1, "grp_KeccakF1600_StatePer_1_fu_510_state_ce1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_510_state_we1, "grp_KeccakF1600_StatePer_1_fu_510_state_we1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_510_state_d1, "grp_KeccakF1600_StatePer_1_fu_510_state_d1");
    sc_trace(mVcdFile, phi_ln389_reg_342, "phi_ln389_reg_342");
    sc_trace(mVcdFile, p_05_rec_reg_353, "p_05_rec_reg_353");
    sc_trace(mVcdFile, i_0_reg_364, "i_0_reg_364");
    sc_trace(mVcdFile, phi_ln406_reg_373, "phi_ln406_reg_373");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, p_12_reg_385, "p_12_reg_385");
    sc_trace(mVcdFile, p_1_reg_395, "p_1_reg_395");
    sc_trace(mVcdFile, ap_phi_mux_phi_ln406_1_phi_fu_410_p6, "ap_phi_mux_phi_ln406_1_phi_fu_410_p6");
    sc_trace(mVcdFile, phi_ln406_1_reg_406, "phi_ln406_1_reg_406");
    sc_trace(mVcdFile, ap_phi_mux_p_23_phi_fu_423_p6, "ap_phi_mux_p_23_phi_fu_423_p6");
    sc_trace(mVcdFile, p_23_reg_420, "p_23_reg_420");
    sc_trace(mVcdFile, sub_ln407_fu_778_p2, "sub_ln407_fu_778_p2");
    sc_trace(mVcdFile, ap_phi_mux_p_2_phi_fu_438_p6, "ap_phi_mux_p_2_phi_fu_438_p6");
    sc_trace(mVcdFile, p_2_reg_435, "p_2_reg_435");
    sc_trace(mVcdFile, indvars_iv_reg_446, "indvars_iv_reg_446");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, p_38_rec_reg_456, "p_38_rec_reg_456");
    sc_trace(mVcdFile, i_3_reg_479, "i_3_reg_479");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, i_5_reg_490, "i_5_reg_490");
    sc_trace(mVcdFile, icmp_ln435_fu_1013_p2, "icmp_ln435_fu_1013_p2");
    sc_trace(mVcdFile, add_ln440_fu_1094_p2, "add_ln440_fu_1094_p2");
    sc_trace(mVcdFile, ap_phi_mux_p_34_phi_fu_504_p4, "ap_phi_mux_p_34_phi_fu_504_p4");
    sc_trace(mVcdFile, p_34_reg_501, "p_34_reg_501");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_510_ap_start_reg, "grp_KeccakF1600_StatePer_1_fu_510_ap_start_reg");
    sc_trace(mVcdFile, zext_ln389_fu_556_p1, "zext_ln389_fu_556_p1");
    sc_trace(mVcdFile, zext_ln394_fu_679_p1, "zext_ln394_fu_679_p1");
    sc_trace(mVcdFile, zext_ln398_fu_710_p1, "zext_ln398_fu_710_p1");
    sc_trace(mVcdFile, zext_ln415_1_fu_891_p1, "zext_ln415_1_fu_891_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, zext_ln424_1_fu_945_p1, "zext_ln424_1_fu_945_p1");
    sc_trace(mVcdFile, zext_ln435_fu_1024_p1, "zext_ln435_fu_1024_p1");
    sc_trace(mVcdFile, zext_ln439_fu_1059_p1, "zext_ln439_fu_1059_p1");
    sc_trace(mVcdFile, select_ln394_fu_666_p3, "select_ln394_fu_666_p3");
    sc_trace(mVcdFile, select_ln437_fu_1043_p3, "select_ln437_fu_1043_p3");
    sc_trace(mVcdFile, xor_ln398_fu_734_p2, "xor_ln398_fu_734_p2");
    sc_trace(mVcdFile, xor_ln415_fu_908_p2, "xor_ln415_fu_908_p2");
    sc_trace(mVcdFile, xor_ln424_fu_962_p2, "xor_ln424_fu_962_p2");
    sc_trace(mVcdFile, xor_ln439_fu_1087_p2, "xor_ln439_fu_1087_p2");
    sc_trace(mVcdFile, trunc_ln391_fu_567_p1, "trunc_ln391_fu_567_p1");
    sc_trace(mVcdFile, zext_ln393_fu_584_p1, "zext_ln393_fu_584_p1");
    sc_trace(mVcdFile, sub_ln393_fu_588_p2, "sub_ln393_fu_588_p2");
    sc_trace(mVcdFile, empty_104_fu_594_p1, "empty_104_fu_594_p1");
    sc_trace(mVcdFile, empty_105_fu_604_p2, "empty_105_fu_604_p2");
    sc_trace(mVcdFile, xor_ln393_1_fu_598_p2, "xor_ln393_1_fu_598_p2");
    sc_trace(mVcdFile, umax_fu_610_p3, "umax_fu_610_p3");
    sc_trace(mVcdFile, trunc_ln395_fu_636_p1, "trunc_ln395_fu_636_p1");
    sc_trace(mVcdFile, sext_ln395_fu_632_p1, "sext_ln395_fu_632_p1");
    sc_trace(mVcdFile, empty_106_fu_651_p1, "empty_106_fu_651_p1");
    sc_trace(mVcdFile, add_ln392_fu_684_p2, "add_ln392_fu_684_p2");
    sc_trace(mVcdFile, sext_ln398_fu_688_p1, "sext_ln398_fu_688_p1");
    sc_trace(mVcdFile, sub_ln398_fu_692_p2, "sub_ln398_fu_692_p2");
    sc_trace(mVcdFile, r_7_i_fu_714_p9, "r_7_i_fu_714_p9");
    sc_trace(mVcdFile, zext_ln401_1_fu_741_p1, "zext_ln401_1_fu_741_p1");
    sc_trace(mVcdFile, zext_ln401_2_fu_749_p1, "zext_ln401_2_fu_749_p1");
    sc_trace(mVcdFile, sub_ln401_fu_759_p2, "sub_ln401_fu_759_p2");
    sc_trace(mVcdFile, trunc_ln415_fu_814_p1, "trunc_ln415_fu_814_p1");
    sc_trace(mVcdFile, xor_ln32_1_fu_818_p2, "xor_ln32_1_fu_818_p2");
    sc_trace(mVcdFile, tmp_496_fu_835_p4, "tmp_496_fu_835_p4");
    sc_trace(mVcdFile, xor_ln32_fu_863_p2, "xor_ln32_fu_863_p2");
    sc_trace(mVcdFile, r_7_i6_fu_896_p9, "r_7_i6_fu_896_p9");
    sc_trace(mVcdFile, zext_ln422_fu_936_p1, "zext_ln422_fu_936_p1");
    sc_trace(mVcdFile, add_ln424_1_fu_940_p2, "add_ln424_1_fu_940_p2");
    sc_trace(mVcdFile, r_7_i7_fu_950_p9, "r_7_i7_fu_950_p9");
    sc_trace(mVcdFile, and_ln_fu_969_p3, "and_ln_fu_969_p3");
    sc_trace(mVcdFile, zext_ln426_fu_980_p1, "zext_ln426_fu_980_p1");
    sc_trace(mVcdFile, zext_ln426_2_fu_976_p1, "zext_ln426_2_fu_976_p1");
    sc_trace(mVcdFile, zext_ln435_2_fu_1009_p1, "zext_ln435_2_fu_1009_p1");
    sc_trace(mVcdFile, trunc_ln437_fu_1029_p1, "trunc_ln437_fu_1029_p1");
    sc_trace(mVcdFile, xor_ln437_fu_1033_p2, "xor_ln437_fu_1033_p2");
    sc_trace(mVcdFile, xor_ln437_1_fu_1038_p2, "xor_ln437_1_fu_1038_p2");
    sc_trace(mVcdFile, tmp_497_fu_1050_p4, "tmp_497_fu_1050_p4");
    sc_trace(mVcdFile, r_7_i5_fu_1067_p9, "r_7_i5_fu_1067_p9");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

keccak_absorb::~keccak_absorb() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete t_U;
    delete grp_KeccakF1600_StatePer_1_fu_510;
}

void keccak_absorb::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state11.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln412_fu_809_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state11.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state11.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln412_fu_809_p2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
            ap_return_preg = ap_phi_mux_p_34_phi_fu_504_p4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_KeccakF1600_StatePer_1_fu_510_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln401_fu_753_p2.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln401_1_fu_764_p2.read())) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
            grp_KeccakF1600_StatePer_1_fu_510_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_KeccakF1600_StatePer_1_fu_510_ap_ready.read())) {
            grp_KeccakF1600_StatePer_1_fu_510_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_655_p2.read()))) {
        i_0_reg_364 = i_fu_673_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln389_fu_561_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(icmp_ln391_fu_578_p2.read(), ap_const_lv1_0))) {
        i_0_reg_364 = zext_ln391_fu_570_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln412_fu_809_p2.read()))) {
        i_2_reg_468 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln413_fu_880_p2.read()))) {
        i_2_reg_468 = i_33_fu_885_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        i_3_reg_479 = add_ln422_reg_1390.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln412_fu_809_p2.read()))) {
        i_3_reg_479 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        i_5_reg_490 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln435_fu_1013_p2.read()))) {
        i_5_reg_490 = i_34_fu_1018_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_block_state9_on_subcall_done.read(), ap_const_boolean_0))) {
        indvars_iv_reg_446 = sext_ln406_fu_787_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_1_fu_510_ap_done.read(), ap_const_logic_1))) {
        indvars_iv_reg_446 = sub_ln420_reg_1382.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_655_p2.read()))) {
        p_05_rec_reg_353 = add_ln394_fu_660_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln389_fu_561_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(icmp_ln391_fu_578_p2.read(), ap_const_lv1_0))) {
        p_05_rec_reg_353 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln389_fu_561_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln391_fu_578_p2.read()))) {
        p_12_reg_385 = empty_reg_1130.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        p_12_reg_385 = add_ln396_reg_1182.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln389_fu_561_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln391_fu_578_p2.read()))) {
        p_1_reg_395 = ap_const_lv2_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        p_1_reg_395 = add_ln395_reg_1177.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln401_fu_753_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln401_fu_753_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln401_1_fu_764_p2.read())))) {
        p_23_reg_420 = p_12_reg_385.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln401_reg_1263.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln401_1_reg_1267.read()) && 
                esl_seteq<1,1,1>(ap_block_state9_on_subcall_done.read(), ap_const_boolean_0))) {
        p_23_reg_420 = ap_const_lv6_0;
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln401_fu_753_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln401_fu_753_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln401_1_fu_764_p2.read())))) {
        p_2_reg_435 = zext_ln401_fu_745_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln401_reg_1263.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln401_1_reg_1267.read()) && 
                esl_seteq<1,1,1>(ap_block_state9_on_subcall_done.read(), ap_const_boolean_0))) {
        p_2_reg_435 = sub_ln407_fu_778_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln430_fu_1003_p2.read()))) {
        p_34_reg_501 = zext_ln428_fu_999_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln430_reg_1421.read()))) {
        p_34_reg_501 = add_ln440_fu_1094_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_block_state9_on_subcall_done.read(), ap_const_boolean_0))) {
        p_38_rec_reg_456 = ap_const_lv64_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_1_fu_510_ap_done.read(), ap_const_logic_1))) {
        p_38_rec_reg_456 = add_ln417_reg_1377.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln389_fu_561_p2.read(), ap_const_lv1_0))) {
        phi_ln389_reg_342 = add_ln389_fu_550_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_ln389_reg_342 = ap_const_lv3_0;
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln401_fu_753_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln401_fu_753_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln401_1_fu_764_p2.read())))) {
        phi_ln406_1_reg_406 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln401_reg_1263.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln401_1_reg_1267.read()) && 
                esl_seteq<1,1,1>(ap_block_state9_on_subcall_done.read(), ap_const_boolean_0))) {
        phi_ln406_1_reg_406 = trunc_ln410_reg_1276.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln389_fu_561_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln391_fu_578_p2.read()))) {
        phi_ln406_reg_373 = ap_const_lv1_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        phi_ln406_reg_373 = trunc_ln399_reg_1216.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        reg_516 = t_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        reg_516 = t_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        reg_521 = t_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        reg_521 = t_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln389_fu_561_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(icmp_ln391_fu_578_p2.read(), ap_const_lv1_0))) {
        add_ln395_reg_1177 = add_ln395_fu_640_p2.read();
        add_ln396_reg_1182 = add_ln396_fu_646_p2.read();
        p_cast6_reg_1172 = p_cast6_fu_628_p1.read();
        sext_ln393_reg_1167 = sext_ln393_fu_624_p1.read();
        xor_ln393_2_reg_1162 = xor_ln393_2_fu_618_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        add_ln417_reg_1377 = add_ln417_fu_915_p2.read();
        sub_ln420_reg_1382 = sub_ln420_fu_920_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        add_ln422_reg_1390 = add_ln422_fu_930_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        add_ln428_reg_1410 = add_ln428_fu_994_p2.read();
        icmp_ln430_reg_1421 = icmp_ln430_fu_1003_p2.read();
        sub_ln427_reg_1400 = sub_ln427_fu_984_p2.read();
        trunc_ln427_reg_1405 = trunc_ln427_fu_990_p1.read();
        zext_ln428_reg_1415 = zext_ln428_fu_999_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        empty_101_reg_1136 = empty_101_fu_546_p1.read();
        empty_reg_1130 = empty_fu_542_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_block_state9_on_subcall_done.read(), ap_const_boolean_0))) {
        empty_107_reg_1291 = empty_107_fu_791_p1.read();
        tmp_s_reg_1298 = r.read().range(7, 3);
        xor_ln415_1_reg_1303 = xor_ln415_1_fu_803_p2.read();
        zext_ln406_reg_1281 = zext_ln406_fu_783_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln401_fu_753_p2.read()))) {
        icmp_ln401_1_reg_1267 = icmp_ln401_1_fu_764_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        icmp_ln401_reg_1263 = icmp_ln401_fu_753_p2.read();
        zext_ln401_reg_1256 = zext_ln401_fu_745_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln413_reg_1362 = icmp_ln413_fu_880_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        reg_526 = t_q1.read();
        reg_530 = t_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        reg_534 = t_q1.read();
        reg_538 = t_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln422_fu_925_p2.read()))) {
        s_addr_5_reg_1395 =  (sc_lv<5>) (zext_ln424_1_fu_945_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln413_fu_880_p2.read()))) {
        s_addr_6_reg_1371 =  (sc_lv<5>) (zext_ln415_1_fu_891_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        s_addr_7_reg_1473 =  (sc_lv<5>) (zext_ln439_fu_1059_p1.read());
        trunc_ln440_reg_1479 = trunc_ln440_fu_1064_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        s_addr_reg_1251 =  (sc_lv<5>) (zext_ln398_fu_710_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln412_fu_809_p2.read()))) {
        select_ln32_1_reg_1354 = select_ln32_1_fu_874_p3.read();
        select_ln32_reg_1346 = select_ln32_fu_868_p3.read();
        tmp_3266_reg_1335 = indvars_iv_reg_446.read().range(7, 3);
        trunc_ln424_reg_1341 = trunc_ln424_fu_859_p1.read();
        zext_ln422_2_reg_1330 = zext_ln422_2_fu_845_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln412_fu_809_p2.read()))) {
        select_ln32_2_reg_1314 = select_ln32_2_fu_823_p3.read();
        select_ln32_3_reg_1322 = select_ln32_3_fu_829_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_655_p2.read()))) {
        tmp_reg_1211 = sub_ln398_fu_692_p2.read().range(5, 3);
        trunc_ln399_reg_1216 = trunc_ln399_fu_707_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln401_fu_753_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln401_1_fu_764_p2.read()))) {
        trunc_ln407_reg_1271 = trunc_ln407_fu_770_p1.read();
        trunc_ln410_reg_1276 = trunc_ln410_fu_774_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln389_fu_561_p2.read(), ap_const_lv1_1))) {
        zext_ln391_1_reg_1154 = zext_ln391_1_fu_574_p1.read();
    }
}

void keccak_absorb::thread_add_ln389_fu_550_p2() {
    add_ln389_fu_550_p2 = (!phi_ln389_reg_342.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(phi_ln389_reg_342.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void keccak_absorb::thread_add_ln392_fu_684_p2() {
    add_ln392_fu_684_p2 = (!zext_ln391_1_reg_1154.read().is_01() || !p_cast6_reg_1172.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln391_1_reg_1154.read()) + sc_bigint<5>(p_cast6_reg_1172.read()));
}

void keccak_absorb::thread_add_ln394_fu_660_p2() {
    add_ln394_fu_660_p2 = (!ap_const_lv64_1.is_01() || !p_05_rec_reg_353.read().is_01())? sc_lv<64>(): (sc_biguint<64>(ap_const_lv64_1) + sc_biguint<64>(p_05_rec_reg_353.read()));
}

void keccak_absorb::thread_add_ln395_fu_640_p2() {
    add_ln395_fu_640_p2 = (!ap_const_lv2_3.is_01() || !trunc_ln395_fu_636_p1.read().is_01())? sc_lv<2>(): (sc_bigint<2>(ap_const_lv2_3) + sc_biguint<2>(trunc_ln395_fu_636_p1.read()));
}

void keccak_absorb::thread_add_ln396_fu_646_p2() {
    add_ln396_fu_646_p2 = (!sext_ln395_fu_632_p1.read().is_01() || !empty_reg_1130.read().is_01())? sc_lv<6>(): (sc_bigint<6>(sext_ln395_fu_632_p1.read()) + sc_biguint<6>(empty_reg_1130.read()));
}

void keccak_absorb::thread_add_ln417_fu_915_p2() {
    add_ln417_fu_915_p2 = (!empty_107_reg_1291.read().is_01() || !p_38_rec_reg_456.read().is_01())? sc_lv<64>(): (sc_biguint<64>(empty_107_reg_1291.read()) + sc_biguint<64>(p_38_rec_reg_456.read()));
}

void keccak_absorb::thread_add_ln422_fu_930_p2() {
    add_ln422_fu_930_p2 = (!i_3_reg_479.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_3_reg_479.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void keccak_absorb::thread_add_ln424_1_fu_940_p2() {
    add_ln424_1_fu_940_p2 = (!zext_ln422_2_reg_1330.read().is_01() || !zext_ln422_fu_936_p1.read().is_01())? sc_lv<30>(): (sc_biguint<30>(zext_ln422_2_reg_1330.read()) + sc_biguint<30>(zext_ln422_fu_936_p1.read()));
}

void keccak_absorb::thread_add_ln428_fu_994_p2() {
    add_ln428_fu_994_p2 = (!zext_ln406_reg_1281.read().is_01() || !zext_ln426_2_fu_976_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln406_reg_1281.read()) + sc_biguint<9>(zext_ln426_2_fu_976_p1.read()));
}

void keccak_absorb::thread_add_ln440_fu_1094_p2() {
    add_ln440_fu_1094_p2 = (!zext_ln428_reg_1415.read().is_01() || !trunc_ln440_reg_1479.read().is_01())? sc_lv<32>(): (sc_biguint<32>(zext_ln428_reg_1415.read()) + sc_biguint<32>(trunc_ln440_reg_1479.read()));
}

void keccak_absorb::thread_and_ln_fu_969_p3() {
    and_ln_fu_969_p3 = esl_concat<5,3>(tmp_3266_reg_1335.read(), ap_const_lv3_0);
}

void keccak_absorb::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[10];
}

void keccak_absorb::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void keccak_absorb::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void keccak_absorb::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[11];
}

void keccak_absorb::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[12];
}

void keccak_absorb::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[13];
}

void keccak_absorb::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[14];
}

void keccak_absorb::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[15];
}

void keccak_absorb::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[16];
}

void keccak_absorb::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[17];
}

void keccak_absorb::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void keccak_absorb::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[18];
}

void keccak_absorb::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[19];
}

void keccak_absorb::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[20];
}

void keccak_absorb::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[21];
}

void keccak_absorb::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[22];
}

void keccak_absorb::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[23];
}

void keccak_absorb::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[24];
}

void keccak_absorb::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void keccak_absorb::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void keccak_absorb::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void keccak_absorb::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void keccak_absorb::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void keccak_absorb::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void keccak_absorb::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void keccak_absorb::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void keccak_absorb::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void keccak_absorb::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void keccak_absorb::thread_ap_block_state11_pp0_stage0_iter0() {
    ap_block_state11_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void keccak_absorb::thread_ap_block_state12_pp0_stage0_iter1() {
    ap_block_state12_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void keccak_absorb::thread_ap_block_state9_on_subcall_done() {
    ap_block_state9_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_KeccakF1600_StatePer_1_fu_510_ap_done.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op127_call_state9.read()));
}

void keccak_absorb::thread_ap_condition_pp0_exit_iter0_state11() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln413_fu_880_p2.read())) {
        ap_condition_pp0_exit_iter0_state11 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state11 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void keccak_absorb::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void keccak_absorb::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void keccak_absorb::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_ap_phi_mux_p_23_phi_fu_423_p6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln401_reg_1263.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln401_1_reg_1267.read()))) {
        ap_phi_mux_p_23_phi_fu_423_p6 = ap_const_lv6_0;
    } else {
        ap_phi_mux_p_23_phi_fu_423_p6 = p_23_reg_420.read();
    }
}

void keccak_absorb::thread_ap_phi_mux_p_2_phi_fu_438_p6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln401_reg_1263.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln401_1_reg_1267.read()))) {
        ap_phi_mux_p_2_phi_fu_438_p6 = sub_ln407_fu_778_p2.read();
    } else {
        ap_phi_mux_p_2_phi_fu_438_p6 = p_2_reg_435.read();
    }
}

void keccak_absorb::thread_ap_phi_mux_p_34_phi_fu_504_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln430_reg_1421.read()))) {
        ap_phi_mux_p_34_phi_fu_504_p4 = add_ln440_fu_1094_p2.read();
    } else {
        ap_phi_mux_p_34_phi_fu_504_p4 = p_34_reg_501.read();
    }
}

void keccak_absorb::thread_ap_phi_mux_phi_ln406_1_phi_fu_410_p6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln401_reg_1263.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln401_1_reg_1267.read()))) {
        ap_phi_mux_phi_ln406_1_phi_fu_410_p6 = trunc_ln410_reg_1276.read();
    } else {
        ap_phi_mux_phi_ln406_1_phi_fu_410_p6 = phi_ln406_1_reg_406.read();
    }
}

void keccak_absorb::thread_ap_predicate_op127_call_state9() {
    ap_predicate_op127_call_state9 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln401_reg_1263.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln401_1_reg_1267.read()));
}

void keccak_absorb::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void keccak_absorb::thread_ap_return() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        ap_return = ap_phi_mux_p_34_phi_fu_504_p4.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void keccak_absorb::thread_empty_101_fu_546_p1() {
    empty_101_fu_546_p1 = r.read().range(8-1, 0);
}

void keccak_absorb::thread_empty_104_fu_594_p1() {
    empty_104_fu_594_p1 = sub_ln393_fu_588_p2.read().range(3-1, 0);
}

void keccak_absorb::thread_empty_105_fu_604_p2() {
    empty_105_fu_604_p2 = (!sub_ln393_fu_588_p2.read().is_01() || !ap_const_lv4_2.is_01())? sc_lv<1>(): (sc_biguint<4>(sub_ln393_fu_588_p2.read()) > sc_biguint<4>(ap_const_lv4_2));
}

void keccak_absorb::thread_empty_106_fu_651_p1() {
    empty_106_fu_651_p1 = p_05_rec_reg_353.read().range(1-1, 0);
}

void keccak_absorb::thread_empty_107_fu_791_p1() {
    empty_107_fu_791_p1 = esl_zext<64,9>(r.read());
}

void keccak_absorb::thread_empty_fu_542_p1() {
    empty_fu_542_p1 = pos_r.read().range(6-1, 0);
}

void keccak_absorb::thread_exitcond_fu_655_p2() {
    exitcond_fu_655_p2 = (!p_05_rec_reg_353.read().is_01() || !sext_ln393_reg_1167.read().is_01())? sc_lv<1>(): sc_lv<1>(p_05_rec_reg_353.read() == sext_ln393_reg_1167.read());
}

void keccak_absorb::thread_grp_KeccakF1600_StatePer_1_fu_510_ap_start() {
    grp_KeccakF1600_StatePer_1_fu_510_ap_start = grp_KeccakF1600_StatePer_1_fu_510_ap_start_reg.read();
}

void keccak_absorb::thread_i_33_fu_885_p2() {
    i_33_fu_885_p2 = (!i_2_reg_468.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_2_reg_468.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void keccak_absorb::thread_i_34_fu_1018_p2() {
    i_34_fu_1018_p2 = (!i_5_reg_490.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_5_reg_490.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void keccak_absorb::thread_i_fu_673_p2() {
    i_fu_673_p2 = (!i_0_reg_364.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_0_reg_364.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void keccak_absorb::thread_icmp_ln389_fu_561_p2() {
    icmp_ln389_fu_561_p2 = (!phi_ln389_reg_342.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln389_reg_342.read() == ap_const_lv3_7);
}

void keccak_absorb::thread_icmp_ln391_fu_578_p2() {
    icmp_ln391_fu_578_p2 = (!trunc_ln391_fu_567_p1.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln391_fu_567_p1.read() == ap_const_lv3_0);
}

void keccak_absorb::thread_icmp_ln401_1_fu_764_p2() {
    icmp_ln401_1_fu_764_p2 = (!zext_ln401_2_fu_749_p1.read().is_01() || !sub_ln401_fu_759_p2.read().is_01())? sc_lv<1>(): (sc_biguint<8>(zext_ln401_2_fu_749_p1.read()) < sc_biguint<8>(sub_ln401_fu_759_p2.read()));
}

void keccak_absorb::thread_icmp_ln401_fu_753_p2() {
    icmp_ln401_fu_753_p2 = (!p_12_reg_385.read().is_01() || !ap_const_lv6_0.is_01())? sc_lv<1>(): sc_lv<1>(p_12_reg_385.read() == ap_const_lv6_0);
}

void keccak_absorb::thread_icmp_ln412_fu_809_p2() {
    icmp_ln412_fu_809_p2 = (!indvars_iv_reg_446.read().is_01() || !empty_107_reg_1291.read().is_01())? sc_lv<1>(): (sc_biguint<64>(indvars_iv_reg_446.read()) < sc_biguint<64>(empty_107_reg_1291.read()));
}

void keccak_absorb::thread_icmp_ln413_fu_880_p2() {
    icmp_ln413_fu_880_p2 = (!i_2_reg_468.read().is_01() || !tmp_s_reg_1298.read().is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_468.read() == tmp_s_reg_1298.read());
}

void keccak_absorb::thread_icmp_ln422_fu_925_p2() {
    icmp_ln422_fu_925_p2 = (!i_3_reg_479.read().is_01() || !tmp_3266_reg_1335.read().is_01())? sc_lv<1>(): sc_lv<1>(i_3_reg_479.read() == tmp_3266_reg_1335.read());
}

void keccak_absorb::thread_icmp_ln430_fu_1003_p2() {
    icmp_ln430_fu_1003_p2 = (!indvars_iv_reg_446.read().is_01() || !zext_ln426_fu_980_p1.read().is_01())? sc_lv<1>(): sc_lv<1>(indvars_iv_reg_446.read() == zext_ln426_fu_980_p1.read());
}

void keccak_absorb::thread_icmp_ln435_fu_1013_p2() {
    icmp_ln435_fu_1013_p2 = (!zext_ln435_2_fu_1009_p1.read().is_01() || !trunc_ln427_reg_1405.read().is_01())? sc_lv<1>(): (sc_biguint<33>(zext_ln435_2_fu_1009_p1.read()) < sc_biguint<33>(trunc_ln427_reg_1405.read()));
}

void keccak_absorb::thread_p_cast6_fu_628_p1() {
    p_cast6_fu_628_p1 = esl_sext<5,3>(xor_ln393_2_fu_618_p2.read());
}

void keccak_absorb::thread_r_7_i5_fu_1067_p9() {
    r_7_i5_fu_1067_p9 = esl_concat<56,8>(esl_concat<48,8>(esl_concat<40,8>(esl_concat<32,8>(esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(t_q0.read(), t_q1.read()), reg_538.read()), reg_534.read()), reg_530.read()), reg_526.read()), reg_521.read()), reg_516.read());
}

void keccak_absorb::thread_r_7_i6_fu_896_p9() {
    r_7_i6_fu_896_p9 = esl_concat<56,8>(esl_concat<48,8>(esl_concat<40,8>(esl_concat<32,8>(esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(select_ln32_3_reg_1322.read(), select_ln32_2_reg_1314.read()), select_ln32_3_reg_1322.read()), select_ln32_2_reg_1314.read()), select_ln32_3_reg_1322.read()), select_ln32_2_reg_1314.read()), select_ln32_3_reg_1322.read()), select_ln32_2_reg_1314.read());
}

void keccak_absorb::thread_r_7_i7_fu_950_p9() {
    r_7_i7_fu_950_p9 = esl_concat<56,8>(esl_concat<48,8>(esl_concat<40,8>(esl_concat<32,8>(esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(select_ln32_1_reg_1354.read(), select_ln32_reg_1346.read()), select_ln32_1_reg_1354.read()), select_ln32_reg_1346.read()), select_ln32_1_reg_1354.read()), select_ln32_reg_1346.read()), select_ln32_1_reg_1354.read()), select_ln32_reg_1346.read());
}

void keccak_absorb::thread_r_7_i_fu_714_p9() {
    r_7_i_fu_714_p9 = esl_concat<56,8>(esl_concat<48,8>(esl_concat<40,8>(esl_concat<32,8>(esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(t_q0.read(), t_q1.read()), reg_538.read()), reg_534.read()), reg_530.read()), reg_526.read()), reg_521.read()), reg_516.read());
}

void keccak_absorb::thread_s_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        s_address0 = s_addr_7_reg_1473.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        s_address0 =  (sc_lv<5>) (zext_ln415_1_fu_891_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        s_address0 = s_addr_reg_1251.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        s_address0 =  (sc_lv<5>) (zext_ln398_fu_710_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op127_call_state9.read())))) {
        s_address0 = grp_KeccakF1600_StatePer_1_fu_510_state_address0.read();
    } else {
        s_address0 = "XXXXX";
    }
}

void keccak_absorb::thread_s_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        s_address1 = s_addr_7_reg_1473.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        s_address1 = s_addr_5_reg_1395.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        s_address1 =  (sc_lv<5>) (zext_ln424_1_fu_945_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        s_address1 = s_addr_6_reg_1371.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op127_call_state9.read())))) {
        s_address1 = grp_KeccakF1600_StatePer_1_fu_510_state_address1.read();
    } else {
        s_address1 = "XXXXX";
    }
}

void keccak_absorb::thread_s_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        s_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op127_call_state9.read())))) {
        s_ce0 = grp_KeccakF1600_StatePer_1_fu_510_state_ce0.read();
    } else {
        s_ce0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_s_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        s_ce1 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op127_call_state9.read())))) {
        s_ce1 = grp_KeccakF1600_StatePer_1_fu_510_state_ce1.read();
    } else {
        s_ce1 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_s_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        s_d0 = xor_ln398_fu_734_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op127_call_state9.read())))) {
        s_d0 = grp_KeccakF1600_StatePer_1_fu_510_state_d0.read();
    } else {
        s_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void keccak_absorb::thread_s_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        s_d1 = xor_ln439_fu_1087_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        s_d1 = xor_ln424_fu_962_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        s_d1 = xor_ln415_fu_908_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op127_call_state9.read())))) {
        s_d1 = grp_KeccakF1600_StatePer_1_fu_510_state_d1.read();
    } else {
        s_d1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void keccak_absorb::thread_s_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        s_we0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op127_call_state9.read())))) {
        s_we0 = grp_KeccakF1600_StatePer_1_fu_510_state_we0.read();
    } else {
        s_we0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_s_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln430_reg_1421.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln413_reg_1362.read())))) {
        s_we1 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op127_call_state9.read())))) {
        s_we1 = grp_KeccakF1600_StatePer_1_fu_510_state_we1.read();
    } else {
        s_we1 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_select_ln32_1_fu_874_p3() {
    select_ln32_1_fu_874_p3 = (!xor_ln32_fu_863_p2.read()[0].is_01())? sc_lv<8>(): ((xor_ln32_fu_863_p2.read()[0].to_bool())? m_0_read.read(): m_1_read.read());
}

void keccak_absorb::thread_select_ln32_2_fu_823_p3() {
    select_ln32_2_fu_823_p3 = (!xor_ln32_1_fu_818_p2.read()[0].is_01())? sc_lv<8>(): ((xor_ln32_1_fu_818_p2.read()[0].to_bool())? m_1_read.read(): m_0_read.read());
}

void keccak_absorb::thread_select_ln32_3_fu_829_p3() {
    select_ln32_3_fu_829_p3 = (!xor_ln32_1_fu_818_p2.read()[0].is_01())? sc_lv<8>(): ((xor_ln32_1_fu_818_p2.read()[0].to_bool())? m_0_read.read(): m_1_read.read());
}

void keccak_absorb::thread_select_ln32_fu_868_p3() {
    select_ln32_fu_868_p3 = (!xor_ln32_fu_863_p2.read()[0].is_01())? sc_lv<8>(): ((xor_ln32_fu_863_p2.read()[0].to_bool())? m_1_read.read(): m_0_read.read());
}

void keccak_absorb::thread_select_ln394_fu_666_p3() {
    select_ln394_fu_666_p3 = (!empty_106_fu_651_p1.read()[0].is_01())? sc_lv<8>(): ((empty_106_fu_651_p1.read()[0].to_bool())? m_1_read.read(): m_0_read.read());
}

void keccak_absorb::thread_select_ln437_fu_1043_p3() {
    select_ln437_fu_1043_p3 = (!xor_ln437_1_fu_1038_p2.read()[0].is_01())? sc_lv<8>(): ((xor_ln437_1_fu_1038_p2.read()[0].to_bool())? m_1_read.read(): m_0_read.read());
}

void keccak_absorb::thread_sext_ln393_fu_624_p1() {
    sext_ln393_fu_624_p1 = esl_sext<64,3>(xor_ln393_2_fu_618_p2.read());
}

void keccak_absorb::thread_sext_ln395_fu_632_p1() {
    sext_ln395_fu_632_p1 = esl_sext<6,3>(xor_ln393_2_fu_618_p2.read());
}

void keccak_absorb::thread_sext_ln398_fu_688_p1() {
    sext_ln398_fu_688_p1 = esl_sext<6,5>(add_ln392_fu_684_p2.read());
}

void keccak_absorb::thread_sext_ln406_fu_787_p1() {
    sext_ln406_fu_787_p1 = esl_sext<64,3>(ap_phi_mux_p_2_phi_fu_438_p6.read());
}

void keccak_absorb::thread_sub_ln393_fu_588_p2() {
    sub_ln393_fu_588_p2 = (!ap_const_lv4_8.is_01() || !zext_ln393_fu_584_p1.read().is_01())? sc_lv<4>(): (sc_bigint<4>(ap_const_lv4_8) - sc_biguint<4>(zext_ln393_fu_584_p1.read()));
}

void keccak_absorb::thread_sub_ln398_fu_692_p2() {
    sub_ln398_fu_692_p2 = (!add_ln396_reg_1182.read().is_01() || !sext_ln398_fu_688_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(add_ln396_reg_1182.read()) - sc_bigint<6>(sext_ln398_fu_688_p1.read()));
}

void keccak_absorb::thread_sub_ln401_fu_759_p2() {
    sub_ln401_fu_759_p2 = (!empty_101_reg_1136.read().is_01() || !zext_ln401_1_fu_741_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(empty_101_reg_1136.read()) - sc_biguint<8>(zext_ln401_1_fu_741_p1.read()));
}

void keccak_absorb::thread_sub_ln407_fu_778_p2() {
    sub_ln407_fu_778_p2 = (!zext_ln401_reg_1256.read().is_01() || !trunc_ln407_reg_1271.read().is_01())? sc_lv<3>(): (sc_biguint<3>(zext_ln401_reg_1256.read()) - sc_biguint<3>(trunc_ln407_reg_1271.read()));
}

void keccak_absorb::thread_sub_ln420_fu_920_p2() {
    sub_ln420_fu_920_p2 = (!indvars_iv_reg_446.read().is_01() || !empty_107_reg_1291.read().is_01())? sc_lv<64>(): (sc_biguint<64>(indvars_iv_reg_446.read()) - sc_biguint<64>(empty_107_reg_1291.read()));
}

void keccak_absorb::thread_sub_ln427_fu_984_p2() {
    sub_ln427_fu_984_p2 = (!indvars_iv_reg_446.read().is_01() || !zext_ln426_fu_980_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(indvars_iv_reg_446.read()) - sc_biguint<64>(zext_ln426_fu_980_p1.read()));
}

void keccak_absorb::thread_t_addr_28_reg_1425() {
    t_addr_28_reg_1425 =  (sc_lv<3>) (ap_const_lv64_0);
}

void keccak_absorb::thread_t_addr_29_reg_1430() {
    t_addr_29_reg_1430 =  (sc_lv<3>) (ap_const_lv64_1);
}

void keccak_absorb::thread_t_addr_30_gep_fu_280_p3() {
    t_addr_30_gep_fu_280_p3 =  (sc_lv<3>) (ap_const_lv64_2);
}

void keccak_absorb::thread_t_addr_30_reg_1435() {
    t_addr_30_reg_1435 =  (sc_lv<3>) (ap_const_lv64_2);
}

void keccak_absorb::thread_t_addr_31_gep_fu_288_p3() {
    t_addr_31_gep_fu_288_p3 =  (sc_lv<3>) (ap_const_lv64_3);
}

void keccak_absorb::thread_t_addr_31_reg_1440() {
    t_addr_31_reg_1440 =  (sc_lv<3>) (ap_const_lv64_3);
}

void keccak_absorb::thread_t_addr_32_gep_fu_296_p3() {
    t_addr_32_gep_fu_296_p3 =  (sc_lv<3>) (ap_const_lv64_4);
}

void keccak_absorb::thread_t_addr_32_reg_1445() {
    t_addr_32_reg_1445 =  (sc_lv<3>) (ap_const_lv64_4);
}

void keccak_absorb::thread_t_addr_33_gep_fu_304_p3() {
    t_addr_33_gep_fu_304_p3 =  (sc_lv<3>) (ap_const_lv64_5);
}

void keccak_absorb::thread_t_addr_33_reg_1450() {
    t_addr_33_reg_1450 =  (sc_lv<3>) (ap_const_lv64_5);
}

void keccak_absorb::thread_t_addr_34_gep_fu_312_p3() {
    t_addr_34_gep_fu_312_p3 =  (sc_lv<3>) (ap_const_lv64_6);
}

void keccak_absorb::thread_t_addr_34_reg_1455() {
    t_addr_34_reg_1455 =  (sc_lv<3>) (ap_const_lv64_6);
}

void keccak_absorb::thread_t_addr_35_gep_fu_320_p3() {
    t_addr_35_gep_fu_320_p3 =  (sc_lv<3>) (ap_const_lv64_7);
}

void keccak_absorb::thread_t_addr_35_reg_1460() {
    t_addr_35_reg_1460 =  (sc_lv<3>) (ap_const_lv64_7);
}

void keccak_absorb::thread_t_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        t_address0 = t_addr_35_reg_1460.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        t_address0 = t_addr_33_reg_1450.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        t_address0 = t_addr_31_reg_1440.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        t_address0 = t_addr_29_reg_1430.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        t_address0 = t_addr_35_gep_fu_320_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        t_address0 = t_addr_33_gep_fu_304_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        t_address0 = t_addr_31_gep_fu_288_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_3);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_655_p2.read()))) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_655_p2.read()))) {
        t_address0 =  (sc_lv<3>) (zext_ln394_fu_679_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        t_address0 =  (sc_lv<3>) (zext_ln389_fu_556_p1.read());
    } else {
        t_address0 =  (sc_lv<3>) ("XXX");
    }
}

void keccak_absorb::thread_t_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        t_address1 = t_addr_34_reg_1455.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        t_address1 = t_addr_32_reg_1445.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        t_address1 = t_addr_30_reg_1435.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        t_address1 = t_addr_28_reg_1425.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        t_address1 =  (sc_lv<3>) (zext_ln435_fu_1024_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        t_address1 = t_addr_34_gep_fu_312_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        t_address1 = t_addr_32_gep_fu_296_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        t_address1 = t_addr_30_gep_fu_280_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_1);
    } else {
        t_address1 =  (sc_lv<3>) ("XXX");
    }
}

void keccak_absorb::thread_t_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_655_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_655_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        t_ce0 = ap_const_logic_1;
    } else {
        t_ce0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_t_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        t_ce1 = ap_const_logic_1;
    } else {
        t_ce1 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_t_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_655_p2.read()))) {
        t_d0 = select_ln394_fu_666_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        t_d0 = ap_const_lv8_0;
    } else {
        t_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void keccak_absorb::thread_t_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        t_d1 = select_ln437_fu_1043_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        t_d1 = ap_const_lv8_0;
    } else {
        t_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void keccak_absorb::thread_t_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_655_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln430_fu_1003_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        t_we0 = ap_const_logic_1;
    } else {
        t_we0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_t_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln430_fu_1003_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln435_fu_1013_p2.read())))) {
        t_we1 = ap_const_logic_1;
    } else {
        t_we1 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_tmp_496_fu_835_p4() {
    tmp_496_fu_835_p4 = p_23_reg_420.read().range(5, 3);
}

void keccak_absorb::thread_tmp_497_fu_1050_p4() {
    tmp_497_fu_1050_p4 = add_ln428_reg_1410.read().range(8, 3);
}

void keccak_absorb::thread_trunc_ln391_fu_567_p1() {
    trunc_ln391_fu_567_p1 = pos_r.read().range(3-1, 0);
}

void keccak_absorb::thread_trunc_ln395_fu_636_p1() {
    trunc_ln395_fu_636_p1 = umax_fu_610_p3.read().range(2-1, 0);
}

void keccak_absorb::thread_trunc_ln399_fu_707_p1() {
    trunc_ln399_fu_707_p1 = xor_ln393_2_reg_1162.read().range(1-1, 0);
}

void keccak_absorb::thread_trunc_ln407_fu_770_p1() {
    trunc_ln407_fu_770_p1 = sub_ln401_fu_759_p2.read().range(3-1, 0);
}

void keccak_absorb::thread_trunc_ln410_fu_774_p1() {
    trunc_ln410_fu_774_p1 = sub_ln401_fu_759_p2.read().range(1-1, 0);
}

void keccak_absorb::thread_trunc_ln415_fu_814_p1() {
    trunc_ln415_fu_814_p1 = p_38_rec_reg_456.read().range(1-1, 0);
}

void keccak_absorb::thread_trunc_ln424_fu_859_p1() {
    trunc_ln424_fu_859_p1 = p_38_rec_reg_456.read().range(1-1, 0);
}

void keccak_absorb::thread_trunc_ln427_fu_990_p1() {
    trunc_ln427_fu_990_p1 = sub_ln427_fu_984_p2.read().range(33-1, 0);
}

void keccak_absorb::thread_trunc_ln437_fu_1029_p1() {
    trunc_ln437_fu_1029_p1 = i_5_reg_490.read().range(1-1, 0);
}

void keccak_absorb::thread_trunc_ln440_fu_1064_p1() {
    trunc_ln440_fu_1064_p1 = sub_ln427_reg_1400.read().range(32-1, 0);
}

void keccak_absorb::thread_umax_fu_610_p3() {
    umax_fu_610_p3 = (!empty_105_fu_604_p2.read()[0].is_01())? sc_lv<3>(): ((empty_105_fu_604_p2.read()[0].to_bool())? ap_const_lv3_5: xor_ln393_1_fu_598_p2.read());
}

void keccak_absorb::thread_xor_ln32_1_fu_818_p2() {
    xor_ln32_1_fu_818_p2 = (xor_ln415_1_reg_1303.read() ^ trunc_ln415_fu_814_p1.read());
}

void keccak_absorb::thread_xor_ln32_fu_863_p2() {
    xor_ln32_fu_863_p2 = (xor_ln415_1_reg_1303.read() ^ trunc_ln424_fu_859_p1.read());
}

void keccak_absorb::thread_xor_ln393_1_fu_598_p2() {
    xor_ln393_1_fu_598_p2 = (empty_104_fu_594_p1.read() ^ ap_const_lv3_7);
}

void keccak_absorb::thread_xor_ln393_2_fu_618_p2() {
    xor_ln393_2_fu_618_p2 = (umax_fu_610_p3.read() ^ ap_const_lv3_7);
}

void keccak_absorb::thread_xor_ln398_fu_734_p2() {
    xor_ln398_fu_734_p2 = (s_q0.read() ^ r_7_i_fu_714_p9.read());
}

void keccak_absorb::thread_xor_ln415_1_fu_803_p2() {
    xor_ln415_1_fu_803_p2 = (ap_phi_mux_phi_ln406_1_phi_fu_410_p6.read() ^ phi_ln406_reg_373.read());
}

void keccak_absorb::thread_xor_ln415_fu_908_p2() {
    xor_ln415_fu_908_p2 = (s_q0.read() ^ r_7_i6_fu_896_p9.read());
}

void keccak_absorb::thread_xor_ln424_fu_962_p2() {
    xor_ln424_fu_962_p2 = (s_q1.read() ^ r_7_i7_fu_950_p9.read());
}

void keccak_absorb::thread_xor_ln437_1_fu_1038_p2() {
    xor_ln437_1_fu_1038_p2 = (xor_ln437_fu_1033_p2.read() ^ xor_ln415_1_reg_1303.read());
}

void keccak_absorb::thread_xor_ln437_fu_1033_p2() {
    xor_ln437_fu_1033_p2 = (trunc_ln437_fu_1029_p1.read() ^ trunc_ln424_reg_1341.read());
}

void keccak_absorb::thread_xor_ln439_fu_1087_p2() {
    xor_ln439_fu_1087_p2 = (s_q0.read() ^ r_7_i5_fu_1067_p9.read());
}

void keccak_absorb::thread_zext_ln389_fu_556_p1() {
    zext_ln389_fu_556_p1 = esl_zext<64,3>(phi_ln389_reg_342.read());
}

void keccak_absorb::thread_zext_ln391_1_fu_574_p1() {
    zext_ln391_1_fu_574_p1 = esl_zext<5,3>(trunc_ln391_fu_567_p1.read());
}

void keccak_absorb::thread_zext_ln391_fu_570_p1() {
    zext_ln391_fu_570_p1 = esl_zext<32,3>(trunc_ln391_fu_567_p1.read());
}

void keccak_absorb::thread_zext_ln393_fu_584_p1() {
    zext_ln393_fu_584_p1 = esl_zext<4,3>(trunc_ln391_fu_567_p1.read());
}

void keccak_absorb::thread_zext_ln394_fu_679_p1() {
    zext_ln394_fu_679_p1 = esl_zext<64,32>(i_0_reg_364.read());
}

void keccak_absorb::thread_zext_ln398_fu_710_p1() {
    zext_ln398_fu_710_p1 = esl_zext<64,3>(tmp_reg_1211.read());
}

void keccak_absorb::thread_zext_ln401_1_fu_741_p1() {
    zext_ln401_1_fu_741_p1 = esl_zext<8,6>(p_12_reg_385.read());
}

void keccak_absorb::thread_zext_ln401_2_fu_749_p1() {
    zext_ln401_2_fu_749_p1 = esl_zext<8,2>(p_1_reg_395.read());
}

void keccak_absorb::thread_zext_ln401_fu_745_p1() {
    zext_ln401_fu_745_p1 = esl_zext<3,2>(p_1_reg_395.read());
}

void keccak_absorb::thread_zext_ln406_fu_783_p1() {
    zext_ln406_fu_783_p1 = esl_zext<9,6>(ap_phi_mux_p_23_phi_fu_423_p6.read());
}

void keccak_absorb::thread_zext_ln415_1_fu_891_p1() {
    zext_ln415_1_fu_891_p1 = esl_zext<64,5>(i_2_reg_468.read());
}

void keccak_absorb::thread_zext_ln422_2_fu_845_p1() {
    zext_ln422_2_fu_845_p1 = esl_zext<30,3>(tmp_496_fu_835_p4.read());
}

void keccak_absorb::thread_zext_ln422_fu_936_p1() {
    zext_ln422_fu_936_p1 = esl_zext<30,5>(i_3_reg_479.read());
}

void keccak_absorb::thread_zext_ln424_1_fu_945_p1() {
    zext_ln424_1_fu_945_p1 = esl_zext<64,30>(add_ln424_1_fu_940_p2.read());
}

void keccak_absorb::thread_zext_ln426_2_fu_976_p1() {
    zext_ln426_2_fu_976_p1 = esl_zext<9,8>(and_ln_fu_969_p3.read());
}

void keccak_absorb::thread_zext_ln426_fu_980_p1() {
    zext_ln426_fu_980_p1 = esl_zext<64,8>(and_ln_fu_969_p3.read());
}

void keccak_absorb::thread_zext_ln428_fu_999_p1() {
    zext_ln428_fu_999_p1 = esl_zext<32,9>(add_ln428_fu_994_p2.read());
}

void keccak_absorb::thread_zext_ln435_2_fu_1009_p1() {
    zext_ln435_2_fu_1009_p1 = esl_zext<33,32>(i_5_reg_490.read());
}

void keccak_absorb::thread_zext_ln435_fu_1024_p1() {
    zext_ln435_fu_1024_p1 = esl_zext<64,32>(i_5_reg_490.read());
}

void keccak_absorb::thread_zext_ln439_fu_1059_p1() {
    zext_ln439_fu_1059_p1 = esl_zext<64,6>(tmp_497_fu_1050_p4.read());
}

void keccak_absorb::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln389_fu_561_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(icmp_ln391_fu_578_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln389_fu_561_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln391_fu_578_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_655_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_block_state9_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln412_fu_809_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 1024 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln413_fu_880_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln413_fu_880_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_1_fu_510_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln422_fu_925_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln430_fu_1003_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state26;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln435_fu_1013_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<25>) ("XXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

