// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "keccak_squeezeblocks_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic keccak_squeezeblocks_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic keccak_squeezeblocks_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> keccak_squeezeblocks_1::ap_ST_fsm_state1 = "1";
const sc_lv<8> keccak_squeezeblocks_1::ap_ST_fsm_state2 = "10";
const sc_lv<8> keccak_squeezeblocks_1::ap_ST_fsm_state3 = "100";
const sc_lv<8> keccak_squeezeblocks_1::ap_ST_fsm_pp0_stage0 = "1000";
const sc_lv<8> keccak_squeezeblocks_1::ap_ST_fsm_pp0_stage1 = "10000";
const sc_lv<8> keccak_squeezeblocks_1::ap_ST_fsm_pp0_stage2 = "100000";
const sc_lv<8> keccak_squeezeblocks_1::ap_ST_fsm_pp0_stage3 = "1000000";
const sc_lv<8> keccak_squeezeblocks_1::ap_ST_fsm_state9 = "10000000";
const bool keccak_squeezeblocks_1::ap_const_boolean_1 = true;
const sc_lv<32> keccak_squeezeblocks_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> keccak_squeezeblocks_1::ap_const_lv32_3 = "11";
const bool keccak_squeezeblocks_1::ap_const_boolean_0 = false;
const sc_lv<1> keccak_squeezeblocks_1::ap_const_lv1_0 = "0";
const sc_lv<32> keccak_squeezeblocks_1::ap_const_lv32_4 = "100";
const sc_lv<32> keccak_squeezeblocks_1::ap_const_lv32_7 = "111";
const sc_lv<32> keccak_squeezeblocks_1::ap_const_lv32_2 = "10";
const sc_lv<1> keccak_squeezeblocks_1::ap_const_lv1_1 = "1";
const sc_lv<32> keccak_squeezeblocks_1::ap_const_lv32_6 = "110";
const sc_lv<3> keccak_squeezeblocks_1::ap_const_lv3_5 = "101";
const sc_lv<10> keccak_squeezeblocks_1::ap_const_lv10_0 = "0000000000";
const sc_lv<5> keccak_squeezeblocks_1::ap_const_lv5_0 = "00000";
const sc_lv<32> keccak_squeezeblocks_1::ap_const_lv32_1 = "1";
const sc_lv<32> keccak_squeezeblocks_1::ap_const_lv32_5 = "101";
const sc_lv<3> keccak_squeezeblocks_1::ap_const_lv3_0 = "000";
const sc_lv<5> keccak_squeezeblocks_1::ap_const_lv5_11 = "10001";
const sc_lv<5> keccak_squeezeblocks_1::ap_const_lv5_1 = "1";
const sc_lv<32> keccak_squeezeblocks_1::ap_const_lv32_8 = "1000";
const sc_lv<32> keccak_squeezeblocks_1::ap_const_lv32_F = "1111";
const sc_lv<10> keccak_squeezeblocks_1::ap_const_lv10_1 = "1";
const sc_lv<32> keccak_squeezeblocks_1::ap_const_lv32_10 = "10000";
const sc_lv<32> keccak_squeezeblocks_1::ap_const_lv32_17 = "10111";
const sc_lv<32> keccak_squeezeblocks_1::ap_const_lv32_18 = "11000";
const sc_lv<32> keccak_squeezeblocks_1::ap_const_lv32_1F = "11111";
const sc_lv<32> keccak_squeezeblocks_1::ap_const_lv32_20 = "100000";
const sc_lv<32> keccak_squeezeblocks_1::ap_const_lv32_27 = "100111";
const sc_lv<32> keccak_squeezeblocks_1::ap_const_lv32_28 = "101000";
const sc_lv<32> keccak_squeezeblocks_1::ap_const_lv32_2F = "101111";
const sc_lv<32> keccak_squeezeblocks_1::ap_const_lv32_30 = "110000";
const sc_lv<32> keccak_squeezeblocks_1::ap_const_lv32_37 = "110111";
const sc_lv<32> keccak_squeezeblocks_1::ap_const_lv32_38 = "111000";
const sc_lv<32> keccak_squeezeblocks_1::ap_const_lv32_3F = "111111";
const sc_lv<10> keccak_squeezeblocks_1::ap_const_lv10_2 = "10";
const sc_lv<10> keccak_squeezeblocks_1::ap_const_lv10_3 = "11";
const sc_lv<10> keccak_squeezeblocks_1::ap_const_lv10_4 = "100";
const sc_lv<10> keccak_squeezeblocks_1::ap_const_lv10_5 = "101";
const sc_lv<10> keccak_squeezeblocks_1::ap_const_lv10_6 = "110";
const sc_lv<10> keccak_squeezeblocks_1::ap_const_lv10_7 = "111";
const sc_lv<10> keccak_squeezeblocks_1::ap_const_lv10_88 = "10001000";
const sc_lv<3> keccak_squeezeblocks_1::ap_const_lv3_7 = "111";

keccak_squeezeblocks_1::keccak_squeezeblocks_1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_KeccakF1600_StatePer_1_fu_213 = new KeccakF1600_StatePer_1("grp_KeccakF1600_StatePer_1_fu_213");
    grp_KeccakF1600_StatePer_1_fu_213->ap_clk(ap_clk);
    grp_KeccakF1600_StatePer_1_fu_213->ap_rst(ap_rst);
    grp_KeccakF1600_StatePer_1_fu_213->ap_start(grp_KeccakF1600_StatePer_1_fu_213_ap_start);
    grp_KeccakF1600_StatePer_1_fu_213->ap_done(grp_KeccakF1600_StatePer_1_fu_213_ap_done);
    grp_KeccakF1600_StatePer_1_fu_213->ap_idle(grp_KeccakF1600_StatePer_1_fu_213_ap_idle);
    grp_KeccakF1600_StatePer_1_fu_213->ap_ready(grp_KeccakF1600_StatePer_1_fu_213_ap_ready);
    grp_KeccakF1600_StatePer_1_fu_213->state_address0(grp_KeccakF1600_StatePer_1_fu_213_state_address0);
    grp_KeccakF1600_StatePer_1_fu_213->state_ce0(grp_KeccakF1600_StatePer_1_fu_213_state_ce0);
    grp_KeccakF1600_StatePer_1_fu_213->state_we0(grp_KeccakF1600_StatePer_1_fu_213_state_we0);
    grp_KeccakF1600_StatePer_1_fu_213->state_d0(grp_KeccakF1600_StatePer_1_fu_213_state_d0);
    grp_KeccakF1600_StatePer_1_fu_213->state_q0(s_q0);
    grp_KeccakF1600_StatePer_1_fu_213->state_address1(grp_KeccakF1600_StatePer_1_fu_213_state_address1);
    grp_KeccakF1600_StatePer_1_fu_213->state_ce1(grp_KeccakF1600_StatePer_1_fu_213_state_ce1);
    grp_KeccakF1600_StatePer_1_fu_213->state_we1(grp_KeccakF1600_StatePer_1_fu_213_state_we1);
    grp_KeccakF1600_StatePer_1_fu_213->state_d1(grp_KeccakF1600_StatePer_1_fu_213_state_d1);
    grp_KeccakF1600_StatePer_1_fu_213->state_q1(s_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln490_fu_253_p2);
    sensitive << ( p_0_rec_reg_190 );
    sensitive << ( zext_ln490_fu_250_p1 );

    SC_METHOD(thread_add_ln492_fu_411_p2);
    sensitive << ( p_0_rec_reg_190 );

    SC_METHOD(thread_add_ln493_fu_417_p2);
    sensitive << ( p_01_reg_178 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_11001);

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state4);
    sensitive << ( icmp_ln488_fu_225_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln486_fu_219_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_206_p4);
    sensitive << ( i_0_reg_202 );
    sensitive << ( icmp_ln488_reg_426 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_reg_430 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln486_fu_219_p2 );

    SC_METHOD(thread_grp_KeccakF1600_StatePer_1_fu_213_ap_start);
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_213_ap_start_reg );

    SC_METHOD(thread_i_fu_231_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_206_p4 );

    SC_METHOD(thread_icmp_ln486_fu_219_p2);
    sensitive << ( p_01_reg_178 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_icmp_ln488_fu_225_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_206_p4 );

    SC_METHOD(thread_or_ln49_1_fu_351_p2);
    sensitive << ( add_ln490_reg_445 );

    SC_METHOD(thread_or_ln49_2_fu_361_p2);
    sensitive << ( add_ln490_reg_445 );

    SC_METHOD(thread_or_ln49_3_fu_371_p2);
    sensitive << ( add_ln490_reg_445 );

    SC_METHOD(thread_or_ln49_4_fu_381_p2);
    sensitive << ( add_ln490_reg_445 );

    SC_METHOD(thread_or_ln49_5_fu_391_p2);
    sensitive << ( add_ln490_reg_445 );

    SC_METHOD(thread_or_ln49_6_fu_401_p2);
    sensitive << ( add_ln490_reg_445 );

    SC_METHOD(thread_or_ln49_fu_280_p2);
    sensitive << ( add_ln490_fu_253_p2 );

    SC_METHOD(thread_out_r_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln490_3_fu_259_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( zext_ln49_7_fu_356_p1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( zext_ln49_9_fu_376_p1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( zext_ln49_11_fu_396_p1 );

    SC_METHOD(thread_out_r_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( zext_ln49_fu_286_p1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( zext_ln49_8_fu_366_p1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( zext_ln49_10_fu_386_p1 );
    sensitive << ( zext_ln49_12_fu_406_p1 );

    SC_METHOD(thread_out_r_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_out_r_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_out_r_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( trunc_ln49_9_reg_455 );
    sensitive << ( trunc_ln49_1_reg_465 );
    sensitive << ( trunc_ln49_3_reg_475 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( trunc_ln49_fu_264_p1 );

    SC_METHOD(thread_out_r_d1);
    sensitive << ( s_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( trunc_ln49_s_reg_460 );
    sensitive << ( trunc_ln49_2_reg_470 );
    sensitive << ( trunc_ln49_4_reg_480 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_out_r_we0);
    sensitive << ( icmp_ln488_reg_426 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_out_r_we1);
    sensitive << ( icmp_ln488_reg_426 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_s_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_213_state_address0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln490_1_fu_245_p1 );

    SC_METHOD(thread_s_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_213_state_address1 );

    SC_METHOD(thread_s_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_213_state_ce0 );

    SC_METHOD(thread_s_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_213_state_ce1 );

    SC_METHOD(thread_s_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_213_state_d0 );

    SC_METHOD(thread_s_d1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_213_state_d1 );

    SC_METHOD(thread_s_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_213_state_we0 );

    SC_METHOD(thread_s_we1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_213_state_we1 );

    SC_METHOD(thread_shl_ln_fu_237_p3);
    sensitive << ( ap_phi_mux_i_0_phi_fu_206_p4 );

    SC_METHOD(thread_trunc_ln49_fu_264_p1);
    sensitive << ( s_q0 );

    SC_METHOD(thread_zext_ln490_1_fu_245_p1);
    sensitive << ( ap_phi_mux_i_0_phi_fu_206_p4 );

    SC_METHOD(thread_zext_ln490_3_fu_259_p1);
    sensitive << ( add_ln490_fu_253_p2 );

    SC_METHOD(thread_zext_ln490_fu_250_p1);
    sensitive << ( shl_ln_reg_435 );

    SC_METHOD(thread_zext_ln49_10_fu_386_p1);
    sensitive << ( or_ln49_4_fu_381_p2 );

    SC_METHOD(thread_zext_ln49_11_fu_396_p1);
    sensitive << ( or_ln49_5_fu_391_p2 );

    SC_METHOD(thread_zext_ln49_12_fu_406_p1);
    sensitive << ( or_ln49_6_fu_401_p2 );

    SC_METHOD(thread_zext_ln49_7_fu_356_p1);
    sensitive << ( or_ln49_1_fu_351_p2 );

    SC_METHOD(thread_zext_ln49_8_fu_366_p1);
    sensitive << ( or_ln49_2_fu_361_p2 );

    SC_METHOD(thread_zext_ln49_9_fu_376_p1);
    sensitive << ( or_ln49_3_fu_371_p2 );

    SC_METHOD(thread_zext_ln49_fu_286_p1);
    sensitive << ( or_ln49_fu_280_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln488_fu_225_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_213_ap_done );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln486_fu_219_p2 );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );

    ap_CS_fsm = "00000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    grp_KeccakF1600_StatePer_1_fu_213_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "keccak_squeezeblocks_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, out_r_address0, "(port)out_r_address0");
    sc_trace(mVcdFile, out_r_ce0, "(port)out_r_ce0");
    sc_trace(mVcdFile, out_r_we0, "(port)out_r_we0");
    sc_trace(mVcdFile, out_r_d0, "(port)out_r_d0");
    sc_trace(mVcdFile, out_r_address1, "(port)out_r_address1");
    sc_trace(mVcdFile, out_r_ce1, "(port)out_r_ce1");
    sc_trace(mVcdFile, out_r_we1, "(port)out_r_we1");
    sc_trace(mVcdFile, out_r_d1, "(port)out_r_d1");
    sc_trace(mVcdFile, s_address0, "(port)s_address0");
    sc_trace(mVcdFile, s_ce0, "(port)s_ce0");
    sc_trace(mVcdFile, s_we0, "(port)s_we0");
    sc_trace(mVcdFile, s_d0, "(port)s_d0");
    sc_trace(mVcdFile, s_q0, "(port)s_q0");
    sc_trace(mVcdFile, s_address1, "(port)s_address1");
    sc_trace(mVcdFile, s_ce1, "(port)s_ce1");
    sc_trace(mVcdFile, s_we1, "(port)s_we1");
    sc_trace(mVcdFile, s_d1, "(port)s_d1");
    sc_trace(mVcdFile, s_q1, "(port)s_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_0_reg_202, "i_0_reg_202");
    sc_trace(mVcdFile, icmp_ln488_fu_225_p2, "icmp_ln488_fu_225_p2");
    sc_trace(mVcdFile, icmp_ln488_reg_426, "icmp_ln488_reg_426");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter0, "ap_block_state4_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter1, "ap_block_state8_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_fu_231_p2, "i_fu_231_p2");
    sc_trace(mVcdFile, i_reg_430, "i_reg_430");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, shl_ln_fu_237_p3, "shl_ln_fu_237_p3");
    sc_trace(mVcdFile, shl_ln_reg_435, "shl_ln_reg_435");
    sc_trace(mVcdFile, add_ln490_fu_253_p2, "add_ln490_fu_253_p2");
    sc_trace(mVcdFile, add_ln490_reg_445, "add_ln490_reg_445");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage1_iter0, "ap_block_state5_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, trunc_ln49_9_reg_455, "trunc_ln49_9_reg_455");
    sc_trace(mVcdFile, trunc_ln49_s_reg_460, "trunc_ln49_s_reg_460");
    sc_trace(mVcdFile, trunc_ln49_1_reg_465, "trunc_ln49_1_reg_465");
    sc_trace(mVcdFile, trunc_ln49_2_reg_470, "trunc_ln49_2_reg_470");
    sc_trace(mVcdFile, trunc_ln49_3_reg_475, "trunc_ln49_3_reg_475");
    sc_trace(mVcdFile, trunc_ln49_4_reg_480, "trunc_ln49_4_reg_480");
    sc_trace(mVcdFile, add_ln492_fu_411_p2, "add_ln492_fu_411_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, add_ln493_fu_417_p2, "add_ln493_fu_417_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_213_ap_ready, "grp_KeccakF1600_StatePer_1_fu_213_ap_ready");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_213_ap_done, "grp_KeccakF1600_StatePer_1_fu_213_ap_done");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state4, "ap_condition_pp0_exit_iter0_state4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage3_iter0, "ap_block_state7_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_213_ap_start, "grp_KeccakF1600_StatePer_1_fu_213_ap_start");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_213_ap_idle, "grp_KeccakF1600_StatePer_1_fu_213_ap_idle");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_213_state_address0, "grp_KeccakF1600_StatePer_1_fu_213_state_address0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_213_state_ce0, "grp_KeccakF1600_StatePer_1_fu_213_state_ce0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_213_state_we0, "grp_KeccakF1600_StatePer_1_fu_213_state_we0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_213_state_d0, "grp_KeccakF1600_StatePer_1_fu_213_state_d0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_213_state_address1, "grp_KeccakF1600_StatePer_1_fu_213_state_address1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_213_state_ce1, "grp_KeccakF1600_StatePer_1_fu_213_state_ce1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_213_state_we1, "grp_KeccakF1600_StatePer_1_fu_213_state_we1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_213_state_d1, "grp_KeccakF1600_StatePer_1_fu_213_state_d1");
    sc_trace(mVcdFile, p_01_reg_178, "p_01_reg_178");
    sc_trace(mVcdFile, p_0_rec_reg_190, "p_0_rec_reg_190");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_206_p4, "ap_phi_mux_i_0_phi_fu_206_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_213_ap_start_reg, "grp_KeccakF1600_StatePer_1_fu_213_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln486_fu_219_p2, "icmp_ln486_fu_219_p2");
    sc_trace(mVcdFile, zext_ln490_1_fu_245_p1, "zext_ln490_1_fu_245_p1");
    sc_trace(mVcdFile, zext_ln490_3_fu_259_p1, "zext_ln490_3_fu_259_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, zext_ln49_fu_286_p1, "zext_ln49_fu_286_p1");
    sc_trace(mVcdFile, zext_ln49_7_fu_356_p1, "zext_ln49_7_fu_356_p1");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, zext_ln49_8_fu_366_p1, "zext_ln49_8_fu_366_p1");
    sc_trace(mVcdFile, zext_ln49_9_fu_376_p1, "zext_ln49_9_fu_376_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, zext_ln49_10_fu_386_p1, "zext_ln49_10_fu_386_p1");
    sc_trace(mVcdFile, zext_ln49_11_fu_396_p1, "zext_ln49_11_fu_396_p1");
    sc_trace(mVcdFile, zext_ln49_12_fu_406_p1, "zext_ln49_12_fu_406_p1");
    sc_trace(mVcdFile, trunc_ln49_fu_264_p1, "trunc_ln49_fu_264_p1");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage2_iter0, "ap_block_state6_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, zext_ln490_fu_250_p1, "zext_ln490_fu_250_p1");
    sc_trace(mVcdFile, or_ln49_fu_280_p2, "or_ln49_fu_280_p2");
    sc_trace(mVcdFile, or_ln49_1_fu_351_p2, "or_ln49_1_fu_351_p2");
    sc_trace(mVcdFile, or_ln49_2_fu_361_p2, "or_ln49_2_fu_361_p2");
    sc_trace(mVcdFile, or_ln49_3_fu_371_p2, "or_ln49_3_fu_371_p2");
    sc_trace(mVcdFile, or_ln49_4_fu_381_p2, "or_ln49_4_fu_381_p2");
    sc_trace(mVcdFile, or_ln49_5_fu_391_p2, "or_ln49_5_fu_391_p2");
    sc_trace(mVcdFile, or_ln49_6_fu_401_p2, "or_ln49_6_fu_401_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

keccak_squeezeblocks_1::~keccak_squeezeblocks_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_KeccakF1600_StatePer_1_fu_213;
}

void keccak_squeezeblocks_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state4.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                    esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_1_fu_213_ap_done.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read())))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                    esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_1_fu_213_ap_done.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_KeccakF1600_StatePer_1_fu_213_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln486_fu_219_p2.read()))) {
            grp_KeccakF1600_StatePer_1_fu_213_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_KeccakF1600_StatePer_1_fu_213_ap_ready.read())) {
            grp_KeccakF1600_StatePer_1_fu_213_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln488_reg_426.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_0_reg_202 = i_reg_430.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_1_fu_213_ap_done.read(), ap_const_logic_1))) {
        i_0_reg_202 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        p_01_reg_178 = add_ln493_fu_417_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_01_reg_178 = ap_const_lv3_5;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        p_0_rec_reg_190 = add_ln492_fu_411_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_0_rec_reg_190 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln488_reg_426.read(), ap_const_lv1_0))) {
        add_ln490_reg_445 = add_ln490_fu_253_p2.read();
        trunc_ln49_1_reg_465 = s_q0.read().range(39, 32);
        trunc_ln49_2_reg_470 = s_q0.read().range(47, 40);
        trunc_ln49_3_reg_475 = s_q0.read().range(55, 48);
        trunc_ln49_4_reg_480 = s_q0.read().range(63, 56);
        trunc_ln49_9_reg_455 = s_q0.read().range(23, 16);
        trunc_ln49_s_reg_460 = s_q0.read().range(31, 24);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        i_reg_430 = i_fu_231_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln488_reg_426 = icmp_ln488_fu_225_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln488_fu_225_p2.read(), ap_const_lv1_0))) {
        shl_ln_reg_435 = shl_ln_fu_237_p3.read();
    }
}

void keccak_squeezeblocks_1::thread_add_ln490_fu_253_p2() {
    add_ln490_fu_253_p2 = (!p_0_rec_reg_190.read().is_01() || !zext_ln490_fu_250_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_0_rec_reg_190.read()) + sc_biguint<10>(zext_ln490_fu_250_p1.read()));
}

void keccak_squeezeblocks_1::thread_add_ln492_fu_411_p2() {
    add_ln492_fu_411_p2 = (!p_0_rec_reg_190.read().is_01() || !ap_const_lv10_88.is_01())? sc_lv<10>(): (sc_biguint<10>(p_0_rec_reg_190.read()) + sc_biguint<10>(ap_const_lv10_88));
}

void keccak_squeezeblocks_1::thread_add_ln493_fu_417_p2() {
    add_ln493_fu_417_p2 = (!p_01_reg_178.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<3>(): (sc_biguint<3>(p_01_reg_178.read()) + sc_bigint<3>(ap_const_lv3_7));
}

void keccak_squeezeblocks_1::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[3];
}

void keccak_squeezeblocks_1::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[4];
}

void keccak_squeezeblocks_1::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[5];
}

void keccak_squeezeblocks_1::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[6];
}

void keccak_squeezeblocks_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void keccak_squeezeblocks_1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void keccak_squeezeblocks_1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void keccak_squeezeblocks_1::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[7];
}

void keccak_squeezeblocks_1::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void keccak_squeezeblocks_1::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void keccak_squeezeblocks_1::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void keccak_squeezeblocks_1::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void keccak_squeezeblocks_1::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void keccak_squeezeblocks_1::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void keccak_squeezeblocks_1::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void keccak_squeezeblocks_1::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void keccak_squeezeblocks_1::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void keccak_squeezeblocks_1::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void keccak_squeezeblocks_1::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void keccak_squeezeblocks_1::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void keccak_squeezeblocks_1::thread_ap_block_state4_pp0_stage0_iter0() {
    ap_block_state4_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void keccak_squeezeblocks_1::thread_ap_block_state5_pp0_stage1_iter0() {
    ap_block_state5_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void keccak_squeezeblocks_1::thread_ap_block_state6_pp0_stage2_iter0() {
    ap_block_state6_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void keccak_squeezeblocks_1::thread_ap_block_state7_pp0_stage3_iter0() {
    ap_block_state7_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void keccak_squeezeblocks_1::thread_ap_block_state8_pp0_stage0_iter1() {
    ap_block_state8_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void keccak_squeezeblocks_1::thread_ap_condition_pp0_exit_iter0_state4() {
    if (esl_seteq<1,1,1>(icmp_ln488_fu_225_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state4 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state4 = ap_const_logic_0;
    }
}

void keccak_squeezeblocks_1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln486_fu_219_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void keccak_squeezeblocks_1::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void keccak_squeezeblocks_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void keccak_squeezeblocks_1::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void keccak_squeezeblocks_1::thread_ap_phi_mux_i_0_phi_fu_206_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln488_reg_426.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_206_p4 = i_reg_430.read();
    } else {
        ap_phi_mux_i_0_phi_fu_206_p4 = i_0_reg_202.read();
    }
}

void keccak_squeezeblocks_1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln486_fu_219_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void keccak_squeezeblocks_1::thread_grp_KeccakF1600_StatePer_1_fu_213_ap_start() {
    grp_KeccakF1600_StatePer_1_fu_213_ap_start = grp_KeccakF1600_StatePer_1_fu_213_ap_start_reg.read();
}

void keccak_squeezeblocks_1::thread_i_fu_231_p2() {
    i_fu_231_p2 = (!ap_phi_mux_i_0_phi_fu_206_p4.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(ap_phi_mux_i_0_phi_fu_206_p4.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void keccak_squeezeblocks_1::thread_icmp_ln486_fu_219_p2() {
    icmp_ln486_fu_219_p2 = (!p_01_reg_178.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(p_01_reg_178.read() == ap_const_lv3_0);
}

void keccak_squeezeblocks_1::thread_icmp_ln488_fu_225_p2() {
    icmp_ln488_fu_225_p2 = (!ap_phi_mux_i_0_phi_fu_206_p4.read().is_01() || !ap_const_lv5_11.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_0_phi_fu_206_p4.read() == ap_const_lv5_11);
}

void keccak_squeezeblocks_1::thread_or_ln49_1_fu_351_p2() {
    or_ln49_1_fu_351_p2 = (add_ln490_reg_445.read() | ap_const_lv10_2);
}

void keccak_squeezeblocks_1::thread_or_ln49_2_fu_361_p2() {
    or_ln49_2_fu_361_p2 = (add_ln490_reg_445.read() | ap_const_lv10_3);
}

void keccak_squeezeblocks_1::thread_or_ln49_3_fu_371_p2() {
    or_ln49_3_fu_371_p2 = (add_ln490_reg_445.read() | ap_const_lv10_4);
}

void keccak_squeezeblocks_1::thread_or_ln49_4_fu_381_p2() {
    or_ln49_4_fu_381_p2 = (add_ln490_reg_445.read() | ap_const_lv10_5);
}

void keccak_squeezeblocks_1::thread_or_ln49_5_fu_391_p2() {
    or_ln49_5_fu_391_p2 = (add_ln490_reg_445.read() | ap_const_lv10_6);
}

void keccak_squeezeblocks_1::thread_or_ln49_6_fu_401_p2() {
    or_ln49_6_fu_401_p2 = (add_ln490_reg_445.read() | ap_const_lv10_7);
}

void keccak_squeezeblocks_1::thread_or_ln49_fu_280_p2() {
    or_ln49_fu_280_p2 = (add_ln490_fu_253_p2.read() | ap_const_lv10_1);
}

void keccak_squeezeblocks_1::thread_out_r_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        out_r_address0 =  (sc_lv<10>) (zext_ln49_11_fu_396_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        out_r_address0 =  (sc_lv<10>) (zext_ln49_9_fu_376_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        out_r_address0 =  (sc_lv<10>) (zext_ln49_7_fu_356_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        out_r_address0 =  (sc_lv<10>) (zext_ln490_3_fu_259_p1.read());
    } else {
        out_r_address0 = "XXXXXXXXXX";
    }
}

void keccak_squeezeblocks_1::thread_out_r_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        out_r_address1 =  (sc_lv<10>) (zext_ln49_12_fu_406_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        out_r_address1 =  (sc_lv<10>) (zext_ln49_10_fu_386_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        out_r_address1 =  (sc_lv<10>) (zext_ln49_8_fu_366_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        out_r_address1 =  (sc_lv<10>) (zext_ln49_fu_286_p1.read());
    } else {
        out_r_address1 = "XXXXXXXXXX";
    }
}

void keccak_squeezeblocks_1::thread_out_r_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)))) {
        out_r_ce0 = ap_const_logic_1;
    } else {
        out_r_ce0 = ap_const_logic_0;
    }
}

void keccak_squeezeblocks_1::thread_out_r_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)))) {
        out_r_ce1 = ap_const_logic_1;
    } else {
        out_r_ce1 = ap_const_logic_0;
    }
}

void keccak_squeezeblocks_1::thread_out_r_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        out_r_d0 = trunc_ln49_3_reg_475.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        out_r_d0 = trunc_ln49_1_reg_465.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        out_r_d0 = trunc_ln49_9_reg_455.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        out_r_d0 = trunc_ln49_fu_264_p1.read();
    } else {
        out_r_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void keccak_squeezeblocks_1::thread_out_r_d1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        out_r_d1 = trunc_ln49_4_reg_480.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        out_r_d1 = trunc_ln49_2_reg_470.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        out_r_d1 = trunc_ln49_s_reg_460.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        out_r_d1 = s_q0.read().range(15, 8);
    } else {
        out_r_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void keccak_squeezeblocks_1::thread_out_r_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln488_reg_426.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln488_reg_426.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln488_reg_426.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln488_reg_426.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)))) {
        out_r_we0 = ap_const_logic_1;
    } else {
        out_r_we0 = ap_const_logic_0;
    }
}

void keccak_squeezeblocks_1::thread_out_r_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln488_reg_426.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln488_reg_426.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln488_reg_426.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln488_reg_426.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)))) {
        out_r_we1 = ap_const_logic_1;
    } else {
        out_r_we1 = ap_const_logic_0;
    }
}

void keccak_squeezeblocks_1::thread_s_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        s_address0 =  (sc_lv<5>) (zext_ln490_1_fu_245_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        s_address0 = grp_KeccakF1600_StatePer_1_fu_213_state_address0.read();
    } else {
        s_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void keccak_squeezeblocks_1::thread_s_address1() {
    s_address1 = grp_KeccakF1600_StatePer_1_fu_213_state_address1.read();
}

void keccak_squeezeblocks_1::thread_s_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        s_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        s_ce0 = grp_KeccakF1600_StatePer_1_fu_213_state_ce0.read();
    } else {
        s_ce0 = ap_const_logic_0;
    }
}

void keccak_squeezeblocks_1::thread_s_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        s_ce1 = grp_KeccakF1600_StatePer_1_fu_213_state_ce1.read();
    } else {
        s_ce1 = ap_const_logic_0;
    }
}

void keccak_squeezeblocks_1::thread_s_d0() {
    s_d0 = grp_KeccakF1600_StatePer_1_fu_213_state_d0.read();
}

void keccak_squeezeblocks_1::thread_s_d1() {
    s_d1 = grp_KeccakF1600_StatePer_1_fu_213_state_d1.read();
}

void keccak_squeezeblocks_1::thread_s_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        s_we0 = grp_KeccakF1600_StatePer_1_fu_213_state_we0.read();
    } else {
        s_we0 = ap_const_logic_0;
    }
}

void keccak_squeezeblocks_1::thread_s_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        s_we1 = grp_KeccakF1600_StatePer_1_fu_213_state_we1.read();
    } else {
        s_we1 = ap_const_logic_0;
    }
}

void keccak_squeezeblocks_1::thread_shl_ln_fu_237_p3() {
    shl_ln_fu_237_p3 = esl_concat<5,3>(ap_phi_mux_i_0_phi_fu_206_p4.read(), ap_const_lv3_0);
}

void keccak_squeezeblocks_1::thread_trunc_ln49_fu_264_p1() {
    trunc_ln49_fu_264_p1 = s_q0.read().range(8-1, 0);
}

void keccak_squeezeblocks_1::thread_zext_ln490_1_fu_245_p1() {
    zext_ln490_1_fu_245_p1 = esl_zext<64,5>(ap_phi_mux_i_0_phi_fu_206_p4.read());
}

void keccak_squeezeblocks_1::thread_zext_ln490_3_fu_259_p1() {
    zext_ln490_3_fu_259_p1 = esl_zext<64,10>(add_ln490_fu_253_p2.read());
}

void keccak_squeezeblocks_1::thread_zext_ln490_fu_250_p1() {
    zext_ln490_fu_250_p1 = esl_zext<10,8>(shl_ln_reg_435.read());
}

void keccak_squeezeblocks_1::thread_zext_ln49_10_fu_386_p1() {
    zext_ln49_10_fu_386_p1 = esl_zext<64,10>(or_ln49_4_fu_381_p2.read());
}

void keccak_squeezeblocks_1::thread_zext_ln49_11_fu_396_p1() {
    zext_ln49_11_fu_396_p1 = esl_zext<64,10>(or_ln49_5_fu_391_p2.read());
}

void keccak_squeezeblocks_1::thread_zext_ln49_12_fu_406_p1() {
    zext_ln49_12_fu_406_p1 = esl_zext<64,10>(or_ln49_6_fu_401_p2.read());
}

void keccak_squeezeblocks_1::thread_zext_ln49_7_fu_356_p1() {
    zext_ln49_7_fu_356_p1 = esl_zext<64,10>(or_ln49_1_fu_351_p2.read());
}

void keccak_squeezeblocks_1::thread_zext_ln49_8_fu_366_p1() {
    zext_ln49_8_fu_366_p1 = esl_zext<64,10>(or_ln49_2_fu_361_p2.read());
}

void keccak_squeezeblocks_1::thread_zext_ln49_9_fu_376_p1() {
    zext_ln49_9_fu_376_p1 = esl_zext<64,10>(or_ln49_3_fu_371_p2.read());
}

void keccak_squeezeblocks_1::thread_zext_ln49_fu_286_p1() {
    zext_ln49_fu_286_p1 = esl_zext<64,10>(or_ln49_fu_280_p2.read());
}

void keccak_squeezeblocks_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln486_fu_219_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_1_fu_213_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln488_fu_225_p2.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln488_fu_225_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 64 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<8>) ("XXXXXXXX");
            break;
    }
}

}

