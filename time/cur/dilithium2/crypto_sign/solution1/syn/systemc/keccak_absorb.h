// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _keccak_absorb_HH_
#define _keccak_absorb_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "KeccakF1600_StatePer_1.h"
#include "keccak_absorb_2_t.h"

namespace ap_rtl {

struct keccak_absorb : public sc_module {
    // Port declarations 21
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > s_address0;
    sc_out< sc_logic > s_ce0;
    sc_out< sc_logic > s_we0;
    sc_out< sc_lv<64> > s_d0;
    sc_in< sc_lv<64> > s_q0;
    sc_out< sc_lv<5> > s_address1;
    sc_out< sc_logic > s_ce1;
    sc_out< sc_logic > s_we1;
    sc_out< sc_lv<64> > s_d1;
    sc_in< sc_lv<64> > s_q1;
    sc_in< sc_lv<9> > r;
    sc_in< sc_lv<7> > pos_r;
    sc_in< sc_lv<8> > m_0_read;
    sc_in< sc_lv<8> > m_1_read;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    keccak_absorb(sc_module_name name);
    SC_HAS_PROCESS(keccak_absorb);

    ~keccak_absorb();

    sc_trace_file* mVcdFile;

    keccak_absorb_2_t* t_U;
    KeccakF1600_StatePer_1* grp_KeccakF1600_StatePer_1_fu_510;
    sc_signal< sc_lv<25> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > i_2_reg_468;
    sc_signal< sc_lv<8> > t_q0;
    sc_signal< sc_lv<8> > reg_516;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<8> > t_q1;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<8> > reg_521;
    sc_signal< sc_lv<8> > reg_526;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_lv<8> > reg_530;
    sc_signal< sc_lv<8> > reg_534;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_lv<8> > reg_538;
    sc_signal< sc_lv<6> > empty_fu_542_p1;
    sc_signal< sc_lv<6> > empty_reg_1130;
    sc_signal< sc_lv<8> > empty_101_fu_546_p1;
    sc_signal< sc_lv<8> > empty_101_reg_1136;
    sc_signal< sc_lv<3> > add_ln389_fu_550_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > zext_ln391_fu_570_p1;
    sc_signal< sc_lv<1> > icmp_ln389_fu_561_p2;
    sc_signal< sc_lv<5> > zext_ln391_1_fu_574_p1;
    sc_signal< sc_lv<5> > zext_ln391_1_reg_1154;
    sc_signal< sc_lv<3> > xor_ln393_2_fu_618_p2;
    sc_signal< sc_lv<3> > xor_ln393_2_reg_1162;
    sc_signal< sc_lv<1> > icmp_ln391_fu_578_p2;
    sc_signal< sc_lv<64> > sext_ln393_fu_624_p1;
    sc_signal< sc_lv<64> > sext_ln393_reg_1167;
    sc_signal< sc_lv<5> > p_cast6_fu_628_p1;
    sc_signal< sc_lv<5> > p_cast6_reg_1172;
    sc_signal< sc_lv<2> > add_ln395_fu_640_p2;
    sc_signal< sc_lv<2> > add_ln395_reg_1177;
    sc_signal< sc_lv<6> > add_ln396_fu_646_p2;
    sc_signal< sc_lv<6> > add_ln396_reg_1182;
    sc_signal< sc_lv<64> > add_ln394_fu_660_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > i_fu_673_p2;
    sc_signal< sc_lv<1> > exitcond_fu_655_p2;
    sc_signal< sc_lv<3> > tmp_reg_1211;
    sc_signal< sc_lv<1> > trunc_ln399_fu_707_p1;
    sc_signal< sc_lv<1> > trunc_ln399_reg_1216;
    sc_signal< sc_lv<5> > s_addr_reg_1251;
    sc_signal< sc_lv<3> > zext_ln401_fu_745_p1;
    sc_signal< sc_lv<3> > zext_ln401_reg_1256;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > icmp_ln401_fu_753_p2;
    sc_signal< sc_lv<1> > icmp_ln401_reg_1263;
    sc_signal< sc_lv<1> > icmp_ln401_1_fu_764_p2;
    sc_signal< sc_lv<1> > icmp_ln401_1_reg_1267;
    sc_signal< sc_lv<3> > trunc_ln407_fu_770_p1;
    sc_signal< sc_lv<3> > trunc_ln407_reg_1271;
    sc_signal< sc_lv<1> > trunc_ln410_fu_774_p1;
    sc_signal< sc_lv<1> > trunc_ln410_reg_1276;
    sc_signal< sc_lv<9> > zext_ln406_fu_783_p1;
    sc_signal< sc_lv<9> > zext_ln406_reg_1281;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_1_fu_510_ap_ready;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_1_fu_510_ap_done;
    sc_signal< bool > ap_predicate_op127_call_state9;
    sc_signal< bool > ap_block_state9_on_subcall_done;
    sc_signal< sc_lv<64> > sext_ln406_fu_787_p1;
    sc_signal< sc_lv<64> > empty_107_fu_791_p1;
    sc_signal< sc_lv<64> > empty_107_reg_1291;
    sc_signal< sc_lv<5> > tmp_s_reg_1298;
    sc_signal< sc_lv<1> > xor_ln415_1_fu_803_p2;
    sc_signal< sc_lv<1> > xor_ln415_1_reg_1303;
    sc_signal< sc_lv<1> > icmp_ln412_fu_809_p2;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<8> > select_ln32_2_fu_823_p3;
    sc_signal< sc_lv<8> > select_ln32_2_reg_1314;
    sc_signal< sc_lv<8> > select_ln32_3_fu_829_p3;
    sc_signal< sc_lv<8> > select_ln32_3_reg_1322;
    sc_signal< sc_lv<30> > zext_ln422_2_fu_845_p1;
    sc_signal< sc_lv<30> > zext_ln422_2_reg_1330;
    sc_signal< sc_lv<5> > tmp_3266_reg_1335;
    sc_signal< sc_lv<1> > trunc_ln424_fu_859_p1;
    sc_signal< sc_lv<1> > trunc_ln424_reg_1341;
    sc_signal< sc_lv<8> > select_ln32_fu_868_p3;
    sc_signal< sc_lv<8> > select_ln32_reg_1346;
    sc_signal< sc_lv<8> > select_ln32_1_fu_874_p3;
    sc_signal< sc_lv<8> > select_ln32_1_reg_1354;
    sc_signal< sc_lv<1> > icmp_ln413_fu_880_p2;
    sc_signal< sc_lv<1> > icmp_ln413_reg_1362;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<5> > i_33_fu_885_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<5> > s_addr_6_reg_1371;
    sc_signal< sc_lv<64> > add_ln417_fu_915_p2;
    sc_signal< sc_lv<64> > add_ln417_reg_1377;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<64> > sub_ln420_fu_920_p2;
    sc_signal< sc_lv<64> > sub_ln420_reg_1382;
    sc_signal< sc_lv<5> > add_ln422_fu_930_p2;
    sc_signal< sc_lv<5> > add_ln422_reg_1390;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<5> > s_addr_5_reg_1395;
    sc_signal< sc_lv<1> > icmp_ln422_fu_925_p2;
    sc_signal< sc_lv<64> > sub_ln427_fu_984_p2;
    sc_signal< sc_lv<64> > sub_ln427_reg_1400;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<33> > trunc_ln427_fu_990_p1;
    sc_signal< sc_lv<33> > trunc_ln427_reg_1405;
    sc_signal< sc_lv<9> > add_ln428_fu_994_p2;
    sc_signal< sc_lv<9> > add_ln428_reg_1410;
    sc_signal< sc_lv<32> > zext_ln428_fu_999_p1;
    sc_signal< sc_lv<32> > zext_ln428_reg_1415;
    sc_signal< sc_lv<1> > icmp_ln430_fu_1003_p2;
    sc_signal< sc_lv<1> > icmp_ln430_reg_1421;
    sc_signal< sc_lv<3> > t_addr_28_reg_1425;
    sc_signal< sc_lv<3> > t_addr_29_reg_1430;
    sc_signal< sc_lv<3> > t_addr_30_gep_fu_280_p3;
    sc_signal< sc_lv<3> > t_addr_30_reg_1435;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<3> > t_addr_31_gep_fu_288_p3;
    sc_signal< sc_lv<3> > t_addr_31_reg_1440;
    sc_signal< sc_lv<3> > t_addr_32_gep_fu_296_p3;
    sc_signal< sc_lv<3> > t_addr_32_reg_1445;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<3> > t_addr_33_gep_fu_304_p3;
    sc_signal< sc_lv<3> > t_addr_33_reg_1450;
    sc_signal< sc_lv<3> > t_addr_34_gep_fu_312_p3;
    sc_signal< sc_lv<3> > t_addr_34_reg_1455;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<3> > t_addr_35_gep_fu_320_p3;
    sc_signal< sc_lv<3> > t_addr_35_reg_1460;
    sc_signal< sc_lv<32> > i_34_fu_1018_p2;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<5> > s_addr_7_reg_1473;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<32> > trunc_ln440_fu_1064_p1;
    sc_signal< sc_lv<32> > trunc_ln440_reg_1479;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state11;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<3> > t_address0;
    sc_signal< sc_logic > t_ce0;
    sc_signal< sc_logic > t_we0;
    sc_signal< sc_lv<8> > t_d0;
    sc_signal< sc_lv<3> > t_address1;
    sc_signal< sc_logic > t_ce1;
    sc_signal< sc_logic > t_we1;
    sc_signal< sc_lv<8> > t_d1;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_1_fu_510_ap_start;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_1_fu_510_ap_idle;
    sc_signal< sc_lv<5> > grp_KeccakF1600_StatePer_1_fu_510_state_address0;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_1_fu_510_state_ce0;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_1_fu_510_state_we0;
    sc_signal< sc_lv<64> > grp_KeccakF1600_StatePer_1_fu_510_state_d0;
    sc_signal< sc_lv<5> > grp_KeccakF1600_StatePer_1_fu_510_state_address1;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_1_fu_510_state_ce1;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_1_fu_510_state_we1;
    sc_signal< sc_lv<64> > grp_KeccakF1600_StatePer_1_fu_510_state_d1;
    sc_signal< sc_lv<3> > phi_ln389_reg_342;
    sc_signal< sc_lv<64> > p_05_rec_reg_353;
    sc_signal< sc_lv<32> > i_0_reg_364;
    sc_signal< sc_lv<1> > phi_ln406_reg_373;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<6> > p_12_reg_385;
    sc_signal< sc_lv<2> > p_1_reg_395;
    sc_signal< sc_lv<1> > ap_phi_mux_phi_ln406_1_phi_fu_410_p6;
    sc_signal< sc_lv<1> > phi_ln406_1_reg_406;
    sc_signal< sc_lv<6> > ap_phi_mux_p_23_phi_fu_423_p6;
    sc_signal< sc_lv<6> > p_23_reg_420;
    sc_signal< sc_lv<3> > sub_ln407_fu_778_p2;
    sc_signal< sc_lv<3> > ap_phi_mux_p_2_phi_fu_438_p6;
    sc_signal< sc_lv<3> > p_2_reg_435;
    sc_signal< sc_lv<64> > indvars_iv_reg_446;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<64> > p_38_rec_reg_456;
    sc_signal< sc_lv<5> > i_3_reg_479;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<32> > i_5_reg_490;
    sc_signal< sc_lv<1> > icmp_ln435_fu_1013_p2;
    sc_signal< sc_lv<32> > add_ln440_fu_1094_p2;
    sc_signal< sc_lv<32> > ap_phi_mux_p_34_phi_fu_504_p4;
    sc_signal< sc_lv<32> > p_34_reg_501;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_1_fu_510_ap_start_reg;
    sc_signal< sc_lv<64> > zext_ln389_fu_556_p1;
    sc_signal< sc_lv<64> > zext_ln394_fu_679_p1;
    sc_signal< sc_lv<64> > zext_ln398_fu_710_p1;
    sc_signal< sc_lv<64> > zext_ln415_1_fu_891_p1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln424_1_fu_945_p1;
    sc_signal< sc_lv<64> > zext_ln435_fu_1024_p1;
    sc_signal< sc_lv<64> > zext_ln439_fu_1059_p1;
    sc_signal< sc_lv<8> > select_ln394_fu_666_p3;
    sc_signal< sc_lv<8> > select_ln437_fu_1043_p3;
    sc_signal< sc_lv<64> > xor_ln398_fu_734_p2;
    sc_signal< sc_lv<64> > xor_ln415_fu_908_p2;
    sc_signal< sc_lv<64> > xor_ln424_fu_962_p2;
    sc_signal< sc_lv<64> > xor_ln439_fu_1087_p2;
    sc_signal< sc_lv<3> > trunc_ln391_fu_567_p1;
    sc_signal< sc_lv<4> > zext_ln393_fu_584_p1;
    sc_signal< sc_lv<4> > sub_ln393_fu_588_p2;
    sc_signal< sc_lv<3> > empty_104_fu_594_p1;
    sc_signal< sc_lv<1> > empty_105_fu_604_p2;
    sc_signal< sc_lv<3> > xor_ln393_1_fu_598_p2;
    sc_signal< sc_lv<3> > umax_fu_610_p3;
    sc_signal< sc_lv<2> > trunc_ln395_fu_636_p1;
    sc_signal< sc_lv<6> > sext_ln395_fu_632_p1;
    sc_signal< sc_lv<1> > empty_106_fu_651_p1;
    sc_signal< sc_lv<5> > add_ln392_fu_684_p2;
    sc_signal< sc_lv<6> > sext_ln398_fu_688_p1;
    sc_signal< sc_lv<6> > sub_ln398_fu_692_p2;
    sc_signal< sc_lv<64> > r_7_i_fu_714_p9;
    sc_signal< sc_lv<8> > zext_ln401_1_fu_741_p1;
    sc_signal< sc_lv<8> > zext_ln401_2_fu_749_p1;
    sc_signal< sc_lv<8> > sub_ln401_fu_759_p2;
    sc_signal< sc_lv<1> > trunc_ln415_fu_814_p1;
    sc_signal< sc_lv<1> > xor_ln32_1_fu_818_p2;
    sc_signal< sc_lv<3> > tmp_496_fu_835_p4;
    sc_signal< sc_lv<1> > xor_ln32_fu_863_p2;
    sc_signal< sc_lv<64> > r_7_i6_fu_896_p9;
    sc_signal< sc_lv<30> > zext_ln422_fu_936_p1;
    sc_signal< sc_lv<30> > add_ln424_1_fu_940_p2;
    sc_signal< sc_lv<64> > r_7_i7_fu_950_p9;
    sc_signal< sc_lv<8> > and_ln_fu_969_p3;
    sc_signal< sc_lv<64> > zext_ln426_fu_980_p1;
    sc_signal< sc_lv<9> > zext_ln426_2_fu_976_p1;
    sc_signal< sc_lv<33> > zext_ln435_2_fu_1009_p1;
    sc_signal< sc_lv<1> > trunc_ln437_fu_1029_p1;
    sc_signal< sc_lv<1> > xor_ln437_fu_1033_p2;
    sc_signal< sc_lv<1> > xor_ln437_1_fu_1038_p2;
    sc_signal< sc_lv<6> > tmp_497_fu_1050_p4;
    sc_signal< sc_lv<64> > r_7_i5_fu_1067_p9;
    sc_signal< sc_lv<32> > ap_return_preg;
    sc_signal< sc_lv<25> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<25> ap_ST_fsm_state1;
    static const sc_lv<25> ap_ST_fsm_state2;
    static const sc_lv<25> ap_ST_fsm_state3;
    static const sc_lv<25> ap_ST_fsm_state4;
    static const sc_lv<25> ap_ST_fsm_state5;
    static const sc_lv<25> ap_ST_fsm_state6;
    static const sc_lv<25> ap_ST_fsm_state7;
    static const sc_lv<25> ap_ST_fsm_state8;
    static const sc_lv<25> ap_ST_fsm_state9;
    static const sc_lv<25> ap_ST_fsm_state10;
    static const sc_lv<25> ap_ST_fsm_pp0_stage0;
    static const sc_lv<25> ap_ST_fsm_state13;
    static const sc_lv<25> ap_ST_fsm_state14;
    static const sc_lv<25> ap_ST_fsm_state15;
    static const sc_lv<25> ap_ST_fsm_state16;
    static const sc_lv<25> ap_ST_fsm_state17;
    static const sc_lv<25> ap_ST_fsm_state18;
    static const sc_lv<25> ap_ST_fsm_state19;
    static const sc_lv<25> ap_ST_fsm_state20;
    static const sc_lv<25> ap_ST_fsm_state21;
    static const sc_lv<25> ap_ST_fsm_state22;
    static const sc_lv<25> ap_ST_fsm_state23;
    static const sc_lv<25> ap_ST_fsm_state24;
    static const sc_lv<25> ap_ST_fsm_state25;
    static const sc_lv<25> ap_ST_fsm_state26;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<5> ap_const_lv5_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln389_fu_550_p2();
    void thread_add_ln392_fu_684_p2();
    void thread_add_ln394_fu_660_p2();
    void thread_add_ln395_fu_640_p2();
    void thread_add_ln396_fu_646_p2();
    void thread_add_ln417_fu_915_p2();
    void thread_add_ln422_fu_930_p2();
    void thread_add_ln424_1_fu_940_p2();
    void thread_add_ln428_fu_994_p2();
    void thread_add_ln440_fu_1094_p2();
    void thread_and_ln_fu_969_p3();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state11_pp0_stage0_iter0();
    void thread_ap_block_state12_pp0_stage0_iter1();
    void thread_ap_block_state9_on_subcall_done();
    void thread_ap_condition_pp0_exit_iter0_state11();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_p_23_phi_fu_423_p6();
    void thread_ap_phi_mux_p_2_phi_fu_438_p6();
    void thread_ap_phi_mux_p_34_phi_fu_504_p4();
    void thread_ap_phi_mux_phi_ln406_1_phi_fu_410_p6();
    void thread_ap_predicate_op127_call_state9();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_empty_101_fu_546_p1();
    void thread_empty_104_fu_594_p1();
    void thread_empty_105_fu_604_p2();
    void thread_empty_106_fu_651_p1();
    void thread_empty_107_fu_791_p1();
    void thread_empty_fu_542_p1();
    void thread_exitcond_fu_655_p2();
    void thread_grp_KeccakF1600_StatePer_1_fu_510_ap_start();
    void thread_i_33_fu_885_p2();
    void thread_i_34_fu_1018_p2();
    void thread_i_fu_673_p2();
    void thread_icmp_ln389_fu_561_p2();
    void thread_icmp_ln391_fu_578_p2();
    void thread_icmp_ln401_1_fu_764_p2();
    void thread_icmp_ln401_fu_753_p2();
    void thread_icmp_ln412_fu_809_p2();
    void thread_icmp_ln413_fu_880_p2();
    void thread_icmp_ln422_fu_925_p2();
    void thread_icmp_ln430_fu_1003_p2();
    void thread_icmp_ln435_fu_1013_p2();
    void thread_p_cast6_fu_628_p1();
    void thread_r_7_i5_fu_1067_p9();
    void thread_r_7_i6_fu_896_p9();
    void thread_r_7_i7_fu_950_p9();
    void thread_r_7_i_fu_714_p9();
    void thread_s_address0();
    void thread_s_address1();
    void thread_s_ce0();
    void thread_s_ce1();
    void thread_s_d0();
    void thread_s_d1();
    void thread_s_we0();
    void thread_s_we1();
    void thread_select_ln32_1_fu_874_p3();
    void thread_select_ln32_2_fu_823_p3();
    void thread_select_ln32_3_fu_829_p3();
    void thread_select_ln32_fu_868_p3();
    void thread_select_ln394_fu_666_p3();
    void thread_select_ln437_fu_1043_p3();
    void thread_sext_ln393_fu_624_p1();
    void thread_sext_ln395_fu_632_p1();
    void thread_sext_ln398_fu_688_p1();
    void thread_sext_ln406_fu_787_p1();
    void thread_sub_ln393_fu_588_p2();
    void thread_sub_ln398_fu_692_p2();
    void thread_sub_ln401_fu_759_p2();
    void thread_sub_ln407_fu_778_p2();
    void thread_sub_ln420_fu_920_p2();
    void thread_sub_ln427_fu_984_p2();
    void thread_t_addr_28_reg_1425();
    void thread_t_addr_29_reg_1430();
    void thread_t_addr_30_gep_fu_280_p3();
    void thread_t_addr_30_reg_1435();
    void thread_t_addr_31_gep_fu_288_p3();
    void thread_t_addr_31_reg_1440();
    void thread_t_addr_32_gep_fu_296_p3();
    void thread_t_addr_32_reg_1445();
    void thread_t_addr_33_gep_fu_304_p3();
    void thread_t_addr_33_reg_1450();
    void thread_t_addr_34_gep_fu_312_p3();
    void thread_t_addr_34_reg_1455();
    void thread_t_addr_35_gep_fu_320_p3();
    void thread_t_addr_35_reg_1460();
    void thread_t_address0();
    void thread_t_address1();
    void thread_t_ce0();
    void thread_t_ce1();
    void thread_t_d0();
    void thread_t_d1();
    void thread_t_we0();
    void thread_t_we1();
    void thread_tmp_496_fu_835_p4();
    void thread_tmp_497_fu_1050_p4();
    void thread_trunc_ln391_fu_567_p1();
    void thread_trunc_ln395_fu_636_p1();
    void thread_trunc_ln399_fu_707_p1();
    void thread_trunc_ln407_fu_770_p1();
    void thread_trunc_ln410_fu_774_p1();
    void thread_trunc_ln415_fu_814_p1();
    void thread_trunc_ln424_fu_859_p1();
    void thread_trunc_ln427_fu_990_p1();
    void thread_trunc_ln437_fu_1029_p1();
    void thread_trunc_ln440_fu_1064_p1();
    void thread_umax_fu_610_p3();
    void thread_xor_ln32_1_fu_818_p2();
    void thread_xor_ln32_fu_863_p2();
    void thread_xor_ln393_1_fu_598_p2();
    void thread_xor_ln393_2_fu_618_p2();
    void thread_xor_ln398_fu_734_p2();
    void thread_xor_ln415_1_fu_803_p2();
    void thread_xor_ln415_fu_908_p2();
    void thread_xor_ln424_fu_962_p2();
    void thread_xor_ln437_1_fu_1038_p2();
    void thread_xor_ln437_fu_1033_p2();
    void thread_xor_ln439_fu_1087_p2();
    void thread_zext_ln389_fu_556_p1();
    void thread_zext_ln391_1_fu_574_p1();
    void thread_zext_ln391_fu_570_p1();
    void thread_zext_ln393_fu_584_p1();
    void thread_zext_ln394_fu_679_p1();
    void thread_zext_ln398_fu_710_p1();
    void thread_zext_ln401_1_fu_741_p1();
    void thread_zext_ln401_2_fu_749_p1();
    void thread_zext_ln401_fu_745_p1();
    void thread_zext_ln406_fu_783_p1();
    void thread_zext_ln415_1_fu_891_p1();
    void thread_zext_ln422_2_fu_845_p1();
    void thread_zext_ln422_fu_936_p1();
    void thread_zext_ln424_1_fu_945_p1();
    void thread_zext_ln426_2_fu_976_p1();
    void thread_zext_ln426_fu_980_p1();
    void thread_zext_ln428_fu_999_p1();
    void thread_zext_ln435_2_fu_1009_p1();
    void thread_zext_ln435_fu_1024_p1();
    void thread_zext_ln439_fu_1059_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
