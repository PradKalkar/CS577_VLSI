-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity reduce32 is
port (
    ap_ready : OUT STD_LOGIC;
    a : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of reduce32 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_400000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000010000000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_FF801FFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111100000000001111111111111";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal add_ln36_fu_20_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln_fu_26_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_40_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_40_p3 : STD_LOGIC_VECTOR (31 downto 0);

    component crypto_sign_mac_mibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    crypto_sign_mac_mibs_U71 : component crypto_sign_mac_mibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 24,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => trunc_ln_fu_26_p4,
        din1 => grp_fu_40_p1,
        din2 => a,
        dout => grp_fu_40_p3);




    add_ln36_fu_20_p2 <= std_logic_vector(unsigned(a) + unsigned(ap_const_lv32_400000));
    ap_ready <= ap_const_logic_1;
    ap_return <= grp_fu_40_p3;
    grp_fu_40_p1 <= ap_const_lv32_FF801FFF(24 - 1 downto 0);
    trunc_ln_fu_26_p4 <= add_ln36_fu_20_p2(31 downto 23);
end behav;
