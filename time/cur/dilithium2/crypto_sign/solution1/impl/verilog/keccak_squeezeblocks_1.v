// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module keccak_squeezeblocks_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        out_r_address0,
        out_r_ce0,
        out_r_we0,
        out_r_d0,
        out_r_address1,
        out_r_ce1,
        out_r_we1,
        out_r_d1,
        s_address0,
        s_ce0,
        s_we0,
        s_d0,
        s_q0,
        s_address1,
        s_ce1,
        s_we1,
        s_d1,
        s_q1
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] out_r_address0;
output   out_r_ce0;
output   out_r_we0;
output  [7:0] out_r_d0;
output  [9:0] out_r_address1;
output   out_r_ce1;
output   out_r_we1;
output  [7:0] out_r_d1;
output  [4:0] s_address0;
output   s_ce0;
output   s_we0;
output  [63:0] s_d0;
input  [63:0] s_q0;
output  [4:0] s_address1;
output   s_ce1;
output   s_we1;
output  [63:0] s_d1;
input  [63:0] s_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] out_r_address0;
reg out_r_ce0;
reg out_r_we0;
reg[7:0] out_r_d0;
reg[9:0] out_r_address1;
reg out_r_ce1;
reg out_r_we1;
reg[7:0] out_r_d1;
reg[4:0] s_address0;
reg s_ce0;
reg s_we0;
reg s_ce1;
reg s_we1;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] i_fu_215_p2;
reg   [4:0] i_reg_412;
wire    ap_CS_fsm_state4;
wire   [9:0] add_ln490_fu_233_p2;
reg   [9:0] add_ln490_reg_417;
wire   [0:0] icmp_ln489_fu_209_p2;
wire   [9:0] add_ln492_fu_244_p2;
wire   [2:0] add_ln493_fu_250_p2;
reg   [7:0] trunc_ln50_9_reg_444;
wire    ap_CS_fsm_state5;
reg   [7:0] trunc_ln50_s_reg_449;
reg   [7:0] trunc_ln50_1_reg_454;
reg   [7:0] trunc_ln50_2_reg_459;
reg   [7:0] trunc_ln50_3_reg_464;
reg   [7:0] trunc_ln50_4_reg_469;
wire    grp_KeccakF1600_StatePer_1_fu_197_ap_start;
wire    grp_KeccakF1600_StatePer_1_fu_197_ap_done;
wire    grp_KeccakF1600_StatePer_1_fu_197_ap_idle;
wire    grp_KeccakF1600_StatePer_1_fu_197_ap_ready;
wire   [4:0] grp_KeccakF1600_StatePer_1_fu_197_state_address0;
wire    grp_KeccakF1600_StatePer_1_fu_197_state_ce0;
wire    grp_KeccakF1600_StatePer_1_fu_197_state_we0;
wire   [63:0] grp_KeccakF1600_StatePer_1_fu_197_state_d0;
wire   [4:0] grp_KeccakF1600_StatePer_1_fu_197_state_address1;
wire    grp_KeccakF1600_StatePer_1_fu_197_state_ce1;
wire    grp_KeccakF1600_StatePer_1_fu_197_state_we1;
wire   [63:0] grp_KeccakF1600_StatePer_1_fu_197_state_d1;
reg   [2:0] p_01_reg_162;
reg   [9:0] p_0_rec_reg_174;
reg   [4:0] i_0_reg_186;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state8;
reg    grp_KeccakF1600_StatePer_1_fu_197_ap_start_reg;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln487_fu_203_p2;
wire   [63:0] zext_ln490_1_fu_239_p1;
wire   [63:0] zext_ln490_3_fu_256_p1;
wire   [63:0] zext_ln50_fu_281_p1;
wire   [63:0] zext_ln50_7_fu_351_p1;
wire    ap_CS_fsm_state6;
wire   [63:0] zext_ln50_8_fu_361_p1;
wire   [63:0] zext_ln50_9_fu_371_p1;
wire    ap_CS_fsm_state7;
wire   [63:0] zext_ln50_10_fu_381_p1;
wire   [63:0] zext_ln50_11_fu_391_p1;
wire   [63:0] zext_ln50_12_fu_401_p1;
wire   [7:0] trunc_ln50_fu_260_p1;
wire   [7:0] shl_ln_fu_221_p3;
wire   [9:0] zext_ln490_fu_229_p1;
wire   [9:0] or_ln50_fu_276_p2;
wire   [9:0] or_ln50_1_fu_346_p2;
wire   [9:0] or_ln50_2_fu_356_p2;
wire   [9:0] or_ln50_3_fu_366_p2;
wire   [9:0] or_ln50_4_fu_376_p2;
wire   [9:0] or_ln50_5_fu_386_p2;
wire   [9:0] or_ln50_6_fu_396_p2;
reg   [7:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 grp_KeccakF1600_StatePer_1_fu_197_ap_start_reg = 1'b0;
end

KeccakF1600_StatePer_1 grp_KeccakF1600_StatePer_1_fu_197(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_KeccakF1600_StatePer_1_fu_197_ap_start),
    .ap_done(grp_KeccakF1600_StatePer_1_fu_197_ap_done),
    .ap_idle(grp_KeccakF1600_StatePer_1_fu_197_ap_idle),
    .ap_ready(grp_KeccakF1600_StatePer_1_fu_197_ap_ready),
    .state_address0(grp_KeccakF1600_StatePer_1_fu_197_state_address0),
    .state_ce0(grp_KeccakF1600_StatePer_1_fu_197_state_ce0),
    .state_we0(grp_KeccakF1600_StatePer_1_fu_197_state_we0),
    .state_d0(grp_KeccakF1600_StatePer_1_fu_197_state_d0),
    .state_q0(s_q0),
    .state_address1(grp_KeccakF1600_StatePer_1_fu_197_state_address1),
    .state_ce1(grp_KeccakF1600_StatePer_1_fu_197_state_ce1),
    .state_we1(grp_KeccakF1600_StatePer_1_fu_197_state_we1),
    .state_d1(grp_KeccakF1600_StatePer_1_fu_197_state_d1),
    .state_q1(s_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_KeccakF1600_StatePer_1_fu_197_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln487_fu_203_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_KeccakF1600_StatePer_1_fu_197_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakF1600_StatePer_1_fu_197_ap_ready == 1'b1)) begin
            grp_KeccakF1600_StatePer_1_fu_197_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_0_reg_186 <= i_reg_412;
    end else if (((grp_KeccakF1600_StatePer_1_fu_197_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_reg_186 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln489_fu_209_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        p_01_reg_162 <= add_ln493_fu_250_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_01_reg_162 <= 3'd5;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln489_fu_209_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        p_0_rec_reg_174 <= add_ln492_fu_244_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_0_rec_reg_174 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln489_fu_209_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        add_ln490_reg_417 <= add_ln490_fu_233_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_reg_412 <= i_fu_215_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        trunc_ln50_1_reg_454 <= {{s_q0[39:32]}};
        trunc_ln50_2_reg_459 <= {{s_q0[47:40]}};
        trunc_ln50_3_reg_464 <= {{s_q0[55:48]}};
        trunc_ln50_4_reg_469 <= {{s_q0[63:56]}};
        trunc_ln50_9_reg_444 <= {{s_q0[23:16]}};
        trunc_ln50_s_reg_449 <= {{s_q0[31:24]}};
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln487_fu_203_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln487_fu_203_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        out_r_address0 = zext_ln50_11_fu_391_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        out_r_address0 = zext_ln50_9_fu_371_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        out_r_address0 = zext_ln50_7_fu_351_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        out_r_address0 = zext_ln490_3_fu_256_p1;
    end else begin
        out_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        out_r_address1 = zext_ln50_12_fu_401_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        out_r_address1 = zext_ln50_10_fu_381_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        out_r_address1 = zext_ln50_8_fu_361_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        out_r_address1 = zext_ln50_fu_281_p1;
    end else begin
        out_r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8))) begin
        out_r_ce0 = 1'b1;
    end else begin
        out_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8))) begin
        out_r_ce1 = 1'b1;
    end else begin
        out_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        out_r_d0 = trunc_ln50_3_reg_464;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        out_r_d0 = trunc_ln50_1_reg_454;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        out_r_d0 = trunc_ln50_9_reg_444;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        out_r_d0 = trunc_ln50_fu_260_p1;
    end else begin
        out_r_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        out_r_d1 = trunc_ln50_4_reg_469;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        out_r_d1 = trunc_ln50_2_reg_459;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        out_r_d1 = trunc_ln50_s_reg_449;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        out_r_d1 = {{s_q0[15:8]}};
    end else begin
        out_r_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8))) begin
        out_r_we0 = 1'b1;
    end else begin
        out_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8))) begin
        out_r_we1 = 1'b1;
    end else begin
        out_r_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        s_address0 = zext_ln490_1_fu_239_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        s_address0 = grp_KeccakF1600_StatePer_1_fu_197_state_address0;
    end else begin
        s_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        s_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        s_ce0 = grp_KeccakF1600_StatePer_1_fu_197_state_ce0;
    end else begin
        s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        s_ce1 = grp_KeccakF1600_StatePer_1_fu_197_state_ce1;
    end else begin
        s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        s_we0 = grp_KeccakF1600_StatePer_1_fu_197_state_we0;
    end else begin
        s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        s_we1 = grp_KeccakF1600_StatePer_1_fu_197_state_we1;
    end else begin
        s_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln487_fu_203_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_KeccakF1600_StatePer_1_fu_197_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln489_fu_209_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln490_fu_233_p2 = (p_0_rec_reg_174 + zext_ln490_fu_229_p1);

assign add_ln492_fu_244_p2 = (p_0_rec_reg_174 + 10'd136);

assign add_ln493_fu_250_p2 = ($signed(p_01_reg_162) + $signed(3'd7));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign grp_KeccakF1600_StatePer_1_fu_197_ap_start = grp_KeccakF1600_StatePer_1_fu_197_ap_start_reg;

assign i_fu_215_p2 = (i_0_reg_186 + 5'd1);

assign icmp_ln487_fu_203_p2 = ((p_01_reg_162 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln489_fu_209_p2 = ((i_0_reg_186 == 5'd17) ? 1'b1 : 1'b0);

assign or_ln50_1_fu_346_p2 = (10'd2 | add_ln490_reg_417);

assign or_ln50_2_fu_356_p2 = (10'd3 | add_ln490_reg_417);

assign or_ln50_3_fu_366_p2 = (10'd4 | add_ln490_reg_417);

assign or_ln50_4_fu_376_p2 = (10'd5 | add_ln490_reg_417);

assign or_ln50_5_fu_386_p2 = (10'd6 | add_ln490_reg_417);

assign or_ln50_6_fu_396_p2 = (10'd7 | add_ln490_reg_417);

assign or_ln50_fu_276_p2 = (10'd1 | add_ln490_reg_417);

assign s_address1 = grp_KeccakF1600_StatePer_1_fu_197_state_address1;

assign s_d0 = grp_KeccakF1600_StatePer_1_fu_197_state_d0;

assign s_d1 = grp_KeccakF1600_StatePer_1_fu_197_state_d1;

assign shl_ln_fu_221_p3 = {{i_0_reg_186}, {3'd0}};

assign trunc_ln50_fu_260_p1 = s_q0[7:0];

assign zext_ln490_1_fu_239_p1 = i_0_reg_186;

assign zext_ln490_3_fu_256_p1 = add_ln490_reg_417;

assign zext_ln490_fu_229_p1 = shl_ln_fu_221_p3;

assign zext_ln50_10_fu_381_p1 = or_ln50_4_fu_376_p2;

assign zext_ln50_11_fu_391_p1 = or_ln50_5_fu_386_p2;

assign zext_ln50_12_fu_401_p1 = or_ln50_6_fu_396_p2;

assign zext_ln50_7_fu_351_p1 = or_ln50_1_fu_346_p2;

assign zext_ln50_8_fu_361_p1 = or_ln50_2_fu_356_p2;

assign zext_ln50_9_fu_371_p1 = or_ln50_3_fu_366_p2;

assign zext_ln50_fu_281_p1 = or_ln50_fu_276_p2;

endmodule //keccak_squeezeblocks_1
