// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module keccak_absorb (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        s_address0,
        s_ce0,
        s_we0,
        s_d0,
        s_q0,
        s_address1,
        s_ce1,
        s_we1,
        s_d1,
        s_q1,
        r,
        pos_r,
        m_0_read,
        m_1_read,
        ap_return
);

parameter    ap_ST_fsm_state1 = 25'd1;
parameter    ap_ST_fsm_state2 = 25'd2;
parameter    ap_ST_fsm_state3 = 25'd4;
parameter    ap_ST_fsm_state4 = 25'd8;
parameter    ap_ST_fsm_state5 = 25'd16;
parameter    ap_ST_fsm_state6 = 25'd32;
parameter    ap_ST_fsm_state7 = 25'd64;
parameter    ap_ST_fsm_state8 = 25'd128;
parameter    ap_ST_fsm_state9 = 25'd256;
parameter    ap_ST_fsm_state10 = 25'd512;
parameter    ap_ST_fsm_state11 = 25'd1024;
parameter    ap_ST_fsm_state12 = 25'd2048;
parameter    ap_ST_fsm_state13 = 25'd4096;
parameter    ap_ST_fsm_state14 = 25'd8192;
parameter    ap_ST_fsm_state15 = 25'd16384;
parameter    ap_ST_fsm_state16 = 25'd32768;
parameter    ap_ST_fsm_state17 = 25'd65536;
parameter    ap_ST_fsm_state18 = 25'd131072;
parameter    ap_ST_fsm_state19 = 25'd262144;
parameter    ap_ST_fsm_state20 = 25'd524288;
parameter    ap_ST_fsm_state21 = 25'd1048576;
parameter    ap_ST_fsm_state22 = 25'd2097152;
parameter    ap_ST_fsm_state23 = 25'd4194304;
parameter    ap_ST_fsm_state24 = 25'd8388608;
parameter    ap_ST_fsm_state25 = 25'd16777216;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] s_address0;
output   s_ce0;
output   s_we0;
output  [63:0] s_d0;
input  [63:0] s_q0;
output  [4:0] s_address1;
output   s_ce1;
output   s_we1;
output  [63:0] s_d1;
input  [63:0] s_q1;
input  [8:0] r;
input  [6:0] pos_r;
input  [7:0] m_0_read;
input  [7:0] m_1_read;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] s_address0;
reg s_ce0;
reg s_we0;
reg[63:0] s_d0;
reg s_ce1;
reg s_we1;
reg[31:0] ap_return;

(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] t_q0;
reg   [7:0] reg_510;
wire    ap_CS_fsm_state4;
wire   [7:0] t_q1;
wire    ap_CS_fsm_state22;
reg   [7:0] reg_515;
reg   [7:0] reg_520;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state23;
reg   [7:0] reg_524;
reg   [7:0] reg_528;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state24;
reg   [7:0] reg_532;
wire   [5:0] empty_fu_536_p1;
reg   [5:0] empty_reg_1124;
wire   [7:0] empty_62_fu_540_p1;
reg   [7:0] empty_62_reg_1130;
wire   [2:0] add_ln391_fu_544_p2;
wire    ap_CS_fsm_state2;
wire   [31:0] zext_ln393_fu_564_p1;
wire   [0:0] icmp_ln391_fu_555_p2;
wire   [4:0] zext_ln393_1_fu_568_p1;
reg   [4:0] zext_ln393_1_reg_1148;
wire  signed [2:0] xor_ln395_2_fu_612_p2;
reg  signed [2:0] xor_ln395_2_reg_1156;
wire   [0:0] icmp_ln393_fu_572_p2;
wire  signed [63:0] sext_ln395_fu_618_p1;
reg  signed [63:0] sext_ln395_reg_1161;
wire  signed [4:0] p_cast6_fu_622_p1;
reg  signed [4:0] p_cast6_reg_1166;
wire   [1:0] add_ln397_fu_634_p2;
reg   [1:0] add_ln397_reg_1171;
wire   [5:0] add_ln398_fu_640_p2;
reg   [5:0] add_ln398_reg_1176;
wire   [63:0] add_ln396_fu_654_p2;
wire    ap_CS_fsm_state3;
wire   [31:0] i_fu_667_p2;
wire   [0:0] exitcond_fu_649_p2;
reg   [2:0] tmp_reg_1205;
wire   [0:0] trunc_ln401_fu_701_p1;
reg   [0:0] trunc_ln401_reg_1210;
reg   [4:0] s_addr_reg_1245;
wire   [2:0] zext_ln403_fu_739_p1;
reg   [2:0] zext_ln403_reg_1250;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln403_fu_747_p2;
reg   [0:0] icmp_ln403_reg_1257;
wire   [0:0] icmp_ln403_1_fu_758_p2;
reg   [0:0] icmp_ln403_1_reg_1261;
wire   [2:0] trunc_ln409_fu_764_p1;
reg   [2:0] trunc_ln409_reg_1265;
wire   [0:0] trunc_ln412_fu_768_p1;
reg   [0:0] trunc_ln412_reg_1270;
wire   [8:0] zext_ln408_fu_777_p1;
reg   [8:0] zext_ln408_reg_1275;
wire    ap_CS_fsm_state9;
wire    grp_KeccakF1600_StatePer_1_fu_504_ap_ready;
wire    grp_KeccakF1600_StatePer_1_fu_504_ap_done;
reg    ap_predicate_op126_call_state9;
reg    ap_block_state9_on_subcall_done;
wire  signed [63:0] sext_ln408_fu_781_p1;
wire   [63:0] empty_68_fu_785_p1;
reg   [63:0] empty_68_reg_1285;
reg   [4:0] tmp_s_reg_1292;
wire   [0:0] xor_ln416_1_fu_797_p2;
reg   [0:0] xor_ln416_1_reg_1297;
wire   [0:0] icmp_ln414_fu_803_p2;
wire    ap_CS_fsm_state10;
wire   [7:0] select_ln32_2_fu_817_p3;
reg   [7:0] select_ln32_2_reg_1308;
wire   [7:0] select_ln32_3_fu_823_p3;
reg   [7:0] select_ln32_3_reg_1316;
wire   [29:0] zext_ln423_2_fu_839_p1;
reg   [29:0] zext_ln423_2_reg_1324;
reg   [4:0] tmp_6740_reg_1329;
wire   [0:0] trunc_ln425_fu_853_p1;
reg   [0:0] trunc_ln425_reg_1335;
wire   [7:0] select_ln32_fu_862_p3;
reg   [7:0] select_ln32_reg_1340;
wire   [7:0] select_ln32_1_fu_868_p3;
reg   [7:0] select_ln32_1_reg_1348;
wire   [4:0] i_8_fu_879_p2;
reg   [4:0] i_8_reg_1359;
wire    ap_CS_fsm_state11;
reg   [4:0] s_addr_6_reg_1364;
wire   [0:0] icmp_ln415_fu_874_p2;
wire   [63:0] add_ln418_fu_890_p2;
reg   [63:0] add_ln418_reg_1369;
wire   [63:0] sub_ln421_fu_895_p2;
reg   [63:0] sub_ln421_reg_1374;
wire   [4:0] add_ln423_fu_924_p2;
reg   [4:0] add_ln423_reg_1382;
wire    ap_CS_fsm_state14;
reg   [4:0] s_addr_5_reg_1387;
wire   [0:0] icmp_ln423_fu_919_p2;
wire   [63:0] sub_ln428_fu_978_p2;
reg   [63:0] sub_ln428_reg_1392;
wire    ap_CS_fsm_state16;
wire   [32:0] trunc_ln428_fu_984_p1;
reg   [32:0] trunc_ln428_reg_1397;
wire   [8:0] add_ln429_fu_988_p2;
reg   [8:0] add_ln429_reg_1402;
wire   [31:0] zext_ln429_fu_993_p1;
reg   [31:0] zext_ln429_reg_1407;
wire   [0:0] icmp_ln431_fu_997_p2;
reg   [0:0] icmp_ln431_reg_1413;
wire   [2:0] t_addr_28_reg_1417;
wire   [2:0] t_addr_29_reg_1422;
wire   [2:0] t_addr_30_gep_fu_274_p3;
wire   [2:0] t_addr_30_reg_1427;
wire    ap_CS_fsm_state17;
wire   [2:0] t_addr_31_gep_fu_282_p3;
wire   [2:0] t_addr_31_reg_1432;
wire   [2:0] t_addr_32_gep_fu_290_p3;
wire   [2:0] t_addr_32_reg_1437;
wire    ap_CS_fsm_state18;
wire   [2:0] t_addr_33_gep_fu_298_p3;
wire   [2:0] t_addr_33_reg_1442;
wire   [2:0] t_addr_34_gep_fu_306_p3;
wire   [2:0] t_addr_34_reg_1447;
wire    ap_CS_fsm_state19;
wire   [2:0] t_addr_35_gep_fu_314_p3;
wire   [2:0] t_addr_35_reg_1452;
wire   [31:0] i_9_fu_1012_p2;
wire    ap_CS_fsm_state20;
reg   [4:0] s_addr_7_reg_1465;
wire    ap_CS_fsm_state21;
wire   [31:0] trunc_ln441_fu_1058_p1;
reg   [31:0] trunc_ln441_reg_1470;
reg   [2:0] t_address0;
reg    t_ce0;
reg    t_we0;
reg   [7:0] t_d0;
reg   [2:0] t_address1;
reg    t_ce1;
reg    t_we1;
reg   [7:0] t_d1;
wire    grp_KeccakF1600_StatePer_1_fu_504_ap_start;
wire    grp_KeccakF1600_StatePer_1_fu_504_ap_idle;
wire   [4:0] grp_KeccakF1600_StatePer_1_fu_504_state_address0;
wire    grp_KeccakF1600_StatePer_1_fu_504_state_ce0;
wire    grp_KeccakF1600_StatePer_1_fu_504_state_we0;
wire   [63:0] grp_KeccakF1600_StatePer_1_fu_504_state_d0;
wire   [4:0] grp_KeccakF1600_StatePer_1_fu_504_state_address1;
wire    grp_KeccakF1600_StatePer_1_fu_504_state_ce1;
wire    grp_KeccakF1600_StatePer_1_fu_504_state_we1;
wire   [63:0] grp_KeccakF1600_StatePer_1_fu_504_state_d1;
reg   [2:0] phi_ln391_reg_336;
reg   [63:0] p_05_rec_reg_347;
reg   [31:0] i_0_reg_358;
reg   [0:0] phi_ln408_reg_367;
wire    ap_CS_fsm_state7;
reg   [5:0] p_12_reg_379;
reg   [1:0] p_1_reg_389;
reg   [0:0] ap_phi_mux_phi_ln408_1_phi_fu_404_p6;
reg   [0:0] phi_ln408_1_reg_400;
reg   [5:0] ap_phi_mux_p_23_phi_fu_417_p6;
reg   [5:0] p_23_reg_414;
wire   [2:0] sub_ln409_fu_772_p2;
reg   [2:0] ap_phi_mux_p_2_phi_fu_432_p6;
reg   [2:0] p_2_reg_429;
reg   [63:0] indvars_iv_reg_440;
wire    ap_CS_fsm_state13;
reg   [63:0] p_38_rec_reg_450;
reg   [4:0] i_2_reg_462;
wire    ap_CS_fsm_state12;
reg   [4:0] i_3_reg_473;
wire    ap_CS_fsm_state15;
reg   [31:0] i_5_reg_484;
wire   [0:0] icmp_ln436_fu_1007_p2;
wire   [31:0] add_ln441_fu_1088_p2;
reg   [31:0] ap_phi_mux_p_34_phi_fu_498_p4;
reg   [31:0] p_34_reg_495;
wire    ap_CS_fsm_state25;
reg    grp_KeccakF1600_StatePer_1_fu_504_ap_start_reg;
wire   [63:0] zext_ln391_fu_550_p1;
wire   [63:0] zext_ln396_fu_673_p1;
wire   [63:0] zext_ln400_fu_704_p1;
wire   [63:0] zext_ln416_1_fu_885_p1;
wire   [63:0] zext_ln425_1_fu_939_p1;
wire   [63:0] zext_ln436_fu_1018_p1;
wire   [63:0] zext_ln440_fu_1053_p1;
wire   [7:0] select_ln396_fu_660_p3;
wire   [7:0] select_ln438_fu_1037_p3;
wire   [63:0] xor_ln400_fu_728_p2;
wire   [63:0] xor_ln416_fu_912_p2;
wire   [63:0] xor_ln425_fu_956_p2;
wire   [63:0] xor_ln440_fu_1081_p2;
wire   [2:0] trunc_ln393_fu_561_p1;
wire   [3:0] zext_ln395_fu_578_p1;
wire   [3:0] sub_ln395_fu_582_p2;
wire   [2:0] empty_65_fu_588_p1;
wire   [0:0] empty_66_fu_598_p2;
wire   [2:0] xor_ln395_1_fu_592_p2;
wire   [2:0] umax_fu_604_p3;
wire   [1:0] trunc_ln397_fu_630_p1;
wire  signed [5:0] sext_ln397_fu_626_p1;
wire   [0:0] empty_67_fu_645_p1;
wire   [4:0] add_ln394_fu_678_p2;
wire  signed [5:0] sext_ln400_fu_682_p1;
wire   [5:0] sub_ln400_fu_686_p2;
wire   [63:0] r_7_i_fu_708_p9;
wire   [7:0] zext_ln403_1_fu_735_p1;
wire   [7:0] zext_ln403_2_fu_743_p1;
wire   [7:0] sub_ln403_fu_753_p2;
wire   [0:0] trunc_ln416_fu_808_p1;
wire   [0:0] xor_ln32_1_fu_812_p2;
wire   [2:0] tmp_939_fu_829_p4;
wire   [0:0] xor_ln32_fu_857_p2;
wire   [63:0] r_7_i6_fu_900_p9;
wire   [29:0] zext_ln423_fu_930_p1;
wire   [29:0] add_ln425_1_fu_934_p2;
wire   [63:0] r_7_i7_fu_944_p9;
wire   [7:0] and_ln_fu_963_p3;
wire   [63:0] zext_ln427_fu_974_p1;
wire   [8:0] zext_ln427_2_fu_970_p1;
wire   [32:0] zext_ln436_2_fu_1003_p1;
wire   [0:0] trunc_ln438_fu_1023_p1;
wire   [0:0] xor_ln438_fu_1027_p2;
wire   [0:0] xor_ln438_1_fu_1032_p2;
wire   [5:0] tmp_940_fu_1044_p4;
wire   [63:0] r_7_i5_fu_1061_p9;
reg   [31:0] ap_return_preg;
reg   [24:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 25'd1;
#0 grp_KeccakF1600_StatePer_1_fu_504_ap_start_reg = 1'b0;
#0 ap_return_preg = 32'd0;
end

keccak_absorb_2_t #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
t_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(t_address0),
    .ce0(t_ce0),
    .we0(t_we0),
    .d0(t_d0),
    .q0(t_q0),
    .address1(t_address1),
    .ce1(t_ce1),
    .we1(t_we1),
    .d1(t_d1),
    .q1(t_q1)
);

KeccakF1600_StatePer_1 grp_KeccakF1600_StatePer_1_fu_504(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_KeccakF1600_StatePer_1_fu_504_ap_start),
    .ap_done(grp_KeccakF1600_StatePer_1_fu_504_ap_done),
    .ap_idle(grp_KeccakF1600_StatePer_1_fu_504_ap_idle),
    .ap_ready(grp_KeccakF1600_StatePer_1_fu_504_ap_ready),
    .state_address0(grp_KeccakF1600_StatePer_1_fu_504_state_address0),
    .state_ce0(grp_KeccakF1600_StatePer_1_fu_504_state_ce0),
    .state_we0(grp_KeccakF1600_StatePer_1_fu_504_state_we0),
    .state_d0(grp_KeccakF1600_StatePer_1_fu_504_state_d0),
    .state_q0(s_q0),
    .state_address1(grp_KeccakF1600_StatePer_1_fu_504_state_address1),
    .state_ce1(grp_KeccakF1600_StatePer_1_fu_504_state_ce1),
    .state_we1(grp_KeccakF1600_StatePer_1_fu_504_state_we1),
    .state_d1(grp_KeccakF1600_StatePer_1_fu_504_state_d1),
    .state_q1(s_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state25)) begin
            ap_return_preg <= ap_phi_mux_p_34_phi_fu_498_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_KeccakF1600_StatePer_1_fu_504_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state11) & (icmp_ln415_fu_874_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state8) & (icmp_ln403_1_fu_758_p2 == 1'd0) & (icmp_ln403_fu_747_p2 == 1'd0)))) begin
            grp_KeccakF1600_StatePer_1_fu_504_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakF1600_StatePer_1_fu_504_ap_ready == 1'b1)) begin
            grp_KeccakF1600_StatePer_1_fu_504_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_649_p2 == 1'd0))) begin
        i_0_reg_358 <= i_fu_667_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln393_fu_572_p2 == 1'd0) & (icmp_ln391_fu_555_p2 == 1'd1))) begin
        i_0_reg_358 <= zext_ln393_fu_564_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln414_fu_803_p2 == 1'd0))) begin
        i_2_reg_462 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        i_2_reg_462 <= i_8_reg_1359;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_3_reg_473 <= add_ln423_reg_1382;
    end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln414_fu_803_p2 == 1'd1))) begin
        i_3_reg_473 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        i_5_reg_484 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln436_fu_1007_p2 == 1'd1))) begin
        i_5_reg_484 <= i_9_fu_1012_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9))) begin
        indvars_iv_reg_440 <= sext_ln408_fu_781_p1;
    end else if (((grp_KeccakF1600_StatePer_1_fu_504_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        indvars_iv_reg_440 <= sub_ln421_reg_1374;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_649_p2 == 1'd0))) begin
        p_05_rec_reg_347 <= add_ln396_fu_654_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln393_fu_572_p2 == 1'd0) & (icmp_ln391_fu_555_p2 == 1'd1))) begin
        p_05_rec_reg_347 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln393_fu_572_p2 == 1'd1) & (icmp_ln391_fu_555_p2 == 1'd1))) begin
        p_12_reg_379 <= empty_reg_1124;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        p_12_reg_379 <= add_ln398_reg_1176;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln393_fu_572_p2 == 1'd1) & (icmp_ln391_fu_555_p2 == 1'd1))) begin
        p_1_reg_389 <= 2'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        p_1_reg_389 <= add_ln397_reg_1171;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state8) & (icmp_ln403_fu_747_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state8) & (icmp_ln403_fu_747_p2 == 1'd0) & (icmp_ln403_1_fu_758_p2 == 1'd1)))) begin
        p_23_reg_414 <= p_12_reg_379;
    end else if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln403_1_reg_1261 == 1'd0) & (icmp_ln403_reg_1257 == 1'd0))) begin
        p_23_reg_414 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state8) & (icmp_ln403_fu_747_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state8) & (icmp_ln403_fu_747_p2 == 1'd0) & (icmp_ln403_1_fu_758_p2 == 1'd1)))) begin
        p_2_reg_429 <= zext_ln403_fu_739_p1;
    end else if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln403_1_reg_1261 == 1'd0) & (icmp_ln403_reg_1257 == 1'd0))) begin
        p_2_reg_429 <= sub_ln409_fu_772_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln431_fu_997_p2 == 1'd1))) begin
        p_34_reg_495 <= zext_ln429_fu_993_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln431_reg_1413 == 1'd0))) begin
        p_34_reg_495 <= add_ln441_fu_1088_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9))) begin
        p_38_rec_reg_450 <= 64'd0;
    end else if (((grp_KeccakF1600_StatePer_1_fu_504_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        p_38_rec_reg_450 <= add_ln418_reg_1369;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln391_fu_555_p2 == 1'd0))) begin
        phi_ln391_reg_336 <= add_ln391_fu_544_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_ln391_reg_336 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state8) & (icmp_ln403_fu_747_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state8) & (icmp_ln403_fu_747_p2 == 1'd0) & (icmp_ln403_1_fu_758_p2 == 1'd1)))) begin
        phi_ln408_1_reg_400 <= 1'd0;
    end else if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln403_1_reg_1261 == 1'd0) & (icmp_ln403_reg_1257 == 1'd0))) begin
        phi_ln408_1_reg_400 <= trunc_ln412_reg_1270;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln393_fu_572_p2 == 1'd1) & (icmp_ln391_fu_555_p2 == 1'd1))) begin
        phi_ln408_reg_367 <= 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        phi_ln408_reg_367 <= trunc_ln401_reg_1210;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        reg_510 <= t_q1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        reg_510 <= t_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        reg_515 <= t_q0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        reg_515 <= t_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln393_fu_572_p2 == 1'd0) & (icmp_ln391_fu_555_p2 == 1'd1))) begin
        add_ln397_reg_1171 <= add_ln397_fu_634_p2;
        add_ln398_reg_1176 <= add_ln398_fu_640_p2;
        p_cast6_reg_1166 <= p_cast6_fu_622_p1;
        sext_ln395_reg_1161 <= sext_ln395_fu_618_p1;
        xor_ln395_2_reg_1156 <= xor_ln395_2_fu_612_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln415_fu_874_p2 == 1'd1))) begin
        add_ln418_reg_1369 <= add_ln418_fu_890_p2;
        sub_ln421_reg_1374 <= sub_ln421_fu_895_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln423_reg_1382 <= add_ln423_fu_924_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        add_ln429_reg_1402 <= add_ln429_fu_988_p2;
        icmp_ln431_reg_1413 <= icmp_ln431_fu_997_p2;
        sub_ln428_reg_1392 <= sub_ln428_fu_978_p2;
        trunc_ln428_reg_1397 <= trunc_ln428_fu_984_p1;
        zext_ln429_reg_1407[8 : 0] <= zext_ln429_fu_993_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_62_reg_1130 <= empty_62_fu_540_p1;
        empty_reg_1124 <= empty_fu_536_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9))) begin
        empty_68_reg_1285[8 : 0] <= empty_68_fu_785_p1[8 : 0];
        tmp_s_reg_1292 <= {{r[7:3]}};
        xor_ln416_1_reg_1297 <= xor_ln416_1_fu_797_p2;
        zext_ln408_reg_1275[5 : 0] <= zext_ln408_fu_777_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_8_reg_1359 <= i_8_fu_879_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln403_fu_747_p2 == 1'd0))) begin
        icmp_ln403_1_reg_1261 <= icmp_ln403_1_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        icmp_ln403_reg_1257 <= icmp_ln403_fu_747_p2;
        zext_ln403_reg_1250[1 : 0] <= zext_ln403_fu_739_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state5))) begin
        reg_520 <= t_q1;
        reg_524 <= t_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_528 <= t_q1;
        reg_532 <= t_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln423_fu_919_p2 == 1'd0))) begin
        s_addr_5_reg_1387 <= zext_ln425_1_fu_939_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln415_fu_874_p2 == 1'd0))) begin
        s_addr_6_reg_1364 <= zext_ln416_1_fu_885_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        s_addr_7_reg_1465 <= zext_ln440_fu_1053_p1;
        trunc_ln441_reg_1470 <= trunc_ln441_fu_1058_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        s_addr_reg_1245[2 : 0] <= zext_ln400_fu_704_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln414_fu_803_p2 == 1'd1))) begin
        select_ln32_1_reg_1348 <= select_ln32_1_fu_868_p3;
        select_ln32_reg_1340 <= select_ln32_fu_862_p3;
        tmp_6740_reg_1329 <= {{indvars_iv_reg_440[7:3]}};
        trunc_ln425_reg_1335 <= trunc_ln425_fu_853_p1;
        zext_ln423_2_reg_1324[2 : 0] <= zext_ln423_2_fu_839_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln414_fu_803_p2 == 1'd0))) begin
        select_ln32_2_reg_1308 <= select_ln32_2_fu_817_p3;
        select_ln32_3_reg_1316 <= select_ln32_3_fu_823_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_649_p2 == 1'd1))) begin
        tmp_reg_1205 <= {{sub_ln400_fu_686_p2[5:3]}};
        trunc_ln401_reg_1210 <= trunc_ln401_fu_701_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln403_1_fu_758_p2 == 1'd0) & (icmp_ln403_fu_747_p2 == 1'd0))) begin
        trunc_ln409_reg_1265 <= trunc_ln409_fu_764_p1;
        trunc_ln412_reg_1270 <= trunc_ln412_fu_768_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln391_fu_555_p2 == 1'd1))) begin
        zext_ln393_1_reg_1148[2 : 0] <= zext_ln393_1_fu_568_p1[2 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln403_1_reg_1261 == 1'd0) & (icmp_ln403_reg_1257 == 1'd0))) begin
        ap_phi_mux_p_23_phi_fu_417_p6 = 6'd0;
    end else begin
        ap_phi_mux_p_23_phi_fu_417_p6 = p_23_reg_414;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln403_1_reg_1261 == 1'd0) & (icmp_ln403_reg_1257 == 1'd0))) begin
        ap_phi_mux_p_2_phi_fu_432_p6 = sub_ln409_fu_772_p2;
    end else begin
        ap_phi_mux_p_2_phi_fu_432_p6 = p_2_reg_429;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln431_reg_1413 == 1'd0))) begin
        ap_phi_mux_p_34_phi_fu_498_p4 = add_ln441_fu_1088_p2;
    end else begin
        ap_phi_mux_p_34_phi_fu_498_p4 = p_34_reg_495;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln403_1_reg_1261 == 1'd0) & (icmp_ln403_reg_1257 == 1'd0))) begin
        ap_phi_mux_phi_ln408_1_phi_fu_404_p6 = trunc_ln412_reg_1270;
    end else begin
        ap_phi_mux_phi_ln408_1_phi_fu_404_p6 = phi_ln408_1_reg_400;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ap_return = ap_phi_mux_p_34_phi_fu_498_p4;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25))) begin
        s_address0 = s_addr_7_reg_1465;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        s_address0 = s_addr_5_reg_1387;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        s_address0 = zext_ln425_1_fu_939_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        s_address0 = s_addr_6_reg_1364;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln415_fu_874_p2 == 1'd0))) begin
        s_address0 = zext_ln416_1_fu_885_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        s_address0 = s_addr_reg_1245;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        s_address0 = zext_ln400_fu_704_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((ap_predicate_op126_call_state9 == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        s_address0 = grp_KeccakF1600_StatePer_1_fu_504_state_address0;
    end else begin
        s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln415_fu_874_p2 == 1'd0)))) begin
        s_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((ap_predicate_op126_call_state9 == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        s_ce0 = grp_KeccakF1600_StatePer_1_fu_504_state_ce0;
    end else begin
        s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_predicate_op126_call_state9 == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        s_ce1 = grp_KeccakF1600_StatePer_1_fu_504_state_ce1;
    end else begin
        s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        s_d0 = xor_ln440_fu_1081_p2;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        s_d0 = xor_ln425_fu_956_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        s_d0 = xor_ln416_fu_912_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        s_d0 = xor_ln400_fu_728_p2;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((ap_predicate_op126_call_state9 == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        s_d0 = grp_KeccakF1600_StatePer_1_fu_504_state_d0;
    end else begin
        s_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state25) & (icmp_ln431_reg_1413 == 1'd0)))) begin
        s_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((ap_predicate_op126_call_state9 == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        s_we0 = grp_KeccakF1600_StatePer_1_fu_504_state_we0;
    end else begin
        s_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_predicate_op126_call_state9 == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        s_we1 = grp_KeccakF1600_StatePer_1_fu_504_state_we1;
    end else begin
        s_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        t_address0 = t_addr_35_reg_1452;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        t_address0 = t_addr_33_reg_1442;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        t_address0 = t_addr_31_reg_1432;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        t_address0 = t_addr_29_reg_1422;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        t_address0 = t_addr_35_gep_fu_314_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        t_address0 = t_addr_33_gep_fu_298_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        t_address0 = t_addr_31_gep_fu_282_p3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        t_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        t_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        t_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_address0 = 64'd3;
    end else if (((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_649_p2 == 1'd1))) begin
        t_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_649_p2 == 1'd0))) begin
        t_address0 = zext_ln396_fu_673_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t_address0 = zext_ln391_fu_550_p1;
    end else begin
        t_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        t_address1 = t_addr_34_reg_1447;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        t_address1 = t_addr_32_reg_1437;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        t_address1 = t_addr_30_reg_1427;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        t_address1 = t_addr_28_reg_1417;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        t_address1 = zext_ln436_fu_1018_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        t_address1 = t_addr_34_gep_fu_306_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        t_address1 = t_addr_32_gep_fu_290_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        t_address1 = t_addr_30_gep_fu_274_p3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        t_address1 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        t_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        t_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_address1 = 64'd1;
    end else begin
        t_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_649_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_649_p2 == 1'd0)))) begin
        t_ce0 = 1'b1;
    end else begin
        t_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state3))) begin
        t_ce1 = 1'b1;
    end else begin
        t_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_649_p2 == 1'd0))) begin
        t_d0 = select_ln396_fu_660_p3;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state2))) begin
        t_d0 = 8'd0;
    end else begin
        t_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        t_d1 = select_ln438_fu_1037_p3;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16))) begin
        t_d1 = 8'd0;
    end else begin
        t_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln431_fu_997_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_649_p2 == 1'd0)))) begin
        t_we0 = 1'b1;
    end else begin
        t_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state20) & (icmp_ln436_fu_1007_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln431_fu_997_p2 == 1'd0)))) begin
        t_we1 = 1'b1;
    end else begin
        t_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln393_fu_572_p2 == 1'd0) & (icmp_ln391_fu_555_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln393_fu_572_p2 == 1'd1) & (icmp_ln391_fu_555_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_649_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln414_fu_803_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln415_fu_874_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state13 : begin
            if (((grp_KeccakF1600_StatePer_1_fu_504_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln423_fu_919_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln431_fu_997_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln436_fu_1007_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln391_fu_544_p2 = (phi_ln391_reg_336 + 3'd1);

assign add_ln394_fu_678_p2 = ($signed(zext_ln393_1_reg_1148) + $signed(p_cast6_reg_1166));

assign add_ln396_fu_654_p2 = (64'd1 + p_05_rec_reg_347);

assign add_ln397_fu_634_p2 = ($signed(2'd3) + $signed(trunc_ln397_fu_630_p1));

assign add_ln398_fu_640_p2 = ($signed(sext_ln397_fu_626_p1) + $signed(empty_reg_1124));

assign add_ln418_fu_890_p2 = (empty_68_reg_1285 + p_38_rec_reg_450);

assign add_ln423_fu_924_p2 = (i_3_reg_473 + 5'd1);

assign add_ln425_1_fu_934_p2 = (zext_ln423_2_reg_1324 + zext_ln423_fu_930_p1);

assign add_ln429_fu_988_p2 = (zext_ln408_reg_1275 + zext_ln427_2_fu_970_p1);

assign add_ln441_fu_1088_p2 = (zext_ln429_reg_1407 + trunc_ln441_reg_1470);

assign and_ln_fu_963_p3 = {{tmp_6740_reg_1329}, {3'd0}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state9_on_subcall_done = ((ap_predicate_op126_call_state9 == 1'b1) & (grp_KeccakF1600_StatePer_1_fu_504_ap_done == 1'b0));
end

always @ (*) begin
    ap_predicate_op126_call_state9 = ((icmp_ln403_1_reg_1261 == 1'd0) & (icmp_ln403_reg_1257 == 1'd0));
end

assign empty_62_fu_540_p1 = r[7:0];

assign empty_65_fu_588_p1 = sub_ln395_fu_582_p2[2:0];

assign empty_66_fu_598_p2 = ((sub_ln395_fu_582_p2 > 4'd2) ? 1'b1 : 1'b0);

assign empty_67_fu_645_p1 = p_05_rec_reg_347[0:0];

assign empty_68_fu_785_p1 = r;

assign empty_fu_536_p1 = pos_r[5:0];

assign exitcond_fu_649_p2 = ((p_05_rec_reg_347 == sext_ln395_reg_1161) ? 1'b1 : 1'b0);

assign grp_KeccakF1600_StatePer_1_fu_504_ap_start = grp_KeccakF1600_StatePer_1_fu_504_ap_start_reg;

assign i_8_fu_879_p2 = (i_2_reg_462 + 5'd1);

assign i_9_fu_1012_p2 = (i_5_reg_484 + 32'd1);

assign i_fu_667_p2 = (i_0_reg_358 + 32'd1);

assign icmp_ln391_fu_555_p2 = ((phi_ln391_reg_336 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln393_fu_572_p2 = ((trunc_ln393_fu_561_p1 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln403_1_fu_758_p2 = ((zext_ln403_2_fu_743_p1 < sub_ln403_fu_753_p2) ? 1'b1 : 1'b0);

assign icmp_ln403_fu_747_p2 = ((p_12_reg_379 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_fu_803_p2 = ((indvars_iv_reg_440 < empty_68_reg_1285) ? 1'b1 : 1'b0);

assign icmp_ln415_fu_874_p2 = ((i_2_reg_462 == tmp_s_reg_1292) ? 1'b1 : 1'b0);

assign icmp_ln423_fu_919_p2 = ((i_3_reg_473 == tmp_6740_reg_1329) ? 1'b1 : 1'b0);

assign icmp_ln431_fu_997_p2 = ((indvars_iv_reg_440 == zext_ln427_fu_974_p1) ? 1'b1 : 1'b0);

assign icmp_ln436_fu_1007_p2 = ((zext_ln436_2_fu_1003_p1 < trunc_ln428_reg_1397) ? 1'b1 : 1'b0);

assign p_cast6_fu_622_p1 = xor_ln395_2_fu_612_p2;

assign r_7_i5_fu_1061_p9 = {{{{{{{{t_q0}, {t_q1}}, {reg_532}}, {reg_528}}, {reg_524}}, {reg_520}}, {reg_515}}, {reg_510}};

assign r_7_i6_fu_900_p9 = {{{{{{{{select_ln32_3_reg_1316}, {select_ln32_2_reg_1308}}, {select_ln32_3_reg_1316}}, {select_ln32_2_reg_1308}}, {select_ln32_3_reg_1316}}, {select_ln32_2_reg_1308}}, {select_ln32_3_reg_1316}}, {select_ln32_2_reg_1308}};

assign r_7_i7_fu_944_p9 = {{{{{{{{select_ln32_1_reg_1348}, {select_ln32_reg_1340}}, {select_ln32_1_reg_1348}}, {select_ln32_reg_1340}}, {select_ln32_1_reg_1348}}, {select_ln32_reg_1340}}, {select_ln32_1_reg_1348}}, {select_ln32_reg_1340}};

assign r_7_i_fu_708_p9 = {{{{{{{{t_q0}, {t_q1}}, {reg_532}}, {reg_528}}, {reg_524}}, {reg_520}}, {reg_515}}, {reg_510}};

assign s_address1 = grp_KeccakF1600_StatePer_1_fu_504_state_address1;

assign s_d1 = grp_KeccakF1600_StatePer_1_fu_504_state_d1;

assign select_ln32_1_fu_868_p3 = ((xor_ln32_fu_857_p2[0:0] === 1'b1) ? m_0_read : m_1_read);

assign select_ln32_2_fu_817_p3 = ((xor_ln32_1_fu_812_p2[0:0] === 1'b1) ? m_1_read : m_0_read);

assign select_ln32_3_fu_823_p3 = ((xor_ln32_1_fu_812_p2[0:0] === 1'b1) ? m_0_read : m_1_read);

assign select_ln32_fu_862_p3 = ((xor_ln32_fu_857_p2[0:0] === 1'b1) ? m_1_read : m_0_read);

assign select_ln396_fu_660_p3 = ((empty_67_fu_645_p1[0:0] === 1'b1) ? m_1_read : m_0_read);

assign select_ln438_fu_1037_p3 = ((xor_ln438_1_fu_1032_p2[0:0] === 1'b1) ? m_1_read : m_0_read);

assign sext_ln395_fu_618_p1 = xor_ln395_2_fu_612_p2;

assign sext_ln397_fu_626_p1 = xor_ln395_2_fu_612_p2;

assign sext_ln400_fu_682_p1 = $signed(add_ln394_fu_678_p2);

assign sext_ln408_fu_781_p1 = $signed(ap_phi_mux_p_2_phi_fu_432_p6);

assign sub_ln395_fu_582_p2 = ($signed(4'd8) - $signed(zext_ln395_fu_578_p1));

assign sub_ln400_fu_686_p2 = ($signed(add_ln398_reg_1176) - $signed(sext_ln400_fu_682_p1));

assign sub_ln403_fu_753_p2 = (empty_62_reg_1130 - zext_ln403_1_fu_735_p1);

assign sub_ln409_fu_772_p2 = (zext_ln403_reg_1250 - trunc_ln409_reg_1265);

assign sub_ln421_fu_895_p2 = (indvars_iv_reg_440 - empty_68_reg_1285);

assign sub_ln428_fu_978_p2 = (indvars_iv_reg_440 - zext_ln427_fu_974_p1);

assign t_addr_28_reg_1417 = 64'd0;

assign t_addr_29_reg_1422 = 64'd1;

assign t_addr_30_gep_fu_274_p3 = 64'd2;

assign t_addr_30_reg_1427 = 64'd2;

assign t_addr_31_gep_fu_282_p3 = 64'd3;

assign t_addr_31_reg_1432 = 64'd3;

assign t_addr_32_gep_fu_290_p3 = 64'd4;

assign t_addr_32_reg_1437 = 64'd4;

assign t_addr_33_gep_fu_298_p3 = 64'd5;

assign t_addr_33_reg_1442 = 64'd5;

assign t_addr_34_gep_fu_306_p3 = 64'd6;

assign t_addr_34_reg_1447 = 64'd6;

assign t_addr_35_gep_fu_314_p3 = 64'd7;

assign t_addr_35_reg_1452 = 64'd7;

assign tmp_939_fu_829_p4 = {{p_23_reg_414[5:3]}};

assign tmp_940_fu_1044_p4 = {{add_ln429_reg_1402[8:3]}};

assign trunc_ln393_fu_561_p1 = pos_r[2:0];

assign trunc_ln397_fu_630_p1 = umax_fu_604_p3[1:0];

assign trunc_ln401_fu_701_p1 = xor_ln395_2_reg_1156[0:0];

assign trunc_ln409_fu_764_p1 = sub_ln403_fu_753_p2[2:0];

assign trunc_ln412_fu_768_p1 = sub_ln403_fu_753_p2[0:0];

assign trunc_ln416_fu_808_p1 = p_38_rec_reg_450[0:0];

assign trunc_ln425_fu_853_p1 = p_38_rec_reg_450[0:0];

assign trunc_ln428_fu_984_p1 = sub_ln428_fu_978_p2[32:0];

assign trunc_ln438_fu_1023_p1 = i_5_reg_484[0:0];

assign trunc_ln441_fu_1058_p1 = sub_ln428_reg_1392[31:0];

assign umax_fu_604_p3 = ((empty_66_fu_598_p2[0:0] === 1'b1) ? 3'd5 : xor_ln395_1_fu_592_p2);

assign xor_ln32_1_fu_812_p2 = (xor_ln416_1_reg_1297 ^ trunc_ln416_fu_808_p1);

assign xor_ln32_fu_857_p2 = (xor_ln416_1_reg_1297 ^ trunc_ln425_fu_853_p1);

assign xor_ln395_1_fu_592_p2 = (empty_65_fu_588_p1 ^ 3'd7);

assign xor_ln395_2_fu_612_p2 = (umax_fu_604_p3 ^ 3'd7);

assign xor_ln400_fu_728_p2 = (s_q0 ^ r_7_i_fu_708_p9);

assign xor_ln416_1_fu_797_p2 = (phi_ln408_reg_367 ^ ap_phi_mux_phi_ln408_1_phi_fu_404_p6);

assign xor_ln416_fu_912_p2 = (s_q0 ^ r_7_i6_fu_900_p9);

assign xor_ln425_fu_956_p2 = (s_q0 ^ r_7_i7_fu_944_p9);

assign xor_ln438_1_fu_1032_p2 = (xor_ln438_fu_1027_p2 ^ xor_ln416_1_reg_1297);

assign xor_ln438_fu_1027_p2 = (trunc_ln438_fu_1023_p1 ^ trunc_ln425_reg_1335);

assign xor_ln440_fu_1081_p2 = (s_q0 ^ r_7_i5_fu_1061_p9);

assign zext_ln391_fu_550_p1 = phi_ln391_reg_336;

assign zext_ln393_1_fu_568_p1 = trunc_ln393_fu_561_p1;

assign zext_ln393_fu_564_p1 = trunc_ln393_fu_561_p1;

assign zext_ln395_fu_578_p1 = trunc_ln393_fu_561_p1;

assign zext_ln396_fu_673_p1 = i_0_reg_358;

assign zext_ln400_fu_704_p1 = tmp_reg_1205;

assign zext_ln403_1_fu_735_p1 = p_12_reg_379;

assign zext_ln403_2_fu_743_p1 = p_1_reg_389;

assign zext_ln403_fu_739_p1 = p_1_reg_389;

assign zext_ln408_fu_777_p1 = ap_phi_mux_p_23_phi_fu_417_p6;

assign zext_ln416_1_fu_885_p1 = i_2_reg_462;

assign zext_ln423_2_fu_839_p1 = tmp_939_fu_829_p4;

assign zext_ln423_fu_930_p1 = i_3_reg_473;

assign zext_ln425_1_fu_939_p1 = add_ln425_1_fu_934_p2;

assign zext_ln427_2_fu_970_p1 = and_ln_fu_963_p3;

assign zext_ln427_fu_974_p1 = and_ln_fu_963_p3;

assign zext_ln429_fu_993_p1 = add_ln429_fu_988_p2;

assign zext_ln436_2_fu_1003_p1 = i_5_reg_484;

assign zext_ln436_fu_1018_p1 = i_5_reg_484;

assign zext_ln440_fu_1053_p1 = tmp_940_fu_1044_p4;

always @ (posedge ap_clk) begin
    zext_ln393_1_reg_1148[4:3] <= 2'b00;
    s_addr_reg_1245[4:3] <= 2'b00;
    zext_ln403_reg_1250[2] <= 1'b0;
    zext_ln408_reg_1275[8:6] <= 3'b000;
    empty_68_reg_1285[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln423_2_reg_1324[29:3] <= 27'b000000000000000000000000000;
    zext_ln429_reg_1407[31:9] <= 23'b00000000000000000000000;
end

endmodule //keccak_absorb
