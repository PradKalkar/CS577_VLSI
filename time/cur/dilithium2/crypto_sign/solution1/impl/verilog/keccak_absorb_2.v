// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module keccak_absorb_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        s_address0,
        s_ce0,
        s_we0,
        s_d0,
        s_q0,
        s_address1,
        s_ce1,
        s_we1,
        s_d1,
        s_q1,
        pos_r,
        m_address0,
        m_ce0,
        m_q0,
        m_address1,
        m_ce1,
        m_q1,
        m_offset,
        mlen,
        ap_return
);

parameter    ap_ST_fsm_state1 = 33'd1;
parameter    ap_ST_fsm_state2 = 33'd2;
parameter    ap_ST_fsm_state3 = 33'd4;
parameter    ap_ST_fsm_state4 = 33'd8;
parameter    ap_ST_fsm_state5 = 33'd16;
parameter    ap_ST_fsm_state6 = 33'd32;
parameter    ap_ST_fsm_state7 = 33'd64;
parameter    ap_ST_fsm_state8 = 33'd128;
parameter    ap_ST_fsm_state9 = 33'd256;
parameter    ap_ST_fsm_state10 = 33'd512;
parameter    ap_ST_fsm_state11 = 33'd1024;
parameter    ap_ST_fsm_state12 = 33'd2048;
parameter    ap_ST_fsm_state13 = 33'd4096;
parameter    ap_ST_fsm_state14 = 33'd8192;
parameter    ap_ST_fsm_state15 = 33'd16384;
parameter    ap_ST_fsm_state16 = 33'd32768;
parameter    ap_ST_fsm_state17 = 33'd65536;
parameter    ap_ST_fsm_state18 = 33'd131072;
parameter    ap_ST_fsm_state19 = 33'd262144;
parameter    ap_ST_fsm_state20 = 33'd524288;
parameter    ap_ST_fsm_state21 = 33'd1048576;
parameter    ap_ST_fsm_state22 = 33'd2097152;
parameter    ap_ST_fsm_state23 = 33'd4194304;
parameter    ap_ST_fsm_state24 = 33'd8388608;
parameter    ap_ST_fsm_state25 = 33'd16777216;
parameter    ap_ST_fsm_state26 = 33'd33554432;
parameter    ap_ST_fsm_state27 = 33'd67108864;
parameter    ap_ST_fsm_state28 = 33'd134217728;
parameter    ap_ST_fsm_state29 = 33'd268435456;
parameter    ap_ST_fsm_state30 = 33'd536870912;
parameter    ap_ST_fsm_state31 = 33'd1073741824;
parameter    ap_ST_fsm_state32 = 33'd2147483648;
parameter    ap_ST_fsm_state33 = 33'd4294967296;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] s_address0;
output   s_ce0;
output   s_we0;
output  [63:0] s_d0;
input  [63:0] s_q0;
output  [4:0] s_address1;
output   s_ce1;
output   s_we1;
output  [63:0] s_d1;
input  [63:0] s_q1;
input  [6:0] pos_r;
output  [12:0] m_address0;
output   m_ce0;
input  [7:0] m_q0;
output  [12:0] m_address1;
output   m_ce1;
input  [7:0] m_q1;
input  [12:0] m_offset;
input  [63:0] mlen;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] s_address0;
reg s_ce0;
reg s_we0;
reg[63:0] s_d0;
reg s_ce1;
reg s_we1;
reg[12:0] m_address0;
reg m_ce0;
reg[12:0] m_address1;
reg m_ce1;
reg[31:0] ap_return;

(* fsm_encoding = "none" *) reg   [32:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] t_q0;
reg   [7:0] reg_774;
wire    ap_CS_fsm_state5;
wire   [7:0] t_q1;
wire    ap_CS_fsm_state30;
reg   [7:0] reg_779;
reg   [7:0] reg_784;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state31;
reg   [7:0] reg_788;
reg   [7:0] reg_792;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state32;
reg   [7:0] reg_796;
reg   [7:0] reg_800;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state23;
reg   [7:0] reg_805;
reg   [7:0] reg_810;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state24;
reg   [7:0] reg_814;
reg   [7:0] reg_818;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state25;
reg   [7:0] reg_822;
wire   [13:0] grp_fu_770_p2;
reg   [13:0] reg_826;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln411_fu_1259_p2;
wire   [31:0] pos_cast1_fu_830_p1;
reg   [31:0] pos_cast1_reg_1785;
wire   [2:0] add_ln389_fu_834_p2;
wire    ap_CS_fsm_state2;
wire   [31:0] zext_ln391_fu_854_p1;
reg   [31:0] zext_ln391_reg_1799;
wire   [0:0] icmp_ln389_fu_845_p2;
wire   [0:0] icmp_ln391_fu_858_p2;
reg   [0:0] icmp_ln391_reg_1805;
wire   [63:0] xor_ln393_2_fu_911_p2;
reg   [63:0] xor_ln393_2_reg_1809;
wire   [13:0] xor_ln393_2_cast_fu_917_p2;
reg   [13:0] xor_ln393_2_cast_reg_1814;
wire   [31:0] empty_88_fu_923_p2;
reg   [31:0] empty_88_reg_1819;
wire   [63:0] add_ln395_1_fu_935_p2;
reg   [63:0] add_ln395_1_reg_1824;
wire   [31:0] add_ln396_fu_940_p2;
reg   [31:0] add_ln396_reg_1829;
wire   [13:0] m_offset_cast68_fu_945_p1;
reg   [13:0] m_offset_cast68_reg_1835;
wire    ap_CS_fsm_state3;
wire   [63:0] add_ln394_fu_967_p2;
reg   [63:0] add_ln394_reg_1848;
wire   [0:0] exitcond_fu_962_p2;
reg   [4:0] s_addr_reg_1863;
wire   [31:0] i_fu_997_p2;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln401_fu_1035_p2;
reg   [0:0] icmp_ln401_reg_1903;
wire    ap_CS_fsm_state8;
wire   [63:0] zext_ln401_fu_1047_p1;
reg   [63:0] zext_ln401_reg_1907;
wire   [13:0] trunc_ln401_fu_1051_p1;
reg   [13:0] trunc_ln401_reg_1912;
wire   [0:0] icmp_ln401_1_fu_1055_p2;
reg   [0:0] icmp_ln401_1_reg_1917;
wire   [29:0] zext_ln402_1_fu_1071_p1;
reg   [29:0] zext_ln402_1_reg_1921;
reg   [28:0] tmp_s_reg_1926;
wire   [13:0] zext_ln404_fu_1085_p1;
reg   [13:0] zext_ln404_reg_1931;
wire   [28:0] i_32_fu_1097_p2;
reg   [28:0] i_32_reg_1939;
wire    ap_CS_fsm_state9;
wire   [13:0] add_ln404_2_fu_1120_p2;
reg   [13:0] add_ln404_2_reg_1944;
wire   [0:0] icmp_ln402_fu_1092_p2;
reg   [4:0] s_addr_1_reg_1964;
wire   [13:0] add_ln405_fu_1245_p2;
reg   [13:0] add_ln405_reg_1999;
wire    ap_CS_fsm_state14;
wire    grp_KeccakF1600_StatePer_1_fu_764_ap_ready;
wire    grp_KeccakF1600_StatePer_1_fu_764_ap_done;
reg    ap_predicate_op195_call_state14;
reg    ap_block_state14_on_subcall_done;
wire   [11:0] trunc_ln414_fu_1251_p1;
reg   [11:0] trunc_ln414_reg_2005;
wire   [13:0] trunc_ln411_fu_1254_p1;
reg   [13:0] trunc_ln411_reg_2011;
wire   [29:0] zext_ln420_1_fu_1275_p1;
reg   [29:0] zext_ln420_1_reg_2019;
reg   [4:0] tmp_3265_reg_2024;
wire   [4:0] i_33_fu_1295_p2;
reg   [4:0] i_33_reg_2033;
wire    ap_CS_fsm_state16;
wire   [13:0] add_ln414_2_fu_1322_p2;
reg   [13:0] add_ln414_2_reg_2038;
wire   [0:0] icmp_ln413_fu_1289_p2;
wire   [63:0] add_ln415_fu_1344_p2;
reg   [63:0] add_ln415_reg_2058;
wire   [63:0] add_ln418_fu_1350_p2;
reg   [63:0] add_ln418_reg_2063;
reg   [4:0] s_addr_3_reg_2098;
wire   [4:0] add_ln420_fu_1457_p2;
reg   [4:0] add_ln420_reg_2106;
wire    ap_CS_fsm_state22;
wire   [13:0] add_ln421_3_fu_1488_p2;
reg   [13:0] add_ln421_3_reg_2111;
wire   [0:0] icmp_ln420_fu_1452_p2;
reg   [4:0] s_addr_2_reg_2131;
wire   [13:0] zext_ln423_fu_1535_p1;
reg   [13:0] zext_ln423_reg_2136;
wire   [63:0] sub_ln423_fu_1539_p2;
reg   [63:0] sub_ln423_reg_2141;
wire   [32:0] trunc_ln423_fu_1545_p1;
reg   [32:0] trunc_ln423_reg_2146;
wire   [31:0] add_ln424_fu_1549_p2;
reg   [31:0] add_ln424_reg_2151;
wire   [0:0] icmp_ln426_fu_1555_p2;
reg   [0:0] icmp_ln426_reg_2158;
wire   [3:0] i_34_fu_1654_p2;
wire    ap_CS_fsm_state27;
wire   [13:0] add_ln430_fu_1668_p2;
reg   [13:0] add_ln430_reg_2200;
wire   [0:0] icmp_ln427_fu_1648_p2;
wire   [63:0] zext_ln429_fu_1673_p1;
reg   [63:0] zext_ln429_reg_2205;
wire    ap_CS_fsm_state28;
wire   [31:0] i_35_fu_1690_p2;
reg   [31:0] i_35_reg_2213;
wire   [0:0] icmp_ln429_fu_1685_p2;
wire   [31:0] trunc_ln432_fu_1716_p1;
reg   [31:0] trunc_ln432_reg_2233;
wire   [2:0] t_addr_14_gep_fu_513_p3;
wire   [2:0] t_addr_15_gep_fu_521_p3;
wire   [2:0] t_addr_16_gep_fu_529_p3;
wire   [2:0] t_addr_17_gep_fu_537_p3;
wire   [2:0] t_addr_18_gep_fu_545_p3;
wire   [2:0] t_addr_19_gep_fu_553_p3;
reg   [4:0] s_addr_4_reg_2268;
reg   [2:0] t_address0;
reg    t_ce0;
reg    t_we0;
reg   [2:0] t_address1;
reg    t_ce1;
reg    t_we1;
reg   [7:0] t_d1;
wire    grp_KeccakF1600_StatePer_1_fu_764_ap_start;
wire    grp_KeccakF1600_StatePer_1_fu_764_ap_idle;
wire   [4:0] grp_KeccakF1600_StatePer_1_fu_764_state_address0;
wire    grp_KeccakF1600_StatePer_1_fu_764_state_ce0;
wire    grp_KeccakF1600_StatePer_1_fu_764_state_we0;
wire   [63:0] grp_KeccakF1600_StatePer_1_fu_764_state_d0;
wire   [4:0] grp_KeccakF1600_StatePer_1_fu_764_state_address1;
wire    grp_KeccakF1600_StatePer_1_fu_764_state_ce1;
wire    grp_KeccakF1600_StatePer_1_fu_764_state_we1;
wire   [63:0] grp_KeccakF1600_StatePer_1_fu_764_state_d1;
reg   [2:0] phi_ln389_reg_569;
reg   [63:0] p_05_rec_reg_580;
reg   [31:0] i_0_reg_591;
reg   [13:0] p_1621_reg_601;
reg   [31:0] ap_phi_mux_p_12_phi_fu_616_p4;
reg   [31:0] p_12_reg_613;
reg   [63:0] ap_phi_mux_p_1_phi_fu_626_p4;
reg   [63:0] p_1_reg_623;
reg   [28:0] i_1_reg_633;
wire    ap_CS_fsm_state13;
reg   [13:0] ap_phi_mux_p_2723_phi_fu_648_p6;
reg   [13:0] p_2723_reg_644;
reg   [31:0] p_23_reg_658;
wire   [63:0] sub_ln406_fu_1239_p2;
reg   [63:0] ap_phi_mux_p_2_phi_fu_676_p6;
reg   [63:0] p_2_reg_673;
reg   [63:0] indvars_iv_reg_687;
wire    ap_CS_fsm_state21;
reg   [63:0] p_38_rec_reg_698;
reg   [4:0] i_2_reg_710;
wire    ap_CS_fsm_state20;
reg   [4:0] i_3_reg_722;
wire    ap_CS_fsm_state26;
reg   [3:0] i_4_reg_733;
reg   [31:0] i_5_reg_744;
wire    ap_CS_fsm_state29;
wire   [31:0] add_ln432_fu_1760_p2;
reg   [31:0] ap_phi_mux_p_34_phi_fu_758_p4;
reg   [31:0] p_34_reg_755;
wire    ap_CS_fsm_state33;
reg    grp_KeccakF1600_StatePer_1_fu_764_ap_start_reg;
wire   [63:0] zext_ln389_fu_840_p1;
wire   [63:0] sum1_cast_fu_957_p1;
wire   [63:0] zext_ln398_fu_992_p1;
wire   [63:0] zext_ln394_fu_1003_p1;
wire   [63:0] zext_ln404_2_fu_1126_p1;
wire   [63:0] zext_ln32_fu_1137_p1;
wire   [63:0] zext_ln404_1_fu_1147_p1;
wire   [63:0] zext_ln32_19_fu_1157_p1;
wire   [63:0] zext_ln32_20_fu_1167_p1;
wire   [63:0] zext_ln32_21_fu_1177_p1;
wire   [63:0] zext_ln32_22_fu_1187_p1;
wire   [63:0] zext_ln32_23_fu_1197_p1;
wire   [63:0] zext_ln32_24_fu_1207_p1;
wire   [63:0] zext_ln414_3_fu_1328_p1;
wire   [63:0] zext_ln32_32_fu_1339_p1;
wire   [63:0] zext_ln32_33_fu_1361_p1;
wire   [63:0] zext_ln32_34_fu_1371_p1;
wire   [63:0] zext_ln32_35_fu_1381_p1;
wire   [63:0] zext_ln32_36_fu_1391_p1;
wire   [63:0] zext_ln32_37_fu_1401_p1;
wire   [63:0] zext_ln32_38_fu_1411_p1;
wire   [63:0] zext_ln414_1_fu_1416_p1;
wire   [63:0] zext_ln421_4_fu_1494_p1;
wire   [63:0] zext_ln32_25_fu_1505_p1;
wire   [63:0] zext_ln421_1_fu_1515_p1;
wire   [63:0] zext_ln32_26_fu_1566_p1;
wire   [63:0] zext_ln32_27_fu_1576_p1;
wire   [63:0] zext_ln32_28_fu_1586_p1;
wire   [63:0] zext_ln32_29_fu_1596_p1;
wire   [63:0] zext_ln32_30_fu_1606_p1;
wire   [63:0] zext_ln32_31_fu_1616_p1;
wire   [63:0] zext_ln428_fu_1660_p1;
wire   [63:0] zext_ln430_1_fu_1711_p1;
wire   [63:0] zext_ln431_fu_1728_p1;
wire   [63:0] xor_ln398_fu_1028_p2;
wire   [63:0] xor_ln404_fu_1232_p2;
wire   [63:0] xor_ln414_fu_1441_p2;
wire   [63:0] xor_ln421_fu_1641_p2;
wire   [63:0] xor_ln431_fu_1753_p2;
wire   [2:0] trunc_ln391_fu_851_p1;
wire   [3:0] zext_ln393_fu_869_p1;
wire   [3:0] sub_ln393_fu_873_p2;
wire   [63:0] empty_86_fu_879_p1;
wire   [63:0] xor_ln393_fu_864_p2;
wire   [63:0] xor_ln393_1_fu_883_p2;
wire   [0:0] empty_87_fu_889_p2;
wire   [63:0] umax_fu_895_p3;
wire   [13:0] trunc_ln393_1_fu_907_p1;
wire   [31:0] trunc_ln393_fu_903_p1;
wire   [63:0] add_ln395_fu_929_p2;
wire   [13:0] empty_89_fu_948_p1;
wire   [13:0] sum1_fu_952_p2;
wire   [31:0] add_ln392_fu_973_p2;
wire   [31:0] sub_ln398_fu_977_p2;
wire   [28:0] lshr_ln_fu_982_p4;
wire   [63:0] r_7_i_fu_1008_p9;
wire   [31:0] sub_ln401_fu_1041_p2;
wire   [28:0] tmp_fu_1061_p4;
wire   [10:0] trunc_ln404_fu_1103_p1;
wire   [13:0] shl_ln_fu_1107_p3;
wire   [13:0] add_ln404_1_fu_1115_p2;
wire   [13:0] add_ln32_fu_1131_p2;
wire   [29:0] zext_ln402_fu_1088_p1;
wire   [29:0] add_ln404_fu_1142_p2;
wire   [13:0] add_ln32_13_fu_1152_p2;
wire   [13:0] add_ln32_14_fu_1162_p2;
wire   [13:0] add_ln32_15_fu_1172_p2;
wire   [13:0] add_ln32_16_fu_1182_p2;
wire   [13:0] add_ln32_17_fu_1192_p2;
wire   [13:0] add_ln32_18_fu_1202_p2;
wire   [63:0] r_7_i1_fu_1212_p9;
wire   [28:0] tmp_3264_fu_1265_p4;
wire   [7:0] shl_ln11_fu_1301_p3;
wire   [11:0] zext_ln414_fu_1309_p1;
wire   [11:0] add_ln414_1_fu_1313_p2;
wire   [13:0] zext_ln414_2_fu_1318_p1;
wire   [13:0] add_ln32_26_fu_1333_p2;
wire   [13:0] add_ln32_27_fu_1356_p2;
wire   [13:0] add_ln32_28_fu_1366_p2;
wire   [13:0] add_ln32_29_fu_1376_p2;
wire   [13:0] add_ln32_30_fu_1386_p2;
wire   [13:0] add_ln32_31_fu_1396_p2;
wire   [13:0] add_ln32_32_fu_1406_p2;
wire   [63:0] r_7_i4_fu_1421_p9;
wire   [3:0] trunc_ln421_fu_1463_p1;
wire   [6:0] shl_ln10_fu_1467_p3;
wire   [11:0] zext_ln421_fu_1475_p1;
wire   [11:0] add_ln421_2_fu_1479_p2;
wire   [13:0] zext_ln421_3_fu_1484_p1;
wire   [13:0] add_ln32_19_fu_1499_p2;
wire   [29:0] zext_ln420_fu_1448_p1;
wire   [29:0] add_ln421_1_fu_1510_p2;
wire   [7:0] and_ln_fu_1520_p3;
wire   [63:0] zext_ln422_fu_1531_p1;
wire   [31:0] zext_ln422_1_fu_1527_p1;
wire   [13:0] add_ln32_20_fu_1561_p2;
wire   [13:0] add_ln32_21_fu_1571_p2;
wire   [13:0] add_ln32_22_fu_1581_p2;
wire   [13:0] add_ln32_23_fu_1591_p2;
wire   [13:0] add_ln32_24_fu_1601_p2;
wire   [13:0] add_ln32_25_fu_1611_p2;
wire   [63:0] r_7_i2_fu_1621_p9;
wire   [13:0] zext_ln430_fu_1665_p1;
wire   [32:0] zext_ln429_1_fu_1681_p1;
wire   [13:0] trunc_ln429_fu_1677_p1;
wire   [13:0] add_ln430_1_fu_1696_p2;
wire   [13:0] add_ln430_2_fu_1701_p2;
wire   [13:0] add_ln430_3_fu_1706_p2;
wire   [28:0] lshr_ln9_fu_1719_p4;
wire   [63:0] r_7_i3_fu_1733_p9;
reg   [31:0] ap_return_preg;
reg   [32:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 33'd1;
#0 grp_KeccakF1600_StatePer_1_fu_764_ap_start_reg = 1'b0;
#0 ap_return_preg = 32'd0;
end

keccak_absorb_2_t #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
t_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(t_address0),
    .ce0(t_ce0),
    .we0(t_we0),
    .d0(8'd0),
    .q0(t_q0),
    .address1(t_address1),
    .ce1(t_ce1),
    .we1(t_we1),
    .d1(t_d1),
    .q1(t_q1)
);

KeccakF1600_StatePer_1 grp_KeccakF1600_StatePer_1_fu_764(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_KeccakF1600_StatePer_1_fu_764_ap_start),
    .ap_done(grp_KeccakF1600_StatePer_1_fu_764_ap_done),
    .ap_idle(grp_KeccakF1600_StatePer_1_fu_764_ap_idle),
    .ap_ready(grp_KeccakF1600_StatePer_1_fu_764_ap_ready),
    .state_address0(grp_KeccakF1600_StatePer_1_fu_764_state_address0),
    .state_ce0(grp_KeccakF1600_StatePer_1_fu_764_state_ce0),
    .state_we0(grp_KeccakF1600_StatePer_1_fu_764_state_we0),
    .state_d0(grp_KeccakF1600_StatePer_1_fu_764_state_d0),
    .state_q0(s_q0),
    .state_address1(grp_KeccakF1600_StatePer_1_fu_764_state_address1),
    .state_ce1(grp_KeccakF1600_StatePer_1_fu_764_state_ce1),
    .state_we1(grp_KeccakF1600_StatePer_1_fu_764_state_we1),
    .state_d1(grp_KeccakF1600_StatePer_1_fu_764_state_d1),
    .state_q1(s_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state33)) begin
            ap_return_preg <= ap_phi_mux_p_34_phi_fu_758_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_KeccakF1600_StatePer_1_fu_764_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state16) & (icmp_ln413_fu_1289_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state9) & (icmp_ln402_fu_1092_p2 == 1'd1)))) begin
            grp_KeccakF1600_StatePer_1_fu_764_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakF1600_StatePer_1_fu_764_ap_ready == 1'b1)) begin
            grp_KeccakF1600_StatePer_1_fu_764_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_0_reg_591 <= i_fu_997_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln389_fu_845_p2 == 1'd1) & (icmp_ln391_fu_858_p2 == 1'd0))) begin
        i_0_reg_591 <= zext_ln391_fu_854_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln401_1_fu_1055_p2 == 1'd0) & (icmp_ln401_fu_1035_p2 == 1'd0))) begin
        i_1_reg_633 <= 29'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        i_1_reg_633 <= i_32_reg_1939;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln411_fu_1259_p2 == 1'd0))) begin
        i_2_reg_710 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        i_2_reg_710 <= i_33_reg_2033;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        i_3_reg_722 <= add_ln420_reg_2106;
    end else if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln411_fu_1259_p2 == 1'd1))) begin
        i_3_reg_722 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln420_fu_1452_p2 == 1'd1) & (icmp_ln426_fu_1555_p2 == 1'd0))) begin
        i_4_reg_733 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (icmp_ln427_fu_1648_p2 == 1'd0))) begin
        i_4_reg_733 <= i_34_fu_1654_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (icmp_ln427_fu_1648_p2 == 1'd1))) begin
        i_5_reg_744 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        i_5_reg_744 <= i_35_reg_2213;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
        indvars_iv_reg_687 <= ap_phi_mux_p_2_phi_fu_676_p6;
    end else if (((grp_KeccakF1600_StatePer_1_fu_764_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        indvars_iv_reg_687 <= add_ln418_reg_2063;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_05_rec_reg_580 <= add_ln394_reg_1848;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln389_fu_845_p2 == 1'd1) & (icmp_ln391_fu_858_p2 == 1'd0))) begin
        p_05_rec_reg_580 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln391_fu_858_p2 == 1'd1) & (icmp_ln389_fu_845_p2 == 1'd1))) begin
        p_12_reg_613 <= pos_cast1_reg_1785;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln391_reg_1805 == 1'd0))) begin
        p_12_reg_613 <= add_ln396_reg_1829;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln391_fu_858_p2 == 1'd1) & (icmp_ln389_fu_845_p2 == 1'd1))) begin
        p_1621_reg_601 <= 14'd0;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln391_reg_1805 == 1'd0))) begin
        p_1621_reg_601 <= xor_ln393_2_cast_reg_1814;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln391_fu_858_p2 == 1'd1) & (icmp_ln389_fu_845_p2 == 1'd1))) begin
        p_1_reg_623 <= mlen;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln391_reg_1805 == 1'd0))) begin
        p_1_reg_623 <= add_ln395_1_reg_1824;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state8) & (icmp_ln401_fu_1035_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state8) & (icmp_ln401_1_fu_1055_p2 == 1'd1) & (icmp_ln401_fu_1035_p2 == 1'd0)))) begin
        p_23_reg_658 <= ap_phi_mux_p_12_phi_fu_616_p4;
    end else if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14) & (icmp_ln401_1_reg_1917 == 1'd0) & (icmp_ln401_reg_1903 == 1'd0))) begin
        p_23_reg_658 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state8) & (icmp_ln401_fu_1035_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state8) & (icmp_ln401_1_fu_1055_p2 == 1'd1) & (icmp_ln401_fu_1035_p2 == 1'd0)))) begin
        p_2723_reg_644 <= 14'd0;
    end else if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14) & (icmp_ln401_1_reg_1917 == 1'd0) & (icmp_ln401_reg_1903 == 1'd0))) begin
        p_2723_reg_644 <= trunc_ln401_reg_1912;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state8) & (icmp_ln401_fu_1035_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state8) & (icmp_ln401_1_fu_1055_p2 == 1'd1) & (icmp_ln401_fu_1035_p2 == 1'd0)))) begin
        p_2_reg_673 <= ap_phi_mux_p_1_phi_fu_626_p4;
    end else if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14) & (icmp_ln401_1_reg_1917 == 1'd0) & (icmp_ln401_reg_1903 == 1'd0))) begin
        p_2_reg_673 <= sub_ln406_fu_1239_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln426_fu_1555_p2 == 1'd1) & (icmp_ln420_fu_1452_p2 == 1'd1))) begin
        p_34_reg_755 <= add_ln424_fu_1549_p2;
    end else if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln426_reg_2158 == 1'd0))) begin
        p_34_reg_755 <= add_ln432_fu_1760_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
        p_38_rec_reg_698 <= 64'd0;
    end else if (((grp_KeccakF1600_StatePer_1_fu_764_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        p_38_rec_reg_698 <= add_ln415_reg_2058;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln389_fu_845_p2 == 1'd0))) begin
        phi_ln389_reg_569 <= add_ln389_fu_834_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_ln389_reg_569 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        reg_774 <= t_q1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        reg_774 <= t_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        reg_779 <= t_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        reg_779 <= t_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_800 <= m_q1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        reg_800 <= m_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_805 <= m_q0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        reg_805 <= m_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln394_reg_1848 <= add_ln394_fu_967_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln389_fu_845_p2 == 1'd1) & (icmp_ln391_fu_858_p2 == 1'd0))) begin
        add_ln395_1_reg_1824 <= add_ln395_1_fu_935_p2;
        add_ln396_reg_1829 <= add_ln396_fu_940_p2;
        empty_88_reg_1819 <= empty_88_fu_923_p2;
        m_offset_cast68_reg_1835[12 : 0] <= m_offset_cast68_fu_945_p1[12 : 0];
        xor_ln393_2_cast_reg_1814 <= xor_ln393_2_cast_fu_917_p2;
        xor_ln393_2_reg_1809 <= xor_ln393_2_fu_911_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln402_fu_1092_p2 == 1'd0))) begin
        add_ln404_2_reg_1944 <= add_ln404_2_fu_1120_p2;
        s_addr_1_reg_1964 <= zext_ln404_1_fu_1147_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
        add_ln405_reg_1999 <= add_ln405_fu_1245_p2;
        trunc_ln414_reg_2005 <= trunc_ln414_fu_1251_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln413_fu_1289_p2 == 1'd0))) begin
        add_ln414_2_reg_2038 <= add_ln414_2_fu_1322_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln413_fu_1289_p2 == 1'd1))) begin
        add_ln415_reg_2058 <= add_ln415_fu_1344_p2;
        add_ln418_reg_2063 <= add_ln418_fu_1350_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        add_ln420_reg_2106 <= add_ln420_fu_1457_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln420_fu_1452_p2 == 1'd0))) begin
        add_ln421_3_reg_2111 <= add_ln421_3_fu_1488_p2;
        s_addr_2_reg_2131 <= zext_ln421_1_fu_1515_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln420_fu_1452_p2 == 1'd1))) begin
        add_ln424_reg_2151 <= add_ln424_fu_1549_p2;
        icmp_ln426_reg_2158 <= icmp_ln426_fu_1555_p2;
        sub_ln423_reg_2141 <= sub_ln423_fu_1539_p2;
        trunc_ln423_reg_2146 <= trunc_ln423_fu_1545_p1;
        zext_ln423_reg_2136[7 : 3] <= zext_ln423_fu_1535_p1[7 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (icmp_ln427_fu_1648_p2 == 1'd1))) begin
        add_ln430_reg_2200 <= add_ln430_fu_1668_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i_32_reg_1939 <= i_32_fu_1097_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        i_33_reg_2033 <= i_33_fu_1295_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        i_35_reg_2213 <= i_35_fu_1690_p2;
        zext_ln429_reg_2205[31 : 0] <= zext_ln429_fu_1673_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln389_fu_845_p2 == 1'd1))) begin
        icmp_ln391_reg_1805 <= icmp_ln391_fu_858_p2;
        zext_ln391_reg_1799[2 : 0] <= zext_ln391_fu_854_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln401_fu_1035_p2 == 1'd0))) begin
        icmp_ln401_1_reg_1917 <= icmp_ln401_1_fu_1055_p2;
        trunc_ln401_reg_1912 <= trunc_ln401_fu_1051_p1;
        zext_ln401_reg_1907[31 : 0] <= zext_ln401_fu_1047_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        icmp_ln401_reg_1903 <= icmp_ln401_fu_1035_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        pos_cast1_reg_1785[6 : 0] <= pos_cast1_fu_830_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state31))) begin
        reg_784 <= t_q0;
        reg_788 <= t_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_792 <= t_q0;
        reg_796 <= t_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_810 <= m_q1;
        reg_814 <= m_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state12))) begin
        reg_818 <= m_q1;
        reg_822 <= m_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state15) & (icmp_ln411_fu_1259_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state15) & (icmp_ln411_fu_1259_p2 == 1'd0)))) begin
        reg_826 <= grp_fu_770_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        s_addr_3_reg_2098 <= zext_ln414_1_fu_1416_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        s_addr_4_reg_2268 <= zext_ln431_fu_1728_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_962_p2 == 1'd1))) begin
        s_addr_reg_1863 <= zext_ln398_fu_992_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln411_fu_1259_p2 == 1'd1))) begin
        tmp_3265_reg_2024 <= {{indvars_iv_reg_687[7:3]}};
        zext_ln420_1_reg_2019[28 : 0] <= zext_ln420_1_fu_1275_p1[28 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln401_1_fu_1055_p2 == 1'd0) & (icmp_ln401_fu_1035_p2 == 1'd0))) begin
        tmp_s_reg_1926 <= {{sub_ln401_fu_1041_p2[31:3]}};
        zext_ln402_1_reg_1921[28 : 0] <= zext_ln402_1_fu_1071_p1[28 : 0];
        zext_ln404_reg_1931[12 : 0] <= zext_ln404_fu_1085_p1[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        trunc_ln411_reg_2011 <= trunc_ln411_fu_1254_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln429_fu_1685_p2 == 1'd0))) begin
        trunc_ln432_reg_2233 <= trunc_ln432_fu_1716_p1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln391_reg_1805 == 1'd0))) begin
        ap_phi_mux_p_12_phi_fu_616_p4 = add_ln396_reg_1829;
    end else begin
        ap_phi_mux_p_12_phi_fu_616_p4 = p_12_reg_613;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln391_reg_1805 == 1'd0))) begin
        ap_phi_mux_p_1_phi_fu_626_p4 = add_ln395_1_reg_1824;
    end else begin
        ap_phi_mux_p_1_phi_fu_626_p4 = p_1_reg_623;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln401_1_reg_1917 == 1'd0) & (icmp_ln401_reg_1903 == 1'd0))) begin
        ap_phi_mux_p_2723_phi_fu_648_p6 = trunc_ln401_reg_1912;
    end else begin
        ap_phi_mux_p_2723_phi_fu_648_p6 = p_2723_reg_644;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln401_1_reg_1917 == 1'd0) & (icmp_ln401_reg_1903 == 1'd0))) begin
        ap_phi_mux_p_2_phi_fu_676_p6 = sub_ln406_fu_1239_p2;
    end else begin
        ap_phi_mux_p_2_phi_fu_676_p6 = p_2_reg_673;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln426_reg_2158 == 1'd0))) begin
        ap_phi_mux_p_34_phi_fu_758_p4 = add_ln432_fu_1760_p2;
    end else begin
        ap_phi_mux_p_34_phi_fu_758_p4 = p_34_reg_755;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        ap_return = ap_phi_mux_p_34_phi_fu_758_p4;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        m_address0 = zext_ln32_31_fu_1616_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        m_address0 = zext_ln32_29_fu_1596_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        m_address0 = zext_ln32_27_fu_1576_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        m_address0 = zext_ln32_25_fu_1505_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        m_address0 = zext_ln32_38_fu_1411_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        m_address0 = zext_ln32_36_fu_1391_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        m_address0 = zext_ln32_34_fu_1371_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        m_address0 = zext_ln32_32_fu_1339_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        m_address0 = zext_ln32_24_fu_1207_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        m_address0 = zext_ln32_22_fu_1187_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        m_address0 = zext_ln32_20_fu_1167_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        m_address0 = zext_ln404_2_fu_1126_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        m_address0 = sum1_cast_fu_957_p1;
    end else begin
        m_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        m_address1 = zext_ln430_1_fu_1711_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        m_address1 = zext_ln32_30_fu_1606_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        m_address1 = zext_ln32_28_fu_1586_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        m_address1 = zext_ln32_26_fu_1566_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        m_address1 = zext_ln421_4_fu_1494_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        m_address1 = zext_ln32_37_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        m_address1 = zext_ln32_35_fu_1381_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        m_address1 = zext_ln32_33_fu_1361_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        m_address1 = zext_ln414_3_fu_1328_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        m_address1 = zext_ln32_23_fu_1197_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        m_address1 = zext_ln32_21_fu_1177_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        m_address1 = zext_ln32_19_fu_1157_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        m_address1 = zext_ln32_fu_1137_p1;
    end else begin
        m_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state10))) begin
        m_ce0 = 1'b1;
    end else begin
        m_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state10))) begin
        m_ce1 = 1'b1;
    end else begin
        m_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        s_address0 = s_addr_4_reg_2268;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        s_address0 = zext_ln431_fu_1728_p1;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25))) begin
        s_address0 = s_addr_2_reg_2131;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        s_address0 = s_addr_3_reg_2098;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        s_address0 = zext_ln414_1_fu_1416_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        s_address0 = s_addr_1_reg_1964;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        s_address0 = s_addr_reg_1863;
    end else if (((1'b1 == ap_CS_fsm_state21) | ((ap_predicate_op195_call_state14 == 1'b1) & (1'b1 == ap_CS_fsm_state14)))) begin
        s_address0 = grp_KeccakF1600_StatePer_1_fu_764_state_address0;
    end else begin
        s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state7))) begin
        s_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state21) | ((ap_predicate_op195_call_state14 == 1'b1) & (1'b1 == ap_CS_fsm_state14)))) begin
        s_ce0 = grp_KeccakF1600_StatePer_1_fu_764_state_ce0;
    end else begin
        s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((ap_predicate_op195_call_state14 == 1'b1) & (1'b1 == ap_CS_fsm_state14)))) begin
        s_ce1 = grp_KeccakF1600_StatePer_1_fu_764_state_ce1;
    end else begin
        s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        s_d0 = xor_ln431_fu_1753_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        s_d0 = xor_ln421_fu_1641_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        s_d0 = xor_ln414_fu_1441_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        s_d0 = xor_ln404_fu_1232_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        s_d0 = xor_ln398_fu_1028_p2;
    end else if (((1'b1 == ap_CS_fsm_state21) | ((ap_predicate_op195_call_state14 == 1'b1) & (1'b1 == ap_CS_fsm_state14)))) begin
        s_d0 = grp_KeccakF1600_StatePer_1_fu_764_state_d0;
    end else begin
        s_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state13) | ((1'b1 == ap_CS_fsm_state33) & (icmp_ln426_reg_2158 == 1'd0)) | ((1'b1 == ap_CS_fsm_state8) & (icmp_ln391_reg_1805 == 1'd0)))) begin
        s_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state21) | ((ap_predicate_op195_call_state14 == 1'b1) & (1'b1 == ap_CS_fsm_state14)))) begin
        s_we0 = grp_KeccakF1600_StatePer_1_fu_764_state_we0;
    end else begin
        s_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((ap_predicate_op195_call_state14 == 1'b1) & (1'b1 == ap_CS_fsm_state14)))) begin
        s_we1 = grp_KeccakF1600_StatePer_1_fu_764_state_we1;
    end else begin
        s_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        t_address0 = t_addr_18_gep_fu_545_p3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        t_address0 = t_addr_16_gep_fu_529_p3;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        t_address0 = t_addr_14_gep_fu_513_p3;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        t_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        t_address0 = zext_ln428_fu_1660_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        t_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        t_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        t_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t_address0 = zext_ln389_fu_840_p1;
    end else begin
        t_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        t_address1 = t_addr_19_gep_fu_553_p3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        t_address1 = t_addr_17_gep_fu_537_p3;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        t_address1 = t_addr_15_gep_fu_521_p3;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        t_address1 = zext_ln429_reg_2205;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        t_address1 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        t_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        t_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        t_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_address1 = zext_ln394_fu_1003_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_address1 = 64'd1;
    end else begin
        t_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state31))) begin
        t_ce0 = 1'b1;
    end else begin
        t_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state31))) begin
        t_ce1 = 1'b1;
    end else begin
        t_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        t_d1 = m_q1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_d1 = m_q0;
    end else begin
        t_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state27) & (icmp_ln427_fu_1648_p2 == 1'd0)))) begin
        t_we0 = 1'b1;
    end else begin
        t_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state4))) begin
        t_we1 = 1'b1;
    end else begin
        t_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln389_fu_845_p2 == 1'd1) & (icmp_ln391_fu_858_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln391_fu_858_p2 == 1'd1) & (icmp_ln389_fu_845_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_962_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln401_1_fu_1055_p2 == 1'd0) & (icmp_ln401_fu_1035_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln402_fu_1092_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln411_fu_1259_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln413_fu_1289_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state21 : begin
            if (((grp_KeccakF1600_StatePer_1_fu_764_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln420_fu_1452_p2 == 1'd1) & (icmp_ln426_fu_1555_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln426_fu_1555_p2 == 1'd1) & (icmp_ln420_fu_1452_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (icmp_ln427_fu_1648_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln429_fu_1685_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln32_13_fu_1152_p2 = (14'd2 + add_ln404_2_reg_1944);

assign add_ln32_14_fu_1162_p2 = (14'd3 + add_ln404_2_reg_1944);

assign add_ln32_15_fu_1172_p2 = (14'd4 + add_ln404_2_reg_1944);

assign add_ln32_16_fu_1182_p2 = (14'd5 + add_ln404_2_reg_1944);

assign add_ln32_17_fu_1192_p2 = (14'd6 + add_ln404_2_reg_1944);

assign add_ln32_18_fu_1202_p2 = (14'd7 + add_ln404_2_reg_1944);

assign add_ln32_19_fu_1499_p2 = (14'd1 + add_ln421_3_fu_1488_p2);

assign add_ln32_20_fu_1561_p2 = (14'd2 + add_ln421_3_reg_2111);

assign add_ln32_21_fu_1571_p2 = (14'd3 + add_ln421_3_reg_2111);

assign add_ln32_22_fu_1581_p2 = (14'd4 + add_ln421_3_reg_2111);

assign add_ln32_23_fu_1591_p2 = (14'd5 + add_ln421_3_reg_2111);

assign add_ln32_24_fu_1601_p2 = (14'd6 + add_ln421_3_reg_2111);

assign add_ln32_25_fu_1611_p2 = (14'd7 + add_ln421_3_reg_2111);

assign add_ln32_26_fu_1333_p2 = (add_ln414_2_fu_1322_p2 + 14'd1);

assign add_ln32_27_fu_1356_p2 = (add_ln414_2_reg_2038 + 14'd2);

assign add_ln32_28_fu_1366_p2 = (add_ln414_2_reg_2038 + 14'd3);

assign add_ln32_29_fu_1376_p2 = (add_ln414_2_reg_2038 + 14'd4);

assign add_ln32_30_fu_1386_p2 = (add_ln414_2_reg_2038 + 14'd5);

assign add_ln32_31_fu_1396_p2 = (add_ln414_2_reg_2038 + 14'd6);

assign add_ln32_32_fu_1406_p2 = (add_ln414_2_reg_2038 + 14'd7);

assign add_ln32_fu_1131_p2 = (14'd1 + add_ln404_2_fu_1120_p2);

assign add_ln389_fu_834_p2 = (phi_ln389_reg_569 + 3'd1);

assign add_ln392_fu_973_p2 = (zext_ln391_reg_1799 + empty_88_reg_1819);

assign add_ln394_fu_967_p2 = (64'd1 + p_05_rec_reg_580);

assign add_ln395_1_fu_935_p2 = (mlen + add_ln395_fu_929_p2);

assign add_ln395_fu_929_p2 = (64'd1 + umax_fu_895_p3);

assign add_ln396_fu_940_p2 = (empty_88_fu_923_p2 + pos_cast1_reg_1785);

assign add_ln404_1_fu_1115_p2 = (shl_ln_fu_1107_p3 + zext_ln404_reg_1931);

assign add_ln404_2_fu_1120_p2 = (add_ln404_1_fu_1115_p2 + p_1621_reg_601);

assign add_ln404_fu_1142_p2 = (zext_ln402_fu_1088_p1 + zext_ln402_1_reg_1921);

assign add_ln405_fu_1245_p2 = (p_1621_reg_601 + ap_phi_mux_p_2723_phi_fu_648_p6);

assign add_ln414_1_fu_1313_p2 = (trunc_ln414_reg_2005 + zext_ln414_fu_1309_p1);

assign add_ln414_2_fu_1322_p2 = (reg_826 + zext_ln414_2_fu_1318_p1);

assign add_ln415_fu_1344_p2 = (p_38_rec_reg_698 + 64'd136);

assign add_ln418_fu_1350_p2 = ($signed(indvars_iv_reg_687) + $signed(64'd18446744073709551480));

assign add_ln420_fu_1457_p2 = (i_3_reg_722 + 5'd1);

assign add_ln421_1_fu_1510_p2 = (zext_ln420_1_reg_2019 + zext_ln420_fu_1448_p1);

assign add_ln421_2_fu_1479_p2 = (trunc_ln414_reg_2005 + zext_ln421_fu_1475_p1);

assign add_ln421_3_fu_1488_p2 = (reg_826 + zext_ln421_3_fu_1484_p1);

assign add_ln424_fu_1549_p2 = (p_23_reg_658 + zext_ln422_1_fu_1527_p1);

assign add_ln430_1_fu_1696_p2 = (trunc_ln429_fu_1677_p1 + zext_ln423_reg_2136);

assign add_ln430_2_fu_1701_p2 = (trunc_ln411_reg_2011 + add_ln430_1_fu_1696_p2);

assign add_ln430_3_fu_1706_p2 = (add_ln430_reg_2200 + add_ln430_2_fu_1701_p2);

assign add_ln430_fu_1668_p2 = (zext_ln430_fu_1665_p1 + add_ln405_reg_1999);

assign add_ln432_fu_1760_p2 = (add_ln424_reg_2151 + trunc_ln432_reg_2233);

assign and_ln_fu_1520_p3 = {{tmp_3265_reg_2024}, {3'd0}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state14_on_subcall_done = ((ap_predicate_op195_call_state14 == 1'b1) & (grp_KeccakF1600_StatePer_1_fu_764_ap_done == 1'b0));
end

always @ (*) begin
    ap_predicate_op195_call_state14 = ((icmp_ln401_1_reg_1917 == 1'd0) & (icmp_ln401_reg_1903 == 1'd0));
end

assign empty_86_fu_879_p1 = sub_ln393_fu_873_p2;

assign empty_87_fu_889_p2 = ((xor_ln393_fu_864_p2 > xor_ln393_1_fu_883_p2) ? 1'b1 : 1'b0);

assign empty_88_fu_923_p2 = (trunc_ln393_fu_903_p1 ^ 32'd4294967295);

assign empty_89_fu_948_p1 = p_05_rec_reg_580[13:0];

assign exitcond_fu_962_p2 = ((p_05_rec_reg_580 == xor_ln393_2_reg_1809) ? 1'b1 : 1'b0);

assign grp_KeccakF1600_StatePer_1_fu_764_ap_start = grp_KeccakF1600_StatePer_1_fu_764_ap_start_reg;

assign grp_fu_770_p2 = (trunc_ln411_fu_1254_p1 + add_ln405_reg_1999);

assign i_32_fu_1097_p2 = (i_1_reg_633 + 29'd1);

assign i_33_fu_1295_p2 = (i_2_reg_710 + 5'd1);

assign i_34_fu_1654_p2 = (i_4_reg_733 + 4'd1);

assign i_35_fu_1690_p2 = (32'd1 + i_5_reg_744);

assign i_fu_997_p2 = (i_0_reg_591 + 32'd1);

assign icmp_ln389_fu_845_p2 = ((phi_ln389_reg_569 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln391_fu_858_p2 = ((trunc_ln391_fu_851_p1 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln401_1_fu_1055_p2 = ((ap_phi_mux_p_1_phi_fu_626_p4 < zext_ln401_fu_1047_p1) ? 1'b1 : 1'b0);

assign icmp_ln401_fu_1035_p2 = ((ap_phi_mux_p_12_phi_fu_616_p4 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln402_fu_1092_p2 = ((i_1_reg_633 == tmp_s_reg_1926) ? 1'b1 : 1'b0);

assign icmp_ln411_fu_1259_p2 = ((indvars_iv_reg_687 < 64'd136) ? 1'b1 : 1'b0);

assign icmp_ln413_fu_1289_p2 = ((i_2_reg_710 == 5'd17) ? 1'b1 : 1'b0);

assign icmp_ln420_fu_1452_p2 = ((i_3_reg_722 == tmp_3265_reg_2024) ? 1'b1 : 1'b0);

assign icmp_ln426_fu_1555_p2 = ((indvars_iv_reg_687 == zext_ln422_fu_1531_p1) ? 1'b1 : 1'b0);

assign icmp_ln427_fu_1648_p2 = ((i_4_reg_733 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln429_fu_1685_p2 = ((zext_ln429_1_fu_1681_p1 < trunc_ln423_reg_2146) ? 1'b1 : 1'b0);

assign lshr_ln9_fu_1719_p4 = {{add_ln424_reg_2151[31:3]}};

assign lshr_ln_fu_982_p4 = {{sub_ln398_fu_977_p2[31:3]}};

assign m_offset_cast68_fu_945_p1 = m_offset;

assign pos_cast1_fu_830_p1 = pos_r;

assign r_7_i1_fu_1212_p9 = {{{{{{{{m_q0}, {m_q1}}, {reg_822}}, {reg_818}}, {reg_814}}, {reg_810}}, {reg_805}}, {reg_800}};

assign r_7_i2_fu_1621_p9 = {{{{{{{{m_q0}, {m_q1}}, {reg_822}}, {reg_818}}, {reg_814}}, {reg_810}}, {reg_805}}, {reg_800}};

assign r_7_i3_fu_1733_p9 = {{{{{{{{t_q1}, {t_q0}}, {reg_796}}, {reg_792}}, {reg_788}}, {reg_784}}, {reg_779}}, {reg_774}};

assign r_7_i4_fu_1421_p9 = {{{{{{{{m_q0}, {m_q1}}, {reg_822}}, {reg_818}}, {reg_814}}, {reg_810}}, {reg_805}}, {reg_800}};

assign r_7_i_fu_1008_p9 = {{{{{{{{t_q1}, {t_q0}}, {reg_796}}, {reg_792}}, {reg_788}}, {reg_784}}, {reg_779}}, {reg_774}};

assign s_address1 = grp_KeccakF1600_StatePer_1_fu_764_state_address1;

assign s_d1 = grp_KeccakF1600_StatePer_1_fu_764_state_d1;

assign shl_ln10_fu_1467_p3 = {{trunc_ln421_fu_1463_p1}, {3'd0}};

assign shl_ln11_fu_1301_p3 = {{i_2_reg_710}, {3'd0}};

assign shl_ln_fu_1107_p3 = {{trunc_ln404_fu_1103_p1}, {3'd0}};

assign sub_ln393_fu_873_p2 = ($signed(4'd8) - $signed(zext_ln393_fu_869_p1));

assign sub_ln398_fu_977_p2 = (add_ln396_reg_1829 - add_ln392_fu_973_p2);

assign sub_ln401_fu_1041_p2 = (32'd136 - ap_phi_mux_p_12_phi_fu_616_p4);

assign sub_ln406_fu_1239_p2 = (p_1_reg_623 - zext_ln401_reg_1907);

assign sub_ln423_fu_1539_p2 = (indvars_iv_reg_687 - zext_ln422_fu_1531_p1);

assign sum1_cast_fu_957_p1 = sum1_fu_952_p2;

assign sum1_fu_952_p2 = (m_offset_cast68_reg_1835 + empty_89_fu_948_p1);

assign t_addr_14_gep_fu_513_p3 = 64'd2;

assign t_addr_15_gep_fu_521_p3 = 64'd3;

assign t_addr_16_gep_fu_529_p3 = 64'd4;

assign t_addr_17_gep_fu_537_p3 = 64'd5;

assign t_addr_18_gep_fu_545_p3 = 64'd6;

assign t_addr_19_gep_fu_553_p3 = 64'd7;

assign tmp_3264_fu_1265_p4 = {{p_23_reg_658[31:3]}};

assign tmp_fu_1061_p4 = {{ap_phi_mux_p_12_phi_fu_616_p4[31:3]}};

assign trunc_ln391_fu_851_p1 = pos_r[2:0];

assign trunc_ln393_1_fu_907_p1 = umax_fu_895_p3[13:0];

assign trunc_ln393_fu_903_p1 = umax_fu_895_p3[31:0];

assign trunc_ln401_fu_1051_p1 = sub_ln401_fu_1041_p2[13:0];

assign trunc_ln404_fu_1103_p1 = i_1_reg_633[10:0];

assign trunc_ln411_fu_1254_p1 = p_38_rec_reg_698[13:0];

assign trunc_ln414_fu_1251_p1 = m_offset[11:0];

assign trunc_ln421_fu_1463_p1 = i_3_reg_722[3:0];

assign trunc_ln423_fu_1545_p1 = sub_ln423_fu_1539_p2[32:0];

assign trunc_ln429_fu_1677_p1 = i_5_reg_744[13:0];

assign trunc_ln432_fu_1716_p1 = sub_ln423_reg_2141[31:0];

assign umax_fu_895_p3 = ((empty_87_fu_889_p2[0:0] === 1'b1) ? xor_ln393_fu_864_p2 : xor_ln393_1_fu_883_p2);

assign xor_ln393_1_fu_883_p2 = (empty_86_fu_879_p1 ^ 64'd18446744073709551615);

assign xor_ln393_2_cast_fu_917_p2 = (trunc_ln393_1_fu_907_p1 ^ 14'd16383);

assign xor_ln393_2_fu_911_p2 = (umax_fu_895_p3 ^ 64'd18446744073709551615);

assign xor_ln393_fu_864_p2 = (mlen ^ 64'd18446744073709551615);

assign xor_ln398_fu_1028_p2 = (s_q0 ^ r_7_i_fu_1008_p9);

assign xor_ln404_fu_1232_p2 = (s_q0 ^ r_7_i1_fu_1212_p9);

assign xor_ln414_fu_1441_p2 = (s_q0 ^ r_7_i4_fu_1421_p9);

assign xor_ln421_fu_1641_p2 = (s_q0 ^ r_7_i2_fu_1621_p9);

assign xor_ln431_fu_1753_p2 = (s_q0 ^ r_7_i3_fu_1733_p9);

assign zext_ln32_19_fu_1157_p1 = add_ln32_13_fu_1152_p2;

assign zext_ln32_20_fu_1167_p1 = add_ln32_14_fu_1162_p2;

assign zext_ln32_21_fu_1177_p1 = add_ln32_15_fu_1172_p2;

assign zext_ln32_22_fu_1187_p1 = add_ln32_16_fu_1182_p2;

assign zext_ln32_23_fu_1197_p1 = add_ln32_17_fu_1192_p2;

assign zext_ln32_24_fu_1207_p1 = add_ln32_18_fu_1202_p2;

assign zext_ln32_25_fu_1505_p1 = add_ln32_19_fu_1499_p2;

assign zext_ln32_26_fu_1566_p1 = add_ln32_20_fu_1561_p2;

assign zext_ln32_27_fu_1576_p1 = add_ln32_21_fu_1571_p2;

assign zext_ln32_28_fu_1586_p1 = add_ln32_22_fu_1581_p2;

assign zext_ln32_29_fu_1596_p1 = add_ln32_23_fu_1591_p2;

assign zext_ln32_30_fu_1606_p1 = add_ln32_24_fu_1601_p2;

assign zext_ln32_31_fu_1616_p1 = add_ln32_25_fu_1611_p2;

assign zext_ln32_32_fu_1339_p1 = add_ln32_26_fu_1333_p2;

assign zext_ln32_33_fu_1361_p1 = add_ln32_27_fu_1356_p2;

assign zext_ln32_34_fu_1371_p1 = add_ln32_28_fu_1366_p2;

assign zext_ln32_35_fu_1381_p1 = add_ln32_29_fu_1376_p2;

assign zext_ln32_36_fu_1391_p1 = add_ln32_30_fu_1386_p2;

assign zext_ln32_37_fu_1401_p1 = add_ln32_31_fu_1396_p2;

assign zext_ln32_38_fu_1411_p1 = add_ln32_32_fu_1406_p2;

assign zext_ln32_fu_1137_p1 = add_ln32_fu_1131_p2;

assign zext_ln389_fu_840_p1 = phi_ln389_reg_569;

assign zext_ln391_fu_854_p1 = trunc_ln391_fu_851_p1;

assign zext_ln393_fu_869_p1 = trunc_ln391_fu_851_p1;

assign zext_ln394_fu_1003_p1 = i_0_reg_591;

assign zext_ln398_fu_992_p1 = lshr_ln_fu_982_p4;

assign zext_ln401_fu_1047_p1 = sub_ln401_fu_1041_p2;

assign zext_ln402_1_fu_1071_p1 = tmp_fu_1061_p4;

assign zext_ln402_fu_1088_p1 = i_1_reg_633;

assign zext_ln404_1_fu_1147_p1 = add_ln404_fu_1142_p2;

assign zext_ln404_2_fu_1126_p1 = add_ln404_2_fu_1120_p2;

assign zext_ln404_fu_1085_p1 = m_offset;

assign zext_ln414_1_fu_1416_p1 = i_2_reg_710;

assign zext_ln414_2_fu_1318_p1 = add_ln414_1_fu_1313_p2;

assign zext_ln414_3_fu_1328_p1 = add_ln414_2_fu_1322_p2;

assign zext_ln414_fu_1309_p1 = shl_ln11_fu_1301_p3;

assign zext_ln420_1_fu_1275_p1 = tmp_3264_fu_1265_p4;

assign zext_ln420_fu_1448_p1 = i_3_reg_722;

assign zext_ln421_1_fu_1515_p1 = add_ln421_1_fu_1510_p2;

assign zext_ln421_3_fu_1484_p1 = add_ln421_2_fu_1479_p2;

assign zext_ln421_4_fu_1494_p1 = add_ln421_3_fu_1488_p2;

assign zext_ln421_fu_1475_p1 = shl_ln10_fu_1467_p3;

assign zext_ln422_1_fu_1527_p1 = and_ln_fu_1520_p3;

assign zext_ln422_fu_1531_p1 = and_ln_fu_1520_p3;

assign zext_ln423_fu_1535_p1 = and_ln_fu_1520_p3;

assign zext_ln428_fu_1660_p1 = i_4_reg_733;

assign zext_ln429_1_fu_1681_p1 = i_5_reg_744;

assign zext_ln429_fu_1673_p1 = i_5_reg_744;

assign zext_ln430_1_fu_1711_p1 = add_ln430_3_fu_1706_p2;

assign zext_ln430_fu_1665_p1 = m_offset;

assign zext_ln431_fu_1728_p1 = lshr_ln9_fu_1719_p4;

always @ (posedge ap_clk) begin
    pos_cast1_reg_1785[31:7] <= 25'b0000000000000000000000000;
    zext_ln391_reg_1799[31:3] <= 29'b00000000000000000000000000000;
    m_offset_cast68_reg_1835[13] <= 1'b0;
    zext_ln401_reg_1907[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln402_1_reg_1921[29] <= 1'b0;
    zext_ln404_reg_1931[13] <= 1'b0;
    zext_ln420_1_reg_2019[29] <= 1'b0;
    zext_ln423_reg_2136[2:0] <= 3'b000;
    zext_ln423_reg_2136[13:8] <= 6'b000000;
    zext_ln429_reg_2205[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //keccak_absorb_2
