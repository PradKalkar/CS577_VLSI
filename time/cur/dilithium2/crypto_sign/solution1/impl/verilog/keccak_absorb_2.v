// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module keccak_absorb_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        s_address0,
        s_ce0,
        s_we0,
        s_d0,
        s_q0,
        s_address1,
        s_ce1,
        s_we1,
        s_d1,
        s_q1,
        pos_r,
        m_address0,
        m_ce0,
        m_q0,
        m_address1,
        m_ce1,
        m_q1,
        m_offset,
        mlen,
        ap_return
);

parameter    ap_ST_fsm_state1 = 35'd1;
parameter    ap_ST_fsm_state2 = 35'd2;
parameter    ap_ST_fsm_state3 = 35'd4;
parameter    ap_ST_fsm_state4 = 35'd8;
parameter    ap_ST_fsm_state5 = 35'd16;
parameter    ap_ST_fsm_state6 = 35'd32;
parameter    ap_ST_fsm_state7 = 35'd64;
parameter    ap_ST_fsm_state8 = 35'd128;
parameter    ap_ST_fsm_pp0_stage0 = 35'd256;
parameter    ap_ST_fsm_pp0_stage1 = 35'd512;
parameter    ap_ST_fsm_pp0_stage2 = 35'd1024;
parameter    ap_ST_fsm_pp0_stage3 = 35'd2048;
parameter    ap_ST_fsm_state14 = 35'd4096;
parameter    ap_ST_fsm_state15 = 35'd8192;
parameter    ap_ST_fsm_state16 = 35'd16384;
parameter    ap_ST_fsm_pp1_stage0 = 35'd32768;
parameter    ap_ST_fsm_pp1_stage1 = 35'd65536;
parameter    ap_ST_fsm_pp1_stage2 = 35'd131072;
parameter    ap_ST_fsm_pp1_stage3 = 35'd262144;
parameter    ap_ST_fsm_state22 = 35'd524288;
parameter    ap_ST_fsm_state23 = 35'd1048576;
parameter    ap_ST_fsm_pp2_stage0 = 35'd2097152;
parameter    ap_ST_fsm_pp2_stage1 = 35'd4194304;
parameter    ap_ST_fsm_pp2_stage2 = 35'd8388608;
parameter    ap_ST_fsm_pp2_stage3 = 35'd16777216;
parameter    ap_ST_fsm_state29 = 35'd33554432;
parameter    ap_ST_fsm_state30 = 35'd67108864;
parameter    ap_ST_fsm_state31 = 35'd134217728;
parameter    ap_ST_fsm_state32 = 35'd268435456;
parameter    ap_ST_fsm_pp3_stage0 = 35'd536870912;
parameter    ap_ST_fsm_state35 = 35'd1073741824;
parameter    ap_ST_fsm_state36 = 35'd2147483648;
parameter    ap_ST_fsm_state37 = 35'd4294967296;
parameter    ap_ST_fsm_state38 = 35'd8589934592;
parameter    ap_ST_fsm_state39 = 35'd17179869184;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] s_address0;
output   s_ce0;
output   s_we0;
output  [63:0] s_d0;
input  [63:0] s_q0;
output  [4:0] s_address1;
output   s_ce1;
output   s_we1;
output  [63:0] s_d1;
input  [63:0] s_q1;
input  [6:0] pos_r;
output  [12:0] m_address0;
output   m_ce0;
input  [7:0] m_q0;
output  [12:0] m_address1;
output   m_ce1;
input  [7:0] m_q1;
input  [12:0] m_offset;
input  [63:0] mlen;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] s_address0;
reg s_ce0;
reg s_we0;
reg[63:0] s_d0;
reg[4:0] s_address1;
reg s_ce1;
reg s_we1;
reg[63:0] s_d1;
reg[12:0] m_address0;
reg m_ce0;
reg[12:0] m_address1;
reg m_ce1;
reg[31:0] ap_return;

(* fsm_encoding = "none" *) reg   [34:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [28:0] i_1_reg_643;
reg   [4:0] i_2_reg_720;
reg   [4:0] i_3_reg_731;
reg   [31:0] i_5_reg_742;
wire   [7:0] t_q0;
reg   [7:0] reg_773;
wire    ap_CS_fsm_state5;
wire   [7:0] t_q1;
wire    ap_CS_fsm_state36;
reg   [7:0] reg_778;
reg   [7:0] reg_783;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state37;
reg   [7:0] reg_788;
reg   [7:0] reg_793;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state38;
reg   [7:0] reg_798;
reg   [7:0] reg_803;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state10_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln402_reg_1928;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state18_pp1_stage1_iter0;
wire    ap_block_pp1_stage1_11001;
reg   [0:0] icmp_ln413_reg_2024;
wire    ap_CS_fsm_pp2_stage1;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state25_pp2_stage1_iter0;
wire    ap_block_pp2_stage1_11001;
reg   [0:0] icmp_ln422_reg_2099;
reg   [7:0] reg_808;
reg   [7:0] reg_813;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state11_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_state19_pp1_stage2_iter0;
wire    ap_block_pp1_stage2_11001;
wire    ap_CS_fsm_pp2_stage2;
wire    ap_block_state26_pp2_stage2_iter0;
wire    ap_block_pp2_stage2_11001;
reg   [7:0] reg_817;
reg   [63:0] reg_821;
reg   [7:0] reg_826;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state12_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp1_stage3;
wire    ap_block_state20_pp1_stage3_iter0;
wire    ap_block_pp1_stage3_11001;
wire    ap_CS_fsm_pp2_stage3;
wire    ap_block_state27_pp2_stage3_iter0;
wire    ap_block_pp2_stage3_11001;
reg   [7:0] reg_830;
wire   [13:0] grp_fu_769_p2;
reg   [13:0] reg_834;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln412_fu_1267_p2;
wire   [31:0] pos_cast1_fu_838_p1;
reg   [31:0] pos_cast1_reg_1777;
wire   [2:0] add_ln389_fu_842_p2;
wire    ap_CS_fsm_state2;
wire   [31:0] zext_ln391_fu_862_p1;
reg   [31:0] zext_ln391_reg_1791;
wire   [0:0] icmp_ln389_fu_853_p2;
wire   [0:0] icmp_ln391_fu_866_p2;
reg   [0:0] icmp_ln391_reg_1797;
wire   [63:0] xor_ln393_2_fu_919_p2;
reg   [63:0] xor_ln393_2_reg_1801;
wire   [13:0] xor_ln393_2_cast_fu_925_p2;
reg   [13:0] xor_ln393_2_cast_reg_1806;
wire   [31:0] empty_93_fu_931_p2;
reg   [31:0] empty_93_reg_1811;
wire   [63:0] add_ln395_1_fu_943_p2;
reg   [63:0] add_ln395_1_reg_1816;
wire   [31:0] add_ln396_fu_948_p2;
reg   [31:0] add_ln396_reg_1821;
wire   [13:0] m_offset_cast68_fu_953_p1;
reg   [13:0] m_offset_cast68_reg_1827;
wire    ap_CS_fsm_state3;
wire   [63:0] add_ln394_fu_975_p2;
reg   [63:0] add_ln394_reg_1840;
wire   [0:0] exitcond_fu_970_p2;
reg   [4:0] s_addr_reg_1855;
wire   [31:0] i_fu_1005_p2;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln401_fu_1043_p2;
reg   [0:0] icmp_ln401_reg_1895;
wire    ap_CS_fsm_state8;
wire   [63:0] zext_ln401_fu_1055_p1;
reg   [63:0] zext_ln401_reg_1899;
wire   [13:0] trunc_ln401_fu_1059_p1;
reg   [13:0] trunc_ln401_reg_1904;
wire   [0:0] icmp_ln401_1_fu_1063_p2;
reg   [0:0] icmp_ln401_1_reg_1909;
wire   [29:0] zext_ln402_1_fu_1079_p1;
reg   [29:0] zext_ln402_1_reg_1913;
reg   [28:0] tmp_s_reg_1918;
wire   [13:0] zext_ln404_fu_1093_p1;
reg   [13:0] zext_ln404_reg_1923;
wire   [0:0] icmp_ln402_fu_1096_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state9_pp0_stage0_iter0;
wire    ap_block_state13_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [28:0] i_30_fu_1101_p2;
reg   [28:0] i_30_reg_1932;
wire   [13:0] add_ln404_2_fu_1128_p2;
reg   [13:0] add_ln404_2_reg_1937;
reg   [4:0] s_addr_1_reg_1957;
wire   [13:0] add_ln406_fu_1253_p2;
reg   [13:0] add_ln406_reg_1992;
wire    ap_CS_fsm_state15;
wire    grp_KeccakF1600_StatePer_1_fu_763_ap_ready;
wire    grp_KeccakF1600_StatePer_1_fu_763_ap_done;
reg    ap_predicate_op204_call_state15;
reg    ap_block_state15_on_subcall_done;
wire   [11:0] trunc_ln415_fu_1259_p1;
reg   [11:0] trunc_ln415_reg_1998;
wire   [13:0] trunc_ln412_fu_1262_p1;
reg   [13:0] trunc_ln412_reg_2004;
wire   [29:0] zext_ln422_1_fu_1283_p1;
reg   [29:0] zext_ln422_1_reg_2013;
reg   [4:0] tmp_3265_reg_2018;
wire   [0:0] icmp_ln413_fu_1297_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state17_pp1_stage0_iter0;
wire    ap_block_state21_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [4:0] i_31_fu_1303_p2;
reg   [4:0] i_31_reg_2028;
wire   [13:0] add_ln415_2_fu_1330_p2;
reg   [13:0] add_ln415_2_reg_2033;
reg   [4:0] s_addr_3_reg_2053;
wire   [63:0] add_ln417_fu_1444_p2;
reg   [63:0] add_ln417_reg_2089;
wire    ap_CS_fsm_state22;
wire   [63:0] add_ln420_fu_1450_p2;
reg   [63:0] add_ln420_reg_2094;
wire   [0:0] icmp_ln422_fu_1456_p2;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state24_pp2_stage0_iter0;
wire    ap_block_state28_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [4:0] add_ln422_fu_1461_p2;
reg   [4:0] add_ln422_reg_2103;
wire   [13:0] add_ln424_3_fu_1496_p2;
reg   [13:0] add_ln424_3_reg_2108;
reg   [4:0] s_addr_2_reg_2128;
wire   [13:0] zext_ln427_fu_1630_p1;
reg   [13:0] zext_ln427_reg_2163;
wire    ap_CS_fsm_state29;
wire   [63:0] sub_ln427_fu_1634_p2;
reg   [63:0] sub_ln427_reg_2168;
wire   [32:0] trunc_ln427_fu_1640_p1;
reg   [32:0] trunc_ln427_reg_2173;
wire   [31:0] add_ln428_fu_1644_p2;
reg   [31:0] add_ln428_reg_2178;
wire   [0:0] icmp_ln430_fu_1650_p2;
reg   [0:0] icmp_ln430_reg_2185;
wire   [2:0] t_addr_10_gep_fu_490_p3;
wire   [2:0] t_addr_11_gep_fu_498_p3;
wire   [13:0] add_ln437_fu_1659_p2;
reg   [13:0] add_ln437_reg_2199;
wire   [2:0] t_addr_12_gep_fu_507_p3;
wire    ap_CS_fsm_state30;
wire   [2:0] t_addr_13_gep_fu_515_p3;
wire   [2:0] t_addr_14_gep_fu_523_p3;
wire    ap_CS_fsm_state31;
wire   [2:0] t_addr_15_gep_fu_531_p3;
wire   [2:0] t_addr_16_gep_fu_539_p3;
wire    ap_CS_fsm_state32;
wire   [2:0] t_addr_17_gep_fu_547_p3;
wire   [0:0] icmp_ln435_fu_1668_p2;
reg   [0:0] icmp_ln435_reg_2234;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state33_pp3_stage0_iter0;
wire    ap_block_state34_pp3_stage0_iter1;
wire    ap_block_pp3_stage0_11001;
wire   [31:0] i_32_fu_1673_p2;
reg   [31:0] i_32_reg_2238;
reg    ap_enable_reg_pp3_iter0;
wire   [31:0] trunc_ln440_fu_1708_p1;
reg   [31:0] trunc_ln440_reg_2248;
wire    ap_CS_fsm_state35;
reg   [4:0] s_addr_4_reg_2253;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state17;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage3_subdone;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state24;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage3_subdone;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state33;
reg    ap_enable_reg_pp3_iter1;
reg   [2:0] t_address0;
reg    t_ce0;
reg    t_we0;
reg   [7:0] t_d0;
reg   [2:0] t_address1;
reg    t_ce1;
reg    t_we1;
reg   [7:0] t_d1;
wire    grp_KeccakF1600_StatePer_1_fu_763_ap_start;
wire    grp_KeccakF1600_StatePer_1_fu_763_ap_idle;
wire   [4:0] grp_KeccakF1600_StatePer_1_fu_763_state_address0;
wire    grp_KeccakF1600_StatePer_1_fu_763_state_ce0;
wire    grp_KeccakF1600_StatePer_1_fu_763_state_we0;
wire   [63:0] grp_KeccakF1600_StatePer_1_fu_763_state_d0;
wire   [4:0] grp_KeccakF1600_StatePer_1_fu_763_state_address1;
wire    grp_KeccakF1600_StatePer_1_fu_763_state_ce1;
wire    grp_KeccakF1600_StatePer_1_fu_763_state_we1;
wire   [63:0] grp_KeccakF1600_StatePer_1_fu_763_state_d1;
reg   [2:0] phi_ln389_reg_579;
reg   [63:0] p_05_rec_reg_590;
reg   [31:0] i_0_reg_601;
reg   [13:0] p_1628_reg_611;
reg   [31:0] ap_phi_mux_p_12_phi_fu_626_p4;
reg   [31:0] p_12_reg_623;
reg   [63:0] ap_phi_mux_p_1_phi_fu_636_p4;
reg   [63:0] p_1_reg_633;
reg   [28:0] ap_phi_mux_i_1_phi_fu_647_p4;
wire    ap_block_pp0_stage0;
reg   [13:0] ap_phi_mux_p_2730_phi_fu_658_p6;
reg   [13:0] p_2730_reg_654;
reg   [31:0] p_23_reg_668;
wire   [63:0] sub_ln407_fu_1247_p2;
reg   [63:0] ap_phi_mux_p_2_phi_fu_686_p6;
reg   [63:0] p_2_reg_683;
reg   [63:0] indvars_iv_reg_697;
wire    ap_CS_fsm_state23;
reg   [63:0] p_38_rec_reg_708;
reg   [4:0] ap_phi_mux_i_2_phi_fu_724_p4;
wire    ap_block_pp1_stage0;
reg   [4:0] ap_phi_mux_i_3_phi_fu_735_p4;
wire    ap_block_pp2_stage0;
reg   [31:0] ap_phi_mux_i_5_phi_fu_746_p4;
wire    ap_block_pp3_stage0;
wire   [31:0] add_ln440_fu_1752_p2;
reg   [31:0] ap_phi_mux_p_34_phi_fu_757_p4;
reg   [31:0] p_34_reg_754;
wire    ap_CS_fsm_state39;
reg    grp_KeccakF1600_StatePer_1_fu_763_ap_start_reg;
wire    ap_CS_fsm_state14;
wire   [63:0] zext_ln389_fu_848_p1;
wire   [63:0] sum1_cast_fu_965_p1;
wire   [63:0] zext_ln398_fu_1000_p1;
wire   [63:0] zext_ln394_fu_1011_p1;
wire   [63:0] zext_ln404_2_fu_1134_p1;
wire   [63:0] zext_ln32_fu_1145_p1;
wire   [63:0] zext_ln404_1_fu_1155_p1;
wire   [63:0] zext_ln32_19_fu_1165_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln32_20_fu_1175_p1;
wire   [63:0] zext_ln32_21_fu_1185_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln32_22_fu_1195_p1;
wire   [63:0] zext_ln32_23_fu_1205_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln32_24_fu_1215_p1;
wire   [63:0] zext_ln415_3_fu_1336_p1;
wire   [63:0] zext_ln32_32_fu_1347_p1;
wire   [63:0] zext_ln415_1_fu_1352_p1;
wire   [63:0] zext_ln32_33_fu_1362_p1;
wire    ap_block_pp1_stage1;
wire   [63:0] zext_ln32_34_fu_1372_p1;
wire   [63:0] zext_ln32_35_fu_1382_p1;
wire    ap_block_pp1_stage2;
wire   [63:0] zext_ln32_36_fu_1392_p1;
wire   [63:0] zext_ln32_37_fu_1402_p1;
wire    ap_block_pp1_stage3;
wire   [63:0] zext_ln32_38_fu_1412_p1;
wire   [63:0] zext_ln424_4_fu_1502_p1;
wire   [63:0] zext_ln32_25_fu_1513_p1;
wire   [63:0] zext_ln424_1_fu_1523_p1;
wire   [63:0] zext_ln32_26_fu_1533_p1;
wire    ap_block_pp2_stage1;
wire   [63:0] zext_ln32_27_fu_1543_p1;
wire   [63:0] zext_ln32_28_fu_1553_p1;
wire    ap_block_pp2_stage2;
wire   [63:0] zext_ln32_29_fu_1563_p1;
wire   [63:0] zext_ln32_30_fu_1573_p1;
wire    ap_block_pp2_stage3;
wire   [63:0] zext_ln32_31_fu_1583_p1;
wire   [63:0] zext_ln437_1_fu_1698_p1;
wire   [63:0] zext_ln435_fu_1703_p1;
wire   [63:0] zext_ln439_fu_1720_p1;
wire   [63:0] xor_ln398_fu_1036_p2;
wire   [63:0] xor_ln404_fu_1240_p2;
wire   [63:0] xor_ln415_fu_1437_p2;
wire   [63:0] xor_ln424_fu_1608_p2;
wire   [63:0] xor_ln439_fu_1745_p2;
wire   [2:0] trunc_ln391_fu_859_p1;
wire   [3:0] zext_ln393_fu_877_p1;
wire   [3:0] sub_ln393_fu_881_p2;
wire   [63:0] empty_91_fu_887_p1;
wire   [63:0] xor_ln393_fu_872_p2;
wire   [63:0] xor_ln393_1_fu_891_p2;
wire   [0:0] empty_92_fu_897_p2;
wire   [63:0] umax_fu_903_p3;
wire   [13:0] trunc_ln393_1_fu_915_p1;
wire   [31:0] trunc_ln393_fu_911_p1;
wire   [63:0] add_ln395_fu_937_p2;
wire   [13:0] empty_94_fu_956_p1;
wire   [13:0] sum1_fu_960_p2;
wire   [31:0] add_ln392_fu_981_p2;
wire   [31:0] sub_ln398_fu_985_p2;
wire   [28:0] lshr_ln_fu_990_p4;
wire   [63:0] r_7_i_fu_1016_p9;
wire   [31:0] sub_ln401_fu_1049_p2;
wire   [28:0] tmp_fu_1069_p4;
wire   [10:0] trunc_ln404_fu_1111_p1;
wire   [13:0] shl_ln_fu_1115_p3;
wire   [13:0] add_ln404_1_fu_1123_p2;
wire   [13:0] add_ln32_fu_1139_p2;
wire   [29:0] zext_ln402_fu_1107_p1;
wire   [29:0] add_ln404_fu_1150_p2;
wire   [13:0] add_ln32_13_fu_1160_p2;
wire   [13:0] add_ln32_14_fu_1170_p2;
wire   [13:0] add_ln32_15_fu_1180_p2;
wire   [13:0] add_ln32_16_fu_1190_p2;
wire   [13:0] add_ln32_17_fu_1200_p2;
wire   [13:0] add_ln32_18_fu_1210_p2;
wire   [63:0] r_7_i1_fu_1220_p9;
wire   [28:0] tmp_3264_fu_1273_p4;
wire   [7:0] shl_ln8_fu_1309_p3;
wire   [11:0] zext_ln415_fu_1317_p1;
wire   [11:0] add_ln415_1_fu_1321_p2;
wire   [13:0] zext_ln415_2_fu_1326_p1;
wire   [13:0] add_ln32_26_fu_1341_p2;
wire   [13:0] add_ln32_27_fu_1357_p2;
wire   [13:0] add_ln32_28_fu_1367_p2;
wire   [13:0] add_ln32_29_fu_1377_p2;
wire   [13:0] add_ln32_30_fu_1387_p2;
wire   [13:0] add_ln32_31_fu_1397_p2;
wire   [13:0] add_ln32_32_fu_1407_p2;
wire   [63:0] r_7_i4_fu_1417_p9;
wire   [3:0] trunc_ln424_fu_1471_p1;
wire   [6:0] shl_ln7_fu_1475_p3;
wire   [11:0] zext_ln424_fu_1483_p1;
wire   [11:0] add_ln424_2_fu_1487_p2;
wire   [13:0] zext_ln424_3_fu_1492_p1;
wire   [13:0] add_ln32_19_fu_1507_p2;
wire   [29:0] zext_ln422_fu_1467_p1;
wire   [29:0] add_ln424_1_fu_1518_p2;
wire   [13:0] add_ln32_20_fu_1528_p2;
wire   [13:0] add_ln32_21_fu_1538_p2;
wire   [13:0] add_ln32_22_fu_1548_p2;
wire   [13:0] add_ln32_23_fu_1558_p2;
wire   [13:0] add_ln32_24_fu_1568_p2;
wire   [13:0] add_ln32_25_fu_1578_p2;
wire   [63:0] r_7_i2_fu_1588_p9;
wire   [7:0] and_ln_fu_1615_p3;
wire   [63:0] zext_ln426_fu_1626_p1;
wire   [31:0] zext_ln426_1_fu_1622_p1;
wire   [13:0] zext_ln437_fu_1656_p1;
wire   [32:0] zext_ln435_1_fu_1664_p1;
wire   [13:0] trunc_ln435_fu_1679_p1;
wire   [13:0] add_ln437_1_fu_1683_p2;
wire   [13:0] add_ln437_2_fu_1688_p2;
wire   [13:0] add_ln437_3_fu_1693_p2;
wire   [28:0] lshr_ln9_fu_1711_p4;
wire   [63:0] r_7_i3_fu_1725_p9;
reg   [31:0] ap_return_preg;
reg   [34:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp1_stage1_subdone;
wire    ap_block_pp1_stage2_subdone;
wire    ap_block_pp2_stage1_subdone;
wire    ap_block_pp2_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;

// power-on initialization
initial begin
#0 ap_CS_fsm = 35'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 grp_KeccakF1600_StatePer_1_fu_763_ap_start_reg = 1'b0;
#0 ap_return_preg = 32'd0;
end

keccak_absorb_2_t #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
t_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(t_address0),
    .ce0(t_ce0),
    .we0(t_we0),
    .d0(t_d0),
    .q0(t_q0),
    .address1(t_address1),
    .ce1(t_ce1),
    .we1(t_we1),
    .d1(t_d1),
    .q1(t_q1)
);

KeccakF1600_StatePer_1 grp_KeccakF1600_StatePer_1_fu_763(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_KeccakF1600_StatePer_1_fu_763_ap_start),
    .ap_done(grp_KeccakF1600_StatePer_1_fu_763_ap_done),
    .ap_idle(grp_KeccakF1600_StatePer_1_fu_763_ap_idle),
    .ap_ready(grp_KeccakF1600_StatePer_1_fu_763_ap_ready),
    .state_address0(grp_KeccakF1600_StatePer_1_fu_763_state_address0),
    .state_ce0(grp_KeccakF1600_StatePer_1_fu_763_state_ce0),
    .state_we0(grp_KeccakF1600_StatePer_1_fu_763_state_we0),
    .state_d0(grp_KeccakF1600_StatePer_1_fu_763_state_d0),
    .state_q0(s_q0),
    .state_address1(grp_KeccakF1600_StatePer_1_fu_763_state_address1),
    .state_ce1(grp_KeccakF1600_StatePer_1_fu_763_state_ce1),
    .state_we1(grp_KeccakF1600_StatePer_1_fu_763_state_we1),
    .state_d1(grp_KeccakF1600_StatePer_1_fu_763_state_d1),
    .state_q1(s_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln401_1_fu_1063_p2 == 1'd0) & (icmp_ln401_fu_1043_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln401_1_fu_1063_p2 == 1'd0) & (icmp_ln401_fu_1043_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state17) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln412_fu_1267_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage3_subdone) & (1'b1 == ap_CS_fsm_pp1_stage3)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln412_fu_1267_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state24) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((icmp_ln412_fu_1267_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage3_subdone) & (1'b1 == ap_CS_fsm_pp2_stage3)))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((icmp_ln412_fu_1267_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state33) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state32)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state33))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state33);
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if ((1'b1 == ap_CS_fsm_state32)) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state39)) begin
            ap_return_preg <= ap_phi_mux_p_34_phi_fu_757_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_KeccakF1600_StatePer_1_fu_763_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state22))) begin
            grp_KeccakF1600_StatePer_1_fu_763_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakF1600_StatePer_1_fu_763_ap_ready == 1'b1)) begin
            grp_KeccakF1600_StatePer_1_fu_763_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_0_reg_601 <= i_fu_1005_p2;
    end else if (((icmp_ln389_fu_853_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln391_fu_866_p2 == 1'd0))) begin
        i_0_reg_601 <= zext_ln391_fu_862_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln401_1_fu_1063_p2 == 1'd0) & (icmp_ln401_fu_1043_p2 == 1'd0))) begin
        i_1_reg_643 <= 29'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln402_reg_1928 == 1'd0))) begin
        i_1_reg_643 <= i_30_reg_1932;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln412_fu_1267_p2 == 1'd0))) begin
        i_2_reg_720 <= 5'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln413_reg_2024 == 1'd0))) begin
        i_2_reg_720 <= i_31_reg_2028;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln422_reg_2099 == 1'd0))) begin
        i_3_reg_731 <= add_ln422_reg_2103;
    end else if (((icmp_ln412_fu_1267_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        i_3_reg_731 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        i_5_reg_742 <= 32'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln435_reg_2234 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_5_reg_742 <= i_32_reg_2238;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15))) begin
        indvars_iv_reg_697 <= ap_phi_mux_p_2_phi_fu_686_p6;
    end else if (((grp_KeccakF1600_StatePer_1_fu_763_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        indvars_iv_reg_697 <= add_ln420_reg_2094;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_05_rec_reg_590 <= add_ln394_reg_1840;
    end else if (((icmp_ln389_fu_853_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln391_fu_866_p2 == 1'd0))) begin
        p_05_rec_reg_590 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln391_fu_866_p2 == 1'd1) & (icmp_ln389_fu_853_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_12_reg_623 <= pos_cast1_reg_1777;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln391_reg_1797 == 1'd0))) begin
        p_12_reg_623 <= add_ln396_reg_1821;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln391_fu_866_p2 == 1'd1) & (icmp_ln389_fu_853_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_1628_reg_611 <= 14'd0;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln391_reg_1797 == 1'd0))) begin
        p_1628_reg_611 <= xor_ln393_2_cast_reg_1806;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln391_fu_866_p2 == 1'd1) & (icmp_ln389_fu_853_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_1_reg_633 <= mlen;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln391_reg_1797 == 1'd0))) begin
        p_1_reg_633 <= add_ln395_1_reg_1816;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln401_fu_1043_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((icmp_ln401_1_fu_1063_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8) & (icmp_ln401_fu_1043_p2 == 1'd0)))) begin
        p_23_reg_668 <= ap_phi_mux_p_12_phi_fu_626_p4;
    end else if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15) & (icmp_ln401_1_reg_1909 == 1'd0) & (icmp_ln401_reg_1895 == 1'd0))) begin
        p_23_reg_668 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln401_fu_1043_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((icmp_ln401_1_fu_1063_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8) & (icmp_ln401_fu_1043_p2 == 1'd0)))) begin
        p_2730_reg_654 <= 14'd0;
    end else if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15) & (icmp_ln401_1_reg_1909 == 1'd0) & (icmp_ln401_reg_1895 == 1'd0))) begin
        p_2730_reg_654 <= trunc_ln401_reg_1904;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln401_fu_1043_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((icmp_ln401_1_fu_1063_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8) & (icmp_ln401_fu_1043_p2 == 1'd0)))) begin
        p_2_reg_683 <= ap_phi_mux_p_1_phi_fu_636_p4;
    end else if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15) & (icmp_ln401_1_reg_1909 == 1'd0) & (icmp_ln401_reg_1895 == 1'd0))) begin
        p_2_reg_683 <= sub_ln407_fu_1247_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln430_fu_1650_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        p_34_reg_754 <= add_ln428_fu_1644_p2;
    end else if (((1'b1 == ap_CS_fsm_state39) & (icmp_ln430_reg_2185 == 1'd0))) begin
        p_34_reg_754 <= add_ln440_fu_1752_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15))) begin
        p_38_rec_reg_708 <= 64'd0;
    end else if (((grp_KeccakF1600_StatePer_1_fu_763_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        p_38_rec_reg_708 <= add_ln417_reg_2089;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln389_fu_853_p2 == 1'd0))) begin
        phi_ln389_reg_579 <= add_ln389_fu_842_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_ln389_reg_579 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        reg_773 <= t_q1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        reg_773 <= t_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        reg_778 <= t_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        reg_778 <= t_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        reg_783 <= t_q1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_783 <= t_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        reg_788 <= t_q0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_788 <= t_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        reg_793 <= t_q1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        reg_793 <= t_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        reg_798 <= t_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        reg_798 <= t_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001) & (icmp_ln422_reg_2099 == 1'd0)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln413_reg_2024 == 1'd0)))) begin
        reg_803 <= m_q1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln402_reg_1928 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        reg_803 <= m_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001) & (icmp_ln422_reg_2099 == 1'd0)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln413_reg_2024 == 1'd0)))) begin
        reg_808 <= m_q0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln402_reg_1928 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        reg_808 <= m_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln422_reg_2099 == 1'd0))) begin
        reg_821 <= s_q1;
    end else if ((((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln413_reg_2024 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln402_reg_1928 == 1'd0)))) begin
        reg_821 <= s_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln394_reg_1840 <= add_ln394_fu_975_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln389_fu_853_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln391_fu_866_p2 == 1'd0))) begin
        add_ln395_1_reg_1816 <= add_ln395_1_fu_943_p2;
        add_ln396_reg_1821 <= add_ln396_fu_948_p2;
        empty_93_reg_1811 <= empty_93_fu_931_p2;
        m_offset_cast68_reg_1827[12 : 0] <= m_offset_cast68_fu_953_p1[12 : 0];
        xor_ln393_2_cast_reg_1806 <= xor_ln393_2_cast_fu_925_p2;
        xor_ln393_2_reg_1801 <= xor_ln393_2_fu_919_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln402_fu_1096_p2 == 1'd0))) begin
        add_ln404_2_reg_1937 <= add_ln404_2_fu_1128_p2;
        s_addr_1_reg_1957 <= zext_ln404_1_fu_1155_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15))) begin
        add_ln406_reg_1992 <= add_ln406_fu_1253_p2;
        trunc_ln415_reg_1998 <= trunc_ln415_fu_1259_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln413_fu_1297_p2 == 1'd0))) begin
        add_ln415_2_reg_2033 <= add_ln415_2_fu_1330_p2;
        s_addr_3_reg_2053 <= zext_ln415_1_fu_1352_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        add_ln417_reg_2089 <= add_ln417_fu_1444_p2;
        add_ln420_reg_2094 <= add_ln420_fu_1450_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        add_ln422_reg_2103 <= add_ln422_fu_1461_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln422_fu_1456_p2 == 1'd0))) begin
        add_ln424_3_reg_2108 <= add_ln424_3_fu_1496_p2;
        s_addr_2_reg_2128 <= zext_ln424_1_fu_1523_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        add_ln428_reg_2178 <= add_ln428_fu_1644_p2;
        icmp_ln430_reg_2185 <= icmp_ln430_fu_1650_p2;
        sub_ln427_reg_2168 <= sub_ln427_fu_1634_p2;
        trunc_ln427_reg_2173 <= trunc_ln427_fu_1640_p1;
        zext_ln427_reg_2163[7 : 3] <= zext_ln427_fu_1630_p1[7 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln430_fu_1650_p2 == 1'd0))) begin
        add_ln437_reg_2199 <= add_ln437_fu_1659_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        i_30_reg_1932 <= i_30_fu_1101_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        i_31_reg_2028 <= i_31_fu_1303_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_32_reg_2238 <= i_32_fu_1673_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln389_fu_853_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln391_reg_1797 <= icmp_ln391_fu_866_p2;
        zext_ln391_reg_1791[2 : 0] <= zext_ln391_fu_862_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln401_fu_1043_p2 == 1'd0))) begin
        icmp_ln401_1_reg_1909 <= icmp_ln401_1_fu_1063_p2;
        trunc_ln401_reg_1904 <= trunc_ln401_fu_1059_p1;
        zext_ln401_reg_1899[31 : 0] <= zext_ln401_fu_1055_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        icmp_ln401_reg_1895 <= icmp_ln401_fu_1043_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln402_reg_1928 <= icmp_ln402_fu_1096_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln413_reg_2024 <= icmp_ln413_fu_1297_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln422_reg_2099 <= icmp_ln422_fu_1456_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln435_reg_2234 <= icmp_ln435_fu_1668_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        pos_cast1_reg_1777[6 : 0] <= pos_cast1_fu_838_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln422_reg_2099 == 1'd0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln413_reg_2024 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln402_reg_1928 == 1'd0)))) begin
        reg_813 <= m_q1;
        reg_817 <= m_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln422_reg_2099 == 1'd0)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln413_reg_2024 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln402_reg_1928 == 1'd0)))) begin
        reg_826 <= m_q1;
        reg_830 <= m_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln412_fu_1267_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln412_fu_1267_p2 == 1'd0)))) begin
        reg_834 <= grp_fu_769_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        s_addr_4_reg_2253 <= zext_ln439_fu_1720_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_970_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        s_addr_reg_1855 <= zext_ln398_fu_1000_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln412_fu_1267_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        tmp_3265_reg_2018 <= {{indvars_iv_reg_697[7:3]}};
        zext_ln422_1_reg_2013[28 : 0] <= zext_ln422_1_fu_1283_p1[28 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln401_1_fu_1063_p2 == 1'd0) & (icmp_ln401_fu_1043_p2 == 1'd0))) begin
        tmp_s_reg_1918 <= {{sub_ln401_fu_1049_p2[31:3]}};
        zext_ln402_1_reg_1913[28 : 0] <= zext_ln402_1_fu_1079_p1[28 : 0];
        zext_ln404_reg_1923[12 : 0] <= zext_ln404_fu_1093_p1[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        trunc_ln412_reg_2004 <= trunc_ln412_fu_1262_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        trunc_ln440_reg_2248 <= trunc_ln440_fu_1708_p1;
    end
end

always @ (*) begin
    if ((icmp_ln402_fu_1096_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln413_fu_1297_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln422_fu_1456_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state24 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state24 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln435_fu_1668_p2 == 1'd0)) begin
        ap_condition_pp3_exit_iter0_state33 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state33 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln402_reg_1928 == 1'd0))) begin
        ap_phi_mux_i_1_phi_fu_647_p4 = i_30_reg_1932;
    end else begin
        ap_phi_mux_i_1_phi_fu_647_p4 = i_1_reg_643;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln413_reg_2024 == 1'd0))) begin
        ap_phi_mux_i_2_phi_fu_724_p4 = i_31_reg_2028;
    end else begin
        ap_phi_mux_i_2_phi_fu_724_p4 = i_2_reg_720;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln422_reg_2099 == 1'd0))) begin
        ap_phi_mux_i_3_phi_fu_735_p4 = add_ln422_reg_2103;
    end else begin
        ap_phi_mux_i_3_phi_fu_735_p4 = i_3_reg_731;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (icmp_ln435_reg_2234 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_i_5_phi_fu_746_p4 = i_32_reg_2238;
    end else begin
        ap_phi_mux_i_5_phi_fu_746_p4 = i_5_reg_742;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln391_reg_1797 == 1'd0))) begin
        ap_phi_mux_p_12_phi_fu_626_p4 = add_ln396_reg_1821;
    end else begin
        ap_phi_mux_p_12_phi_fu_626_p4 = p_12_reg_623;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln391_reg_1797 == 1'd0))) begin
        ap_phi_mux_p_1_phi_fu_636_p4 = add_ln395_1_reg_1816;
    end else begin
        ap_phi_mux_p_1_phi_fu_636_p4 = p_1_reg_633;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln401_1_reg_1909 == 1'd0) & (icmp_ln401_reg_1895 == 1'd0))) begin
        ap_phi_mux_p_2730_phi_fu_658_p6 = trunc_ln401_reg_1904;
    end else begin
        ap_phi_mux_p_2730_phi_fu_658_p6 = p_2730_reg_654;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln401_1_reg_1909 == 1'd0) & (icmp_ln401_reg_1895 == 1'd0))) begin
        ap_phi_mux_p_2_phi_fu_686_p6 = sub_ln407_fu_1247_p2;
    end else begin
        ap_phi_mux_p_2_phi_fu_686_p6 = p_2_reg_683;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) & (icmp_ln430_reg_2185 == 1'd0))) begin
        ap_phi_mux_p_34_phi_fu_757_p4 = add_ln440_fu_1752_p2;
    end else begin
        ap_phi_mux_p_34_phi_fu_757_p4 = p_34_reg_754;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        ap_return = ap_phi_mux_p_34_phi_fu_757_p4;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        m_address0 = zext_ln32_31_fu_1583_p1;
    end else if (((1'b0 == ap_block_pp2_stage2) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        m_address0 = zext_ln32_29_fu_1563_p1;
    end else if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        m_address0 = zext_ln32_27_fu_1543_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        m_address0 = zext_ln32_25_fu_1513_p1;
    end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        m_address0 = zext_ln32_38_fu_1412_p1;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        m_address0 = zext_ln32_36_fu_1392_p1;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        m_address0 = zext_ln32_34_fu_1372_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        m_address0 = zext_ln32_32_fu_1347_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        m_address0 = zext_ln32_24_fu_1215_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        m_address0 = zext_ln32_22_fu_1195_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        m_address0 = zext_ln32_20_fu_1175_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        m_address0 = zext_ln404_2_fu_1134_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        m_address0 = sum1_cast_fu_965_p1;
    end else begin
        m_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        m_address1 = zext_ln437_1_fu_1698_p1;
    end else if (((1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        m_address1 = zext_ln32_30_fu_1573_p1;
    end else if (((1'b0 == ap_block_pp2_stage2) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        m_address1 = zext_ln32_28_fu_1553_p1;
    end else if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        m_address1 = zext_ln32_26_fu_1533_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        m_address1 = zext_ln424_4_fu_1502_p1;
    end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        m_address1 = zext_ln32_37_fu_1402_p1;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        m_address1 = zext_ln32_35_fu_1382_p1;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        m_address1 = zext_ln32_33_fu_1362_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        m_address1 = zext_ln415_3_fu_1336_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        m_address1 = zext_ln32_23_fu_1205_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        m_address1 = zext_ln32_21_fu_1185_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        m_address1 = zext_ln32_19_fu_1165_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        m_address1 = zext_ln32_fu_1145_p1;
    end else begin
        m_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        m_ce0 = 1'b1;
    end else begin
        m_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        m_ce1 = 1'b1;
    end else begin
        m_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        s_address0 = zext_ln415_1_fu_1352_p1;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        s_address0 = s_addr_1_reg_1957;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        s_address0 = s_addr_reg_1855;
    end else if (((1'b1 == ap_CS_fsm_state23) | ((ap_predicate_op204_call_state15 == 1'b1) & (1'b1 == ap_CS_fsm_state15)))) begin
        s_address0 = grp_KeccakF1600_StatePer_1_fu_763_state_address0;
    end else begin
        s_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        s_address1 = s_addr_4_reg_2253;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        s_address1 = zext_ln439_fu_1720_p1;
    end else if ((((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        s_address1 = s_addr_2_reg_2128;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        s_address1 = s_addr_3_reg_2053;
    end else if (((1'b1 == ap_CS_fsm_state23) | ((ap_predicate_op204_call_state15 == 1'b1) & (1'b1 == ap_CS_fsm_state15)))) begin
        s_address1 = grp_KeccakF1600_StatePer_1_fu_763_state_address1;
    end else begin
        s_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        s_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state23) | ((ap_predicate_op204_call_state15 == 1'b1) & (1'b1 == ap_CS_fsm_state15)))) begin
        s_ce0 = grp_KeccakF1600_StatePer_1_fu_763_state_ce0;
    end else begin
        s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)))) begin
        s_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state23) | ((ap_predicate_op204_call_state15 == 1'b1) & (1'b1 == ap_CS_fsm_state15)))) begin
        s_ce1 = grp_KeccakF1600_StatePer_1_fu_763_state_ce1;
    end else begin
        s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_d0 = xor_ln404_fu_1240_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        s_d0 = xor_ln398_fu_1036_p2;
    end else if (((1'b1 == ap_CS_fsm_state23) | ((ap_predicate_op204_call_state15 == 1'b1) & (1'b1 == ap_CS_fsm_state15)))) begin
        s_d0 = grp_KeccakF1600_StatePer_1_fu_763_state_d0;
    end else begin
        s_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        s_d1 = xor_ln439_fu_1745_p2;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        s_d1 = xor_ln424_fu_1608_p2;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        s_d1 = xor_ln415_fu_1437_p2;
    end else if (((1'b1 == ap_CS_fsm_state23) | ((ap_predicate_op204_call_state15 == 1'b1) & (1'b1 == ap_CS_fsm_state15)))) begin
        s_d1 = grp_KeccakF1600_StatePer_1_fu_763_state_d1;
    end else begin
        s_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state8) & (icmp_ln391_reg_1797 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln402_reg_1928 == 1'd0)))) begin
        s_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state23) | ((ap_predicate_op204_call_state15 == 1'b1) & (1'b1 == ap_CS_fsm_state15)))) begin
        s_we0 = grp_KeccakF1600_StatePer_1_fu_763_state_we0;
    end else begin
        s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state39) & (icmp_ln430_reg_2185 == 1'd0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln422_reg_2099 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln413_reg_2024 == 1'd0)))) begin
        s_we1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state23) | ((ap_predicate_op204_call_state15 == 1'b1) & (1'b1 == ap_CS_fsm_state15)))) begin
        s_we1 = grp_KeccakF1600_StatePer_1_fu_763_state_we1;
    end else begin
        s_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        t_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        t_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        t_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        t_address0 = 64'd1;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        t_address0 = zext_ln435_fu_1703_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        t_address0 = t_addr_16_gep_fu_539_p3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        t_address0 = t_addr_14_gep_fu_523_p3;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        t_address0 = t_addr_12_gep_fu_507_p3;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        t_address0 = t_addr_10_gep_fu_490_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        t_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        t_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        t_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t_address0 = zext_ln389_fu_848_p1;
    end else begin
        t_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        t_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        t_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        t_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        t_address1 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        t_address1 = t_addr_17_gep_fu_547_p3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        t_address1 = t_addr_15_gep_fu_531_p3;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        t_address1 = t_addr_13_gep_fu_515_p3;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        t_address1 = t_addr_11_gep_fu_498_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        t_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        t_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        t_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_address1 = zext_ln394_fu_1011_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_address1 = 64'd1;
    end else begin
        t_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state36) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        t_ce0 = 1'b1;
    end else begin
        t_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state36))) begin
        t_ce1 = 1'b1;
    end else begin
        t_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        t_d0 = m_q1;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state2))) begin
        t_d0 = 8'd0;
    end else begin
        t_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29))) begin
        t_d1 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_d1 = m_q0;
    end else begin
        t_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln435_reg_2234 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b1 == ap_CS_fsm_state29) & (icmp_ln430_fu_1650_p2 == 1'd0)))) begin
        t_we0 = 1'b1;
    end else begin
        t_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state29) & (icmp_ln430_fu_1650_p2 == 1'd0)))) begin
        t_we1 = 1'b1;
    end else begin
        t_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln389_fu_853_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln391_fu_866_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((icmp_ln391_fu_866_p2 == 1'd1) & (icmp_ln389_fu_853_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond_fu_970_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln401_1_fu_1063_p2 == 1'd0) & (icmp_ln401_fu_1043_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln402_fu_1096_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln402_fu_1096_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((icmp_ln412_fu_1267_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln413_fu_1297_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln413_fu_1297_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((1'b0 == ap_block_pp1_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((grp_KeccakF1600_StatePer_1_fu_763_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln422_fu_1456_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln422_fu_1456_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if ((1'b0 == ap_block_pp2_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_pp2_stage3 : begin
            if ((1'b0 == ap_block_pp2_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((icmp_ln430_fu_1650_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln435_fu_1668_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln435_fu_1668_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln32_13_fu_1160_p2 = (14'd2 + add_ln404_2_reg_1937);

assign add_ln32_14_fu_1170_p2 = (14'd3 + add_ln404_2_reg_1937);

assign add_ln32_15_fu_1180_p2 = (14'd4 + add_ln404_2_reg_1937);

assign add_ln32_16_fu_1190_p2 = (14'd5 + add_ln404_2_reg_1937);

assign add_ln32_17_fu_1200_p2 = (14'd6 + add_ln404_2_reg_1937);

assign add_ln32_18_fu_1210_p2 = (14'd7 + add_ln404_2_reg_1937);

assign add_ln32_19_fu_1507_p2 = (14'd1 + add_ln424_3_fu_1496_p2);

assign add_ln32_20_fu_1528_p2 = (14'd2 + add_ln424_3_reg_2108);

assign add_ln32_21_fu_1538_p2 = (14'd3 + add_ln424_3_reg_2108);

assign add_ln32_22_fu_1548_p2 = (14'd4 + add_ln424_3_reg_2108);

assign add_ln32_23_fu_1558_p2 = (14'd5 + add_ln424_3_reg_2108);

assign add_ln32_24_fu_1568_p2 = (14'd6 + add_ln424_3_reg_2108);

assign add_ln32_25_fu_1578_p2 = (14'd7 + add_ln424_3_reg_2108);

assign add_ln32_26_fu_1341_p2 = (add_ln415_2_fu_1330_p2 + 14'd1);

assign add_ln32_27_fu_1357_p2 = (add_ln415_2_reg_2033 + 14'd2);

assign add_ln32_28_fu_1367_p2 = (add_ln415_2_reg_2033 + 14'd3);

assign add_ln32_29_fu_1377_p2 = (add_ln415_2_reg_2033 + 14'd4);

assign add_ln32_30_fu_1387_p2 = (add_ln415_2_reg_2033 + 14'd5);

assign add_ln32_31_fu_1397_p2 = (add_ln415_2_reg_2033 + 14'd6);

assign add_ln32_32_fu_1407_p2 = (add_ln415_2_reg_2033 + 14'd7);

assign add_ln32_fu_1139_p2 = (14'd1 + add_ln404_2_fu_1128_p2);

assign add_ln389_fu_842_p2 = (phi_ln389_reg_579 + 3'd1);

assign add_ln392_fu_981_p2 = (zext_ln391_reg_1791 + empty_93_reg_1811);

assign add_ln394_fu_975_p2 = (64'd1 + p_05_rec_reg_590);

assign add_ln395_1_fu_943_p2 = (mlen + add_ln395_fu_937_p2);

assign add_ln395_fu_937_p2 = (64'd1 + umax_fu_903_p3);

assign add_ln396_fu_948_p2 = (empty_93_fu_931_p2 + pos_cast1_reg_1777);

assign add_ln404_1_fu_1123_p2 = (shl_ln_fu_1115_p3 + zext_ln404_reg_1923);

assign add_ln404_2_fu_1128_p2 = (add_ln404_1_fu_1123_p2 + p_1628_reg_611);

assign add_ln404_fu_1150_p2 = (zext_ln402_fu_1107_p1 + zext_ln402_1_reg_1913);

assign add_ln406_fu_1253_p2 = (p_1628_reg_611 + ap_phi_mux_p_2730_phi_fu_658_p6);

assign add_ln415_1_fu_1321_p2 = (trunc_ln415_reg_1998 + zext_ln415_fu_1317_p1);

assign add_ln415_2_fu_1330_p2 = (reg_834 + zext_ln415_2_fu_1326_p1);

assign add_ln417_fu_1444_p2 = (p_38_rec_reg_708 + 64'd136);

assign add_ln420_fu_1450_p2 = ($signed(indvars_iv_reg_697) + $signed(64'd18446744073709551480));

assign add_ln422_fu_1461_p2 = (ap_phi_mux_i_3_phi_fu_735_p4 + 5'd1);

assign add_ln424_1_fu_1518_p2 = (zext_ln422_1_reg_2013 + zext_ln422_fu_1467_p1);

assign add_ln424_2_fu_1487_p2 = (trunc_ln415_reg_1998 + zext_ln424_fu_1483_p1);

assign add_ln424_3_fu_1496_p2 = (reg_834 + zext_ln424_3_fu_1492_p1);

assign add_ln428_fu_1644_p2 = (p_23_reg_668 + zext_ln426_1_fu_1622_p1);

assign add_ln437_1_fu_1683_p2 = (trunc_ln435_fu_1679_p1 + zext_ln427_reg_2163);

assign add_ln437_2_fu_1688_p2 = (trunc_ln412_reg_2004 + add_ln437_1_fu_1683_p2);

assign add_ln437_3_fu_1693_p2 = (add_ln437_reg_2199 + add_ln437_2_fu_1688_p2);

assign add_ln437_fu_1659_p2 = (zext_ln437_fu_1656_p1 + add_ln406_reg_1992);

assign add_ln440_fu_1752_p2 = (add_ln428_reg_2178 + trunc_ln440_reg_2248);

assign and_ln_fu_1615_p3 = {{tmp_3265_reg_2018}, {3'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp2_stage3 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_on_subcall_done = ((ap_predicate_op204_call_state15 == 1'b1) & (grp_KeccakF1600_StatePer_1_fu_763_ap_done == 1'b0));
end

assign ap_block_state17_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp2_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

always @ (*) begin
    ap_predicate_op204_call_state15 = ((icmp_ln401_1_reg_1909 == 1'd0) & (icmp_ln401_reg_1895 == 1'd0));
end

assign empty_91_fu_887_p1 = sub_ln393_fu_881_p2;

assign empty_92_fu_897_p2 = ((xor_ln393_fu_872_p2 > xor_ln393_1_fu_891_p2) ? 1'b1 : 1'b0);

assign empty_93_fu_931_p2 = (trunc_ln393_fu_911_p1 ^ 32'd4294967295);

assign empty_94_fu_956_p1 = p_05_rec_reg_590[13:0];

assign exitcond_fu_970_p2 = ((p_05_rec_reg_590 == xor_ln393_2_reg_1801) ? 1'b1 : 1'b0);

assign grp_KeccakF1600_StatePer_1_fu_763_ap_start = grp_KeccakF1600_StatePer_1_fu_763_ap_start_reg;

assign grp_fu_769_p2 = (trunc_ln412_fu_1262_p1 + add_ln406_reg_1992);

assign i_30_fu_1101_p2 = (ap_phi_mux_i_1_phi_fu_647_p4 + 29'd1);

assign i_31_fu_1303_p2 = (ap_phi_mux_i_2_phi_fu_724_p4 + 5'd1);

assign i_32_fu_1673_p2 = (ap_phi_mux_i_5_phi_fu_746_p4 + 32'd1);

assign i_fu_1005_p2 = (i_0_reg_601 + 32'd1);

assign icmp_ln389_fu_853_p2 = ((phi_ln389_reg_579 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln391_fu_866_p2 = ((trunc_ln391_fu_859_p1 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln401_1_fu_1063_p2 = ((ap_phi_mux_p_1_phi_fu_636_p4 < zext_ln401_fu_1055_p1) ? 1'b1 : 1'b0);

assign icmp_ln401_fu_1043_p2 = ((ap_phi_mux_p_12_phi_fu_626_p4 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln402_fu_1096_p2 = ((ap_phi_mux_i_1_phi_fu_647_p4 == tmp_s_reg_1918) ? 1'b1 : 1'b0);

assign icmp_ln412_fu_1267_p2 = ((indvars_iv_reg_697 < 64'd136) ? 1'b1 : 1'b0);

assign icmp_ln413_fu_1297_p2 = ((ap_phi_mux_i_2_phi_fu_724_p4 == 5'd17) ? 1'b1 : 1'b0);

assign icmp_ln422_fu_1456_p2 = ((ap_phi_mux_i_3_phi_fu_735_p4 == tmp_3265_reg_2018) ? 1'b1 : 1'b0);

assign icmp_ln430_fu_1650_p2 = ((indvars_iv_reg_697 == zext_ln426_fu_1626_p1) ? 1'b1 : 1'b0);

assign icmp_ln435_fu_1668_p2 = ((zext_ln435_1_fu_1664_p1 < trunc_ln427_reg_2173) ? 1'b1 : 1'b0);

assign lshr_ln9_fu_1711_p4 = {{add_ln428_reg_2178[31:3]}};

assign lshr_ln_fu_990_p4 = {{sub_ln398_fu_985_p2[31:3]}};

assign m_offset_cast68_fu_953_p1 = m_offset;

assign pos_cast1_fu_838_p1 = pos_r;

assign r_7_i1_fu_1220_p9 = {{{{{{{{m_q0}, {m_q1}}, {reg_830}}, {reg_826}}, {reg_817}}, {reg_813}}, {reg_808}}, {reg_803}};

assign r_7_i2_fu_1588_p9 = {{{{{{{{m_q0}, {m_q1}}, {reg_830}}, {reg_826}}, {reg_817}}, {reg_813}}, {reg_808}}, {reg_803}};

assign r_7_i3_fu_1725_p9 = {{{{{{{{t_q0}, {t_q1}}, {reg_798}}, {reg_793}}, {reg_788}}, {reg_783}}, {reg_778}}, {reg_773}};

assign r_7_i4_fu_1417_p9 = {{{{{{{{m_q0}, {m_q1}}, {reg_830}}, {reg_826}}, {reg_817}}, {reg_813}}, {reg_808}}, {reg_803}};

assign r_7_i_fu_1016_p9 = {{{{{{{{t_q1}, {t_q0}}, {reg_798}}, {reg_793}}, {reg_788}}, {reg_783}}, {reg_778}}, {reg_773}};

assign shl_ln7_fu_1475_p3 = {{trunc_ln424_fu_1471_p1}, {3'd0}};

assign shl_ln8_fu_1309_p3 = {{ap_phi_mux_i_2_phi_fu_724_p4}, {3'd0}};

assign shl_ln_fu_1115_p3 = {{trunc_ln404_fu_1111_p1}, {3'd0}};

assign sub_ln393_fu_881_p2 = ($signed(4'd8) - $signed(zext_ln393_fu_877_p1));

assign sub_ln398_fu_985_p2 = (add_ln396_reg_1821 - add_ln392_fu_981_p2);

assign sub_ln401_fu_1049_p2 = (32'd136 - ap_phi_mux_p_12_phi_fu_626_p4);

assign sub_ln407_fu_1247_p2 = (p_1_reg_633 - zext_ln401_reg_1899);

assign sub_ln427_fu_1634_p2 = (indvars_iv_reg_697 - zext_ln426_fu_1626_p1);

assign sum1_cast_fu_965_p1 = sum1_fu_960_p2;

assign sum1_fu_960_p2 = (m_offset_cast68_reg_1827 + empty_94_fu_956_p1);

assign t_addr_10_gep_fu_490_p3 = 64'd0;

assign t_addr_11_gep_fu_498_p3 = 64'd1;

assign t_addr_12_gep_fu_507_p3 = 64'd2;

assign t_addr_13_gep_fu_515_p3 = 64'd3;

assign t_addr_14_gep_fu_523_p3 = 64'd4;

assign t_addr_15_gep_fu_531_p3 = 64'd5;

assign t_addr_16_gep_fu_539_p3 = 64'd6;

assign t_addr_17_gep_fu_547_p3 = 64'd7;

assign tmp_3264_fu_1273_p4 = {{p_23_reg_668[31:3]}};

assign tmp_fu_1069_p4 = {{ap_phi_mux_p_12_phi_fu_626_p4[31:3]}};

assign trunc_ln391_fu_859_p1 = pos_r[2:0];

assign trunc_ln393_1_fu_915_p1 = umax_fu_903_p3[13:0];

assign trunc_ln393_fu_911_p1 = umax_fu_903_p3[31:0];

assign trunc_ln401_fu_1059_p1 = sub_ln401_fu_1049_p2[13:0];

assign trunc_ln404_fu_1111_p1 = ap_phi_mux_i_1_phi_fu_647_p4[10:0];

assign trunc_ln412_fu_1262_p1 = p_38_rec_reg_708[13:0];

assign trunc_ln415_fu_1259_p1 = m_offset[11:0];

assign trunc_ln424_fu_1471_p1 = ap_phi_mux_i_3_phi_fu_735_p4[3:0];

assign trunc_ln427_fu_1640_p1 = sub_ln427_fu_1634_p2[32:0];

assign trunc_ln435_fu_1679_p1 = ap_phi_mux_i_5_phi_fu_746_p4[13:0];

assign trunc_ln440_fu_1708_p1 = sub_ln427_reg_2168[31:0];

assign umax_fu_903_p3 = ((empty_92_fu_897_p2[0:0] === 1'b1) ? xor_ln393_fu_872_p2 : xor_ln393_1_fu_891_p2);

assign xor_ln393_1_fu_891_p2 = (empty_91_fu_887_p1 ^ 64'd18446744073709551615);

assign xor_ln393_2_cast_fu_925_p2 = (trunc_ln393_1_fu_915_p1 ^ 14'd16383);

assign xor_ln393_2_fu_919_p2 = (umax_fu_903_p3 ^ 64'd18446744073709551615);

assign xor_ln393_fu_872_p2 = (mlen ^ 64'd18446744073709551615);

assign xor_ln398_fu_1036_p2 = (s_q0 ^ r_7_i_fu_1016_p9);

assign xor_ln404_fu_1240_p2 = (reg_821 ^ r_7_i1_fu_1220_p9);

assign xor_ln415_fu_1437_p2 = (reg_821 ^ r_7_i4_fu_1417_p9);

assign xor_ln424_fu_1608_p2 = (reg_821 ^ r_7_i2_fu_1588_p9);

assign xor_ln439_fu_1745_p2 = (s_q1 ^ r_7_i3_fu_1725_p9);

assign zext_ln32_19_fu_1165_p1 = add_ln32_13_fu_1160_p2;

assign zext_ln32_20_fu_1175_p1 = add_ln32_14_fu_1170_p2;

assign zext_ln32_21_fu_1185_p1 = add_ln32_15_fu_1180_p2;

assign zext_ln32_22_fu_1195_p1 = add_ln32_16_fu_1190_p2;

assign zext_ln32_23_fu_1205_p1 = add_ln32_17_fu_1200_p2;

assign zext_ln32_24_fu_1215_p1 = add_ln32_18_fu_1210_p2;

assign zext_ln32_25_fu_1513_p1 = add_ln32_19_fu_1507_p2;

assign zext_ln32_26_fu_1533_p1 = add_ln32_20_fu_1528_p2;

assign zext_ln32_27_fu_1543_p1 = add_ln32_21_fu_1538_p2;

assign zext_ln32_28_fu_1553_p1 = add_ln32_22_fu_1548_p2;

assign zext_ln32_29_fu_1563_p1 = add_ln32_23_fu_1558_p2;

assign zext_ln32_30_fu_1573_p1 = add_ln32_24_fu_1568_p2;

assign zext_ln32_31_fu_1583_p1 = add_ln32_25_fu_1578_p2;

assign zext_ln32_32_fu_1347_p1 = add_ln32_26_fu_1341_p2;

assign zext_ln32_33_fu_1362_p1 = add_ln32_27_fu_1357_p2;

assign zext_ln32_34_fu_1372_p1 = add_ln32_28_fu_1367_p2;

assign zext_ln32_35_fu_1382_p1 = add_ln32_29_fu_1377_p2;

assign zext_ln32_36_fu_1392_p1 = add_ln32_30_fu_1387_p2;

assign zext_ln32_37_fu_1402_p1 = add_ln32_31_fu_1397_p2;

assign zext_ln32_38_fu_1412_p1 = add_ln32_32_fu_1407_p2;

assign zext_ln32_fu_1145_p1 = add_ln32_fu_1139_p2;

assign zext_ln389_fu_848_p1 = phi_ln389_reg_579;

assign zext_ln391_fu_862_p1 = trunc_ln391_fu_859_p1;

assign zext_ln393_fu_877_p1 = trunc_ln391_fu_859_p1;

assign zext_ln394_fu_1011_p1 = i_0_reg_601;

assign zext_ln398_fu_1000_p1 = lshr_ln_fu_990_p4;

assign zext_ln401_fu_1055_p1 = sub_ln401_fu_1049_p2;

assign zext_ln402_1_fu_1079_p1 = tmp_fu_1069_p4;

assign zext_ln402_fu_1107_p1 = ap_phi_mux_i_1_phi_fu_647_p4;

assign zext_ln404_1_fu_1155_p1 = add_ln404_fu_1150_p2;

assign zext_ln404_2_fu_1134_p1 = add_ln404_2_fu_1128_p2;

assign zext_ln404_fu_1093_p1 = m_offset;

assign zext_ln415_1_fu_1352_p1 = ap_phi_mux_i_2_phi_fu_724_p4;

assign zext_ln415_2_fu_1326_p1 = add_ln415_1_fu_1321_p2;

assign zext_ln415_3_fu_1336_p1 = add_ln415_2_fu_1330_p2;

assign zext_ln415_fu_1317_p1 = shl_ln8_fu_1309_p3;

assign zext_ln422_1_fu_1283_p1 = tmp_3264_fu_1273_p4;

assign zext_ln422_fu_1467_p1 = ap_phi_mux_i_3_phi_fu_735_p4;

assign zext_ln424_1_fu_1523_p1 = add_ln424_1_fu_1518_p2;

assign zext_ln424_3_fu_1492_p1 = add_ln424_2_fu_1487_p2;

assign zext_ln424_4_fu_1502_p1 = add_ln424_3_fu_1496_p2;

assign zext_ln424_fu_1483_p1 = shl_ln7_fu_1475_p3;

assign zext_ln426_1_fu_1622_p1 = and_ln_fu_1615_p3;

assign zext_ln426_fu_1626_p1 = and_ln_fu_1615_p3;

assign zext_ln427_fu_1630_p1 = and_ln_fu_1615_p3;

assign zext_ln435_1_fu_1664_p1 = ap_phi_mux_i_5_phi_fu_746_p4;

assign zext_ln435_fu_1703_p1 = i_5_reg_742;

assign zext_ln437_1_fu_1698_p1 = add_ln437_3_fu_1693_p2;

assign zext_ln437_fu_1656_p1 = m_offset;

assign zext_ln439_fu_1720_p1 = lshr_ln9_fu_1711_p4;

always @ (posedge ap_clk) begin
    pos_cast1_reg_1777[31:7] <= 25'b0000000000000000000000000;
    zext_ln391_reg_1791[31:3] <= 29'b00000000000000000000000000000;
    m_offset_cast68_reg_1827[13] <= 1'b0;
    zext_ln401_reg_1899[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln402_1_reg_1913[29] <= 1'b0;
    zext_ln404_reg_1923[13] <= 1'b0;
    zext_ln422_1_reg_2013[29] <= 1'b0;
    zext_ln427_reg_2163[2:0] <= 3'b000;
    zext_ln427_reg_2163[13:8] <= 6'b000000;
end

endmodule //keccak_absorb_2
