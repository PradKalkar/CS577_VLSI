// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pqcrystals_dilithium_10 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_coeffs_address0,
        a_coeffs_ce0,
        a_coeffs_we0,
        a_coeffs_d0,
        a_coeffs_offset,
        a_coeffs_offset1,
        seed_address0,
        seed_ce0,
        seed_q0,
        seed_address1,
        seed_ce1,
        seed_q1,
        nonce
);

parameter    ap_ST_fsm_state1 = 34'd1;
parameter    ap_ST_fsm_state2 = 34'd2;
parameter    ap_ST_fsm_state3 = 34'd4;
parameter    ap_ST_fsm_state4 = 34'd8;
parameter    ap_ST_fsm_state5 = 34'd16;
parameter    ap_ST_fsm_state6 = 34'd32;
parameter    ap_ST_fsm_state7 = 34'd64;
parameter    ap_ST_fsm_state8 = 34'd128;
parameter    ap_ST_fsm_state9 = 34'd256;
parameter    ap_ST_fsm_state10 = 34'd512;
parameter    ap_ST_fsm_state11 = 34'd1024;
parameter    ap_ST_fsm_state12 = 34'd2048;
parameter    ap_ST_fsm_state13 = 34'd4096;
parameter    ap_ST_fsm_state14 = 34'd8192;
parameter    ap_ST_fsm_state15 = 34'd16384;
parameter    ap_ST_fsm_state16 = 34'd32768;
parameter    ap_ST_fsm_state17 = 34'd65536;
parameter    ap_ST_fsm_state18 = 34'd131072;
parameter    ap_ST_fsm_state19 = 34'd262144;
parameter    ap_ST_fsm_state20 = 34'd524288;
parameter    ap_ST_fsm_state21 = 34'd1048576;
parameter    ap_ST_fsm_state22 = 34'd2097152;
parameter    ap_ST_fsm_state23 = 34'd4194304;
parameter    ap_ST_fsm_state24 = 34'd8388608;
parameter    ap_ST_fsm_state25 = 34'd16777216;
parameter    ap_ST_fsm_state26 = 34'd33554432;
parameter    ap_ST_fsm_state27 = 34'd67108864;
parameter    ap_ST_fsm_state28 = 34'd134217728;
parameter    ap_ST_fsm_state29 = 34'd268435456;
parameter    ap_ST_fsm_state30 = 34'd536870912;
parameter    ap_ST_fsm_state31 = 34'd1073741824;
parameter    ap_ST_fsm_state32 = 34'd2147483648;
parameter    ap_ST_fsm_state33 = 34'd4294967296;
parameter    ap_ST_fsm_state34 = 34'd8589934592;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] a_coeffs_address0;
output   a_coeffs_ce0;
output   a_coeffs_we0;
output  [22:0] a_coeffs_d0;
input  [2:0] a_coeffs_offset;
input  [2:0] a_coeffs_offset1;
output  [7:0] seed_address0;
output   seed_ce0;
input  [7:0] seed_q0;
output  [7:0] seed_address1;
output   seed_ce1;
input  [7:0] seed_q1;
input  [9:0] nonce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_coeffs_ce0;
reg a_coeffs_we0;
reg[7:0] seed_address0;
reg seed_ce0;
reg[7:0] seed_address1;
reg seed_ce1;

(* fsm_encoding = "none" *) reg   [33:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] t_0_fu_360_p1;
reg   [7:0] t_0_reg_699;
wire   [7:0] t_1_fu_374_p1;
reg   [7:0] t_1_reg_704;
wire   [4:0] i_4_fu_384_p2;
wire    ap_CS_fsm_state2;
wire   [2:0] add_ln420_fu_406_p2;
reg   [2:0] add_ln420_reg_720;
wire    ap_CS_fsm_state3;
wire   [4:0] shl_ln4_fu_416_p3;
reg   [4:0] shl_ln4_reg_725;
wire   [0:0] icmp_ln420_fu_400_p2;
reg   [4:0] state_s_addr_8_reg_745;
wire   [1:0] trunc_ln379_fu_440_p1;
reg   [1:0] trunc_ln379_reg_750;
wire   [1:0] trunc_ln379_1_fu_443_p1;
reg   [1:0] trunc_ln379_1_reg_755;
reg   [7:0] seed_load_reg_760;
wire    ap_CS_fsm_state4;
reg   [7:0] seed_load_8_reg_765;
reg   [7:0] seed_load_9_reg_780;
wire    ap_CS_fsm_state5;
reg   [7:0] seed_load_10_reg_785;
reg   [7:0] seed_load_11_reg_800;
wire    ap_CS_fsm_state6;
reg   [7:0] seed_load_12_reg_805;
wire   [31:0] grp_keccak_absorb_fu_322_ap_return;
reg   [31:0] state_pos_write_assi_reg_820;
wire    ap_CS_fsm_state8;
wire    grp_keccak_absorb_fu_322_ap_ready;
wire    grp_keccak_absorb_fu_322_ap_done;
reg   [4:0] state_s_addr_6_reg_825;
wire   [4:0] state_s_addr_7_reg_830;
wire    ap_CS_fsm_state11;
wire   [31:0] grp_rej_uniform_fu_344_ap_return;
wire    ap_CS_fsm_state16;
wire    grp_rej_uniform_fu_344_ap_ready;
wire    grp_rej_uniform_fu_344_ap_done;
wire   [10:0] zext_ln381_fu_581_p1;
reg   [10:0] zext_ln381_reg_840;
wire    ap_CS_fsm_state17;
wire   [7:0] trunc_ln383_fu_607_p1;
reg   [7:0] trunc_ln383_reg_848;
wire    ap_CS_fsm_state29;
wire   [1:0] trunc_ln383_1_fu_611_p1;
reg   [1:0] trunc_ln383_1_reg_853;
wire   [10:0] sub_ln385_fu_619_p2;
reg   [10:0] sub_ln385_reg_859;
wire   [1:0] i_fu_633_p2;
reg   [1:0] i_reg_867;
wire    ap_CS_fsm_state30;
wire   [0:0] icmp_ln384_fu_628_p2;
wire   [8:0] zext_ln388_fu_663_p1;
reg   [8:0] zext_ln388_reg_877;
wire    ap_CS_fsm_state33;
wire   [9:0] sub_ln389_fu_671_p2;
reg   [9:0] sub_ln389_reg_882;
wire   [10:0] zext_ln389_fu_678_p1;
reg   [10:0] zext_ln389_reg_887;
wire   [31:0] ctr_2_fu_683_p2;
wire    ap_CS_fsm_state34;
reg   [9:0] buf_address0;
reg    buf_ce0;
reg    buf_we0;
reg   [7:0] buf_d0;
wire   [7:0] buf_q0;
reg    buf_ce1;
wire   [7:0] buf_q1;
reg   [4:0] state_s_address0;
reg    state_s_ce0;
reg    state_s_we0;
reg   [63:0] state_s_d0;
wire   [63:0] state_s_q0;
reg   [4:0] state_s_address1;
reg    state_s_ce1;
reg    state_s_we1;
reg   [63:0] state_s_d1;
wire   [63:0] state_s_q1;
wire    grp_keccak_absorb_fu_322_ap_start;
wire    grp_keccak_absorb_fu_322_ap_idle;
wire   [4:0] grp_keccak_absorb_fu_322_s_address0;
wire    grp_keccak_absorb_fu_322_s_ce0;
wire    grp_keccak_absorb_fu_322_s_we0;
wire   [63:0] grp_keccak_absorb_fu_322_s_d0;
wire   [4:0] grp_keccak_absorb_fu_322_s_address1;
wire    grp_keccak_absorb_fu_322_s_ce1;
wire    grp_keccak_absorb_fu_322_s_we1;
wire   [63:0] grp_keccak_absorb_fu_322_s_d1;
wire    grp_keccak_squeezeblocks_2_fu_333_ap_start;
wire    grp_keccak_squeezeblocks_2_fu_333_ap_done;
wire    grp_keccak_squeezeblocks_2_fu_333_ap_idle;
wire    grp_keccak_squeezeblocks_2_fu_333_ap_ready;
wire   [9:0] grp_keccak_squeezeblocks_2_fu_333_out_r_address0;
wire    grp_keccak_squeezeblocks_2_fu_333_out_r_ce0;
wire    grp_keccak_squeezeblocks_2_fu_333_out_r_we0;
wire   [7:0] grp_keccak_squeezeblocks_2_fu_333_out_r_d0;
reg   [1:0] grp_keccak_squeezeblocks_2_fu_333_out_offset;
reg   [3:0] grp_keccak_squeezeblocks_2_fu_333_nblocks;
wire   [4:0] grp_keccak_squeezeblocks_2_fu_333_s_address0;
wire    grp_keccak_squeezeblocks_2_fu_333_s_ce0;
wire    grp_keccak_squeezeblocks_2_fu_333_s_we0;
wire   [63:0] grp_keccak_squeezeblocks_2_fu_333_s_d0;
wire   [4:0] grp_keccak_squeezeblocks_2_fu_333_s_address1;
wire    grp_keccak_squeezeblocks_2_fu_333_s_ce1;
wire    grp_keccak_squeezeblocks_2_fu_333_s_we1;
wire   [63:0] grp_keccak_squeezeblocks_2_fu_333_s_d1;
wire    grp_rej_uniform_fu_344_ap_start;
wire    grp_rej_uniform_fu_344_ap_idle;
wire   [11:0] grp_rej_uniform_fu_344_a_address0;
wire    grp_rej_uniform_fu_344_a_ce0;
wire    grp_rej_uniform_fu_344_a_we0;
wire   [22:0] grp_rej_uniform_fu_344_a_d0;
reg   [31:0] grp_rej_uniform_fu_344_a_offset2;
reg   [9:0] grp_rej_uniform_fu_344_len;
wire   [9:0] grp_rej_uniform_fu_344_buf_r_address0;
wire    grp_rej_uniform_fu_344_buf_r_ce0;
wire   [9:0] grp_rej_uniform_fu_344_buf_r_address1;
wire    grp_rej_uniform_fu_344_buf_r_ce1;
reg   [10:0] grp_rej_uniform_fu_344_buflen;
reg   [4:0] i_0_i_i_i_reg_266;
wire   [0:0] icmp_ln364_fu_378_p2;
reg   [2:0] i_3_i_reg_277;
wire    ap_CS_fsm_state7;
reg   [31:0] ctr_0_reg_288;
reg  signed [8:0] buflen_0_reg_298;
reg   [1:0] i_0_reg_310;
wire    ap_CS_fsm_state31;
reg    grp_keccak_absorb_fu_322_ap_start_reg;
reg    grp_keccak_squeezeblocks_2_fu_333_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state32;
reg    grp_rej_uniform_fu_344_ap_start_reg;
wire    ap_CS_fsm_state15;
wire   [63:0] zext_ln365_fu_390_p1;
wire   [63:0] zext_ln421_fu_424_p1;
wire   [63:0] zext_ln32_fu_435_p1;
wire   [63:0] zext_ln420_fu_395_p1;
wire   [63:0] zext_ln32_7_fu_451_p1;
wire   [63:0] zext_ln32_8_fu_461_p1;
wire   [63:0] zext_ln32_9_fu_471_p1;
wire   [63:0] zext_ln32_10_fu_481_p1;
wire   [63:0] zext_ln32_11_fu_491_p1;
wire   [63:0] zext_ln32_12_fu_501_p1;
wire   [63:0] zext_ln454_3_fu_537_p1;
wire   [63:0] zext_ln385_fu_648_p1;
wire   [63:0] zext_ln385_1_fu_653_p1;
wire   [63:0] xor_ln421_fu_520_p2;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire   [63:0] xor_ln454_fu_563_p2;
wire    ap_CS_fsm_state12;
wire   [63:0] xor_ln455_fu_570_p2;
wire   [1:0] tmp_s_fu_364_p4;
wire   [1:0] trunc_ln421_fu_412_p1;
wire   [4:0] or_ln32_fu_429_p2;
wire   [4:0] or_ln32_1_fu_446_p2;
wire   [4:0] or_ln32_2_fu_456_p2;
wire   [4:0] or_ln32_3_fu_466_p2;
wire   [4:0] or_ln32_4_fu_476_p2;
wire   [4:0] or_ln32_5_fu_486_p2;
wire   [4:0] or_ln32_6_fu_496_p2;
wire   [63:0] r_7_i4_i_fu_506_p9;
wire   [28:0] i_s_fu_527_p4;
wire   [2:0] trunc_ln454_fu_542_p1;
wire   [5:0] shl_ln_fu_545_p3;
wire   [63:0] zext_ln454_fu_553_p1;
wire   [63:0] shl_ln454_fu_557_p2;
wire  signed [9:0] sext_ln381_fu_577_p1;
wire   [23:0] tmp_493_fu_585_p4;
wire   [2:0] grp_fu_601_p1;
wire   [8:0] grp_fu_601_p2;
wire   [10:0] zext_ln383_fu_615_p1;
wire   [10:0] zext_ln384_fu_624_p1;
wire   [10:0] add_ln385_fu_639_p2;
wire  signed [31:0] sext_ln385_fu_644_p1;
wire   [7:0] buflen_fu_658_p2;
wire   [9:0] trunc_ln389_fu_667_p1;
wire   [0:0] icmp_ln381_fu_595_p2;
reg    grp_fu_601_ap_start;
wire    grp_fu_601_ap_done;
reg   [33:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 34'd1;
#0 grp_keccak_absorb_fu_322_ap_start_reg = 1'b0;
#0 grp_keccak_squeezeblocks_2_fu_333_ap_start_reg = 1'b0;
#0 grp_rej_uniform_fu_344_ap_start_reg = 1'b0;
end

pqcrystals_dilithbkb #(
    .DataWidth( 8 ),
    .AddressRange( 842 ),
    .AddressWidth( 10 ))
buf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_address0),
    .ce0(buf_ce0),
    .we0(buf_we0),
    .d0(buf_d0),
    .q0(buf_q0),
    .address1(grp_rej_uniform_fu_344_buf_r_address1),
    .ce1(buf_ce1),
    .q1(buf_q1)
);

pqcrystals_dilithcud #(
    .DataWidth( 64 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
state_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(state_s_address0),
    .ce0(state_s_ce0),
    .we0(state_s_we0),
    .d0(state_s_d0),
    .q0(state_s_q0),
    .address1(state_s_address1),
    .ce1(state_s_ce1),
    .we1(state_s_we1),
    .d1(state_s_d1),
    .q1(state_s_q1)
);

keccak_absorb grp_keccak_absorb_fu_322(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_keccak_absorb_fu_322_ap_start),
    .ap_done(grp_keccak_absorb_fu_322_ap_done),
    .ap_idle(grp_keccak_absorb_fu_322_ap_idle),
    .ap_ready(grp_keccak_absorb_fu_322_ap_ready),
    .s_address0(grp_keccak_absorb_fu_322_s_address0),
    .s_ce0(grp_keccak_absorb_fu_322_s_ce0),
    .s_we0(grp_keccak_absorb_fu_322_s_we0),
    .s_d0(grp_keccak_absorb_fu_322_s_d0),
    .s_q0(state_s_q0),
    .s_address1(grp_keccak_absorb_fu_322_s_address1),
    .s_ce1(grp_keccak_absorb_fu_322_s_ce1),
    .s_we1(grp_keccak_absorb_fu_322_s_we1),
    .s_d1(grp_keccak_absorb_fu_322_s_d1),
    .s_q1(state_s_q1),
    .r(9'd168),
    .pos_r(7'd32),
    .m_0_read(t_0_reg_699),
    .m_1_read(t_1_reg_704),
    .ap_return(grp_keccak_absorb_fu_322_ap_return)
);

keccak_squeezeblocks_2 grp_keccak_squeezeblocks_2_fu_333(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_keccak_squeezeblocks_2_fu_333_ap_start),
    .ap_done(grp_keccak_squeezeblocks_2_fu_333_ap_done),
    .ap_idle(grp_keccak_squeezeblocks_2_fu_333_ap_idle),
    .ap_ready(grp_keccak_squeezeblocks_2_fu_333_ap_ready),
    .out_r_address0(grp_keccak_squeezeblocks_2_fu_333_out_r_address0),
    .out_r_ce0(grp_keccak_squeezeblocks_2_fu_333_out_r_ce0),
    .out_r_we0(grp_keccak_squeezeblocks_2_fu_333_out_r_we0),
    .out_r_d0(grp_keccak_squeezeblocks_2_fu_333_out_r_d0),
    .out_offset(grp_keccak_squeezeblocks_2_fu_333_out_offset),
    .nblocks(grp_keccak_squeezeblocks_2_fu_333_nblocks),
    .s_address0(grp_keccak_squeezeblocks_2_fu_333_s_address0),
    .s_ce0(grp_keccak_squeezeblocks_2_fu_333_s_ce0),
    .s_we0(grp_keccak_squeezeblocks_2_fu_333_s_we0),
    .s_d0(grp_keccak_squeezeblocks_2_fu_333_s_d0),
    .s_q0(state_s_q0),
    .s_address1(grp_keccak_squeezeblocks_2_fu_333_s_address1),
    .s_ce1(grp_keccak_squeezeblocks_2_fu_333_s_ce1),
    .s_we1(grp_keccak_squeezeblocks_2_fu_333_s_we1),
    .s_d1(grp_keccak_squeezeblocks_2_fu_333_s_d1),
    .s_q1(state_s_q1)
);

rej_uniform grp_rej_uniform_fu_344(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_rej_uniform_fu_344_ap_start),
    .ap_done(grp_rej_uniform_fu_344_ap_done),
    .ap_idle(grp_rej_uniform_fu_344_ap_idle),
    .ap_ready(grp_rej_uniform_fu_344_ap_ready),
    .a_address0(grp_rej_uniform_fu_344_a_address0),
    .a_ce0(grp_rej_uniform_fu_344_a_ce0),
    .a_we0(grp_rej_uniform_fu_344_a_we0),
    .a_d0(grp_rej_uniform_fu_344_a_d0),
    .a_offset(trunc_ln379_reg_750),
    .a_offset1(trunc_ln379_1_reg_755),
    .a_offset2(grp_rej_uniform_fu_344_a_offset2),
    .len(grp_rej_uniform_fu_344_len),
    .buf_r_address0(grp_rej_uniform_fu_344_buf_r_address0),
    .buf_r_ce0(grp_rej_uniform_fu_344_buf_r_ce0),
    .buf_r_q0(buf_q0),
    .buf_r_address1(grp_rej_uniform_fu_344_buf_r_address1),
    .buf_r_ce1(grp_rej_uniform_fu_344_buf_r_ce1),
    .buf_r_q1(buf_q1),
    .buflen(grp_rej_uniform_fu_344_buflen),
    .ap_return(grp_rej_uniform_fu_344_ap_return)
);

crypto_sign_urem_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
crypto_sign_urem_dEe_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_601_ap_start),
    .done(grp_fu_601_ap_done),
    .din0(buflen_0_reg_298),
    .din1(grp_fu_601_p1),
    .ce(1'b1),
    .dout(grp_fu_601_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_keccak_absorb_fu_322_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln420_fu_400_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_keccak_absorb_fu_322_ap_start_reg <= 1'b1;
        end else if ((grp_keccak_absorb_fu_322_ap_ready == 1'b1)) begin
            grp_keccak_absorb_fu_322_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_keccak_squeezeblocks_2_fu_333_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state13) | ((1'b1 == ap_CS_fsm_state30) & (icmp_ln384_fu_628_p2 == 1'd1)))) begin
            grp_keccak_squeezeblocks_2_fu_333_ap_start_reg <= 1'b1;
        end else if ((grp_keccak_squeezeblocks_2_fu_333_ap_ready == 1'b1)) begin
            grp_keccak_squeezeblocks_2_fu_333_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_rej_uniform_fu_344_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state33))) begin
            grp_rej_uniform_fu_344_ap_start_reg <= 1'b1;
        end else if ((grp_rej_uniform_fu_344_ap_ready == 1'b1)) begin
            grp_rej_uniform_fu_344_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((grp_rej_uniform_fu_344_ap_done == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state34)) begin
                        buflen_0_reg_298[2 : 0] <= zext_ln388_reg_877[2 : 0];
            buflen_0_reg_298[8 : 4] <= zext_ln388_reg_877[8 : 4];
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
                        buflen_0_reg_298[0] <= 1'b0;
            buflen_0_reg_298[1] <= 1'b0;
            buflen_0_reg_298[2] <= 1'b0;
            buflen_0_reg_298[4] <= 1'b0;
            buflen_0_reg_298[5] <= 1'b0;
            buflen_0_reg_298[6] <= 1'b1;
            buflen_0_reg_298[7] <= 1'b0;
            buflen_0_reg_298[8] <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((grp_rej_uniform_fu_344_ap_done == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state34)) begin
            ctr_0_reg_288 <= ctr_2_fu_683_p2;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ctr_0_reg_288 <= grp_rej_uniform_fu_344_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln364_fu_378_p2 == 1'd0))) begin
        i_0_i_i_i_reg_266 <= i_4_fu_384_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_i_i_reg_266 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        i_0_reg_310 <= i_reg_867;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        i_0_reg_310 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln364_fu_378_p2 == 1'd1))) begin
        i_3_i_reg_277 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i_3_i_reg_277 <= add_ln420_reg_720;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln420_reg_720 <= add_ln420_fu_406_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        i_reg_867 <= i_fu_633_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        seed_load_10_reg_785 <= seed_q1;
        seed_load_9_reg_780 <= seed_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        seed_load_11_reg_800 <= seed_q0;
        seed_load_12_reg_805 <= seed_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        seed_load_8_reg_765 <= seed_q1;
        seed_load_reg_760 <= seed_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln420_fu_400_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        shl_ln4_reg_725[4 : 3] <= shl_ln4_fu_416_p3[4 : 3];
        state_s_addr_8_reg_745[2 : 0] <= zext_ln420_fu_395_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (grp_keccak_absorb_fu_322_ap_done == 1'b1))) begin
        state_pos_write_assi_reg_820 <= grp_keccak_absorb_fu_322_ap_return;
        state_s_addr_6_reg_825 <= zext_ln454_3_fu_537_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sub_ln385_reg_859 <= sub_ln385_fu_619_p2;
        trunc_ln383_1_reg_853 <= trunc_ln383_1_fu_611_p1;
        trunc_ln383_reg_848 <= trunc_ln383_fu_607_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        sub_ln389_reg_882 <= sub_ln389_fu_671_p2;
        zext_ln388_reg_877[2 : 0] <= zext_ln388_fu_663_p1[2 : 0];
zext_ln388_reg_877[4] <= zext_ln388_fu_663_p1[4];
zext_ln388_reg_877[6] <= zext_ln388_fu_663_p1[6];
        zext_ln389_reg_887[2 : 0] <= zext_ln389_fu_678_p1[2 : 0];
zext_ln389_reg_887[4] <= zext_ln389_fu_678_p1[4];
zext_ln389_reg_887[6] <= zext_ln389_fu_678_p1[6];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_0_reg_699 <= t_0_fu_360_p1;
        t_1_reg_704[1 : 0] <= t_1_fu_374_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln420_fu_400_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        trunc_ln379_1_reg_755 <= trunc_ln379_1_fu_443_p1;
        trunc_ln379_reg_750 <= trunc_ln379_fu_440_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        zext_ln381_reg_840[2 : 0] <= zext_ln381_fu_581_p1[2 : 0];
zext_ln381_reg_840[9 : 4] <= zext_ln381_fu_581_p1[9 : 4];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state16))) begin
        a_coeffs_ce0 = grp_rej_uniform_fu_344_a_ce0;
    end else begin
        a_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state16))) begin
        a_coeffs_we0 = grp_rej_uniform_fu_344_a_we0;
    end else begin
        a_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state17) & (icmp_ln381_fu_595_p2 == 1'd0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln381_fu_595_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        buf_address0 = zext_ln385_1_fu_653_p1;
    end else if (((1'b1 == ap_CS_fsm_state30) & (icmp_ln384_fu_628_p2 == 1'd0))) begin
        buf_address0 = zext_ln385_fu_648_p1;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state16))) begin
        buf_address0 = grp_rej_uniform_fu_344_buf_r_address0;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state14))) begin
        buf_address0 = grp_keccak_squeezeblocks_2_fu_333_out_r_address0;
    end else begin
        buf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | ((1'b1 == ap_CS_fsm_state30) & (icmp_ln384_fu_628_p2 == 1'd0)))) begin
        buf_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state16))) begin
        buf_ce0 = grp_rej_uniform_fu_344_buf_r_ce0;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state14))) begin
        buf_ce0 = grp_keccak_squeezeblocks_2_fu_333_out_r_ce0;
    end else begin
        buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state16))) begin
        buf_ce1 = grp_rej_uniform_fu_344_buf_r_ce1;
    end else begin
        buf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        buf_d0 = buf_q0;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state14))) begin
        buf_d0 = grp_keccak_squeezeblocks_2_fu_333_out_r_d0;
    end else begin
        buf_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        buf_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state14))) begin
        buf_we0 = grp_keccak_squeezeblocks_2_fu_333_out_r_we0;
    end else begin
        buf_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln381_fu_595_p2 == 1'd1))) begin
        grp_fu_601_ap_start = 1'b1;
    end else begin
        grp_fu_601_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_keccak_squeezeblocks_2_fu_333_nblocks = 4'd1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_keccak_squeezeblocks_2_fu_333_nblocks = 4'd5;
    end else begin
        grp_keccak_squeezeblocks_2_fu_333_nblocks = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_keccak_squeezeblocks_2_fu_333_out_offset = trunc_ln383_1_reg_853;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_keccak_squeezeblocks_2_fu_333_out_offset = 2'd0;
    end else begin
        grp_keccak_squeezeblocks_2_fu_333_out_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_rej_uniform_fu_344_a_offset2 = ctr_0_reg_288;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_rej_uniform_fu_344_a_offset2 = 32'd0;
    end else begin
        grp_rej_uniform_fu_344_a_offset2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_rej_uniform_fu_344_buflen = zext_ln389_reg_887;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_rej_uniform_fu_344_buflen = 11'd840;
    end else begin
        grp_rej_uniform_fu_344_buflen = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_rej_uniform_fu_344_len = sub_ln389_reg_882;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_rej_uniform_fu_344_len = 10'd256;
    end else begin
        grp_rej_uniform_fu_344_len = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        seed_address0 = zext_ln32_11_fu_491_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        seed_address0 = zext_ln32_9_fu_471_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        seed_address0 = zext_ln32_7_fu_451_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        seed_address0 = zext_ln421_fu_424_p1;
    end else begin
        seed_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        seed_address1 = zext_ln32_12_fu_501_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        seed_address1 = zext_ln32_10_fu_481_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        seed_address1 = zext_ln32_8_fu_461_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        seed_address1 = zext_ln32_fu_435_p1;
    end else begin
        seed_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        seed_ce0 = 1'b1;
    end else begin
        seed_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        seed_ce1 = 1'b1;
    end else begin
        seed_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        state_s_address0 = state_s_addr_7_reg_830;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        state_s_address0 = 64'd20;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        state_s_address0 = state_s_addr_6_reg_825;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        state_s_address0 = state_s_addr_8_reg_745;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        state_s_address0 = zext_ln365_fu_390_p1;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state14))) begin
        state_s_address0 = grp_keccak_squeezeblocks_2_fu_333_s_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        state_s_address0 = grp_keccak_absorb_fu_322_s_address0;
    end else begin
        state_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state14))) begin
        state_s_address1 = grp_keccak_squeezeblocks_2_fu_333_s_address1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        state_s_address1 = grp_keccak_absorb_fu_322_s_address1;
    end else begin
        state_s_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6))) begin
        state_s_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state14))) begin
        state_s_ce0 = grp_keccak_squeezeblocks_2_fu_333_s_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        state_s_ce0 = grp_keccak_absorb_fu_322_s_ce0;
    end else begin
        state_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state14))) begin
        state_s_ce1 = grp_keccak_squeezeblocks_2_fu_333_s_ce1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        state_s_ce1 = grp_keccak_absorb_fu_322_s_ce1;
    end else begin
        state_s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        state_s_d0 = xor_ln455_fu_570_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        state_s_d0 = xor_ln454_fu_563_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        state_s_d0 = xor_ln421_fu_520_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        state_s_d0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state14))) begin
        state_s_d0 = grp_keccak_squeezeblocks_2_fu_333_s_d0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        state_s_d0 = grp_keccak_absorb_fu_322_s_d0;
    end else begin
        state_s_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state14))) begin
        state_s_d1 = grp_keccak_squeezeblocks_2_fu_333_s_d1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        state_s_d1 = grp_keccak_absorb_fu_322_s_d1;
    end else begin
        state_s_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln364_fu_378_p2 == 1'd0)))) begin
        state_s_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state14))) begin
        state_s_we0 = grp_keccak_squeezeblocks_2_fu_333_s_we0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        state_s_we0 = grp_keccak_absorb_fu_322_s_we0;
    end else begin
        state_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state14))) begin
        state_s_we1 = grp_keccak_squeezeblocks_2_fu_333_s_we1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        state_s_we1 = grp_keccak_absorb_fu_322_s_we1;
    end else begin
        state_s_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln364_fu_378_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln420_fu_400_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_keccak_absorb_fu_322_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_keccak_squeezeblocks_2_fu_333_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (grp_rej_uniform_fu_344_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln381_fu_595_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (icmp_ln384_fu_628_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state32 : begin
            if (((grp_keccak_squeezeblocks_2_fu_333_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & (grp_rej_uniform_fu_344_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_coeffs_address0 = grp_rej_uniform_fu_344_a_address0;

assign a_coeffs_d0 = grp_rej_uniform_fu_344_a_d0;

assign add_ln385_fu_639_p2 = (sub_ln385_reg_859 + zext_ln384_fu_624_p1);

assign add_ln420_fu_406_p2 = (i_3_i_reg_277 + 3'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign buflen_fu_658_p2 = (trunc_ln383_reg_848 | 8'd168);

assign ctr_2_fu_683_p2 = (grp_rej_uniform_fu_344_ap_return + ctr_0_reg_288);

assign grp_fu_601_p1 = 9'd3;

assign grp_keccak_absorb_fu_322_ap_start = grp_keccak_absorb_fu_322_ap_start_reg;

assign grp_keccak_squeezeblocks_2_fu_333_ap_start = grp_keccak_squeezeblocks_2_fu_333_ap_start_reg;

assign grp_rej_uniform_fu_344_ap_start = grp_rej_uniform_fu_344_ap_start_reg;

assign i_4_fu_384_p2 = (i_0_i_i_i_reg_266 + 5'd1);

assign i_fu_633_p2 = (i_0_reg_310 + 2'd1);

assign i_s_fu_527_p4 = {{grp_keccak_absorb_fu_322_ap_return[31:3]}};

assign icmp_ln364_fu_378_p2 = ((i_0_i_i_i_reg_266 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln381_fu_595_p2 = ((tmp_493_fu_585_p4 == 24'd0) ? 1'b1 : 1'b0);

assign icmp_ln384_fu_628_p2 = ((i_0_reg_310 == trunc_ln383_1_reg_853) ? 1'b1 : 1'b0);

assign icmp_ln420_fu_400_p2 = ((i_3_i_reg_277 == 3'd4) ? 1'b1 : 1'b0);

assign or_ln32_1_fu_446_p2 = (shl_ln4_reg_725 | 5'd2);

assign or_ln32_2_fu_456_p2 = (shl_ln4_reg_725 | 5'd3);

assign or_ln32_3_fu_466_p2 = (shl_ln4_reg_725 | 5'd4);

assign or_ln32_4_fu_476_p2 = (shl_ln4_reg_725 | 5'd5);

assign or_ln32_5_fu_486_p2 = (shl_ln4_reg_725 | 5'd6);

assign or_ln32_6_fu_496_p2 = (shl_ln4_reg_725 | 5'd7);

assign or_ln32_fu_429_p2 = (shl_ln4_fu_416_p3 | 5'd1);

assign r_7_i4_i_fu_506_p9 = {{{{{{{{seed_q1}, {seed_q0}}, {seed_load_12_reg_805}}, {seed_load_11_reg_800}}, {seed_load_10_reg_785}}, {seed_load_9_reg_780}}, {seed_load_8_reg_765}}, {seed_load_reg_760}};

assign sext_ln381_fu_577_p1 = buflen_0_reg_298;

assign sext_ln385_fu_644_p1 = $signed(add_ln385_fu_639_p2);

assign shl_ln454_fu_557_p2 = 64'd31 << zext_ln454_fu_553_p1;

assign shl_ln4_fu_416_p3 = {{trunc_ln421_fu_412_p1}, {3'd0}};

assign shl_ln_fu_545_p3 = {{trunc_ln454_fu_542_p1}, {3'd0}};

assign state_s_addr_7_reg_830 = 64'd20;

assign sub_ln385_fu_619_p2 = (zext_ln381_reg_840 - zext_ln383_fu_615_p1);

assign sub_ln389_fu_671_p2 = (10'd256 - trunc_ln389_fu_667_p1);

assign t_0_fu_360_p1 = nonce[7:0];

assign t_1_fu_374_p1 = tmp_s_fu_364_p4;

assign tmp_493_fu_585_p4 = {{ctr_0_reg_288[31:8]}};

assign tmp_s_fu_364_p4 = {{nonce[9:8]}};

assign trunc_ln379_1_fu_443_p1 = a_coeffs_offset1[1:0];

assign trunc_ln379_fu_440_p1 = a_coeffs_offset[1:0];

assign trunc_ln383_1_fu_611_p1 = grp_fu_601_p2[1:0];

assign trunc_ln383_fu_607_p1 = grp_fu_601_p2[7:0];

assign trunc_ln389_fu_667_p1 = ctr_0_reg_288[9:0];

assign trunc_ln421_fu_412_p1 = i_3_i_reg_277[1:0];

assign trunc_ln454_fu_542_p1 = state_pos_write_assi_reg_820[2:0];

assign xor_ln421_fu_520_p2 = (state_s_q0 ^ r_7_i4_i_fu_506_p9);

assign xor_ln454_fu_563_p2 = (state_s_q0 ^ shl_ln454_fu_557_p2);

assign xor_ln455_fu_570_p2 = (state_s_q0 ^ 64'd9223372036854775808);

assign zext_ln32_10_fu_481_p1 = or_ln32_4_fu_476_p2;

assign zext_ln32_11_fu_491_p1 = or_ln32_5_fu_486_p2;

assign zext_ln32_12_fu_501_p1 = or_ln32_6_fu_496_p2;

assign zext_ln32_7_fu_451_p1 = or_ln32_1_fu_446_p2;

assign zext_ln32_8_fu_461_p1 = or_ln32_2_fu_456_p2;

assign zext_ln32_9_fu_471_p1 = or_ln32_3_fu_466_p2;

assign zext_ln32_fu_435_p1 = or_ln32_fu_429_p2;

assign zext_ln365_fu_390_p1 = i_0_i_i_i_reg_266;

assign zext_ln381_fu_581_p1 = $unsigned(sext_ln381_fu_577_p1);

assign zext_ln383_fu_615_p1 = grp_fu_601_p2;

assign zext_ln384_fu_624_p1 = i_0_reg_310;

assign zext_ln385_1_fu_653_p1 = i_0_reg_310;

assign zext_ln385_fu_648_p1 = $unsigned(sext_ln385_fu_644_p1);

assign zext_ln388_fu_663_p1 = buflen_fu_658_p2;

assign zext_ln389_fu_678_p1 = buflen_fu_658_p2;

assign zext_ln420_fu_395_p1 = i_3_i_reg_277;

assign zext_ln421_fu_424_p1 = shl_ln4_fu_416_p3;

assign zext_ln454_3_fu_537_p1 = i_s_fu_527_p4;

assign zext_ln454_fu_553_p1 = shl_ln_fu_545_p3;

always @ (posedge ap_clk) begin
    t_1_reg_704[7:2] <= 6'b000000;
    shl_ln4_reg_725[2:0] <= 3'b000;
    state_s_addr_8_reg_745[4:3] <= 2'b00;
    zext_ln381_reg_840[3] <= 1'b1;
    zext_ln381_reg_840[10] <= 1'b0;
    zext_ln388_reg_877[3] <= 1'b1;
    zext_ln388_reg_877[5:5] <= 1'b1;
    zext_ln388_reg_877[8:7] <= 2'b01;
    zext_ln389_reg_887[3] <= 1'b1;
    zext_ln389_reg_887[5:5] <= 1'b1;
    zext_ln389_reg_887[10:7] <= 4'b0001;
    buflen_0_reg_298[3] <= 1'b1;
end

endmodule //pqcrystals_dilithium_10
