

================================================================
== Vivado HLS Report for 'crypto_sign'
================================================================
* Date:           Mon Apr  3 23:35:14 2023

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        crypto_sign
* Solution:       solution1
* Product family: artix7
* Target device:  xc7a200t-fbg676-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+-----------+------------+
    |  Clock |  Target  | Estimated | Uncertainty|
    +--------+----------+-----------+------------+
    |ap_clk  | 10.00 us | 31.143 ns |   1.25 us  |
    +--------+----------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |        ?|        ?|         3|          -|          -|     ?|    no    |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 5 
3 --> 4 5 
4 --> 2 
5 --> 6 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.80>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([5720 x i8]* %sm) nounwind, !map !335"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %smlen) nounwind, !map !341"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([3300 x i8]* %m) nounwind, !map !345"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64 %mlen) nounwind, !map !351"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([2544 x i8]* %sk) nounwind, !map !357"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !363"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%mlen_read = call i64 @_ssdm_op_Read.ap_auto.i64(i64 %mlen) nounwind" [sign.c:197]   --->   Operation 13 'read' 'mlen_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([12 x i8]* @p_str48) nounwind" [sign.c:203]   --->   Operation 14 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%trunc_ln208 = trunc i64 %mlen_read to i13" [sign.c:208]   --->   Operation 15 'trunc' 'trunc_ln208' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (1.79ns)   --->   "%add_ln208 = add i13 -1, %trunc_ln208" [sign.c:208]   --->   Operation 16 'add' 'add_ln208' <Predicate = true> <Delay = 1.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%trunc_ln208_1 = trunc i64 %mlen_read to i14" [sign.c:208]   --->   Operation 17 'trunc' 'trunc_ln208_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (1.80ns)   --->   "%add_ln208_1 = add i14 2419, %trunc_ln208_1" [sign.c:208]   --->   Operation 18 'add' 'add_ln208_1' <Predicate = true> <Delay = 1.80> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (1.35ns)   --->   "br label %1" [sign.c:206]   --->   Operation 19 'br' <Predicate = true> <Delay = 1.35>

State 2 <SV = 1> <Delay = 4.56>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%i_0_0 = phi i64 [ 0, %0 ], [ %add_ln206, %3 ]" [sign.c:206]   --->   Operation 20 'phi' 'i_0_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (2.34ns)   --->   "%icmp_ln206 = icmp eq i64 %i_0_0, %mlen_read" [sign.c:206]   --->   Operation 21 'icmp' 'icmp_ln206' <Predicate = true> <Delay = 2.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "br i1 %icmp_ln206, label %4, label %2" [sign.c:206]   --->   Operation 22 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%trunc_ln206 = trunc i64 %i_0_0 to i13" [sign.c:206]   --->   Operation 23 'trunc' 'trunc_ln206' <Predicate = (!icmp_ln206)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (1.79ns)   --->   "%sub_ln208 = sub i13 %add_ln208, %trunc_ln206" [sign.c:208]   --->   Operation 24 'sub' 'sub_ln208' <Predicate = (!icmp_ln206)> <Delay = 1.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln208 = zext i13 %sub_ln208 to i64" [sign.c:208]   --->   Operation 25 'zext' 'zext_ln208' <Predicate = (!icmp_ln206)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%m_addr = getelementptr [3300 x i8]* %m, i64 0, i64 %zext_ln208" [sign.c:208]   --->   Operation 26 'getelementptr' 'm_addr' <Predicate = (!icmp_ln206)> <Delay = 0.00>
ST_2 : Operation 27 [2/2] (2.77ns)   --->   "%m_load = load i8* %m_addr, align 1" [sign.c:208]   --->   Operation 27 'load' 'm_load' <Predicate = (!icmp_ln206)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5720> <RAM>

State 3 <SV = 2> <Delay = 5.54>
ST_3 : Operation 28 [1/2] (2.77ns)   --->   "%m_load = load i8* %m_addr, align 1" [sign.c:208]   --->   Operation 28 'load' 'm_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5720> <RAM>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%trunc_ln206_1 = trunc i64 %i_0_0 to i14" [sign.c:206]   --->   Operation 29 'trunc' 'trunc_ln206_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (1.80ns)   --->   "%sub_ln208_1 = sub i14 %add_ln208_1, %trunc_ln206_1" [sign.c:208]   --->   Operation 30 'sub' 'sub_ln208_1' <Predicate = true> <Delay = 1.80> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln208_1 = zext i14 %sub_ln208_1 to i64" [sign.c:208]   --->   Operation 31 'zext' 'zext_ln208_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%sm_addr = getelementptr [5720 x i8]* %sm, i64 0, i64 %zext_ln208_1" [sign.c:208]   --->   Operation 32 'getelementptr' 'sm_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (2.77ns)   --->   "store i8 %m_load, i8* %sm_addr, align 1" [sign.c:208]   --->   Operation 33 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5720> <RAM>
ST_3 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln206_1)   --->   "%or_ln206 = or i64 %i_0_0, 1" [sign.c:206]   --->   Operation 34 'or' 'or_ln206' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%or_ln206_1 = or i14 %trunc_ln206_1, 1" [sign.c:206]   --->   Operation 35 'or' 'or_ln206_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%or_ln206_2 = or i13 %trunc_ln206, 1" [sign.c:206]   --->   Operation 36 'or' 'or_ln206_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (2.34ns) (out node of the LUT)   --->   "%icmp_ln206_1 = icmp eq i64 %or_ln206, %mlen_read" [sign.c:206]   --->   Operation 37 'icmp' 'icmp_ln206_1' <Predicate = true> <Delay = 2.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "br i1 %icmp_ln206_1, label %4, label %3" [sign.c:206]   --->   Operation 38 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (1.79ns)   --->   "%sub_ln208_2 = sub i13 %add_ln208, %or_ln206_2" [sign.c:208]   --->   Operation 39 'sub' 'sub_ln208_2' <Predicate = (!icmp_ln206_1)> <Delay = 1.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln208_2 = zext i13 %sub_ln208_2 to i64" [sign.c:208]   --->   Operation 40 'zext' 'zext_ln208_2' <Predicate = (!icmp_ln206_1)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%m_addr_2 = getelementptr [3300 x i8]* %m, i64 0, i64 %zext_ln208_2" [sign.c:208]   --->   Operation 41 'getelementptr' 'm_addr_2' <Predicate = (!icmp_ln206_1)> <Delay = 0.00>
ST_3 : Operation 42 [2/2] (2.77ns)   --->   "%m_load_1 = load i8* %m_addr_2, align 1" [sign.c:208]   --->   Operation 42 'load' 'm_load_1' <Predicate = (!icmp_ln206_1)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5720> <RAM>
ST_3 : Operation 43 [1/1] (1.80ns)   --->   "%sub_ln208_3 = sub i14 %add_ln208_1, %or_ln206_1" [sign.c:208]   --->   Operation 43 'sub' 'sub_ln208_3' <Predicate = (!icmp_ln206_1)> <Delay = 1.80> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (2.99ns)   --->   "%add_ln206 = add i64 %i_0_0, 2" [sign.c:206]   --->   Operation 44 'add' 'add_ln206' <Predicate = (!icmp_ln206_1)> <Delay = 2.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 5.54>
ST_4 : Operation 45 [1/2] (2.77ns)   --->   "%m_load_1 = load i8* %m_addr_2, align 1" [sign.c:208]   --->   Operation 45 'load' 'm_load_1' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5720> <RAM>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%zext_ln208_3 = zext i14 %sub_ln208_3 to i64" [sign.c:208]   --->   Operation 46 'zext' 'zext_ln208_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%sm_addr_1 = getelementptr [5720 x i8]* %sm, i64 0, i64 %zext_ln208_3" [sign.c:208]   --->   Operation 47 'getelementptr' 'sm_addr_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (2.77ns)   --->   "store i8 %m_load_1, i8* %sm_addr_1, align 1" [sign.c:208]   --->   Operation 48 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5720> <RAM>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "br label %1" [sign.c:206]   --->   Operation 49 'br' <Predicate = true> <Delay = 0.00>

State 5 <SV = 3> <Delay = 2.99>
ST_5 : Operation 50 [2/2] (0.00ns)   --->   "call fastcc void @crypto_sign_signatur([5720 x i8]* %sm, i64 %mlen_read, [2544 x i8]* %sk) nounwind" [sign.c:211]   --->   Operation 50 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 51 [1/1] (2.99ns)   --->   "%add_ln212 = add i64 %mlen_read, 2420" [sign.c:212]   --->   Operation 51 'add' 'add_ln212' <Predicate = true> <Delay = 2.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 52 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i64P(i64* %smlen, i64 %add_ln212) nounwind" [sign.c:212]   --->   Operation 52 'write' <Predicate = true> <Delay = 0.00>

State 6 <SV = 4> <Delay = 0.00>
ST_6 : Operation 53 [1/2] (0.00ns)   --->   "call fastcc void @crypto_sign_signatur([5720 x i8]* %sm, i64 %mlen_read, [2544 x i8]* %sk) nounwind" [sign.c:211]   --->   Operation 53 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 54 [1/1] (0.00ns)   --->   "ret i32 0" [sign.c:213]   --->   Operation 54 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 1e+04ns, clock uncertainty: 1.25e+03ns.

 <State 1>: 1.81ns
The critical path consists of the following:
	wire read on port 'mlen' (sign.c:197) [16]  (0 ns)
	'add' operation ('add_ln208_1', sign.c:208) [21]  (1.81 ns)

 <State 2>: 4.57ns
The critical path consists of the following:
	'phi' operation ('i_0_0', sign.c:206) with incoming values : ('add_ln206', sign.c:206) [24]  (0 ns)
	'sub' operation ('sub_ln208', sign.c:208) [29]  (1.79 ns)
	'getelementptr' operation ('m_addr', sign.c:208) [31]  (0 ns)
	'load' operation ('m_load', sign.c:208) on array 'm' [32]  (2.77 ns)

 <State 3>: 5.54ns
The critical path consists of the following:
	'load' operation ('m_load', sign.c:208) on array 'm' [32]  (2.77 ns)
	'store' operation ('store_ln208', sign.c:208) of variable 'm_load', sign.c:208 on array 'sm' [37]  (2.77 ns)

 <State 4>: 5.54ns
The critical path consists of the following:
	'load' operation ('m_load_1', sign.c:208) on array 'm' [47]  (2.77 ns)
	'store' operation ('store_ln208', sign.c:208) of variable 'm_load_1', sign.c:208 on array 'sm' [51]  (2.77 ns)

 <State 5>: 3ns
The critical path consists of the following:
	'add' operation ('add_ln212', sign.c:212) [56]  (3 ns)

 <State 6>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
