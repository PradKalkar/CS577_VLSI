

================================================================
== Vivado HLS Report for 'poly_challenge'
================================================================
* Date:           Tue Apr  4 23:20:59 2023

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        crypto_sign
* Solution:       solution1
* Product family: artix7
* Target device:  xc7a200t-fbg676-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 us | 6.812 ns |   1.25 us  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |             |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1     |       25|       25|         1|          -|          -|    25|    no    |
        |- Loop 2     |       76|       76|        19|          -|          -|     4|    no    |
        | + Loop 2.1  |       16|       16|         2|          -|          -|     8|    no    |
        |- Loop 3     |       16|       16|         2|          -|          -|     8|    no    |
        |- Loop 4     |      256|      256|         1|          -|          -|   256|    no    |
        |- Loop 5     |        ?|        ?|         ?|          -|          -|    39|    no    |
        | + Loop 5.1  |        ?|        ?|  4 ~ 245 |          -|          -|     ?|    no    |
        +-------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 19
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 2 3 
3 --> 7 4 
4 --> 5 6 
5 --> 4 
6 --> 3 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 12 
11 --> 10 
12 --> 12 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 14 18 
18 --> 19 
19 --> 13 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.35>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%buf = alloca [136 x i8], align 16" [poly.c:514]   --->   Operation 20 'alloca' 'buf' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%state_s = alloca [25 x i64], align 8" [poly.c:515]   --->   Operation 21 'alloca' 'state_s' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_1 : Operation 22 [1/1] (1.35ns)   --->   "br label %1" [fips202.c:362->fips202.c:648->poly.c:517]   --->   Operation 22 'br' <Predicate = true> <Delay = 1.35>

State 2 <SV = 1> <Delay = 2.77>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%i_0_i_i = phi i5 [ 0, %0 ], [ %i_24, %2 ]"   --->   Operation 23 'phi' 'i_0_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (1.21ns)   --->   "%icmp_ln362 = icmp eq i5 %i_0_i_i, -7" [fips202.c:362->fips202.c:648->poly.c:517]   --->   Operation 24 'icmp' 'icmp_ln362' <Predicate = true> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 25, i64 25, i64 25)"   --->   Operation 25 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (1.54ns)   --->   "%i_24 = add i5 %i_0_i_i, 1" [fips202.c:362->fips202.c:648->poly.c:517]   --->   Operation 26 'add' 'i_24' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "br i1 %icmp_ln362, label %shake256_init.1.exit, label %2" [fips202.c:362->fips202.c:648->poly.c:517]   --->   Operation 27 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln363 = zext i5 %i_0_i_i to i64" [fips202.c:363->fips202.c:648->poly.c:517]   --->   Operation 28 'zext' 'zext_ln363' <Predicate = (!icmp_ln362)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%state_s_addr = getelementptr [25 x i64]* %state_s, i64 0, i64 %zext_ln363" [fips202.c:363->fips202.c:648->poly.c:517]   --->   Operation 29 'getelementptr' 'state_s_addr' <Predicate = (!icmp_ln362)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (2.77ns)   --->   "store i64 0, i64* %state_s_addr, align 8" [fips202.c:363->fips202.c:648->poly.c:517]   --->   Operation 30 'store' <Predicate = (!icmp_ln362)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "br label %1" [fips202.c:362->fips202.c:648->poly.c:517]   --->   Operation 31 'br' <Predicate = (!icmp_ln362)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%empty_46 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 0, i64 0, i64 0)"   --->   Operation 32 'speclooptripcount' 'empty_46' <Predicate = (icmp_ln362)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (1.35ns)   --->   "br label %.preheader.i" [fips202.c:416->fips202.c:663->poly.c:518]   --->   Operation 33 'br' <Predicate = (icmp_ln362)> <Delay = 1.35>

State 3 <SV = 2> <Delay = 2.77>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%i_3_i = phi i3 [ %add_ln416, %load64.2.exit14.i ], [ 0, %shake256_init.1.exit ]" [fips202.c:416->fips202.c:663->poly.c:518]   --->   Operation 34 'phi' 'i_3_i' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln416 = zext i3 %i_3_i to i64" [fips202.c:416->fips202.c:663->poly.c:518]   --->   Operation 35 'zext' 'zext_ln416' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%empty_47 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 36 'speclooptripcount' 'empty_47' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (1.00ns)   --->   "%icmp_ln416 = icmp eq i3 %i_3_i, -4" [fips202.c:416->fips202.c:663->poly.c:518]   --->   Operation 37 'icmp' 'icmp_ln416' <Predicate = true> <Delay = 1.00> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (1.34ns)   --->   "%add_ln416 = add i3 %i_3_i, 1" [fips202.c:416->fips202.c:663->poly.c:518]   --->   Operation 38 'add' 'add_ln416' <Predicate = true> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "br i1 %icmp_ln416, label %keccak_absorb.1.exit, label %3" [fips202.c:416->fips202.c:663->poly.c:518]   --->   Operation 39 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%trunc_ln417 = trunc i3 %i_3_i to i2" [fips202.c:417->fips202.c:663->poly.c:518]   --->   Operation 40 'trunc' 'trunc_ln417' <Predicate = (!icmp_ln416)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%shl_ln = call i5 @_ssdm_op_BitConcatenate.i5.i2.i3(i2 %trunc_ln417, i3 0)" [fips202.c:417->fips202.c:663->poly.c:518]   --->   Operation 41 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln416)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (1.35ns)   --->   "br label %4" [fips202.c:30->fips202.c:417->fips202.c:663->poly.c:518]   --->   Operation 42 'br' <Predicate = (!icmp_ln416)> <Delay = 1.35>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%state_s_addr_7 = getelementptr [25 x i64]* %state_s, i64 0, i64 4" [fips202.c:450->fips202.c:675->poly.c:519]   --->   Operation 43 'getelementptr' 'state_s_addr_7' <Predicate = (icmp_ln416)> <Delay = 0.00>
ST_3 : Operation 44 [2/2] (2.77ns)   --->   "%state_s_load = load i64* %state_s_addr_7, align 8" [fips202.c:450->fips202.c:675->poly.c:519]   --->   Operation 44 'load' 'state_s_load' <Predicate = (icmp_ln416)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%state_s_addr_8 = getelementptr [25 x i64]* %state_s, i64 0, i64 16" [fips202.c:451->fips202.c:675->poly.c:519]   --->   Operation 45 'getelementptr' 'state_s_addr_8' <Predicate = (icmp_ln416)> <Delay = 0.00>
ST_3 : Operation 46 [2/2] (2.77ns)   --->   "%state_s_load_5 = load i64* %state_s_addr_8, align 8" [fips202.c:451->fips202.c:675->poly.c:519]   --->   Operation 46 'load' 'state_s_load_5' <Predicate = (icmp_ln416)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>

State 4 <SV = 3> <Delay = 4.32>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%i_0_i1_i = phi i4 [ 0, %3 ], [ %i_25, %5 ]"   --->   Operation 47 'phi' 'i_0_i1_i' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%r_0_i2_i = phi i64 [ 0, %3 ], [ %r, %5 ]"   --->   Operation 48 'phi' 'r_0_i2_i' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (1.21ns)   --->   "%icmp_ln30 = icmp eq i4 %i_0_i1_i, -8" [fips202.c:30->fips202.c:417->fips202.c:663->poly.c:518]   --->   Operation 49 'icmp' 'icmp_ln30' <Predicate = true> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%empty_48 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 50 'speclooptripcount' 'empty_48' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (1.49ns)   --->   "%i_25 = add i4 %i_0_i1_i, 1" [fips202.c:30->fips202.c:417->fips202.c:663->poly.c:518]   --->   Operation 51 'add' 'i_25' <Predicate = true> <Delay = 1.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "br i1 %icmp_ln30, label %load64.2.exit14.i, label %5" [fips202.c:30->fips202.c:417->fips202.c:663->poly.c:518]   --->   Operation 52 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln31 = zext i4 %i_0_i1_i to i5" [fips202.c:31->fips202.c:417->fips202.c:663->poly.c:518]   --->   Operation 53 'zext' 'zext_ln31' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (1.54ns)   --->   "%add_ln31 = add i5 %shl_ln, %zext_ln31" [fips202.c:31->fips202.c:417->fips202.c:663->poly.c:518]   --->   Operation 54 'add' 'add_ln31' <Predicate = (!icmp_ln30)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln31_6 = zext i5 %add_ln31 to i64" [fips202.c:31->fips202.c:417->fips202.c:663->poly.c:518]   --->   Operation 55 'zext' 'zext_ln31_6' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%seed_addr = getelementptr [5720 x i8]* %seed, i64 0, i64 %zext_ln31_6" [fips202.c:31->fips202.c:417->fips202.c:663->poly.c:518]   --->   Operation 56 'getelementptr' 'seed_addr' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_4 : Operation 57 [2/2] (2.77ns)   --->   "%seed_load = load i8* %seed_addr, align 1" [fips202.c:31->fips202.c:417->fips202.c:663->poly.c:518]   --->   Operation 57 'load' 'seed_load' <Predicate = (!icmp_ln30)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%state_s_addr_9 = getelementptr [25 x i64]* %state_s, i64 0, i64 %zext_ln416" [fips202.c:417->fips202.c:663->poly.c:518]   --->   Operation 58 'getelementptr' 'state_s_addr_9' <Predicate = (icmp_ln30)> <Delay = 0.00>
ST_4 : Operation 59 [2/2] (2.77ns)   --->   "%state_s_load_6 = load i64* %state_s_addr_9, align 8" [fips202.c:417->fips202.c:663->poly.c:518]   --->   Operation 59 'load' 'state_s_load_6' <Predicate = (icmp_ln30)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>

State 5 <SV = 4> <Delay = 5.19>
ST_5 : Operation 60 [1/2] (2.77ns)   --->   "%seed_load = load i8* %seed_addr, align 1" [fips202.c:31->fips202.c:417->fips202.c:663->poly.c:518]   --->   Operation 60 'load' 'seed_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_5 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node r)   --->   "%zext_ln31_7 = zext i8 %seed_load to i64" [fips202.c:31->fips202.c:417->fips202.c:663->poly.c:518]   --->   Operation 61 'zext' 'zext_ln31_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node r)   --->   "%trunc_ln31 = trunc i4 %i_0_i1_i to i3" [fips202.c:31->fips202.c:417->fips202.c:663->poly.c:518]   --->   Operation 62 'trunc' 'trunc_ln31' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node r)   --->   "%shl_ln14 = call i6 @_ssdm_op_BitConcatenate.i6.i3.i3(i3 %trunc_ln31, i3 0)" [fips202.c:31->fips202.c:417->fips202.c:663->poly.c:518]   --->   Operation 63 'bitconcatenate' 'shl_ln14' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node r)   --->   "%zext_ln31_8 = zext i6 %shl_ln14 to i64" [fips202.c:31->fips202.c:417->fips202.c:663->poly.c:518]   --->   Operation 64 'zext' 'zext_ln31_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node r)   --->   "%shl_ln31 = shl i64 %zext_ln31_7, %zext_ln31_8" [fips202.c:31->fips202.c:417->fips202.c:663->poly.c:518]   --->   Operation 65 'shl' 'shl_ln31' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 66 [1/1] (2.42ns) (out node of the LUT)   --->   "%r = or i64 %shl_ln31, %r_0_i2_i" [fips202.c:31->fips202.c:417->fips202.c:663->poly.c:518]   --->   Operation 66 'or' 'r' <Predicate = true> <Delay = 2.42> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 67 [1/1] (0.00ns)   --->   "br label %4" [fips202.c:30->fips202.c:417->fips202.c:663->poly.c:518]   --->   Operation 67 'br' <Predicate = true> <Delay = 0.00>

State 6 <SV = 4> <Delay = 6.35>
ST_6 : Operation 68 [1/2] (2.77ns)   --->   "%state_s_load_6 = load i64* %state_s_addr_9, align 8" [fips202.c:417->fips202.c:663->poly.c:518]   --->   Operation 68 'load' 'state_s_load_6' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_6 : Operation 69 [1/1] (0.80ns)   --->   "%xor_ln417 = xor i64 %state_s_load_6, %r_0_i2_i" [fips202.c:417->fips202.c:663->poly.c:518]   --->   Operation 69 'xor' 'xor_ln417' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 70 [1/1] (2.77ns)   --->   "store i64 %xor_ln417, i64* %state_s_addr_9, align 8" [fips202.c:417->fips202.c:663->poly.c:518]   --->   Operation 70 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_6 : Operation 71 [1/1] (0.00ns)   --->   "br label %.preheader.i" [fips202.c:416->fips202.c:663->poly.c:518]   --->   Operation 71 'br' <Predicate = true> <Delay = 0.00>

State 7 <SV = 3> <Delay = 6.35>
ST_7 : Operation 72 [1/2] (2.77ns)   --->   "%state_s_load = load i64* %state_s_addr_7, align 8" [fips202.c:450->fips202.c:675->poly.c:519]   --->   Operation 72 'load' 'state_s_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_7 : Operation 73 [1/1] (0.80ns)   --->   "%xor_ln450 = xor i64 %state_s_load, 31" [fips202.c:450->fips202.c:675->poly.c:519]   --->   Operation 73 'xor' 'xor_ln450' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 74 [1/1] (2.77ns)   --->   "store i64 %xor_ln450, i64* %state_s_addr_7, align 8" [fips202.c:450->fips202.c:675->poly.c:519]   --->   Operation 74 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_7 : Operation 75 [1/2] (2.77ns)   --->   "%state_s_load_5 = load i64* %state_s_addr_8, align 8" [fips202.c:451->fips202.c:675->poly.c:519]   --->   Operation 75 'load' 'state_s_load_5' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_7 : Operation 76 [1/1] (0.80ns)   --->   "%xor_ln451 = xor i64 %state_s_load_5, -9223372036854775808" [fips202.c:451->fips202.c:675->poly.c:519]   --->   Operation 76 'xor' 'xor_ln451' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 77 [1/1] (2.77ns)   --->   "store i64 %xor_ln451, i64* %state_s_addr_8, align 8" [fips202.c:451->fips202.c:675->poly.c:519]   --->   Operation 77 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>

State 8 <SV = 4> <Delay = 1.35>
ST_8 : Operation 78 [2/2] (1.35ns)   --->   "call fastcc void @keccak_squeezeblocks.1([136 x i8]* %buf, [25 x i64]* %state_s)" [fips202.c:694->poly.c:520]   --->   Operation 78 'call' <Predicate = true> <Delay = 1.35> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 5> <Delay = 1.35>
ST_9 : Operation 79 [1/2] (0.00ns)   --->   "call fastcc void @keccak_squeezeblocks.1([136 x i8]* %buf, [25 x i64]* %state_s)" [fips202.c:694->poly.c:520]   --->   Operation 79 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 80 [1/1] (1.35ns)   --->   "br label %6" [poly.c:523]   --->   Operation 80 'br' <Predicate = true> <Delay = 1.35>

State 10 <SV = 6> <Delay = 2.77>
ST_10 : Operation 81 [1/1] (0.00ns)   --->   "%i_0 = phi i4 [ 0, %keccak_absorb.1.exit ], [ %i, %7 ]"   --->   Operation 81 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 82 [1/1] (0.00ns)   --->   "%signs_0 = phi i64 [ 0, %keccak_absorb.1.exit ], [ %signs, %7 ]"   --->   Operation 82 'phi' 'signs_0' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 83 [1/1] (1.21ns)   --->   "%icmp_ln523 = icmp eq i4 %i_0, -8" [poly.c:523]   --->   Operation 83 'icmp' 'icmp_ln523' <Predicate = true> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 84 [1/1] (0.00ns)   --->   "%empty_49 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 84 'speclooptripcount' 'empty_49' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 85 [1/1] (1.49ns)   --->   "%i = add i4 %i_0, 1" [poly.c:523]   --->   Operation 85 'add' 'i' <Predicate = true> <Delay = 1.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 86 [1/1] (0.00ns)   --->   "br i1 %icmp_ln523, label %.preheader4.preheader, label %7" [poly.c:523]   --->   Operation 86 'br' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln524 = zext i4 %i_0 to i64" [poly.c:524]   --->   Operation 87 'zext' 'zext_ln524' <Predicate = (!icmp_ln523)> <Delay = 0.00>
ST_10 : Operation 88 [1/1] (0.00ns)   --->   "%buf_addr = getelementptr inbounds [136 x i8]* %buf, i64 0, i64 %zext_ln524" [poly.c:524]   --->   Operation 88 'getelementptr' 'buf_addr' <Predicate = (!icmp_ln523)> <Delay = 0.00>
ST_10 : Operation 89 [2/2] (2.77ns)   --->   "%buf_load = load i8* %buf_addr, align 1" [poly.c:524]   --->   Operation 89 'load' 'buf_load' <Predicate = (!icmp_ln523)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_10 : Operation 90 [1/1] (1.35ns)   --->   "br label %.preheader4" [poly.c:527]   --->   Operation 90 'br' <Predicate = (icmp_ln523)> <Delay = 1.35>

State 11 <SV = 7> <Delay = 5.19>
ST_11 : Operation 91 [1/2] (2.77ns)   --->   "%buf_load = load i8* %buf_addr, align 1" [poly.c:524]   --->   Operation 91 'load' 'buf_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_11 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node signs)   --->   "%zext_ln524_1 = zext i8 %buf_load to i64" [poly.c:524]   --->   Operation 92 'zext' 'zext_ln524_1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node signs)   --->   "%trunc_ln524 = trunc i4 %i_0 to i3" [poly.c:524]   --->   Operation 93 'trunc' 'trunc_ln524' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node signs)   --->   "%shl_ln13 = call i6 @_ssdm_op_BitConcatenate.i6.i3.i3(i3 %trunc_ln524, i3 0)" [poly.c:524]   --->   Operation 94 'bitconcatenate' 'shl_ln13' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node signs)   --->   "%zext_ln524_2 = zext i6 %shl_ln13 to i64" [poly.c:524]   --->   Operation 95 'zext' 'zext_ln524_2' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node signs)   --->   "%shl_ln524 = shl i64 %zext_ln524_1, %zext_ln524_2" [poly.c:524]   --->   Operation 96 'shl' 'shl_ln524' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 97 [1/1] (2.42ns) (out node of the LUT)   --->   "%signs = or i64 %shl_ln524, %signs_0" [poly.c:524]   --->   Operation 97 'or' 'signs' <Predicate = true> <Delay = 2.42> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 98 [1/1] (0.00ns)   --->   "br label %6" [poly.c:523]   --->   Operation 98 'br' <Predicate = true> <Delay = 0.00>

State 12 <SV = 7> <Delay = 2.77>
ST_12 : Operation 99 [1/1] (0.00ns)   --->   "%i_1 = phi i9 [ %i_26, %8 ], [ 0, %.preheader4.preheader ]"   --->   Operation 99 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 100 [1/1] (1.34ns)   --->   "%icmp_ln527 = icmp eq i9 %i_1, -256" [poly.c:527]   --->   Operation 100 'icmp' 'icmp_ln527' <Predicate = true> <Delay = 1.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 101 [1/1] (0.00ns)   --->   "%empty_50 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)"   --->   Operation 101 'speclooptripcount' 'empty_50' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 102 [1/1] (1.73ns)   --->   "%i_26 = add i9 %i_1, 1" [poly.c:527]   --->   Operation 102 'add' 'i_26' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 103 [1/1] (0.00ns)   --->   "br i1 %icmp_ln527, label %.preheader3.preheader, label %8" [poly.c:527]   --->   Operation 103 'br' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 104 [1/1] (0.00ns)   --->   "%zext_ln528 = zext i9 %i_1 to i64" [poly.c:528]   --->   Operation 104 'zext' 'zext_ln528' <Predicate = (!icmp_ln527)> <Delay = 0.00>
ST_12 : Operation 105 [1/1] (0.00ns)   --->   "%c_coeffs_addr = getelementptr [256 x i32]* %c_coeffs, i64 0, i64 %zext_ln528" [poly.c:528]   --->   Operation 105 'getelementptr' 'c_coeffs_addr' <Predicate = (!icmp_ln527)> <Delay = 0.00>
ST_12 : Operation 106 [1/1] (2.77ns)   --->   "store i32 0, i32* %c_coeffs_addr, align 4" [poly.c:528]   --->   Operation 106 'store' <Predicate = (!icmp_ln527)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_12 : Operation 107 [1/1] (0.00ns)   --->   "br label %.preheader4" [poly.c:527]   --->   Operation 107 'br' <Predicate = (!icmp_ln527)> <Delay = 0.00>
ST_12 : Operation 108 [1/1] (1.35ns)   --->   "br label %.preheader3" [poly.c:529]   --->   Operation 108 'br' <Predicate = (icmp_ln527)> <Delay = 1.35>

State 13 <SV = 8> <Delay = 1.35>
ST_13 : Operation 109 [1/1] (0.00ns)   --->   "%i_2 = phi i9 [ %i_27, %10 ], [ 217, %.preheader3.preheader ]"   --->   Operation 109 'phi' 'i_2' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 110 [1/1] (0.00ns)   --->   "%pos_0 = phi i32 [ %pos, %10 ], [ 8, %.preheader3.preheader ]"   --->   Operation 110 'phi' 'pos_0' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 111 [1/1] (0.00ns)   --->   "%signs_1 = phi i64 [ %signs_3, %10 ], [ %signs_0, %.preheader3.preheader ]"   --->   Operation 111 'phi' 'signs_1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 112 [1/1] (1.34ns)   --->   "%icmp_ln529 = icmp eq i9 %i_2, -256" [poly.c:529]   --->   Operation 112 'icmp' 'icmp_ln529' <Predicate = true> <Delay = 1.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 113 [1/1] (0.00ns)   --->   "%empty_51 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 39, i64 39, i64 39)"   --->   Operation 113 'speclooptripcount' 'empty_51' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 114 [1/1] (0.00ns)   --->   "br i1 %icmp_ln529, label %11, label %.preheader.preheader" [poly.c:529]   --->   Operation 114 'br' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 115 [1/1] (1.35ns)   --->   "br label %.preheader" [poly.c:531]   --->   Operation 115 'br' <Predicate = (!icmp_ln529)> <Delay = 1.35>
ST_13 : Operation 116 [1/1] (0.00ns)   --->   "ret void" [poly.c:543]   --->   Operation 116 'ret' <Predicate = (icmp_ln529)> <Delay = 0.00>

State 14 <SV = 9> <Delay = 3.46>
ST_14 : Operation 117 [1/1] (0.00ns)   --->   "%pos_1 = phi i32 [ %pos, %.preheader._crit_edge ], [ %pos_0, %.preheader.preheader ]"   --->   Operation 117 'phi' 'pos_1' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 118 [1/1] (2.11ns)   --->   "%icmp_ln531 = icmp ugt i32 %pos_1, 135" [poly.c:531]   --->   Operation 118 'icmp' 'icmp_ln531' <Predicate = true> <Delay = 2.11> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 119 [1/1] (1.35ns)   --->   "br i1 %icmp_ln531, label %9, label %.preheader._crit_edge" [poly.c:531]   --->   Operation 119 'br' <Predicate = true> <Delay = 1.35>
ST_14 : Operation 120 [2/2] (1.35ns)   --->   "call fastcc void @keccak_squeezeblocks.1([136 x i8]* %buf, [25 x i64]* %state_s)" [fips202.c:694->poly.c:532]   --->   Operation 120 'call' <Predicate = (icmp_ln531)> <Delay = 1.35> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 15 <SV = 10> <Delay = 1.35>
ST_15 : Operation 121 [1/2] (0.00ns)   --->   "call fastcc void @keccak_squeezeblocks.1([136 x i8]* %buf, [25 x i64]* %state_s)" [fips202.c:694->poly.c:532]   --->   Operation 121 'call' <Predicate = (icmp_ln531)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_15 : Operation 122 [1/1] (1.35ns)   --->   "br label %.preheader._crit_edge" [poly.c:534]   --->   Operation 122 'br' <Predicate = (icmp_ln531)> <Delay = 1.35>

State 16 <SV = 11> <Delay = 2.77>
ST_16 : Operation 123 [1/1] (0.00ns)   --->   "%pos_2 = phi i32 [ 0, %9 ], [ %pos_1, %.preheader ]" [poly.c:536]   --->   Operation 123 'phi' 'pos_2' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 124 [1/1] (2.18ns)   --->   "%pos = add i32 %pos_2, 1" [poly.c:536]   --->   Operation 124 'add' 'pos' <Predicate = true> <Delay = 2.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 125 [1/1] (0.00ns)   --->   "%zext_ln536 = zext i32 %pos_2 to i64" [poly.c:536]   --->   Operation 125 'zext' 'zext_ln536' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 126 [1/1] (0.00ns)   --->   "%buf_addr_12 = getelementptr inbounds [136 x i8]* %buf, i64 0, i64 %zext_ln536" [poly.c:536]   --->   Operation 126 'getelementptr' 'buf_addr_12' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 127 [2/2] (2.77ns)   --->   "%buf_load_11 = load i8* %buf_addr_12, align 1" [poly.c:536]   --->   Operation 127 'load' 'buf_load_11' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>

State 17 <SV = 12> <Delay = 5.54>
ST_17 : Operation 128 [1/2] (2.77ns)   --->   "%buf_load_11 = load i8* %buf_addr_12, align 1" [poly.c:536]   --->   Operation 128 'load' 'buf_load_11' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_17 : Operation 129 [1/1] (0.00ns)   --->   "%zext_ln536_1 = zext i8 %buf_load_11 to i9" [poly.c:536]   --->   Operation 129 'zext' 'zext_ln536_1' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 130 [1/1] (1.34ns)   --->   "%icmp_ln537 = icmp ugt i9 %zext_ln536_1, %i_2" [poly.c:537]   --->   Operation 130 'icmp' 'icmp_ln537' <Predicate = true> <Delay = 1.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 131 [1/1] (0.00ns)   --->   "br i1 %icmp_ln537, label %.preheader, label %10" [poly.c:537]   --->   Operation 131 'br' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 132 [1/1] (0.00ns)   --->   "%zext_ln539 = zext i8 %buf_load_11 to i64" [poly.c:539]   --->   Operation 132 'zext' 'zext_ln539' <Predicate = (!icmp_ln537)> <Delay = 0.00>
ST_17 : Operation 133 [1/1] (0.00ns)   --->   "%c_coeffs_addr_1 = getelementptr [256 x i32]* %c_coeffs, i64 0, i64 %zext_ln539" [poly.c:539]   --->   Operation 133 'getelementptr' 'c_coeffs_addr_1' <Predicate = (!icmp_ln537)> <Delay = 0.00>
ST_17 : Operation 134 [2/2] (2.77ns)   --->   "%c_coeffs_load = load i32* %c_coeffs_addr_1, align 4" [poly.c:539]   --->   Operation 134 'load' 'c_coeffs_load' <Predicate = (!icmp_ln537)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_17 : Operation 135 [1/1] (0.00ns)   --->   "%trunc_ln540 = trunc i64 %signs_1 to i1" [poly.c:540]   --->   Operation 135 'trunc' 'trunc_ln540' <Predicate = (!icmp_ln537)> <Delay = 0.00>
ST_17 : Operation 136 [1/1] (0.00ns)   --->   "%signs_2 = call i63 @_ssdm_op_PartSelect.i63.i64.i32.i32(i64 %signs_1, i32 1, i32 63)" [poly.c:541]   --->   Operation 136 'partselect' 'signs_2' <Predicate = (!icmp_ln537)> <Delay = 0.00>
ST_17 : Operation 137 [1/1] (0.00ns)   --->   "%signs_3 = zext i63 %signs_2 to i64" [poly.c:541]   --->   Operation 137 'zext' 'signs_3' <Predicate = (!icmp_ln537)> <Delay = 0.00>

State 18 <SV = 13> <Delay = 5.54>
ST_18 : Operation 138 [1/2] (2.77ns)   --->   "%c_coeffs_load = load i32* %c_coeffs_addr_1, align 4" [poly.c:539]   --->   Operation 138 'load' 'c_coeffs_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_18 : Operation 139 [1/1] (0.00ns)   --->   "%zext_ln539_1 = zext i9 %i_2 to i64" [poly.c:539]   --->   Operation 139 'zext' 'zext_ln539_1' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 140 [1/1] (0.00ns)   --->   "%c_coeffs_addr_2 = getelementptr [256 x i32]* %c_coeffs, i64 0, i64 %zext_ln539_1" [poly.c:539]   --->   Operation 140 'getelementptr' 'c_coeffs_addr_2' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 141 [1/1] (2.77ns)   --->   "store i32 %c_coeffs_load, i32* %c_coeffs_addr_2, align 4" [poly.c:539]   --->   Operation 141 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_18 : Operation 142 [1/1] (1.73ns)   --->   "%i_27 = add i9 1, %i_2" [poly.c:529]   --->   Operation 142 'add' 'i_27' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 14> <Delay = 3.97>
ST_19 : Operation 143 [1/1] (0.00ns)   --->   "%shl_ln15 = call i2 @_ssdm_op_BitConcatenate.i2.i1.i1(i1 %trunc_ln540, i1 false)" [poly.c:540]   --->   Operation 143 'bitconcatenate' 'shl_ln15' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 144 [1/1] (1.20ns)   --->   "%sub_ln540 = sub i2 1, %shl_ln15" [poly.c:540]   --->   Operation 144 'sub' 'sub_ln540' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 145 [1/1] (0.00ns)   --->   "%sext_ln540 = sext i2 %sub_ln540 to i32" [poly.c:540]   --->   Operation 145 'sext' 'sext_ln540' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 146 [1/1] (2.77ns)   --->   "store i32 %sext_ln540, i32* %c_coeffs_addr_1, align 4" [poly.c:540]   --->   Operation 146 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_19 : Operation 147 [1/1] (0.00ns)   --->   "br label %.preheader3" [poly.c:529]   --->   Operation 147 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 1e+04ns, clock uncertainty: 1.25e+03ns.

 <State 1>: 1.35ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', fips202.c:362->fips202.c:648->poly.c:517) [9]  (1.35 ns)

 <State 2>: 2.77ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', fips202.c:362->fips202.c:648->poly.c:517) [9]  (0 ns)
	'getelementptr' operation ('state_s_addr', fips202.c:363->fips202.c:648->poly.c:517) [16]  (0 ns)
	'store' operation ('store_ln363', fips202.c:363->fips202.c:648->poly.c:517) of constant 0 on array 'state.s', poly.c:515 [17]  (2.77 ns)

 <State 3>: 2.77ns
The critical path consists of the following:
	'getelementptr' operation ('state_s_addr_7', fips202.c:450->fips202.c:675->poly.c:519) [60]  (0 ns)
	'load' operation ('state_s_load', fips202.c:450->fips202.c:675->poly.c:519) on array 'state.s', poly.c:515 [61]  (2.77 ns)

 <State 4>: 4.32ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', fips202.c:30->fips202.c:417->fips202.c:663->poly.c:518) [34]  (0 ns)
	'add' operation ('add_ln31', fips202.c:31->fips202.c:417->fips202.c:663->poly.c:518) [42]  (1.55 ns)
	'getelementptr' operation ('seed_addr', fips202.c:31->fips202.c:417->fips202.c:663->poly.c:518) [44]  (0 ns)
	'load' operation ('seed_load', fips202.c:31->fips202.c:417->fips202.c:663->poly.c:518) on array 'seed' [45]  (2.77 ns)

 <State 5>: 5.19ns
The critical path consists of the following:
	'load' operation ('seed_load', fips202.c:31->fips202.c:417->fips202.c:663->poly.c:518) on array 'seed' [45]  (2.77 ns)
	'shl' operation ('shl_ln31', fips202.c:31->fips202.c:417->fips202.c:663->poly.c:518) [50]  (0 ns)
	'or' operation ('r', fips202.c:31->fips202.c:417->fips202.c:663->poly.c:518) [51]  (2.42 ns)

 <State 6>: 6.35ns
The critical path consists of the following:
	'load' operation ('state_s_load_6', fips202.c:417->fips202.c:663->poly.c:518) on array 'state.s', poly.c:515 [55]  (2.77 ns)
	'xor' operation ('xor_ln417', fips202.c:417->fips202.c:663->poly.c:518) [56]  (0.808 ns)
	'store' operation ('store_ln417', fips202.c:417->fips202.c:663->poly.c:518) of variable 'xor_ln417', fips202.c:417->fips202.c:663->poly.c:518 on array 'state.s', poly.c:515 [57]  (2.77 ns)

 <State 7>: 6.35ns
The critical path consists of the following:
	'load' operation ('state_s_load', fips202.c:450->fips202.c:675->poly.c:519) on array 'state.s', poly.c:515 [61]  (2.77 ns)
	'xor' operation ('xor_ln450', fips202.c:450->fips202.c:675->poly.c:519) [62]  (0.808 ns)
	'store' operation ('store_ln450', fips202.c:450->fips202.c:675->poly.c:519) of variable 'xor_ln450', fips202.c:450->fips202.c:675->poly.c:519 on array 'state.s', poly.c:515 [63]  (2.77 ns)

 <State 8>: 1.35ns
The critical path consists of the following:
	'call' operation ('call_ln694', fips202.c:694->poly.c:520) to 'keccak_squeezeblocks.1' [68]  (1.35 ns)

 <State 9>: 1.35ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', poly.c:523) [71]  (1.35 ns)

 <State 10>: 2.77ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', poly.c:523) [71]  (0 ns)
	'getelementptr' operation ('buf_addr', poly.c:524) [79]  (0 ns)
	'load' operation ('buf_load', poly.c:524) on array 'buf', poly.c:514 [80]  (2.77 ns)

 <State 11>: 5.19ns
The critical path consists of the following:
	'load' operation ('buf_load', poly.c:524) on array 'buf', poly.c:514 [80]  (2.77 ns)
	'shl' operation ('shl_ln524', poly.c:524) [85]  (0 ns)
	'or' operation ('signs', poly.c:524) [86]  (2.42 ns)

 <State 12>: 2.77ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', poly.c:527) [91]  (0 ns)
	'getelementptr' operation ('c_coeffs_addr', poly.c:528) [98]  (0 ns)
	'store' operation ('store_ln528', poly.c:528) of constant 0 on array 'c_coeffs' [99]  (2.77 ns)

 <State 13>: 1.35ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('pos') with incoming values : ('pos', poly.c:536) [113]  (1.35 ns)

 <State 14>: 3.46ns
The critical path consists of the following:
	'phi' operation ('pos') with incoming values : ('pos', poly.c:536) [113]  (0 ns)
	'icmp' operation ('icmp_ln531', poly.c:531) [114]  (2.11 ns)
	multiplexor before 'phi' operation ('pos_2', poly.c:536) with incoming values : ('pos', poly.c:536) [120]  (1.35 ns)

 <State 15>: 1.35ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('pos_2', poly.c:536) with incoming values : ('pos', poly.c:536) [120]  (1.35 ns)

 <State 16>: 2.77ns
The critical path consists of the following:
	'phi' operation ('pos_2', poly.c:536) with incoming values : ('pos', poly.c:536) [120]  (0 ns)
	'getelementptr' operation ('buf_addr_12', poly.c:536) [123]  (0 ns)
	'load' operation ('buf_load_11', poly.c:536) on array 'buf', poly.c:514 [124]  (2.77 ns)

 <State 17>: 5.54ns
The critical path consists of the following:
	'load' operation ('buf_load_11', poly.c:536) on array 'buf', poly.c:514 [124]  (2.77 ns)
	'getelementptr' operation ('c_coeffs_addr_1', poly.c:539) [130]  (0 ns)
	'load' operation ('c_coeffs_load', poly.c:539) on array 'c_coeffs' [131]  (2.77 ns)

 <State 18>: 5.54ns
The critical path consists of the following:
	'load' operation ('c_coeffs_load', poly.c:539) on array 'c_coeffs' [131]  (2.77 ns)
	'store' operation ('store_ln539', poly.c:539) of variable 'c_coeffs_load', poly.c:539 on array 'c_coeffs' [134]  (2.77 ns)

 <State 19>: 3.97ns
The critical path consists of the following:
	'sub' operation ('sub_ln540', poly.c:540) [137]  (1.2 ns)
	'store' operation ('store_ln540', poly.c:540) of variable 'sext_ln540', poly.c:540 on array 'c_coeffs' [139]  (2.77 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
