// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "keccak_squeezeblocks.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic keccak_squeezeblocks::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic keccak_squeezeblocks::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> keccak_squeezeblocks::ap_ST_fsm_state1 = "1";
const sc_lv<6> keccak_squeezeblocks::ap_ST_fsm_state2 = "10";
const sc_lv<6> keccak_squeezeblocks::ap_ST_fsm_state3 = "100";
const sc_lv<6> keccak_squeezeblocks::ap_ST_fsm_state4 = "1000";
const sc_lv<6> keccak_squeezeblocks::ap_ST_fsm_state5 = "10000";
const sc_lv<6> keccak_squeezeblocks::ap_ST_fsm_state6 = "100000";
const sc_lv<32> keccak_squeezeblocks::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> keccak_squeezeblocks::ap_const_lv32_3 = "11";
const sc_lv<1> keccak_squeezeblocks::ap_const_lv1_0 = "0";
const sc_lv<1> keccak_squeezeblocks::ap_const_lv1_1 = "1";
const sc_lv<32> keccak_squeezeblocks::ap_const_lv32_4 = "100";
const sc_lv<32> keccak_squeezeblocks::ap_const_lv32_5 = "101";
const sc_lv<8> keccak_squeezeblocks::ap_const_lv8_0 = "00000000";
const sc_lv<5> keccak_squeezeblocks::ap_const_lv5_0 = "00000";
const sc_lv<32> keccak_squeezeblocks::ap_const_lv32_2 = "10";
const sc_lv<4> keccak_squeezeblocks::ap_const_lv4_0 = "0000";
const sc_lv<32> keccak_squeezeblocks::ap_const_lv32_1 = "1";
const sc_lv<5> keccak_squeezeblocks::ap_const_lv5_11 = "10001";
const sc_lv<5> keccak_squeezeblocks::ap_const_lv5_1 = "1";
const sc_lv<8> keccak_squeezeblocks::ap_const_lv8_88 = "10001000";
const sc_lv<3> keccak_squeezeblocks::ap_const_lv3_0 = "000";
const sc_lv<4> keccak_squeezeblocks::ap_const_lv4_8 = "1000";
const sc_lv<4> keccak_squeezeblocks::ap_const_lv4_1 = "1";
const bool keccak_squeezeblocks::ap_const_boolean_1 = true;

keccak_squeezeblocks::keccak_squeezeblocks(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_KeccakF1600_StatePer_1_fu_118 = new KeccakF1600_StatePer_1("grp_KeccakF1600_StatePer_1_fu_118");
    grp_KeccakF1600_StatePer_1_fu_118->ap_clk(ap_clk);
    grp_KeccakF1600_StatePer_1_fu_118->ap_rst(ap_rst);
    grp_KeccakF1600_StatePer_1_fu_118->ap_start(grp_KeccakF1600_StatePer_1_fu_118_ap_start);
    grp_KeccakF1600_StatePer_1_fu_118->ap_done(grp_KeccakF1600_StatePer_1_fu_118_ap_done);
    grp_KeccakF1600_StatePer_1_fu_118->ap_idle(grp_KeccakF1600_StatePer_1_fu_118_ap_idle);
    grp_KeccakF1600_StatePer_1_fu_118->ap_ready(grp_KeccakF1600_StatePer_1_fu_118_ap_ready);
    grp_KeccakF1600_StatePer_1_fu_118->state_address0(grp_KeccakF1600_StatePer_1_fu_118_state_address0);
    grp_KeccakF1600_StatePer_1_fu_118->state_ce0(grp_KeccakF1600_StatePer_1_fu_118_state_ce0);
    grp_KeccakF1600_StatePer_1_fu_118->state_we0(grp_KeccakF1600_StatePer_1_fu_118_state_we0);
    grp_KeccakF1600_StatePer_1_fu_118->state_d0(grp_KeccakF1600_StatePer_1_fu_118_state_d0);
    grp_KeccakF1600_StatePer_1_fu_118->state_q0(s_q0);
    grp_KeccakF1600_StatePer_1_fu_118->state_address1(grp_KeccakF1600_StatePer_1_fu_118_state_address1);
    grp_KeccakF1600_StatePer_1_fu_118->state_ce1(grp_KeccakF1600_StatePer_1_fu_118_state_ce1);
    grp_KeccakF1600_StatePer_1_fu_118->state_we1(grp_KeccakF1600_StatePer_1_fu_118_state_we1);
    grp_KeccakF1600_StatePer_1_fu_118->state_d1(grp_KeccakF1600_StatePer_1_fu_118_state_d1);
    grp_KeccakF1600_StatePer_1_fu_118->state_q1(s_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln478_fu_143_p2);
    sensitive << ( p_0_rec_reg_83 );

    SC_METHOD(thread_add_ln48_3_fu_199_p2);
    sensitive << ( shl_ln_reg_233 );
    sensitive << ( zext_ln48_7_fu_195_p1 );

    SC_METHOD(thread_add_ln48_fu_204_p2);
    sensitive << ( p_0_rec_reg_83 );
    sensitive << ( add_ln48_3_fu_199_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_phi_mux_p_01_phi_fu_75_p4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_p_01_phi_fu_75_p4);
    sensitive << ( p_01_reg_70 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_phi_mux_p_01_phi_fu_75_p4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_grp_KeccakF1600_StatePer_1_fu_118_ap_start);
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_118_ap_start_reg );

    SC_METHOD(thread_i_31_fu_163_p2);
    sensitive << ( i_0_i_reg_107 );

    SC_METHOD(thread_i_fu_132_p2);
    sensitive << ( i_0_reg_95 );

    SC_METHOD(thread_icmp_ln476_fu_126_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_0_reg_95 );

    SC_METHOD(thread_icmp_ln47_fu_157_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( i_0_i_reg_107 );

    SC_METHOD(thread_lshr_ln48_fu_185_p2);
    sensitive << ( s_load_reg_238 );
    sensitive << ( zext_ln48_fu_181_p1 );

    SC_METHOD(thread_out_r_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln48_8_fu_210_p1 );

    SC_METHOD(thread_out_r_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_out_r_d0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( lshr_ln48_fu_185_p2 );

    SC_METHOD(thread_out_r_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln47_fu_157_p2 );

    SC_METHOD(thread_s_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_118_state_address0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln477_fu_138_p1 );

    SC_METHOD(thread_s_address1);
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_118_state_address1 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_s_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_118_state_ce0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_s_ce1);
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_118_state_ce1 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_s_d0);
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_118_state_d0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_s_d1);
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_118_state_d1 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_s_we0);
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_118_state_we0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_s_we1);
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_118_state_we1 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_shl_ln17_fu_173_p3);
    sensitive << ( trunc_ln48_fu_169_p1 );

    SC_METHOD(thread_shl_ln_fu_149_p3);
    sensitive << ( i_0_reg_95 );

    SC_METHOD(thread_trunc_ln48_fu_169_p1);
    sensitive << ( i_0_i_reg_107 );

    SC_METHOD(thread_zext_ln477_fu_138_p1);
    sensitive << ( i_0_reg_95 );

    SC_METHOD(thread_zext_ln48_7_fu_195_p1);
    sensitive << ( i_0_i_reg_107 );

    SC_METHOD(thread_zext_ln48_8_fu_210_p1);
    sensitive << ( add_ln48_fu_204_p2 );

    SC_METHOD(thread_zext_ln48_fu_181_p1);
    sensitive << ( shl_ln17_fu_173_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln476_fu_126_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_KeccakF1600_StatePer_1_fu_118_ap_done );
    sensitive << ( ap_phi_mux_p_01_phi_fu_75_p4 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln47_fu_157_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    ap_CS_fsm = "000001";
    grp_KeccakF1600_StatePer_1_fu_118_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "keccak_squeezeblocks_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, out_r_address0, "(port)out_r_address0");
    sc_trace(mVcdFile, out_r_ce0, "(port)out_r_ce0");
    sc_trace(mVcdFile, out_r_we0, "(port)out_r_we0");
    sc_trace(mVcdFile, out_r_d0, "(port)out_r_d0");
    sc_trace(mVcdFile, s_address0, "(port)s_address0");
    sc_trace(mVcdFile, s_ce0, "(port)s_ce0");
    sc_trace(mVcdFile, s_we0, "(port)s_we0");
    sc_trace(mVcdFile, s_d0, "(port)s_d0");
    sc_trace(mVcdFile, s_q0, "(port)s_q0");
    sc_trace(mVcdFile, s_address1, "(port)s_address1");
    sc_trace(mVcdFile, s_ce1, "(port)s_ce1");
    sc_trace(mVcdFile, s_we1, "(port)s_we1");
    sc_trace(mVcdFile, s_d1, "(port)s_d1");
    sc_trace(mVcdFile, s_q1, "(port)s_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_fu_132_p2, "i_fu_132_p2");
    sc_trace(mVcdFile, i_reg_218, "i_reg_218");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln476_fu_126_p2, "icmp_ln476_fu_126_p2");
    sc_trace(mVcdFile, add_ln478_fu_143_p2, "add_ln478_fu_143_p2");
    sc_trace(mVcdFile, shl_ln_fu_149_p3, "shl_ln_fu_149_p3");
    sc_trace(mVcdFile, shl_ln_reg_233, "shl_ln_reg_233");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, s_load_reg_238, "s_load_reg_238");
    sc_trace(mVcdFile, i_31_fu_163_p2, "i_31_fu_163_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_118_ap_start, "grp_KeccakF1600_StatePer_1_fu_118_ap_start");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_118_ap_done, "grp_KeccakF1600_StatePer_1_fu_118_ap_done");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_118_ap_idle, "grp_KeccakF1600_StatePer_1_fu_118_ap_idle");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_118_ap_ready, "grp_KeccakF1600_StatePer_1_fu_118_ap_ready");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_118_state_address0, "grp_KeccakF1600_StatePer_1_fu_118_state_address0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_118_state_ce0, "grp_KeccakF1600_StatePer_1_fu_118_state_ce0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_118_state_we0, "grp_KeccakF1600_StatePer_1_fu_118_state_we0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_118_state_d0, "grp_KeccakF1600_StatePer_1_fu_118_state_d0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_118_state_address1, "grp_KeccakF1600_StatePer_1_fu_118_state_address1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_118_state_ce1, "grp_KeccakF1600_StatePer_1_fu_118_state_ce1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_118_state_we1, "grp_KeccakF1600_StatePer_1_fu_118_state_we1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_118_state_d1, "grp_KeccakF1600_StatePer_1_fu_118_state_d1");
    sc_trace(mVcdFile, ap_phi_mux_p_01_phi_fu_75_p4, "ap_phi_mux_p_01_phi_fu_75_p4");
    sc_trace(mVcdFile, p_01_reg_70, "p_01_reg_70");
    sc_trace(mVcdFile, p_0_rec_reg_83, "p_0_rec_reg_83");
    sc_trace(mVcdFile, i_0_reg_95, "i_0_reg_95");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln47_fu_157_p2, "icmp_ln47_fu_157_p2");
    sc_trace(mVcdFile, i_0_i_reg_107, "i_0_i_reg_107");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_1_fu_118_ap_start_reg, "grp_KeccakF1600_StatePer_1_fu_118_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln477_fu_138_p1, "zext_ln477_fu_138_p1");
    sc_trace(mVcdFile, zext_ln48_8_fu_210_p1, "zext_ln48_8_fu_210_p1");
    sc_trace(mVcdFile, trunc_ln48_fu_169_p1, "trunc_ln48_fu_169_p1");
    sc_trace(mVcdFile, shl_ln17_fu_173_p3, "shl_ln17_fu_173_p3");
    sc_trace(mVcdFile, zext_ln48_fu_181_p1, "zext_ln48_fu_181_p1");
    sc_trace(mVcdFile, lshr_ln48_fu_185_p2, "lshr_ln48_fu_185_p2");
    sc_trace(mVcdFile, zext_ln48_7_fu_195_p1, "zext_ln48_7_fu_195_p1");
    sc_trace(mVcdFile, add_ln48_3_fu_199_p2, "add_ln48_3_fu_199_p2");
    sc_trace(mVcdFile, add_ln48_fu_204_p2, "add_ln48_fu_204_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

keccak_squeezeblocks::~keccak_squeezeblocks() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_KeccakF1600_StatePer_1_fu_118;
}

void keccak_squeezeblocks::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_KeccakF1600_StatePer_1_fu_118_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_p_01_phi_fu_75_p4.read()))) {
            grp_KeccakF1600_StatePer_1_fu_118_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_KeccakF1600_StatePer_1_fu_118_ap_ready.read())) {
            grp_KeccakF1600_StatePer_1_fu_118_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln47_fu_157_p2.read()))) {
        i_0_i_reg_107 = i_31_fu_163_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_0_i_reg_107 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln47_fu_157_p2.read()))) {
        i_0_reg_95 = i_reg_218.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_1_fu_118_ap_done.read(), ap_const_logic_1))) {
        i_0_reg_95 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln476_fu_126_p2.read(), ap_const_lv1_1))) {
        p_01_reg_70 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_01_reg_70 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln476_fu_126_p2.read(), ap_const_lv1_1))) {
        p_0_rec_reg_83 = add_ln478_fu_143_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_0_rec_reg_83 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_reg_218 = i_fu_132_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        s_load_reg_238 = s_q0.read();
        shl_ln_reg_233 = shl_ln_fu_149_p3.read();
    }
}

void keccak_squeezeblocks::thread_add_ln478_fu_143_p2() {
    add_ln478_fu_143_p2 = (!p_0_rec_reg_83.read().is_01() || !ap_const_lv8_88.is_01())? sc_lv<8>(): (sc_biguint<8>(p_0_rec_reg_83.read()) + sc_bigint<8>(ap_const_lv8_88));
}

void keccak_squeezeblocks::thread_add_ln48_3_fu_199_p2() {
    add_ln48_3_fu_199_p2 = (!zext_ln48_7_fu_195_p1.read().is_01() || !shl_ln_reg_233.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln48_7_fu_195_p1.read()) + sc_biguint<8>(shl_ln_reg_233.read()));
}

void keccak_squeezeblocks::thread_add_ln48_fu_204_p2() {
    add_ln48_fu_204_p2 = (!p_0_rec_reg_83.read().is_01() || !add_ln48_3_fu_199_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_0_rec_reg_83.read()) + sc_biguint<8>(add_ln48_3_fu_199_p2.read()));
}

void keccak_squeezeblocks::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void keccak_squeezeblocks::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void keccak_squeezeblocks::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void keccak_squeezeblocks::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void keccak_squeezeblocks::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void keccak_squeezeblocks::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void keccak_squeezeblocks::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_phi_mux_p_01_phi_fu_75_p4.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void keccak_squeezeblocks::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void keccak_squeezeblocks::thread_ap_phi_mux_p_01_phi_fu_75_p4() {
    ap_phi_mux_p_01_phi_fu_75_p4 = p_01_reg_70.read();
}

void keccak_squeezeblocks::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_phi_mux_p_01_phi_fu_75_p4.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void keccak_squeezeblocks::thread_grp_KeccakF1600_StatePer_1_fu_118_ap_start() {
    grp_KeccakF1600_StatePer_1_fu_118_ap_start = grp_KeccakF1600_StatePer_1_fu_118_ap_start_reg.read();
}

void keccak_squeezeblocks::thread_i_31_fu_163_p2() {
    i_31_fu_163_p2 = (!i_0_i_reg_107.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_i_reg_107.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void keccak_squeezeblocks::thread_i_fu_132_p2() {
    i_fu_132_p2 = (!i_0_reg_95.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_reg_95.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void keccak_squeezeblocks::thread_icmp_ln476_fu_126_p2() {
    icmp_ln476_fu_126_p2 = (!i_0_reg_95.read().is_01() || !ap_const_lv5_11.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_95.read() == ap_const_lv5_11);
}

void keccak_squeezeblocks::thread_icmp_ln47_fu_157_p2() {
    icmp_ln47_fu_157_p2 = (!i_0_i_reg_107.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_107.read() == ap_const_lv4_8);
}

void keccak_squeezeblocks::thread_lshr_ln48_fu_185_p2() {
    lshr_ln48_fu_185_p2 = (!zext_ln48_fu_181_p1.read().is_01())? sc_lv<64>(): s_load_reg_238.read() >> (unsigned short)zext_ln48_fu_181_p1.read().to_uint();
}

void keccak_squeezeblocks::thread_out_r_address0() {
    out_r_address0 =  (sc_lv<8>) (zext_ln48_8_fu_210_p1.read());
}

void keccak_squeezeblocks::thread_out_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        out_r_ce0 = ap_const_logic_1;
    } else {
        out_r_ce0 = ap_const_logic_0;
    }
}

void keccak_squeezeblocks::thread_out_r_d0() {
    out_r_d0 = lshr_ln48_fu_185_p2.read().range(8-1, 0);
}

void keccak_squeezeblocks::thread_out_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln47_fu_157_p2.read()))) {
        out_r_we0 = ap_const_logic_1;
    } else {
        out_r_we0 = ap_const_logic_0;
    }
}

void keccak_squeezeblocks::thread_s_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        s_address0 =  (sc_lv<5>) (zext_ln477_fu_138_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        s_address0 = grp_KeccakF1600_StatePer_1_fu_118_state_address0.read();
    } else {
        s_address0 = "XXXXX";
    }
}

void keccak_squeezeblocks::thread_s_address1() {
    s_address1 = grp_KeccakF1600_StatePer_1_fu_118_state_address1.read();
}

void keccak_squeezeblocks::thread_s_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        s_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        s_ce0 = grp_KeccakF1600_StatePer_1_fu_118_state_ce0.read();
    } else {
        s_ce0 = ap_const_logic_0;
    }
}

void keccak_squeezeblocks::thread_s_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        s_ce1 = grp_KeccakF1600_StatePer_1_fu_118_state_ce1.read();
    } else {
        s_ce1 = ap_const_logic_0;
    }
}

void keccak_squeezeblocks::thread_s_d0() {
    s_d0 = grp_KeccakF1600_StatePer_1_fu_118_state_d0.read();
}

void keccak_squeezeblocks::thread_s_d1() {
    s_d1 = grp_KeccakF1600_StatePer_1_fu_118_state_d1.read();
}

void keccak_squeezeblocks::thread_s_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        s_we0 = grp_KeccakF1600_StatePer_1_fu_118_state_we0.read();
    } else {
        s_we0 = ap_const_logic_0;
    }
}

void keccak_squeezeblocks::thread_s_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        s_we1 = grp_KeccakF1600_StatePer_1_fu_118_state_we1.read();
    } else {
        s_we1 = ap_const_logic_0;
    }
}

void keccak_squeezeblocks::thread_shl_ln17_fu_173_p3() {
    shl_ln17_fu_173_p3 = esl_concat<3,3>(trunc_ln48_fu_169_p1.read(), ap_const_lv3_0);
}

void keccak_squeezeblocks::thread_shl_ln_fu_149_p3() {
    shl_ln_fu_149_p3 = esl_concat<5,3>(i_0_reg_95.read(), ap_const_lv3_0);
}

void keccak_squeezeblocks::thread_trunc_ln48_fu_169_p1() {
    trunc_ln48_fu_169_p1 = i_0_i_reg_107.read().range(3-1, 0);
}

void keccak_squeezeblocks::thread_zext_ln477_fu_138_p1() {
    zext_ln477_fu_138_p1 = esl_zext<64,5>(i_0_reg_95.read());
}

void keccak_squeezeblocks::thread_zext_ln48_7_fu_195_p1() {
    zext_ln48_7_fu_195_p1 = esl_zext<8,4>(i_0_i_reg_107.read());
}

void keccak_squeezeblocks::thread_zext_ln48_8_fu_210_p1() {
    zext_ln48_8_fu_210_p1 = esl_zext<64,8>(add_ln48_fu_204_p2.read());
}

void keccak_squeezeblocks::thread_zext_ln48_fu_181_p1() {
    zext_ln48_fu_181_p1 = esl_zext<64,6>(shl_ln17_fu_173_p3.read());
}

void keccak_squeezeblocks::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_phi_mux_p_01_phi_fu_75_p4.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_1_fu_118_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln476_fu_126_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln47_fu_157_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

}

