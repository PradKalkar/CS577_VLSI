// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dilithium_shake128_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dilithium_shake128_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dilithium_shake128_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<12> dilithium_shake128_s::ap_ST_fsm_state1 = "1";
const sc_lv<12> dilithium_shake128_s::ap_ST_fsm_state2 = "10";
const sc_lv<12> dilithium_shake128_s::ap_ST_fsm_state3 = "100";
const sc_lv<12> dilithium_shake128_s::ap_ST_fsm_state4 = "1000";
const sc_lv<12> dilithium_shake128_s::ap_ST_fsm_state5 = "10000";
const sc_lv<12> dilithium_shake128_s::ap_ST_fsm_state6 = "100000";
const sc_lv<12> dilithium_shake128_s::ap_ST_fsm_state7 = "1000000";
const sc_lv<12> dilithium_shake128_s::ap_ST_fsm_state8 = "10000000";
const sc_lv<12> dilithium_shake128_s::ap_ST_fsm_state9 = "100000000";
const sc_lv<12> dilithium_shake128_s::ap_ST_fsm_state10 = "1000000000";
const sc_lv<12> dilithium_shake128_s::ap_ST_fsm_state11 = "10000000000";
const sc_lv<12> dilithium_shake128_s::ap_ST_fsm_state12 = "100000000000";
const sc_lv<32> dilithium_shake128_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dilithium_shake128_s::ap_const_lv32_1 = "1";
const sc_lv<32> dilithium_shake128_s::ap_const_lv32_2 = "10";
const sc_lv<1> dilithium_shake128_s::ap_const_lv1_0 = "0";
const sc_lv<32> dilithium_shake128_s::ap_const_lv32_3 = "11";
const sc_lv<1> dilithium_shake128_s::ap_const_lv1_1 = "1";
const sc_lv<32> dilithium_shake128_s::ap_const_lv32_4 = "100";
const sc_lv<32> dilithium_shake128_s::ap_const_lv32_6 = "110";
const sc_lv<32> dilithium_shake128_s::ap_const_lv32_7 = "111";
const sc_lv<32> dilithium_shake128_s::ap_const_lv32_8 = "1000";
const sc_lv<32> dilithium_shake128_s::ap_const_lv32_9 = "1001";
const sc_lv<32> dilithium_shake128_s::ap_const_lv32_A = "1010";
const sc_lv<5> dilithium_shake128_s::ap_const_lv5_0 = "00000";
const sc_lv<32> dilithium_shake128_s::ap_const_lv32_5 = "101";
const sc_lv<3> dilithium_shake128_s::ap_const_lv3_0 = "000";
const sc_lv<4> dilithium_shake128_s::ap_const_lv4_0 = "0000";
const sc_lv<64> dilithium_shake128_s::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<2> dilithium_shake128_s::ap_const_lv2_0 = "00";
const sc_lv<64> dilithium_shake128_s::ap_const_lv64_4 = "100";
const sc_lv<64> dilithium_shake128_s::ap_const_lv64_14 = "10100";
const sc_lv<32> dilithium_shake128_s::ap_const_lv32_B = "1011";
const sc_lv<8> dilithium_shake128_s::ap_const_lv8_0 = "00000000";
const sc_lv<5> dilithium_shake128_s::ap_const_lv5_19 = "11001";
const sc_lv<5> dilithium_shake128_s::ap_const_lv5_1 = "1";
const sc_lv<3> dilithium_shake128_s::ap_const_lv3_4 = "100";
const sc_lv<3> dilithium_shake128_s::ap_const_lv3_1 = "1";
const sc_lv<4> dilithium_shake128_s::ap_const_lv4_8 = "1000";
const sc_lv<4> dilithium_shake128_s::ap_const_lv4_1 = "1";
const sc_lv<3> dilithium_shake128_s::ap_const_lv3_7 = "111";
const sc_lv<2> dilithium_shake128_s::ap_const_lv2_2 = "10";
const sc_lv<2> dilithium_shake128_s::ap_const_lv2_1 = "1";
const sc_lv<64> dilithium_shake128_s::ap_const_lv64_1F0000 = "111110000000000000000";
const sc_lv<64> dilithium_shake128_s::ap_const_lv64_8000000000000000 = "1000000000000000000000000000000000000000000000000000000000000000";
const bool dilithium_shake128_s::ap_const_boolean_1 = true;

dilithium_shake128_s::dilithium_shake128_s(sc_module_name name) : sc_module(name), mVcdFile(0) {
    t_U = new dilithium_shake12dEe("t_U");
    t_U->clk(ap_clk);
    t_U->reset(ap_rst);
    t_U->address0(t_address0);
    t_U->ce0(t_ce0);
    t_U->we0(t_we0);
    t_U->d0(t_d0);
    t_U->q0(t_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln31_fu_335_p2);
    sensitive << ( shl_ln_reg_560 );
    sensitive << ( zext_ln31_fu_331_p1 );

    SC_METHOD(thread_add_ln388_fu_384_p2);
    sensitive << ( phi_ln388_reg_217 );

    SC_METHOD(thread_add_ln417_fu_301_p2);
    sensitive << ( i_3_i_i31_reg_182 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_i_29_fu_325_p2);
    sensitive << ( i_0_i_reg_193 );

    SC_METHOD(thread_i_30_fu_407_p2);
    sensitive << ( i_4_i_i_reg_228 );

    SC_METHOD(thread_i_31_fu_429_p2);
    sensitive << ( i_5_i_i_reg_239 );

    SC_METHOD(thread_i_32_fu_470_p2);
    sensitive << ( i_0_i29_reg_250 );

    SC_METHOD(thread_i_fu_280_p2);
    sensitive << ( i_0_i_i1_reg_171 );

    SC_METHOD(thread_icmp_ln30_2_fu_464_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( i_0_i29_reg_250 );

    SC_METHOD(thread_icmp_ln30_fu_319_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_0_i_reg_193 );

    SC_METHOD(thread_icmp_ln362_fu_274_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_i_i1_reg_171 );

    SC_METHOD(thread_icmp_ln388_fu_395_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( phi_ln388_reg_217 );

    SC_METHOD(thread_icmp_ln417_fu_295_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_3_i_i31_reg_182 );

    SC_METHOD(thread_icmp_ln424_fu_401_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( i_4_i_i_reg_228 );

    SC_METHOD(thread_icmp_ln426_fu_423_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( i_5_i_i_reg_239 );

    SC_METHOD(thread_r_2_fu_507_p2);
    sensitive << ( r_0_i30_reg_262 );
    sensitive << ( shl_ln31_2_fu_501_p2 );

    SC_METHOD(thread_r_fu_371_p2);
    sensitive << ( r_0_i_reg_205 );
    sensitive << ( shl_ln31_fu_365_p2 );

    SC_METHOD(thread_seed_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln31_8_fu_340_p1 );

    SC_METHOD(thread_seed_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_select_ln427_fu_455_p3);
    sensitive << ( trunc_ln427_fu_435_p1 );
    sensitive << ( zext_ln427_fu_448_p1 );
    sensitive << ( trunc_ln427_2_fu_452_p1 );

    SC_METHOD(thread_shl_ln13_fu_353_p3);
    sensitive << ( trunc_ln31_fu_349_p1 );

    SC_METHOD(thread_shl_ln31_2_fu_501_p2);
    sensitive << ( zext_ln31_12_fu_481_p1 );
    sensitive << ( zext_ln31_13_fu_497_p1 );

    SC_METHOD(thread_shl_ln31_5_fu_489_p3);
    sensitive << ( trunc_ln31_3_fu_485_p1 );

    SC_METHOD(thread_shl_ln31_fu_365_p2);
    sensitive << ( zext_ln31_9_fu_345_p1 );
    sensitive << ( zext_ln31_10_fu_361_p1 );

    SC_METHOD(thread_shl_ln_fu_311_p3);
    sensitive << ( trunc_ln418_fu_307_p1 );

    SC_METHOD(thread_state_s_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln417_reg_547 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( state_s_addr_1_reg_578 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln363_fu_286_p1 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_state_s_address1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_state_s_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_state_s_ce1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_state_s_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( xor_ln418_fu_377_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( xor_ln452_fu_526_p2 );

    SC_METHOD(thread_state_s_d1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( xor_ln428_fu_513_p2 );

    SC_METHOD(thread_state_s_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln362_fu_274_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_state_s_we1);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_t_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( zext_ln388_fu_390_p1 );
    sensitive << ( zext_ln425_fu_413_p1 );
    sensitive << ( zext_ln426_fu_418_p1 );
    sensitive << ( zext_ln31_11_fu_476_p1 );

    SC_METHOD(thread_t_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_t_d0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( select_ln427_fu_455_p3 );

    SC_METHOD(thread_t_we0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln424_fu_401_p2 );
    sensitive << ( icmp_ln426_fu_423_p2 );

    SC_METHOD(thread_tmp_s_fu_439_p4);
    sensitive << ( nonce );

    SC_METHOD(thread_trunc_ln31_3_fu_485_p1);
    sensitive << ( i_0_i29_reg_250 );

    SC_METHOD(thread_trunc_ln31_fu_349_p1);
    sensitive << ( i_0_i_reg_193 );

    SC_METHOD(thread_trunc_ln418_fu_307_p1);
    sensitive << ( i_3_i_i31_reg_182 );

    SC_METHOD(thread_trunc_ln427_2_fu_452_p1);
    sensitive << ( nonce );

    SC_METHOD(thread_trunc_ln427_fu_435_p1);
    sensitive << ( i_5_i_i_reg_239 );

    SC_METHOD(thread_xor_ln418_fu_377_p2);
    sensitive << ( state_s_q0 );
    sensitive << ( r_0_i_reg_205 );

    SC_METHOD(thread_xor_ln428_fu_513_p2);
    sensitive << ( state_s_q0 );
    sensitive << ( r_0_i30_reg_262 );

    SC_METHOD(thread_xor_ln452_fu_526_p2);
    sensitive << ( state_s_q1 );

    SC_METHOD(thread_zext_ln31_10_fu_361_p1);
    sensitive << ( shl_ln13_fu_353_p3 );

    SC_METHOD(thread_zext_ln31_11_fu_476_p1);
    sensitive << ( i_0_i29_reg_250 );

    SC_METHOD(thread_zext_ln31_12_fu_481_p1);
    sensitive << ( t_q0 );

    SC_METHOD(thread_zext_ln31_13_fu_497_p1);
    sensitive << ( shl_ln31_5_fu_489_p3 );

    SC_METHOD(thread_zext_ln31_8_fu_340_p1);
    sensitive << ( add_ln31_fu_335_p2 );

    SC_METHOD(thread_zext_ln31_9_fu_345_p1);
    sensitive << ( seed_q0 );

    SC_METHOD(thread_zext_ln31_fu_331_p1);
    sensitive << ( i_0_i_reg_193 );

    SC_METHOD(thread_zext_ln363_fu_286_p1);
    sensitive << ( i_0_i_i1_reg_171 );

    SC_METHOD(thread_zext_ln388_fu_390_p1);
    sensitive << ( phi_ln388_reg_217 );

    SC_METHOD(thread_zext_ln417_fu_291_p1);
    sensitive << ( i_3_i_i31_reg_182 );

    SC_METHOD(thread_zext_ln425_fu_413_p1);
    sensitive << ( i_4_i_i_reg_228 );

    SC_METHOD(thread_zext_ln426_fu_418_p1);
    sensitive << ( i_5_i_i_reg_239 );

    SC_METHOD(thread_zext_ln427_fu_448_p1);
    sensitive << ( tmp_s_fu_439_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln417_fu_295_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln30_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln30_2_fu_464_p2 );
    sensitive << ( icmp_ln362_fu_274_p2 );
    sensitive << ( icmp_ln388_fu_395_p2 );
    sensitive << ( icmp_ln424_fu_401_p2 );
    sensitive << ( icmp_ln426_fu_423_p2 );

    ap_CS_fsm = "000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dilithium_shake128_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, state_s_address0, "(port)state_s_address0");
    sc_trace(mVcdFile, state_s_ce0, "(port)state_s_ce0");
    sc_trace(mVcdFile, state_s_we0, "(port)state_s_we0");
    sc_trace(mVcdFile, state_s_d0, "(port)state_s_d0");
    sc_trace(mVcdFile, state_s_q0, "(port)state_s_q0");
    sc_trace(mVcdFile, state_s_address1, "(port)state_s_address1");
    sc_trace(mVcdFile, state_s_ce1, "(port)state_s_ce1");
    sc_trace(mVcdFile, state_s_we1, "(port)state_s_we1");
    sc_trace(mVcdFile, state_s_d1, "(port)state_s_d1");
    sc_trace(mVcdFile, state_s_q1, "(port)state_s_q1");
    sc_trace(mVcdFile, seed_address0, "(port)seed_address0");
    sc_trace(mVcdFile, seed_ce0, "(port)seed_ce0");
    sc_trace(mVcdFile, seed_q0, "(port)seed_q0");
    sc_trace(mVcdFile, nonce, "(port)nonce");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_fu_280_p2, "i_fu_280_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln417_fu_291_p1, "zext_ln417_fu_291_p1");
    sc_trace(mVcdFile, zext_ln417_reg_547, "zext_ln417_reg_547");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, add_ln417_fu_301_p2, "add_ln417_fu_301_p2");
    sc_trace(mVcdFile, add_ln417_reg_555, "add_ln417_reg_555");
    sc_trace(mVcdFile, shl_ln_fu_311_p3, "shl_ln_fu_311_p3");
    sc_trace(mVcdFile, shl_ln_reg_560, "shl_ln_reg_560");
    sc_trace(mVcdFile, icmp_ln417_fu_295_p2, "icmp_ln417_fu_295_p2");
    sc_trace(mVcdFile, i_29_fu_325_p2, "i_29_fu_325_p2");
    sc_trace(mVcdFile, i_29_reg_568, "i_29_reg_568");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln30_fu_319_p2, "icmp_ln30_fu_319_p2");
    sc_trace(mVcdFile, state_s_addr_1_reg_578, "state_s_addr_1_reg_578");
    sc_trace(mVcdFile, r_fu_371_p2, "r_fu_371_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, add_ln388_fu_384_p2, "add_ln388_fu_384_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, i_30_fu_407_p2, "i_30_fu_407_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, i_31_fu_429_p2, "i_31_fu_429_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, i_32_fu_470_p2, "i_32_fu_470_p2");
    sc_trace(mVcdFile, i_32_reg_615, "i_32_reg_615");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, icmp_ln30_2_fu_464_p2, "icmp_ln30_2_fu_464_p2");
    sc_trace(mVcdFile, r_2_fu_507_p2, "r_2_fu_507_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, t_address0, "t_address0");
    sc_trace(mVcdFile, t_ce0, "t_ce0");
    sc_trace(mVcdFile, t_we0, "t_we0");
    sc_trace(mVcdFile, t_d0, "t_d0");
    sc_trace(mVcdFile, t_q0, "t_q0");
    sc_trace(mVcdFile, i_0_i_i1_reg_171, "i_0_i_i1_reg_171");
    sc_trace(mVcdFile, icmp_ln362_fu_274_p2, "icmp_ln362_fu_274_p2");
    sc_trace(mVcdFile, i_3_i_i31_reg_182, "i_3_i_i31_reg_182");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, i_0_i_reg_193, "i_0_i_reg_193");
    sc_trace(mVcdFile, r_0_i_reg_205, "r_0_i_reg_205");
    sc_trace(mVcdFile, phi_ln388_reg_217, "phi_ln388_reg_217");
    sc_trace(mVcdFile, icmp_ln388_fu_395_p2, "icmp_ln388_fu_395_p2");
    sc_trace(mVcdFile, i_4_i_i_reg_228, "i_4_i_i_reg_228");
    sc_trace(mVcdFile, icmp_ln424_fu_401_p2, "icmp_ln424_fu_401_p2");
    sc_trace(mVcdFile, i_5_i_i_reg_239, "i_5_i_i_reg_239");
    sc_trace(mVcdFile, icmp_ln426_fu_423_p2, "icmp_ln426_fu_423_p2");
    sc_trace(mVcdFile, i_0_i29_reg_250, "i_0_i29_reg_250");
    sc_trace(mVcdFile, r_0_i30_reg_262, "r_0_i30_reg_262");
    sc_trace(mVcdFile, zext_ln363_fu_286_p1, "zext_ln363_fu_286_p1");
    sc_trace(mVcdFile, zext_ln31_8_fu_340_p1, "zext_ln31_8_fu_340_p1");
    sc_trace(mVcdFile, zext_ln388_fu_390_p1, "zext_ln388_fu_390_p1");
    sc_trace(mVcdFile, zext_ln425_fu_413_p1, "zext_ln425_fu_413_p1");
    sc_trace(mVcdFile, zext_ln426_fu_418_p1, "zext_ln426_fu_418_p1");
    sc_trace(mVcdFile, zext_ln31_11_fu_476_p1, "zext_ln31_11_fu_476_p1");
    sc_trace(mVcdFile, xor_ln418_fu_377_p2, "xor_ln418_fu_377_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, xor_ln452_fu_526_p2, "xor_ln452_fu_526_p2");
    sc_trace(mVcdFile, select_ln427_fu_455_p3, "select_ln427_fu_455_p3");
    sc_trace(mVcdFile, trunc_ln418_fu_307_p1, "trunc_ln418_fu_307_p1");
    sc_trace(mVcdFile, zext_ln31_fu_331_p1, "zext_ln31_fu_331_p1");
    sc_trace(mVcdFile, add_ln31_fu_335_p2, "add_ln31_fu_335_p2");
    sc_trace(mVcdFile, trunc_ln31_fu_349_p1, "trunc_ln31_fu_349_p1");
    sc_trace(mVcdFile, shl_ln13_fu_353_p3, "shl_ln13_fu_353_p3");
    sc_trace(mVcdFile, zext_ln31_9_fu_345_p1, "zext_ln31_9_fu_345_p1");
    sc_trace(mVcdFile, zext_ln31_10_fu_361_p1, "zext_ln31_10_fu_361_p1");
    sc_trace(mVcdFile, shl_ln31_fu_365_p2, "shl_ln31_fu_365_p2");
    sc_trace(mVcdFile, tmp_s_fu_439_p4, "tmp_s_fu_439_p4");
    sc_trace(mVcdFile, trunc_ln427_fu_435_p1, "trunc_ln427_fu_435_p1");
    sc_trace(mVcdFile, zext_ln427_fu_448_p1, "zext_ln427_fu_448_p1");
    sc_trace(mVcdFile, trunc_ln427_2_fu_452_p1, "trunc_ln427_2_fu_452_p1");
    sc_trace(mVcdFile, trunc_ln31_3_fu_485_p1, "trunc_ln31_3_fu_485_p1");
    sc_trace(mVcdFile, shl_ln31_5_fu_489_p3, "shl_ln31_5_fu_489_p3");
    sc_trace(mVcdFile, zext_ln31_12_fu_481_p1, "zext_ln31_12_fu_481_p1");
    sc_trace(mVcdFile, zext_ln31_13_fu_497_p1, "zext_ln31_13_fu_497_p1");
    sc_trace(mVcdFile, shl_ln31_2_fu_501_p2, "shl_ln31_2_fu_501_p2");
    sc_trace(mVcdFile, xor_ln428_fu_513_p2, "xor_ln428_fu_513_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

dilithium_shake128_s::~dilithium_shake128_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete t_U;
}

void dilithium_shake128_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln426_fu_423_p2.read()))) {
        i_0_i29_reg_250 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_0_i29_reg_250 = i_32_reg_615.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln362_fu_274_p2.read()))) {
        i_0_i_i1_reg_171 = i_fu_280_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_i_i1_reg_171 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_0_i_reg_193 = i_29_reg_568.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(icmp_ln417_fu_295_p2.read(), ap_const_lv1_0))) {
        i_0_i_reg_193 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln362_fu_274_p2.read()))) {
        i_3_i_i31_reg_182 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_3_i_i31_reg_182 = add_ln417_reg_555.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln388_fu_395_p2.read()))) {
        i_4_i_i_reg_228 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln424_fu_401_p2.read()))) {
        i_4_i_i_reg_228 = i_30_fu_407_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln424_fu_401_p2.read()))) {
        i_5_i_i_reg_239 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln426_fu_423_p2.read()))) {
        i_5_i_i_reg_239 = i_31_fu_429_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln417_fu_295_p2.read(), ap_const_lv1_1))) {
        phi_ln388_reg_217 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln388_fu_395_p2.read()))) {
        phi_ln388_reg_217 = add_ln388_fu_384_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln426_fu_423_p2.read()))) {
        r_0_i30_reg_262 = ap_const_lv64_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_0_i30_reg_262 = r_2_fu_507_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_0_i_reg_205 = r_fu_371_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(icmp_ln417_fu_295_p2.read(), ap_const_lv1_0))) {
        r_0_i_reg_205 = ap_const_lv64_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        add_ln417_reg_555 = add_ln417_fu_301_p2.read();
        zext_ln417_reg_547 = zext_ln417_fu_291_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_29_reg_568 = i_29_fu_325_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_32_reg_615 = i_32_fu_470_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln417_fu_295_p2.read(), ap_const_lv1_0))) {
        shl_ln_reg_560 = shl_ln_fu_311_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln30_fu_319_p2.read(), ap_const_lv1_1))) {
        state_s_addr_1_reg_578 =  (sc_lv<5>) (zext_ln417_reg_547.read());
    }
}

void dilithium_shake128_s::thread_add_ln31_fu_335_p2() {
    add_ln31_fu_335_p2 = (!shl_ln_reg_560.read().is_01() || !zext_ln31_fu_331_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(shl_ln_reg_560.read()) + sc_biguint<5>(zext_ln31_fu_331_p1.read()));
}

void dilithium_shake128_s::thread_add_ln388_fu_384_p2() {
    add_ln388_fu_384_p2 = (!phi_ln388_reg_217.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(phi_ln388_reg_217.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void dilithium_shake128_s::thread_add_ln417_fu_301_p2() {
    add_ln417_fu_301_p2 = (!i_3_i_i31_reg_182.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_3_i_i31_reg_182.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void dilithium_shake128_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dilithium_shake128_s::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void dilithium_shake128_s::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void dilithium_shake128_s::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void dilithium_shake128_s::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void dilithium_shake128_s::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void dilithium_shake128_s::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void dilithium_shake128_s::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void dilithium_shake128_s::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void dilithium_shake128_s::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void dilithium_shake128_s::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void dilithium_shake128_s::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void dilithium_shake128_s::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dilithium_shake128_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dilithium_shake128_s::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dilithium_shake128_s::thread_i_29_fu_325_p2() {
    i_29_fu_325_p2 = (!i_0_i_reg_193.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_i_reg_193.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void dilithium_shake128_s::thread_i_30_fu_407_p2() {
    i_30_fu_407_p2 = (!i_4_i_i_reg_228.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_4_i_i_reg_228.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void dilithium_shake128_s::thread_i_31_fu_429_p2() {
    i_31_fu_429_p2 = (!i_5_i_i_reg_239.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_5_i_i_reg_239.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void dilithium_shake128_s::thread_i_32_fu_470_p2() {
    i_32_fu_470_p2 = (!i_0_i29_reg_250.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_i29_reg_250.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void dilithium_shake128_s::thread_i_fu_280_p2() {
    i_fu_280_p2 = (!i_0_i_i1_reg_171.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_i_i1_reg_171.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void dilithium_shake128_s::thread_icmp_ln30_2_fu_464_p2() {
    icmp_ln30_2_fu_464_p2 = (!i_0_i29_reg_250.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i29_reg_250.read() == ap_const_lv4_8);
}

void dilithium_shake128_s::thread_icmp_ln30_fu_319_p2() {
    icmp_ln30_fu_319_p2 = (!i_0_i_reg_193.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_193.read() == ap_const_lv4_8);
}

void dilithium_shake128_s::thread_icmp_ln362_fu_274_p2() {
    icmp_ln362_fu_274_p2 = (!i_0_i_i1_reg_171.read().is_01() || !ap_const_lv5_19.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_i1_reg_171.read() == ap_const_lv5_19);
}

void dilithium_shake128_s::thread_icmp_ln388_fu_395_p2() {
    icmp_ln388_fu_395_p2 = (!phi_ln388_reg_217.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln388_reg_217.read() == ap_const_lv3_7);
}

void dilithium_shake128_s::thread_icmp_ln417_fu_295_p2() {
    icmp_ln417_fu_295_p2 = (!i_3_i_i31_reg_182.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_3_i_i31_reg_182.read() == ap_const_lv3_4);
}

void dilithium_shake128_s::thread_icmp_ln424_fu_401_p2() {
    icmp_ln424_fu_401_p2 = (!i_4_i_i_reg_228.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_4_i_i_reg_228.read() == ap_const_lv4_8);
}

void dilithium_shake128_s::thread_icmp_ln426_fu_423_p2() {
    icmp_ln426_fu_423_p2 = (!i_5_i_i_reg_239.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(i_5_i_i_reg_239.read() == ap_const_lv2_2);
}

void dilithium_shake128_s::thread_r_2_fu_507_p2() {
    r_2_fu_507_p2 = (shl_ln31_2_fu_501_p2.read() | r_0_i30_reg_262.read());
}

void dilithium_shake128_s::thread_r_fu_371_p2() {
    r_fu_371_p2 = (shl_ln31_fu_365_p2.read() | r_0_i_reg_205.read());
}

void dilithium_shake128_s::thread_seed_address0() {
    seed_address0 =  (sc_lv<8>) (zext_ln31_8_fu_340_p1.read());
}

void dilithium_shake128_s::thread_seed_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        seed_ce0 = ap_const_logic_1;
    } else {
        seed_ce0 = ap_const_logic_0;
    }
}

void dilithium_shake128_s::thread_select_ln427_fu_455_p3() {
    select_ln427_fu_455_p3 = (!trunc_ln427_fu_435_p1.read()[0].is_01())? sc_lv<8>(): ((trunc_ln427_fu_435_p1.read()[0].to_bool())? zext_ln427_fu_448_p1.read(): trunc_ln427_2_fu_452_p1.read());
}

void dilithium_shake128_s::thread_shl_ln13_fu_353_p3() {
    shl_ln13_fu_353_p3 = esl_concat<3,3>(trunc_ln31_fu_349_p1.read(), ap_const_lv3_0);
}

void dilithium_shake128_s::thread_shl_ln31_2_fu_501_p2() {
    shl_ln31_2_fu_501_p2 = (!zext_ln31_13_fu_497_p1.read().is_01())? sc_lv<64>(): zext_ln31_12_fu_481_p1.read() << (unsigned short)zext_ln31_13_fu_497_p1.read().to_uint();
}

void dilithium_shake128_s::thread_shl_ln31_5_fu_489_p3() {
    shl_ln31_5_fu_489_p3 = esl_concat<3,3>(trunc_ln31_3_fu_485_p1.read(), ap_const_lv3_0);
}

void dilithium_shake128_s::thread_shl_ln31_fu_365_p2() {
    shl_ln31_fu_365_p2 = (!zext_ln31_10_fu_361_p1.read().is_01())? sc_lv<64>(): zext_ln31_9_fu_345_p1.read() << (unsigned short)zext_ln31_10_fu_361_p1.read().to_uint();
}

void dilithium_shake128_s::thread_shl_ln_fu_311_p3() {
    shl_ln_fu_311_p3 = esl_concat<2,3>(trunc_ln418_fu_307_p1.read(), ap_const_lv3_0);
}

void dilithium_shake128_s::thread_state_s_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        state_s_address0 =  (sc_lv<5>) (ap_const_lv64_14);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        state_s_address0 =  (sc_lv<5>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        state_s_address0 = state_s_addr_1_reg_578.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        state_s_address0 =  (sc_lv<5>) (zext_ln417_reg_547.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        state_s_address0 =  (sc_lv<5>) (zext_ln363_fu_286_p1.read());
    } else {
        state_s_address0 = "XXXXX";
    }
}

void dilithium_shake128_s::thread_state_s_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        state_s_address1 =  (sc_lv<5>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        state_s_address1 =  (sc_lv<5>) (ap_const_lv64_14);
    } else {
        state_s_address1 = "XXXXX";
    }
}

void dilithium_shake128_s::thread_state_s_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        state_s_ce0 = ap_const_logic_1;
    } else {
        state_s_ce0 = ap_const_logic_0;
    }
}

void dilithium_shake128_s::thread_state_s_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        state_s_ce1 = ap_const_logic_1;
    } else {
        state_s_ce1 = ap_const_logic_0;
    }
}

void dilithium_shake128_s::thread_state_s_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        state_s_d0 = xor_ln452_fu_526_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        state_s_d0 = xor_ln418_fu_377_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        state_s_d0 = ap_const_lv64_0;
    } else {
        state_s_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dilithium_shake128_s::thread_state_s_d1() {
    state_s_d1 = (xor_ln428_fu_513_p2.read() ^ ap_const_lv64_1F0000);
}

void dilithium_shake128_s::thread_state_s_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln362_fu_274_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        state_s_we0 = ap_const_logic_1;
    } else {
        state_s_we0 = ap_const_logic_0;
    }
}

void dilithium_shake128_s::thread_state_s_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        state_s_we1 = ap_const_logic_1;
    } else {
        state_s_we1 = ap_const_logic_0;
    }
}

void dilithium_shake128_s::thread_t_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        t_address0 =  (sc_lv<3>) (zext_ln31_11_fu_476_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        t_address0 =  (sc_lv<3>) (zext_ln426_fu_418_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        t_address0 =  (sc_lv<3>) (zext_ln425_fu_413_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        t_address0 =  (sc_lv<3>) (zext_ln388_fu_390_p1.read());
    } else {
        t_address0 =  (sc_lv<3>) ("XXX");
    }
}

void dilithium_shake128_s::thread_t_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        t_ce0 = ap_const_logic_1;
    } else {
        t_ce0 = ap_const_logic_0;
    }
}

void dilithium_shake128_s::thread_t_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        t_d0 = select_ln427_fu_455_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        t_d0 = ap_const_lv8_0;
    } else {
        t_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void dilithium_shake128_s::thread_t_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln424_fu_401_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln426_fu_423_p2.read())))) {
        t_we0 = ap_const_logic_1;
    } else {
        t_we0 = ap_const_logic_0;
    }
}

void dilithium_shake128_s::thread_tmp_s_fu_439_p4() {
    tmp_s_fu_439_p4 = nonce.read().range(9, 8);
}

void dilithium_shake128_s::thread_trunc_ln31_3_fu_485_p1() {
    trunc_ln31_3_fu_485_p1 = i_0_i29_reg_250.read().range(3-1, 0);
}

void dilithium_shake128_s::thread_trunc_ln31_fu_349_p1() {
    trunc_ln31_fu_349_p1 = i_0_i_reg_193.read().range(3-1, 0);
}

void dilithium_shake128_s::thread_trunc_ln418_fu_307_p1() {
    trunc_ln418_fu_307_p1 = i_3_i_i31_reg_182.read().range(2-1, 0);
}

void dilithium_shake128_s::thread_trunc_ln427_2_fu_452_p1() {
    trunc_ln427_2_fu_452_p1 = nonce.read().range(8-1, 0);
}

void dilithium_shake128_s::thread_trunc_ln427_fu_435_p1() {
    trunc_ln427_fu_435_p1 = i_5_i_i_reg_239.read().range(1-1, 0);
}

void dilithium_shake128_s::thread_xor_ln418_fu_377_p2() {
    xor_ln418_fu_377_p2 = (state_s_q0.read() ^ r_0_i_reg_205.read());
}

void dilithium_shake128_s::thread_xor_ln428_fu_513_p2() {
    xor_ln428_fu_513_p2 = (state_s_q0.read() ^ r_0_i30_reg_262.read());
}

void dilithium_shake128_s::thread_xor_ln452_fu_526_p2() {
    xor_ln452_fu_526_p2 = (state_s_q1.read() ^ ap_const_lv64_8000000000000000);
}

void dilithium_shake128_s::thread_zext_ln31_10_fu_361_p1() {
    zext_ln31_10_fu_361_p1 = esl_zext<64,6>(shl_ln13_fu_353_p3.read());
}

void dilithium_shake128_s::thread_zext_ln31_11_fu_476_p1() {
    zext_ln31_11_fu_476_p1 = esl_zext<64,4>(i_0_i29_reg_250.read());
}

void dilithium_shake128_s::thread_zext_ln31_12_fu_481_p1() {
    zext_ln31_12_fu_481_p1 = esl_zext<64,8>(t_q0.read());
}

void dilithium_shake128_s::thread_zext_ln31_13_fu_497_p1() {
    zext_ln31_13_fu_497_p1 = esl_zext<64,6>(shl_ln31_5_fu_489_p3.read());
}

void dilithium_shake128_s::thread_zext_ln31_8_fu_340_p1() {
    zext_ln31_8_fu_340_p1 = esl_zext<64,5>(add_ln31_fu_335_p2.read());
}

void dilithium_shake128_s::thread_zext_ln31_9_fu_345_p1() {
    zext_ln31_9_fu_345_p1 = esl_zext<64,8>(seed_q0.read());
}

void dilithium_shake128_s::thread_zext_ln31_fu_331_p1() {
    zext_ln31_fu_331_p1 = esl_zext<5,4>(i_0_i_reg_193.read());
}

void dilithium_shake128_s::thread_zext_ln363_fu_286_p1() {
    zext_ln363_fu_286_p1 = esl_zext<64,5>(i_0_i_i1_reg_171.read());
}

void dilithium_shake128_s::thread_zext_ln388_fu_390_p1() {
    zext_ln388_fu_390_p1 = esl_zext<64,3>(phi_ln388_reg_217.read());
}

void dilithium_shake128_s::thread_zext_ln417_fu_291_p1() {
    zext_ln417_fu_291_p1 = esl_zext<64,3>(i_3_i_i31_reg_182.read());
}

void dilithium_shake128_s::thread_zext_ln425_fu_413_p1() {
    zext_ln425_fu_413_p1 = esl_zext<64,4>(i_4_i_i_reg_228.read());
}

void dilithium_shake128_s::thread_zext_ln426_fu_418_p1() {
    zext_ln426_fu_418_p1 = esl_zext<64,2>(i_5_i_i_reg_239.read());
}

void dilithium_shake128_s::thread_zext_ln427_fu_448_p1() {
    zext_ln427_fu_448_p1 = esl_zext<8,2>(tmp_s_fu_439_p4.read());
}

void dilithium_shake128_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln362_fu_274_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln417_fu_295_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln30_fu_319_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln388_fu_395_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln424_fu_401_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln426_fu_423_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln30_2_fu_464_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<12>) ("XXXXXXXXXXXX");
            break;
    }
}

}

