// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module crypto_sign_signatur (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sig_address0,
        sig_ce0,
        sig_we0,
        sig_d0,
        sig_q0,
        sig_address1,
        sig_ce1,
        sig_we1,
        sig_d1,
        mlen,
        sk_address0,
        sk_ce0,
        sk_q0,
        sk_address1,
        sk_ce1,
        sk_q1
);

parameter    ap_ST_fsm_state1 = 118'd1;
parameter    ap_ST_fsm_state2 = 118'd2;
parameter    ap_ST_fsm_state3 = 118'd4;
parameter    ap_ST_fsm_state4 = 118'd8;
parameter    ap_ST_fsm_state5 = 118'd16;
parameter    ap_ST_fsm_state6 = 118'd32;
parameter    ap_ST_fsm_state7 = 118'd64;
parameter    ap_ST_fsm_state8 = 118'd128;
parameter    ap_ST_fsm_state9 = 118'd256;
parameter    ap_ST_fsm_state10 = 118'd512;
parameter    ap_ST_fsm_state11 = 118'd1024;
parameter    ap_ST_fsm_state12 = 118'd2048;
parameter    ap_ST_fsm_state13 = 118'd4096;
parameter    ap_ST_fsm_state14 = 118'd8192;
parameter    ap_ST_fsm_state15 = 118'd16384;
parameter    ap_ST_fsm_state16 = 118'd32768;
parameter    ap_ST_fsm_state17 = 118'd65536;
parameter    ap_ST_fsm_state18 = 118'd131072;
parameter    ap_ST_fsm_state19 = 118'd262144;
parameter    ap_ST_fsm_state20 = 118'd524288;
parameter    ap_ST_fsm_state21 = 118'd1048576;
parameter    ap_ST_fsm_state22 = 118'd2097152;
parameter    ap_ST_fsm_state23 = 118'd4194304;
parameter    ap_ST_fsm_state24 = 118'd8388608;
parameter    ap_ST_fsm_state25 = 118'd16777216;
parameter    ap_ST_fsm_state26 = 118'd33554432;
parameter    ap_ST_fsm_state27 = 118'd67108864;
parameter    ap_ST_fsm_state28 = 118'd134217728;
parameter    ap_ST_fsm_state29 = 118'd268435456;
parameter    ap_ST_fsm_state30 = 118'd536870912;
parameter    ap_ST_fsm_state31 = 118'd1073741824;
parameter    ap_ST_fsm_state32 = 118'd2147483648;
parameter    ap_ST_fsm_state33 = 118'd4294967296;
parameter    ap_ST_fsm_state34 = 118'd8589934592;
parameter    ap_ST_fsm_state35 = 118'd17179869184;
parameter    ap_ST_fsm_state36 = 118'd34359738368;
parameter    ap_ST_fsm_state37 = 118'd68719476736;
parameter    ap_ST_fsm_state38 = 118'd137438953472;
parameter    ap_ST_fsm_state39 = 118'd274877906944;
parameter    ap_ST_fsm_state40 = 118'd549755813888;
parameter    ap_ST_fsm_state41 = 118'd1099511627776;
parameter    ap_ST_fsm_state42 = 118'd2199023255552;
parameter    ap_ST_fsm_state43 = 118'd4398046511104;
parameter    ap_ST_fsm_state44 = 118'd8796093022208;
parameter    ap_ST_fsm_state45 = 118'd17592186044416;
parameter    ap_ST_fsm_state46 = 118'd35184372088832;
parameter    ap_ST_fsm_state47 = 118'd70368744177664;
parameter    ap_ST_fsm_state48 = 118'd140737488355328;
parameter    ap_ST_fsm_state49 = 118'd281474976710656;
parameter    ap_ST_fsm_state50 = 118'd562949953421312;
parameter    ap_ST_fsm_state51 = 118'd1125899906842624;
parameter    ap_ST_fsm_state52 = 118'd2251799813685248;
parameter    ap_ST_fsm_state53 = 118'd4503599627370496;
parameter    ap_ST_fsm_state54 = 118'd9007199254740992;
parameter    ap_ST_fsm_state55 = 118'd18014398509481984;
parameter    ap_ST_fsm_state56 = 118'd36028797018963968;
parameter    ap_ST_fsm_state57 = 118'd72057594037927936;
parameter    ap_ST_fsm_state58 = 118'd144115188075855872;
parameter    ap_ST_fsm_state59 = 118'd288230376151711744;
parameter    ap_ST_fsm_state60 = 118'd576460752303423488;
parameter    ap_ST_fsm_state61 = 118'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 118'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 118'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 118'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 118'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 118'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 118'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 118'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 118'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 118'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 118'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 118'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 118'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 118'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 118'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 118'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 118'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 118'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 118'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 118'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 118'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 118'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 118'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 118'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 118'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 118'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 118'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 118'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 118'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 118'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 118'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 118'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 118'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 118'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 118'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 118'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 118'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 118'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 118'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 118'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 118'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 118'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 118'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 118'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 118'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 118'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 118'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 118'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 118'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 118'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 118'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 118'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 118'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 118'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 118'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 118'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 118'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 118'd166153499473114484112975882535043072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] sig_address0;
output   sig_ce0;
output   sig_we0;
output  [7:0] sig_d0;
input  [7:0] sig_q0;
output  [12:0] sig_address1;
output   sig_ce1;
output   sig_we1;
output  [7:0] sig_d1;
input  [63:0] mlen;
output  [11:0] sk_address0;
output   sk_ce0;
input  [7:0] sk_q0;
output  [11:0] sk_address1;
output   sk_ce1;
input  [7:0] sk_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[12:0] sig_address0;
reg sig_ce0;
reg sig_we0;
reg[7:0] sig_d0;
reg[12:0] sig_address1;
reg sig_ce1;
reg sig_we1;
reg[7:0] sig_d1;

(* fsm_encoding = "none" *) reg   [117:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] grp_keccak_absorb_2_fu_1320_ap_return;
reg   [31:0] reg_1546;
wire    ap_CS_fsm_state6;
wire    grp_keccak_absorb_2_fu_1320_ap_ready;
wire    grp_keccak_absorb_2_fu_1320_ap_done;
wire    ap_CS_fsm_state66;
reg   [7:0] reg_1550;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state74;
reg   [7:0] reg_1556;
reg   [7:0] reg_1562;
reg   [7:0] reg_1568;
reg   [7:0] reg_1574;
reg   [7:0] reg_1580;
wire    ap_CS_fsm_state2;
wire    grp_unpack_sk_fu_1350_ap_ready;
wire    grp_unpack_sk_fu_1350_ap_done;
wire   [4:0] i_43_fu_1592_p2;
wire    ap_CS_fsm_state3;
reg   [4:0] state_s_addr_reg_3361;
wire   [4:0] state_s_addr_9_reg_3366;
wire    ap_CS_fsm_state9;
wire   [2:0] add_ln540_fu_1648_p2;
reg   [2:0] add_ln540_reg_3374;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln540_fu_1642_p2;
wire   [5:0] shl_ln24_fu_1659_p3;
reg   [5:0] shl_ln24_reg_3384;
wire   [4:0] i_44_fu_1829_p2;
wire    ap_CS_fsm_state18;
wire   [63:0] zext_ln416_fu_1840_p1;
reg   [63:0] zext_ln416_reg_3402;
wire    ap_CS_fsm_state19;
wire   [3:0] add_ln416_fu_1850_p2;
reg   [3:0] add_ln416_reg_3410;
wire   [7:0] zext_ln26_fu_1864_p1;
reg   [7:0] zext_ln26_reg_3415;
wire   [0:0] icmp_ln416_fu_1844_p2;
wire   [3:0] i_45_fu_1874_p2;
reg   [3:0] i_45_reg_3435;
wire    ap_CS_fsm_state20;
wire   [0:0] icmp_ln30_fu_1868_p2;
reg   [4:0] state_0_s_addr_4_reg_3445;
wire   [63:0] r_fu_1928_p2;
wire    ap_CS_fsm_state21;
wire   [2:0] add_ln540_1_fu_1966_p2;
reg   [2:0] add_ln540_1_reg_3459;
wire    ap_CS_fsm_state26;
wire   [0:0] icmp_ln540_1_fu_1960_p2;
wire   [5:0] shl_ln541_1_fu_1977_p3;
reg   [5:0] shl_ln541_1_reg_3469;
wire    ap_CS_fsm_state27;
reg   [7:0] trunc_ln543_1_reg_3479;
reg   [7:0] trunc_ln544_1_reg_3484;
reg   [7:0] trunc_ln545_1_reg_3489;
reg   [7:0] trunc_ln546_1_reg_3494;
reg   [7:0] trunc_ln547_1_reg_3499;
reg   [7:0] trunc_ln548_1_reg_3504;
wire   [2:0] i_47_fu_2218_p2;
reg   [2:0] i_47_reg_3512;
wire    ap_CS_fsm_state31;
wire   [2:0] j_fu_2230_p2;
reg   [2:0] j_reg_3520;
wire    ap_CS_fsm_state32;
wire   [9:0] add_ln_fu_2240_p4;
reg   [9:0] add_ln_reg_3525;
wire   [0:0] icmp_ln21_fu_2224_p2;
wire   [2:0] i_70_fu_2257_p2;
reg   [2:0] i_70_reg_3533;
wire    ap_CS_fsm_state34;
wire   [2:0] i_71_fu_2269_p2;
reg   [2:0] i_71_reg_3541;
wire    ap_CS_fsm_state36;
wire   [2:0] i_72_fu_2281_p2;
reg   [2:0] i_72_reg_3549;
wire    ap_CS_fsm_state38;
wire   [15:0] nonce_fu_2287_p2;
reg   [15:0] nonce_reg_3554;
wire    ap_CS_fsm_state40;
wire   [7:0] add_ln124_fu_2293_p2;
reg   [7:0] add_ln124_reg_3559;
wire    ap_CS_fsm_state42;
wire   [63:0] zext_ln124_fu_2299_p1;
reg   [63:0] zext_ln124_reg_3564;
wire   [0:0] icmp_ln124_fu_2304_p2;
reg   [0:0] icmp_ln124_reg_3574;
wire   [7:0] add_ln124_1_fu_2315_p2;
reg   [7:0] add_ln124_1_reg_3578;
wire    ap_CS_fsm_state44;
wire   [63:0] tmp_33_fu_2321_p3;
reg   [63:0] tmp_33_reg_3583;
wire   [0:0] icmp_ln124_1_fu_2330_p2;
reg   [0:0] icmp_ln124_1_reg_3593;
wire   [7:0] add_ln124_2_fu_2341_p2;
reg   [7:0] add_ln124_2_reg_3597;
wire    ap_CS_fsm_state46;
wire   [63:0] tmp_34_fu_2347_p3;
reg   [63:0] tmp_34_reg_3602;
wire   [0:0] icmp_ln124_2_fu_2356_p2;
reg   [0:0] icmp_ln124_2_reg_3612;
wire   [7:0] add_ln124_3_fu_2367_p2;
reg   [7:0] add_ln124_3_reg_3616;
wire    ap_CS_fsm_state48;
wire   [63:0] tmp_35_fu_2373_p3;
reg   [63:0] tmp_35_reg_3621;
wire   [0:0] icmp_ln124_3_fu_2382_p2;
reg   [0:0] icmp_ln124_3_reg_3631;
wire   [2:0] i_73_fu_2399_p2;
reg   [2:0] i_73_reg_3638;
wire    ap_CS_fsm_state50;
wire   [2:0] i_74_fu_2411_p2;
reg   [2:0] i_74_reg_3646;
wire    ap_CS_fsm_state52;
wire   [2:0] i_75_fu_2423_p2;
reg   [2:0] i_75_reg_3654;
wire    ap_CS_fsm_state59;
wire   [11:0] zext_ln221_fu_2437_p1;
reg   [11:0] zext_ln221_reg_3659;
wire   [0:0] icmp_ln371_fu_2417_p2;
wire   [8:0] i_77_fu_2447_p2;
reg   [8:0] i_77_reg_3667;
wire    ap_CS_fsm_state60;
wire   [63:0] zext_ln226_1_fu_2462_p1;
reg   [63:0] zext_ln226_1_reg_3672;
wire   [0:0] icmp_ln225_fu_2441_p2;
reg   [9:0] w1_vec_coeffs_addr_reg_3677;
wire   [4:0] i_76_fu_2576_p2;
wire    ap_CS_fsm_state63;
reg   [4:0] state_s_addr_12_reg_3690;
wire   [2:0] add_ln540_2_fu_2632_p2;
reg   [2:0] add_ln540_2_reg_3698;
wire    ap_CS_fsm_state73;
wire   [0:0] icmp_ln540_2_fu_2626_p2;
wire   [1:0] trunc_ln541_3_fu_2638_p1;
reg   [1:0] trunc_ln541_3_reg_3708;
wire   [4:0] shl_ln541_2_fu_2647_p3;
reg   [4:0] shl_ln541_2_reg_3713;
wire   [2:0] i_78_fu_2736_p2;
reg   [2:0] i_78_reg_3726;
wire    ap_CS_fsm_state81;
wire   [11:0] zext_ln176_fu_2750_p1;
reg   [11:0] zext_ln176_reg_3731;
wire   [0:0] icmp_ln114_fu_2730_p2;
wire   [8:0] i_80_fu_2760_p2;
reg   [8:0] i_80_reg_3739;
wire    ap_CS_fsm_state82;
wire   [63:0] zext_ln181_16_fu_2780_p1;
reg   [63:0] zext_ln181_16_reg_3744;
wire   [0:0] icmp_ln180_fu_2754_p2;
wire   [2:0] i_79_fu_2846_p2;
reg   [2:0] i_79_reg_3762;
wire    ap_CS_fsm_state84;
wire   [2:0] i_81_fu_2858_p2;
reg   [2:0] i_81_reg_3770;
wire    ap_CS_fsm_state86;
wire   [11:0] zext_ln83_fu_2872_p1;
reg   [11:0] zext_ln83_reg_3775;
wire   [0:0] icmp_ln85_fu_2852_p2;
wire   [8:0] i_83_fu_2882_p2;
reg   [8:0] i_83_reg_3783;
wire    ap_CS_fsm_state87;
wire   [0:0] icmp_ln87_fu_2876_p2;
reg   [9:0] z_vec_coeffs_addr_5_reg_3793;
wire   [2:0] i_82_fu_2920_p2;
reg   [2:0] i_82_reg_3801;
wire    ap_CS_fsm_state89;
wire   [11:0] zext_ln28_fu_2934_p1;
reg   [11:0] zext_ln28_reg_3806;
wire   [0:0] icmp_ln53_fu_2914_p2;
wire   [8:0] i_85_fu_2944_p2;
reg   [8:0] i_85_reg_3814;
wire    ap_CS_fsm_state90;
reg   [9:0] z_vec_coeffs_addr_6_reg_3819;
wire   [0:0] icmp_ln32_fu_2938_p2;
wire   [0:0] icmp_ln158_fu_2984_p2;
reg   [0:0] icmp_ln158_reg_3824;
wire    ap_CS_fsm_state92;
wire   [2:0] i_84_fu_2990_p2;
reg   [2:0] i_84_reg_3828;
wire   [11:0] zext_ln287_fu_3004_p1;
reg   [11:0] zext_ln287_reg_3833;
wire   [8:0] i_87_fu_3014_p2;
reg   [8:0] i_87_reg_3841;
wire    ap_CS_fsm_state93;
wire   [0:0] icmp_ln298_fu_3008_p2;
wire   [2:0] i_86_fu_3080_p2;
reg   [2:0] i_86_reg_3857;
wire    ap_CS_fsm_state98;
wire   [11:0] zext_ln104_fu_3094_p1;
reg   [11:0] zext_ln104_reg_3862;
wire   [0:0] icmp_ln252_fu_3074_p2;
wire   [8:0] i_88_fu_3104_p2;
reg   [8:0] i_88_reg_3870;
wire    ap_CS_fsm_state99;
reg   [9:0] w0_vec_coeffs_addr_1_reg_3875;
wire   [0:0] icmp_ln108_fu_3098_p2;
wire   [0:0] grp_polyveck_chknorm_fu_1439_ap_return;
reg   [0:0] tmp_s_reg_3885;
wire    ap_CS_fsm_state103;
wire    grp_polyveck_chknorm_fu_1439_ap_ready;
wire    grp_polyveck_chknorm_fu_1439_ap_done;
reg   [0:0] tmp_5_reg_3889;
wire    ap_CS_fsm_state110;
wire   [2:0] i_89_fu_3138_p2;
reg   [2:0] i_89_reg_3896;
wire    ap_CS_fsm_state111;
wire   [11:0] zext_ln83_1_fu_3152_p1;
reg   [11:0] zext_ln83_1_reg_3901;
wire   [0:0] icmp_ln234_fu_3132_p2;
wire   [8:0] i_90_fu_3162_p2;
reg   [8:0] i_90_reg_3909;
wire    ap_CS_fsm_state112;
reg   [9:0] w0_vec_coeffs_addr_2_reg_3914;
wire   [0:0] icmp_ln87_1_fu_3156_p2;
wire   [2:0] i_91_fu_3196_p2;
reg   [2:0] i_91_reg_3927;
wire    ap_CS_fsm_state115;
wire   [11:0] zext_ln244_fu_3210_p1;
reg   [11:0] zext_ln244_reg_3932;
wire   [0:0] icmp_ln392_fu_3190_p2;
wire   [8:0] i_92_fu_3226_p2;
reg   [8:0] i_92_reg_3943;
wire    ap_CS_fsm_state116;
wire   [63:0] zext_ln249_1_fu_3241_p1;
reg   [63:0] zext_ln249_1_reg_3948;
wire   [0:0] icmp_ln248_fu_3220_p2;
wire   [10:0] s_fu_3251_p2;
wire   [8:0] s_1_fu_3314_p2;
wire    ap_CS_fsm_state117;
reg   [4:0] state_0_s_address0;
reg    state_0_s_ce0;
reg    state_0_s_we0;
reg   [63:0] state_0_s_d0;
wire   [63:0] state_0_s_q0;
reg   [4:0] state_0_s_address1;
reg    state_0_s_ce1;
reg    state_0_s_we1;
reg   [63:0] state_0_s_d1;
wire   [63:0] state_0_s_q1;
reg   [7:0] seedbuf_address0;
reg    seedbuf_ce0;
reg    seedbuf_we0;
reg   [7:0] seedbuf_d0;
wire   [7:0] seedbuf_q0;
reg   [7:0] seedbuf_address1;
reg    seedbuf_ce1;
reg    seedbuf_we1;
reg   [7:0] seedbuf_d1;
reg   [11:0] mat_vec_coeffs_address0;
reg    mat_vec_coeffs_ce0;
reg    mat_vec_coeffs_we0;
wire   [22:0] mat_vec_coeffs_q0;
reg   [9:0] s1_vec_coeffs_address0;
reg    s1_vec_coeffs_ce0;
reg    s1_vec_coeffs_we0;
reg   [31:0] s1_vec_coeffs_d0;
wire   [31:0] s1_vec_coeffs_q0;
reg   [9:0] s1_vec_coeffs_address1;
reg    s1_vec_coeffs_ce1;
reg    s1_vec_coeffs_we1;
wire   [31:0] s1_vec_coeffs_q1;
reg   [9:0] y_vec_coeffs_address0;
reg    y_vec_coeffs_ce0;
reg    y_vec_coeffs_we0;
wire   [18:0] y_vec_coeffs_q0;
reg   [9:0] z_vec_coeffs_address0;
reg    z_vec_coeffs_ce0;
reg    z_vec_coeffs_we0;
reg   [31:0] z_vec_coeffs_d0;
wire   [31:0] z_vec_coeffs_q0;
reg   [9:0] z_vec_coeffs_address1;
reg    z_vec_coeffs_ce1;
wire   [31:0] z_vec_coeffs_q1;
reg   [9:0] t0_vec_coeffs_address0;
reg    t0_vec_coeffs_ce0;
reg    t0_vec_coeffs_we0;
reg   [31:0] t0_vec_coeffs_d0;
wire   [31:0] t0_vec_coeffs_q0;
reg   [9:0] t0_vec_coeffs_address1;
reg    t0_vec_coeffs_ce1;
reg    t0_vec_coeffs_we1;
wire   [31:0] t0_vec_coeffs_q1;
reg   [9:0] s2_vec_coeffs_address0;
reg    s2_vec_coeffs_ce0;
reg    s2_vec_coeffs_we0;
reg   [31:0] s2_vec_coeffs_d0;
wire   [31:0] s2_vec_coeffs_q0;
reg   [9:0] s2_vec_coeffs_address1;
reg    s2_vec_coeffs_ce1;
reg    s2_vec_coeffs_we1;
wire   [31:0] s2_vec_coeffs_q1;
reg   [9:0] w1_vec_coeffs_address0;
reg    w1_vec_coeffs_ce0;
reg    w1_vec_coeffs_we0;
reg   [31:0] w1_vec_coeffs_d0;
wire   [31:0] w1_vec_coeffs_q0;
reg   [9:0] w1_vec_coeffs_address1;
reg    w1_vec_coeffs_ce1;
wire   [31:0] w1_vec_coeffs_q1;
reg   [9:0] w0_vec_coeffs_address0;
reg    w0_vec_coeffs_ce0;
reg    w0_vec_coeffs_we0;
reg   [31:0] w0_vec_coeffs_d0;
wire   [31:0] w0_vec_coeffs_q0;
reg   [9:0] h_vec_coeffs_address0;
reg    h_vec_coeffs_ce0;
reg    h_vec_coeffs_we0;
reg   [31:0] h_vec_coeffs_d0;
wire   [31:0] h_vec_coeffs_q0;
reg    h_vec_coeffs_ce1;
wire   [31:0] h_vec_coeffs_q1;
reg   [7:0] cp_coeffs_address0;
reg    cp_coeffs_ce0;
reg    cp_coeffs_we0;
reg   [31:0] cp_coeffs_d0;
wire   [31:0] cp_coeffs_q0;
reg    cp_coeffs_ce1;
wire   [31:0] cp_coeffs_q1;
reg   [4:0] state_s_address0;
reg    state_s_ce0;
reg    state_s_we0;
reg   [63:0] state_s_d0;
wire   [63:0] state_s_q0;
reg   [4:0] state_s_address1;
reg    state_s_ce1;
reg    state_s_we1;
reg   [63:0] state_s_d1;
wire   [63:0] state_s_q1;
wire    grp_poly_challenge_fu_1288_ap_start;
wire    grp_poly_challenge_fu_1288_ap_done;
wire    grp_poly_challenge_fu_1288_ap_idle;
wire    grp_poly_challenge_fu_1288_ap_ready;
wire   [7:0] grp_poly_challenge_fu_1288_c_coeffs_address0;
wire    grp_poly_challenge_fu_1288_c_coeffs_ce0;
wire    grp_poly_challenge_fu_1288_c_coeffs_we0;
wire   [31:0] grp_poly_challenge_fu_1288_c_coeffs_d0;
wire   [12:0] grp_poly_challenge_fu_1288_seed_address0;
wire    grp_poly_challenge_fu_1288_seed_ce0;
wire    grp_poly_uniform_fu_1297_ap_start;
wire    grp_poly_uniform_fu_1297_ap_done;
wire    grp_poly_uniform_fu_1297_ap_idle;
wire    grp_poly_uniform_fu_1297_ap_ready;
wire   [11:0] grp_poly_uniform_fu_1297_a_coeffs_address0;
wire    grp_poly_uniform_fu_1297_a_coeffs_ce0;
wire    grp_poly_uniform_fu_1297_a_coeffs_we0;
wire   [22:0] grp_poly_uniform_fu_1297_a_coeffs_d0;
wire   [7:0] grp_poly_uniform_fu_1297_seed_address0;
wire    grp_poly_uniform_fu_1297_seed_ce0;
wire    grp_polyvecl_uniform_gam_fu_1310_ap_start;
wire    grp_polyvecl_uniform_gam_fu_1310_ap_done;
wire    grp_polyvecl_uniform_gam_fu_1310_ap_idle;
wire    grp_polyvecl_uniform_gam_fu_1310_ap_ready;
wire   [9:0] grp_polyvecl_uniform_gam_fu_1310_v_vec_coeffs_address0;
wire    grp_polyvecl_uniform_gam_fu_1310_v_vec_coeffs_ce0;
wire    grp_polyvecl_uniform_gam_fu_1310_v_vec_coeffs_we0;
wire   [18:0] grp_polyvecl_uniform_gam_fu_1310_v_vec_coeffs_d0;
wire   [7:0] grp_polyvecl_uniform_gam_fu_1310_seed_address0;
wire    grp_polyvecl_uniform_gam_fu_1310_seed_ce0;
wire    grp_keccak_absorb_2_fu_1320_ap_start;
wire    grp_keccak_absorb_2_fu_1320_ap_idle;
wire   [4:0] grp_keccak_absorb_2_fu_1320_s_address0;
wire    grp_keccak_absorb_2_fu_1320_s_ce0;
wire    grp_keccak_absorb_2_fu_1320_s_we0;
wire   [63:0] grp_keccak_absorb_2_fu_1320_s_d0;
wire   [4:0] grp_keccak_absorb_2_fu_1320_s_address1;
wire    grp_keccak_absorb_2_fu_1320_s_ce1;
wire    grp_keccak_absorb_2_fu_1320_s_we1;
wire   [63:0] grp_keccak_absorb_2_fu_1320_s_d1;
wire   [12:0] grp_keccak_absorb_2_fu_1320_m_address0;
wire    grp_keccak_absorb_2_fu_1320_m_ce0;
reg   [12:0] grp_keccak_absorb_2_fu_1320_m_offset;
reg   [63:0] grp_keccak_absorb_2_fu_1320_mlen;
wire    grp_KeccakF1600_StatePer_1_fu_1336_ap_start;
wire    grp_KeccakF1600_StatePer_1_fu_1336_ap_done;
wire    grp_KeccakF1600_StatePer_1_fu_1336_ap_idle;
wire    grp_KeccakF1600_StatePer_1_fu_1336_ap_ready;
wire   [4:0] grp_KeccakF1600_StatePer_1_fu_1336_state_address0;
wire    grp_KeccakF1600_StatePer_1_fu_1336_state_ce0;
wire    grp_KeccakF1600_StatePer_1_fu_1336_state_we0;
wire   [63:0] grp_KeccakF1600_StatePer_1_fu_1336_state_d0;
wire   [4:0] grp_KeccakF1600_StatePer_1_fu_1336_state_address1;
wire    grp_KeccakF1600_StatePer_1_fu_1336_state_ce1;
wire    grp_KeccakF1600_StatePer_1_fu_1336_state_we1;
wire   [63:0] grp_KeccakF1600_StatePer_1_fu_1336_state_d1;
wire    grp_KeccakF1600_StatePer_fu_1343_ap_start;
wire    grp_KeccakF1600_StatePer_fu_1343_ap_done;
wire    grp_KeccakF1600_StatePer_fu_1343_ap_idle;
wire    grp_KeccakF1600_StatePer_fu_1343_ap_ready;
wire   [4:0] grp_KeccakF1600_StatePer_fu_1343_state_0_address0;
wire    grp_KeccakF1600_StatePer_fu_1343_state_0_ce0;
wire    grp_KeccakF1600_StatePer_fu_1343_state_0_we0;
wire   [63:0] grp_KeccakF1600_StatePer_fu_1343_state_0_d0;
wire   [4:0] grp_KeccakF1600_StatePer_fu_1343_state_0_address1;
wire    grp_KeccakF1600_StatePer_fu_1343_state_0_ce1;
wire    grp_KeccakF1600_StatePer_fu_1343_state_0_we1;
wire   [63:0] grp_KeccakF1600_StatePer_fu_1343_state_0_d1;
wire    grp_unpack_sk_fu_1350_ap_start;
wire    grp_unpack_sk_fu_1350_ap_idle;
wire   [7:0] grp_unpack_sk_fu_1350_rho_address0;
wire    grp_unpack_sk_fu_1350_rho_ce0;
wire    grp_unpack_sk_fu_1350_rho_we0;
wire   [7:0] grp_unpack_sk_fu_1350_rho_d0;
wire   [9:0] grp_unpack_sk_fu_1350_t0_vec_coeffs_address0;
wire    grp_unpack_sk_fu_1350_t0_vec_coeffs_ce0;
wire    grp_unpack_sk_fu_1350_t0_vec_coeffs_we0;
wire   [31:0] grp_unpack_sk_fu_1350_t0_vec_coeffs_d0;
wire   [9:0] grp_unpack_sk_fu_1350_t0_vec_coeffs_address1;
wire    grp_unpack_sk_fu_1350_t0_vec_coeffs_ce1;
wire    grp_unpack_sk_fu_1350_t0_vec_coeffs_we1;
wire   [31:0] grp_unpack_sk_fu_1350_t0_vec_coeffs_d1;
wire   [9:0] grp_unpack_sk_fu_1350_s1_vec_coeffs_address0;
wire    grp_unpack_sk_fu_1350_s1_vec_coeffs_ce0;
wire    grp_unpack_sk_fu_1350_s1_vec_coeffs_we0;
wire   [31:0] grp_unpack_sk_fu_1350_s1_vec_coeffs_d0;
wire   [9:0] grp_unpack_sk_fu_1350_s1_vec_coeffs_address1;
wire    grp_unpack_sk_fu_1350_s1_vec_coeffs_ce1;
wire    grp_unpack_sk_fu_1350_s1_vec_coeffs_we1;
wire   [31:0] grp_unpack_sk_fu_1350_s1_vec_coeffs_d1;
wire   [9:0] grp_unpack_sk_fu_1350_s2_vec_coeffs_address0;
wire    grp_unpack_sk_fu_1350_s2_vec_coeffs_ce0;
wire    grp_unpack_sk_fu_1350_s2_vec_coeffs_we0;
wire   [31:0] grp_unpack_sk_fu_1350_s2_vec_coeffs_d0;
wire   [9:0] grp_unpack_sk_fu_1350_s2_vec_coeffs_address1;
wire    grp_unpack_sk_fu_1350_s2_vec_coeffs_ce1;
wire    grp_unpack_sk_fu_1350_s2_vec_coeffs_we1;
wire   [31:0] grp_unpack_sk_fu_1350_s2_vec_coeffs_d1;
wire   [11:0] grp_unpack_sk_fu_1350_sk_address0;
wire    grp_unpack_sk_fu_1350_sk_ce0;
wire   [11:0] grp_unpack_sk_fu_1350_sk_address1;
wire    grp_unpack_sk_fu_1350_sk_ce1;
wire    grp_polyveck_invntt_tomo_fu_1364_ap_start;
wire    grp_polyveck_invntt_tomo_fu_1364_ap_done;
wire    grp_polyveck_invntt_tomo_fu_1364_ap_idle;
wire    grp_polyveck_invntt_tomo_fu_1364_ap_ready;
wire   [9:0] grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_address0;
wire    grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_ce0;
wire    grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_we0;
wire   [31:0] grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_d0;
reg   [31:0] grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_q0;
wire   [9:0] grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_address1;
wire    grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_ce1;
reg   [31:0] grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_q1;
wire    grp_invntt_tomont_fu_1371_ap_start;
wire    grp_invntt_tomont_fu_1371_ap_done;
wire    grp_invntt_tomont_fu_1371_ap_idle;
wire    grp_invntt_tomont_fu_1371_ap_ready;
wire   [9:0] grp_invntt_tomont_fu_1371_a_address0;
wire    grp_invntt_tomont_fu_1371_a_ce0;
wire    grp_invntt_tomont_fu_1371_a_we0;
wire   [31:0] grp_invntt_tomont_fu_1371_a_d0;
wire   [9:0] grp_invntt_tomont_fu_1371_a_address1;
wire    grp_invntt_tomont_fu_1371_a_ce1;
wire    grp_pack_sig_fu_1380_ap_start;
wire    grp_pack_sig_fu_1380_ap_done;
wire    grp_pack_sig_fu_1380_ap_idle;
wire    grp_pack_sig_fu_1380_ap_ready;
wire   [12:0] grp_pack_sig_fu_1380_sig_address0;
wire    grp_pack_sig_fu_1380_sig_ce0;
wire    grp_pack_sig_fu_1380_sig_we0;
wire   [7:0] grp_pack_sig_fu_1380_sig_d0;
wire   [9:0] grp_pack_sig_fu_1380_z_vec_coeffs_address0;
wire    grp_pack_sig_fu_1380_z_vec_coeffs_ce0;
wire   [9:0] grp_pack_sig_fu_1380_h_vec_coeffs_address0;
wire    grp_pack_sig_fu_1380_h_vec_coeffs_ce0;
wire    grp_ntt_1_fu_1388_ap_start;
wire    grp_ntt_1_fu_1388_ap_done;
wire    grp_ntt_1_fu_1388_ap_idle;
wire    grp_ntt_1_fu_1388_ap_ready;
wire   [7:0] grp_ntt_1_fu_1388_a_address0;
wire    grp_ntt_1_fu_1388_a_ce0;
wire    grp_ntt_1_fu_1388_a_we0;
wire   [31:0] grp_ntt_1_fu_1388_a_d0;
wire   [7:0] grp_ntt_1_fu_1388_a_address1;
wire    grp_ntt_1_fu_1388_a_ce1;
wire    grp_ntt_fu_1395_ap_start;
wire    grp_ntt_fu_1395_ap_done;
wire    grp_ntt_fu_1395_ap_idle;
wire    grp_ntt_fu_1395_ap_ready;
wire   [9:0] grp_ntt_fu_1395_a_address0;
wire    grp_ntt_fu_1395_a_ce0;
wire    grp_ntt_fu_1395_a_we0;
wire   [31:0] grp_ntt_fu_1395_a_d0;
reg   [31:0] grp_ntt_fu_1395_a_q0;
wire   [9:0] grp_ntt_fu_1395_a_address1;
wire    grp_ntt_fu_1395_a_ce1;
reg   [31:0] grp_ntt_fu_1395_a_q1;
reg   [2:0] grp_ntt_fu_1395_a_offset;
wire    grp_polyvecl_pointwise_a_fu_1407_ap_start;
wire    grp_polyvecl_pointwise_a_fu_1407_ap_done;
wire    grp_polyvecl_pointwise_a_fu_1407_ap_idle;
wire    grp_polyvecl_pointwise_a_fu_1407_ap_ready;
wire   [9:0] grp_polyvecl_pointwise_a_fu_1407_w_coeffs_address0;
wire    grp_polyvecl_pointwise_a_fu_1407_w_coeffs_ce0;
wire    grp_polyvecl_pointwise_a_fu_1407_w_coeffs_we0;
wire   [31:0] grp_polyvecl_pointwise_a_fu_1407_w_coeffs_d0;
wire   [11:0] grp_polyvecl_pointwise_a_fu_1407_u_vec_coeffs_address0;
wire    grp_polyvecl_pointwise_a_fu_1407_u_vec_coeffs_ce0;
wire   [9:0] grp_polyvecl_pointwise_a_fu_1407_v_vec_coeffs_address0;
wire    grp_polyvecl_pointwise_a_fu_1407_v_vec_coeffs_ce0;
wire    grp_keccak_absorb_3199_fu_1416_ap_start;
wire    grp_keccak_absorb_3199_fu_1416_ap_done;
wire    grp_keccak_absorb_3199_fu_1416_ap_idle;
wire    grp_keccak_absorb_3199_fu_1416_ap_ready;
wire   [4:0] grp_keccak_absorb_3199_fu_1416_s_address0;
wire    grp_keccak_absorb_3199_fu_1416_s_ce0;
wire    grp_keccak_absorb_3199_fu_1416_s_we0;
wire   [63:0] grp_keccak_absorb_3199_fu_1416_s_d0;
wire   [7:0] grp_keccak_absorb_3199_fu_1416_m_address0;
wire    grp_keccak_absorb_3199_fu_1416_m_ce0;
reg   [7:0] grp_keccak_absorb_3199_fu_1416_m_offset;
wire    grp_polyveck_pack_w1_fu_1425_ap_start;
wire    grp_polyveck_pack_w1_fu_1425_ap_done;
wire    grp_polyveck_pack_w1_fu_1425_ap_idle;
wire    grp_polyveck_pack_w1_fu_1425_ap_ready;
wire   [12:0] grp_polyveck_pack_w1_fu_1425_r_address0;
wire    grp_polyveck_pack_w1_fu_1425_r_ce0;
wire    grp_polyveck_pack_w1_fu_1425_r_we0;
wire   [7:0] grp_polyveck_pack_w1_fu_1425_r_d0;
wire   [12:0] grp_polyveck_pack_w1_fu_1425_r_address1;
wire    grp_polyveck_pack_w1_fu_1425_r_ce1;
wire    grp_polyveck_pack_w1_fu_1425_r_we1;
wire   [7:0] grp_polyveck_pack_w1_fu_1425_r_d1;
wire   [9:0] grp_polyveck_pack_w1_fu_1425_w1_vec_coeffs_address0;
wire    grp_polyveck_pack_w1_fu_1425_w1_vec_coeffs_ce0;
wire   [9:0] grp_polyveck_pack_w1_fu_1425_w1_vec_coeffs_address1;
wire    grp_polyveck_pack_w1_fu_1425_w1_vec_coeffs_ce1;
wire    grp_polyveck_pointwise_p_fu_1432_ap_start;
wire    grp_polyveck_pointwise_p_fu_1432_ap_done;
wire    grp_polyveck_pointwise_p_fu_1432_ap_idle;
wire    grp_polyveck_pointwise_p_fu_1432_ap_ready;
wire   [9:0] grp_polyveck_pointwise_p_fu_1432_r_vec_coeffs_address0;
wire    grp_polyveck_pointwise_p_fu_1432_r_vec_coeffs_ce0;
wire    grp_polyveck_pointwise_p_fu_1432_r_vec_coeffs_we0;
wire   [31:0] grp_polyveck_pointwise_p_fu_1432_r_vec_coeffs_d0;
wire   [7:0] grp_polyveck_pointwise_p_fu_1432_a_coeffs_address0;
wire    grp_polyveck_pointwise_p_fu_1432_a_coeffs_ce0;
wire   [9:0] grp_polyveck_pointwise_p_fu_1432_v_vec_coeffs_address0;
wire    grp_polyveck_pointwise_p_fu_1432_v_vec_coeffs_ce0;
reg   [31:0] grp_polyveck_pointwise_p_fu_1432_v_vec_coeffs_q0;
wire    grp_polyveck_chknorm_fu_1439_ap_start;
wire    grp_polyveck_chknorm_fu_1439_ap_idle;
wire   [9:0] grp_polyveck_chknorm_fu_1439_v_vec_coeffs_address0;
wire    grp_polyveck_chknorm_fu_1439_v_vec_coeffs_ce0;
reg   [31:0] grp_polyveck_chknorm_fu_1439_v_vec_coeffs_q0;
reg   [17:0] grp_polyveck_chknorm_fu_1439_bound;
wire    grp_polyveck_caddq_fu_1447_ap_start;
wire    grp_polyveck_caddq_fu_1447_ap_done;
wire    grp_polyveck_caddq_fu_1447_ap_idle;
wire    grp_polyveck_caddq_fu_1447_ap_ready;
wire   [9:0] grp_polyveck_caddq_fu_1447_v_vec_coeffs_address0;
wire    grp_polyveck_caddq_fu_1447_v_vec_coeffs_ce0;
wire    grp_polyveck_caddq_fu_1447_v_vec_coeffs_we0;
wire   [31:0] grp_polyveck_caddq_fu_1447_v_vec_coeffs_d0;
reg   [31:0] grp_polyveck_caddq_fu_1447_v_vec_coeffs_q0;
wire    grp_polyveck_reduce_fu_1452_ap_start;
wire    grp_polyveck_reduce_fu_1452_ap_done;
wire    grp_polyveck_reduce_fu_1452_ap_idle;
wire    grp_polyveck_reduce_fu_1452_ap_ready;
wire   [9:0] grp_polyveck_reduce_fu_1452_v_vec_coeffs_address0;
wire    grp_polyveck_reduce_fu_1452_v_vec_coeffs_ce0;
wire    grp_polyveck_reduce_fu_1452_v_vec_coeffs_we0;
wire   [31:0] grp_polyveck_reduce_fu_1452_v_vec_coeffs_d0;
reg   [31:0] grp_polyveck_reduce_fu_1452_v_vec_coeffs_q0;
reg   [4:0] i_0_i_i_reg_833;
wire   [0:0] icmp_ln362_fu_1586_p2;
reg   [2:0] i_3_i_reg_844;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state17;
reg   [4:0] i_0_i_i_i_reg_856;
wire   [0:0] icmp_ln362_1_fu_1823_p2;
reg   [3:0] i_3_i1_reg_867;
wire    ap_CS_fsm_state22;
reg   [3:0] i_0_i5_i_reg_878;
reg   [63:0] r_0_i6_i_reg_890;
reg   [2:0] i_3_i3_reg_902;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state30;
reg   [2:0] i_0_i_reg_914;
reg   [2:0] j_0_i_reg_926;
wire    ap_CS_fsm_state33;
wire   [0:0] icmp_ln20_fu_2212_p2;
reg   [2:0] i_0_i3_reg_938;
wire    ap_CS_fsm_state35;
reg   [2:0] i_0_i5_reg_950;
wire    ap_CS_fsm_state37;
wire   [0:0] icmp_ln100_fu_2251_p2;
reg   [2:0] i_0_i7_reg_962;
wire    ap_CS_fsm_state39;
wire   [0:0] icmp_ln282_fu_2263_p2;
reg   [15:0] nonce_0_reg_974;
wire   [0:0] icmp_ln172_fu_3214_p2;
wire   [0:0] icmp_ln282_1_fu_2275_p2;
reg   [7:0] phi_ln124_reg_986;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state43;
reg   [7:0] phi_ln124_1_reg_997;
wire    ap_CS_fsm_state45;
reg   [7:0] phi_ln124_2_reg_1008;
wire    ap_CS_fsm_state47;
reg   [7:0] phi_ln124_3_reg_1019;
wire    ap_CS_fsm_state49;
reg   [2:0] i_0_i12_reg_1030;
wire    ap_CS_fsm_state51;
reg   [2:0] i_0_i17_reg_1042;
wire    ap_CS_fsm_state53;
wire   [0:0] icmp_ln100_1_fu_2393_p2;
reg   [2:0] i_0_i19_reg_1054;
wire    ap_CS_fsm_state58;
reg   [8:0] i_0_i_i20_reg_1065;
wire    ap_CS_fsm_state61;
reg   [4:0] i_0_i_i23_reg_1076;
wire    ap_CS_fsm_state62;
wire   [0:0] icmp_ln362_2_fu_2570_p2;
reg   [2:0] i_3_i47_reg_1087;
wire    ap_CS_fsm_state72;
wire    ap_CS_fsm_state77;
reg   [2:0] i_0_i43_reg_1098;
wire    ap_CS_fsm_state80;
reg   [8:0] i_0_i_i44_reg_1109;
wire    ap_CS_fsm_state83;
reg   [2:0] i_0_i49_reg_1120;
wire    ap_CS_fsm_state85;
reg   [2:0] i_0_i51_reg_1132;
wire   [0:0] icmp_ln107_fu_2840_p2;
reg   [8:0] i_0_i_i52_reg_1143;
wire    ap_CS_fsm_state88;
reg   [2:0] i_0_i59_reg_1154;
reg   [8:0] i_0_i_i60_reg_1165;
wire    ap_CS_fsm_state91;
reg   [2:0] i_0_i85_reg_1176;
reg   [8:0] i_0_i_i86_reg_1187;
wire    ap_CS_fsm_state94;
wire   [0:0] icmp_ln303_fu_3068_p2;
reg   [2:0] i_0_i66_reg_1198;
wire    ap_CS_fsm_state97;
reg   [8:0] i_0_i_i67_reg_1209;
wire    ap_CS_fsm_state100;
reg   [2:0] i_0_i74_reg_1220;
reg   [8:0] i_0_i_i75_reg_1231;
wire    ap_CS_fsm_state113;
reg   [2:0] i_0_i87_reg_1242;
wire    ap_CS_fsm_state114;
reg   [10:0] n_reg_1253;
reg   [8:0] i_0_i_i88_reg_1265;
reg   [8:0] s_0_i_i_reg_1276;
reg    grp_poly_challenge_fu_1288_ap_start_reg;
wire    ap_CS_fsm_state78;
reg    grp_poly_uniform_fu_1297_ap_start_reg;
reg    grp_polyvecl_uniform_gam_fu_1310_ap_start_reg;
reg    grp_keccak_absorb_2_fu_1320_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state65;
reg    grp_KeccakF1600_StatePer_1_fu_1336_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state71;
reg    grp_KeccakF1600_StatePer_fu_1343_ap_start_reg;
wire    ap_CS_fsm_state24;
reg    grp_unpack_sk_fu_1350_ap_start_reg;
reg    grp_polyveck_invntt_tomo_fu_1364_ap_start_reg;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state96;
wire    ap_CS_fsm_state105;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state106;
reg    grp_invntt_tomont_fu_1371_ap_start_reg;
reg    grp_pack_sig_fu_1380_ap_start_reg;
wire    ap_CS_fsm_state118;
reg    grp_ntt_1_fu_1388_ap_start_reg;
wire    ap_CS_fsm_state79;
reg    grp_ntt_fu_1395_ap_start_reg;
reg    grp_polyvecl_pointwise_a_fu_1407_ap_start_reg;
wire   [0:0] icmp_ln28_fu_2405_p2;
reg    grp_keccak_absorb_3199_fu_1416_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state64;
reg    grp_polyveck_pack_w1_fu_1425_ap_start_reg;
reg    grp_polyveck_pointwise_p_fu_1432_ap_start_reg;
wire    ap_CS_fsm_state95;
wire    ap_CS_fsm_state104;
reg    grp_polyveck_chknorm_fu_1439_ap_start_reg;
wire    ap_CS_fsm_state102;
wire    ap_CS_fsm_state109;
reg    grp_polyveck_caddq_fu_1447_ap_start_reg;
wire    ap_CS_fsm_state57;
reg    grp_polyveck_reduce_fu_1452_ap_start_reg;
wire    ap_CS_fsm_state107;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state101;
wire    ap_CS_fsm_state108;
wire   [63:0] zext_ln363_fu_1598_p1;
wire   [63:0] zext_ln450_4_fu_1603_p1;
wire   [63:0] zext_ln540_fu_1637_p1;
wire   [63:0] zext_ln541_1_fu_1677_p1;
wire   [63:0] zext_ln542_1_fu_1698_p1;
wire   [63:0] zext_ln543_1_fu_1718_p1;
wire    ap_CS_fsm_state15;
wire   [63:0] zext_ln544_1_fu_1738_p1;
wire   [63:0] zext_ln545_1_fu_1758_p1;
wire    ap_CS_fsm_state16;
wire   [63:0] zext_ln546_1_fu_1778_p1;
wire   [63:0] zext_ln547_1_fu_1798_p1;
wire   [63:0] zext_ln548_1_fu_1818_p1;
wire   [63:0] zext_ln363_1_fu_1835_p1;
wire   [63:0] zext_ln31_18_fu_1897_p1;
wire   [63:0] zext_ln540_1_fu_1955_p1;
wire   [63:0] zext_ln541_3_fu_1995_p1;
wire   [63:0] zext_ln542_3_fu_2027_p1;
wire   [63:0] zext_ln543_3_fu_2107_p1;
wire    ap_CS_fsm_state28;
wire   [63:0] zext_ln544_3_fu_2127_p1;
wire   [63:0] zext_ln545_3_fu_2147_p1;
wire    ap_CS_fsm_state29;
wire   [63:0] zext_ln546_3_fu_2167_p1;
wire   [63:0] zext_ln547_3_fu_2187_p1;
wire   [63:0] zext_ln548_3_fu_2207_p1;
wire   [63:0] zext_ln363_2_fu_2582_p1;
wire   [63:0] zext_ln450_6_fu_2587_p1;
wire   [63:0] zext_ln540_2_fu_2621_p1;
wire   [63:0] zext_ln541_4_fu_2654_p1;
wire   [63:0] zext_ln542_4_fu_2665_p1;
wire   [63:0] zext_ln543_4_fu_2675_p1;
wire    ap_CS_fsm_state75;
wire   [63:0] zext_ln544_4_fu_2685_p1;
wire   [63:0] zext_ln545_4_fu_2695_p1;
wire    ap_CS_fsm_state76;
wire   [63:0] zext_ln546_4_fu_2705_p1;
wire   [63:0] zext_ln547_4_fu_2715_p1;
wire   [63:0] zext_ln548_4_fu_2725_p1;
wire   [63:0] zext_ln181_fu_2766_p1;
wire   [63:0] zext_ln88_4_fu_2897_p1;
wire   [63:0] zext_ln33_2_fu_2959_p1;
wire   [63:0] zext_ln300_2_fu_3029_p1;
wire   [63:0] zext_ln109_1_fu_3119_p1;
wire   [63:0] zext_ln88_6_fu_3177_p1;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire   [63:0] xor_ln450_fu_1630_p2;
wire    ap_CS_fsm_state10;
wire   [63:0] grp_fu_1467_p2;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state68;
wire   [63:0] xor_ln450_2_fu_2614_p2;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state70;
wire   [7:0] trunc_ln541_fu_1654_p1;
wire   [7:0] trunc_ln541_1_fu_1972_p1;
wire   [63:0] xor_ln417_fu_1934_p2;
wire    ap_CS_fsm_state23;
wire   [63:0] xor_ln450_1_fu_1941_p2;
wire   [63:0] xor_ln451_1_fu_1948_p2;
wire  signed [31:0] sext_ln124_fu_2310_p1;
wire  signed [31:0] sext_ln124_1_fu_2336_p1;
wire  signed [31:0] sext_ln124_2_fu_2362_p1;
wire  signed [31:0] sext_ln124_3_fu_2388_p1;
wire   [31:0] add_ln88_fu_2907_p2;
wire  signed [31:0] grp_fu_3339_p3;
wire  signed [31:0] sext_ln48_1_fu_2538_p1;
(* use_dsp48 = "no" *) wire   [31:0] sub_ln52_1_fu_2564_p2;
wire   [31:0] sub_ln109_fu_3125_p2;
wire   [31:0] add_ln88_2_fu_3183_p2;
wire   [7:0] trunc_ln541_2_fu_2642_p1;
wire   [31:0] zext_ln69_1_fu_3309_p1;
wire   [28:0] grp_fu_1457_p4;
wire   [2:0] trunc_ln450_fu_1608_p1;
wire   [5:0] shl_ln_fu_1612_p3;
wire   [63:0] zext_ln450_fu_1620_p1;
wire   [63:0] shl_ln450_fu_1624_p2;
wire   [7:0] zext_ln541_fu_1667_p1;
wire   [7:0] add_ln541_fu_1671_p2;
wire   [5:0] or_ln542_fu_1682_p2;
wire   [7:0] zext_ln542_fu_1688_p1;
wire   [7:0] add_ln542_fu_1692_p2;
wire   [5:0] or_ln543_fu_1703_p2;
wire   [7:0] zext_ln543_fu_1708_p1;
wire   [7:0] add_ln543_fu_1712_p2;
wire   [5:0] or_ln544_fu_1723_p2;
wire   [7:0] zext_ln544_fu_1728_p1;
wire   [7:0] add_ln544_fu_1732_p2;
wire   [5:0] or_ln545_fu_1743_p2;
wire   [7:0] zext_ln545_fu_1748_p1;
wire   [7:0] add_ln545_fu_1752_p2;
wire   [5:0] or_ln546_fu_1763_p2;
wire   [7:0] zext_ln546_fu_1768_p1;
wire   [7:0] add_ln546_fu_1772_p2;
wire   [5:0] or_ln547_fu_1783_p2;
wire   [7:0] zext_ln547_fu_1788_p1;
wire   [7:0] add_ln547_fu_1792_p2;
wire   [5:0] or_ln548_fu_1803_p2;
wire   [7:0] zext_ln548_fu_1808_p1;
wire   [7:0] add_ln548_fu_1812_p2;
wire   [6:0] shl_ln25_fu_1856_p3;
wire   [6:0] or_ln_fu_1880_p3;
wire   [7:0] zext_ln31_fu_1888_p1;
wire   [7:0] add_ln31_fu_1892_p2;
wire   [2:0] trunc_ln31_fu_1906_p1;
wire   [5:0] shl_ln26_fu_1910_p3;
wire   [63:0] zext_ln31_19_fu_1902_p1;
wire   [63:0] zext_ln31_20_fu_1918_p1;
wire   [63:0] shl_ln31_fu_1922_p2;
wire   [7:0] zext_ln541_2_fu_1985_p1;
wire   [7:0] add_ln541_1_fu_1989_p2;
wire   [5:0] or_ln542_1_fu_2011_p2;
wire   [7:0] zext_ln542_2_fu_2017_p1;
wire   [7:0] add_ln542_1_fu_2021_p2;
wire   [5:0] or_ln543_1_fu_2092_p2;
wire   [7:0] zext_ln543_2_fu_2097_p1;
wire   [7:0] add_ln543_1_fu_2101_p2;
wire   [5:0] or_ln544_1_fu_2112_p2;
wire   [7:0] zext_ln544_2_fu_2117_p1;
wire   [7:0] add_ln544_1_fu_2121_p2;
wire   [5:0] or_ln545_1_fu_2132_p2;
wire   [7:0] zext_ln545_2_fu_2137_p1;
wire   [7:0] add_ln545_1_fu_2141_p2;
wire   [5:0] or_ln546_1_fu_2152_p2;
wire   [7:0] zext_ln546_2_fu_2157_p1;
wire   [7:0] add_ln546_1_fu_2161_p2;
wire   [5:0] or_ln547_1_fu_2172_p2;
wire   [7:0] zext_ln547_2_fu_2177_p1;
wire   [7:0] add_ln547_1_fu_2181_p2;
wire   [5:0] or_ln548_1_fu_2192_p2;
wire   [7:0] zext_ln548_2_fu_2197_p1;
wire   [7:0] add_ln548_1_fu_2201_p2;
wire   [1:0] trunc_ln22_fu_2236_p1;
wire   [10:0] tmp_36_fu_2429_p3;
wire   [11:0] zext_ln226_fu_2453_p1;
wire   [11:0] add_ln226_fu_2457_p2;
wire   [31:0] add_ln42_fu_2467_p2;
wire  signed [24:0] trunc_ln10_fu_2473_p4;
wire  signed [31:0] grp_fu_3320_p3;
wire  signed [7:0] trunc_ln11_fu_2487_p4;
wire  signed [8:0] sext_ln47_fu_2496_p1;
wire   [8:0] sub_ln48_fu_2500_p2;
wire   [0:0] tmp_fu_2506_p3;
wire   [0:0] xor_ln48_fu_2514_p2;
wire   [7:0] select_ln48_fu_2520_p3;
wire  signed [7:0] a1_1_fu_2528_p2;
wire  signed [31:0] grp_fu_3329_p3;
(* use_dsp48 = "no" *) wire   [31:0] sub_ln52_fu_2543_p2;
wire   [0:0] tmp_13_fu_2548_p3;
wire   [31:0] select_ln52_fu_2556_p3;
wire   [2:0] trunc_ln450_1_fu_2592_p1;
wire   [5:0] shl_ln450_5_fu_2596_p3;
wire   [63:0] zext_ln450_5_fu_2604_p1;
wire   [63:0] shl_ln450_1_fu_2608_p2;
wire   [4:0] or_ln542_2_fu_2659_p2;
wire   [4:0] or_ln543_2_fu_2670_p2;
wire   [4:0] or_ln544_2_fu_2680_p2;
wire   [4:0] or_ln545_2_fu_2690_p2;
wire   [4:0] or_ln546_2_fu_2700_p2;
wire   [4:0] or_ln547_2_fu_2710_p2;
wire   [4:0] or_ln548_2_fu_2720_p2;
wire   [10:0] tmp_37_fu_2742_p3;
wire   [11:0] zext_ln181_15_fu_2771_p1;
wire   [11:0] add_ln181_fu_2775_p2;
wire  signed [31:0] mul_ln181_fu_2793_p0;
wire  signed [31:0] mul_ln181_fu_2793_p1;
wire   [63:0] mul_ln181_fu_2793_p2;
wire  signed [31:0] trunc_ln18_fu_2799_p1;
wire   [31:0] t_fu_2803_p2;
wire  signed [31:0] mul_ln19_fu_2813_p1;
wire   [54:0] mul_ln19_fu_2813_p2;
wire  signed [63:0] sext_ln19_14_fu_2819_p1;
wire   [63:0] add_ln19_fu_2823_p2;
wire   [10:0] tmp_38_fu_2864_p3;
wire   [11:0] zext_ln88_fu_2888_p1;
wire   [11:0] add_ln88_3_fu_2892_p2;
wire  signed [31:0] sext_ln88_fu_2903_p1;
wire   [10:0] tmp_39_fu_2926_p3;
wire   [11:0] zext_ln33_fu_2950_p1;
wire   [11:0] add_ln33_fu_2954_p2;
wire   [31:0] add_ln36_fu_2964_p2;
wire  signed [8:0] trunc_ln12_fu_2970_p4;
wire   [10:0] tmp_40_fu_2996_p3;
wire   [11:0] zext_ln300_fu_3020_p1;
wire   [11:0] add_ln300_fu_3024_p2;
wire   [0:0] tmp_14_fu_3034_p3;
wire   [31:0] shl_ln301_fu_3050_p2;
wire   [31:0] t_16_fu_3042_p3;
wire   [31:0] and_ln301_fu_3056_p2;
wire   [31:0] t_17_fu_3062_p2;
wire   [10:0] tmp_41_fu_3086_p3;
wire   [11:0] zext_ln109_fu_3110_p1;
wire   [11:0] add_ln109_fu_3114_p2;
wire   [10:0] tmp_42_fu_3144_p3;
wire   [11:0] zext_ln88_5_fu_3168_p1;
wire   [11:0] add_ln88_4_fu_3172_p2;
wire   [10:0] tmp_43_fu_3202_p3;
wire   [11:0] zext_ln249_fu_3232_p1;
wire   [11:0] add_ln249_fu_3236_p2;
wire   [10:0] zext_ln248_fu_3247_p1;
wire   [0:0] icmp_ln69_2_fu_3269_p2;
wire   [0:0] icmp_ln69_3_fu_3275_p2;
wire   [0:0] icmp_ln69_1_fu_3263_p2;
wire   [0:0] and_ln69_fu_3281_p2;
wire   [0:0] or_ln69_fu_3287_p2;
wire   [0:0] icmp_ln69_fu_3257_p2;
wire   [0:0] or_ln69_1_fu_3293_p2;
wire   [0:0] xor_ln69_fu_3299_p2;
wire   [8:0] zext_ln69_fu_3305_p1;
wire   [14:0] grp_fu_3320_p0;
wire   [24:0] grp_fu_3320_p2;
wire  signed [18:0] grp_fu_3329_p0;
wire  signed [23:0] grp_fu_3339_p1;
reg   [117:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 118'd1;
#0 grp_poly_challenge_fu_1288_ap_start_reg = 1'b0;
#0 grp_poly_uniform_fu_1297_ap_start_reg = 1'b0;
#0 grp_polyvecl_uniform_gam_fu_1310_ap_start_reg = 1'b0;
#0 grp_keccak_absorb_2_fu_1320_ap_start_reg = 1'b0;
#0 grp_KeccakF1600_StatePer_1_fu_1336_ap_start_reg = 1'b0;
#0 grp_KeccakF1600_StatePer_fu_1343_ap_start_reg = 1'b0;
#0 grp_unpack_sk_fu_1350_ap_start_reg = 1'b0;
#0 grp_polyveck_invntt_tomo_fu_1364_ap_start_reg = 1'b0;
#0 grp_invntt_tomont_fu_1371_ap_start_reg = 1'b0;
#0 grp_pack_sig_fu_1380_ap_start_reg = 1'b0;
#0 grp_ntt_1_fu_1388_ap_start_reg = 1'b0;
#0 grp_ntt_fu_1395_ap_start_reg = 1'b0;
#0 grp_polyvecl_pointwise_a_fu_1407_ap_start_reg = 1'b0;
#0 grp_keccak_absorb_3199_fu_1416_ap_start_reg = 1'b0;
#0 grp_polyveck_pack_w1_fu_1425_ap_start_reg = 1'b0;
#0 grp_polyveck_pointwise_p_fu_1432_ap_start_reg = 1'b0;
#0 grp_polyveck_chknorm_fu_1439_ap_start_reg = 1'b0;
#0 grp_polyveck_caddq_fu_1447_ap_start_reg = 1'b0;
#0 grp_polyveck_reduce_fu_1452_ap_start_reg = 1'b0;
end

poly_uniform_statdEe #(
    .DataWidth( 64 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
state_0_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(state_0_s_address0),
    .ce0(state_0_s_ce0),
    .we0(state_0_s_we0),
    .d0(state_0_s_d0),
    .q0(state_0_s_q0),
    .address1(state_0_s_address1),
    .ce1(state_0_s_ce1),
    .we1(state_0_s_we1),
    .d1(state_0_s_d1),
    .q1(state_0_s_q1)
);

crypto_sign_signalbW #(
    .DataWidth( 8 ),
    .AddressRange( 208 ),
    .AddressWidth( 8 ))
seedbuf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(seedbuf_address0),
    .ce0(seedbuf_ce0),
    .we0(seedbuf_we0),
    .d0(seedbuf_d0),
    .q0(seedbuf_q0),
    .address1(seedbuf_address1),
    .ce1(seedbuf_ce1),
    .we1(seedbuf_we1),
    .d1(seedbuf_d1)
);

crypto_sign_signamb6 #(
    .DataWidth( 23 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
mat_vec_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mat_vec_coeffs_address0),
    .ce0(mat_vec_coeffs_ce0),
    .we0(mat_vec_coeffs_we0),
    .d0(grp_poly_uniform_fu_1297_a_coeffs_d0),
    .q0(mat_vec_coeffs_q0)
);

crypto_sign_signancg #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
s1_vec_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(s1_vec_coeffs_address0),
    .ce0(s1_vec_coeffs_ce0),
    .we0(s1_vec_coeffs_we0),
    .d0(s1_vec_coeffs_d0),
    .q0(s1_vec_coeffs_q0),
    .address1(s1_vec_coeffs_address1),
    .ce1(s1_vec_coeffs_ce1),
    .we1(s1_vec_coeffs_we1),
    .d1(grp_unpack_sk_fu_1350_s1_vec_coeffs_d1),
    .q1(s1_vec_coeffs_q1)
);

crypto_sign_signaocq #(
    .DataWidth( 19 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
y_vec_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_vec_coeffs_address0),
    .ce0(y_vec_coeffs_ce0),
    .we0(y_vec_coeffs_we0),
    .d0(grp_polyvecl_uniform_gam_fu_1310_v_vec_coeffs_d0),
    .q0(y_vec_coeffs_q0)
);

crypto_sign_signapcA #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
z_vec_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z_vec_coeffs_address0),
    .ce0(z_vec_coeffs_ce0),
    .we0(z_vec_coeffs_we0),
    .d0(z_vec_coeffs_d0),
    .q0(z_vec_coeffs_q0),
    .address1(z_vec_coeffs_address1),
    .ce1(z_vec_coeffs_ce1),
    .q1(z_vec_coeffs_q1)
);

crypto_sign_signancg #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
t0_vec_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(t0_vec_coeffs_address0),
    .ce0(t0_vec_coeffs_ce0),
    .we0(t0_vec_coeffs_we0),
    .d0(t0_vec_coeffs_d0),
    .q0(t0_vec_coeffs_q0),
    .address1(t0_vec_coeffs_address1),
    .ce1(t0_vec_coeffs_ce1),
    .we1(t0_vec_coeffs_we1),
    .d1(grp_unpack_sk_fu_1350_t0_vec_coeffs_d1),
    .q1(t0_vec_coeffs_q1)
);

crypto_sign_signancg #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
s2_vec_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(s2_vec_coeffs_address0),
    .ce0(s2_vec_coeffs_ce0),
    .we0(s2_vec_coeffs_we0),
    .d0(s2_vec_coeffs_d0),
    .q0(s2_vec_coeffs_q0),
    .address1(s2_vec_coeffs_address1),
    .ce1(s2_vec_coeffs_ce1),
    .we1(s2_vec_coeffs_we1),
    .d1(grp_unpack_sk_fu_1350_s2_vec_coeffs_d1),
    .q1(s2_vec_coeffs_q1)
);

crypto_sign_signapcA #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
w1_vec_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w1_vec_coeffs_address0),
    .ce0(w1_vec_coeffs_ce0),
    .we0(w1_vec_coeffs_we0),
    .d0(w1_vec_coeffs_d0),
    .q0(w1_vec_coeffs_q0),
    .address1(w1_vec_coeffs_address1),
    .ce1(w1_vec_coeffs_ce1),
    .q1(w1_vec_coeffs_q1)
);

crypto_sign_signatde #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
w0_vec_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w0_vec_coeffs_address0),
    .ce0(w0_vec_coeffs_ce0),
    .we0(w0_vec_coeffs_we0),
    .d0(w0_vec_coeffs_d0),
    .q0(w0_vec_coeffs_q0)
);

crypto_sign_signapcA #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
h_vec_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(h_vec_coeffs_address0),
    .ce0(h_vec_coeffs_ce0),
    .we0(h_vec_coeffs_we0),
    .d0(h_vec_coeffs_d0),
    .q0(h_vec_coeffs_q0),
    .address1(grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_address1),
    .ce1(h_vec_coeffs_ce1),
    .q1(h_vec_coeffs_q1)
);

crypto_sign_signavdy #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
cp_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cp_coeffs_address0),
    .ce0(cp_coeffs_ce0),
    .we0(cp_coeffs_we0),
    .d0(cp_coeffs_d0),
    .q0(cp_coeffs_q0),
    .address1(grp_ntt_1_fu_1388_a_address1),
    .ce1(cp_coeffs_ce1),
    .q1(cp_coeffs_q1)
);

poly_uniform_statdEe #(
    .DataWidth( 64 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
state_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(state_s_address0),
    .ce0(state_s_ce0),
    .we0(state_s_we0),
    .d0(state_s_d0),
    .q0(state_s_q0),
    .address1(state_s_address1),
    .ce1(state_s_ce1),
    .we1(state_s_we1),
    .d1(state_s_d1),
    .q1(state_s_q1)
);

poly_challenge grp_poly_challenge_fu_1288(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_challenge_fu_1288_ap_start),
    .ap_done(grp_poly_challenge_fu_1288_ap_done),
    .ap_idle(grp_poly_challenge_fu_1288_ap_idle),
    .ap_ready(grp_poly_challenge_fu_1288_ap_ready),
    .c_coeffs_address0(grp_poly_challenge_fu_1288_c_coeffs_address0),
    .c_coeffs_ce0(grp_poly_challenge_fu_1288_c_coeffs_ce0),
    .c_coeffs_we0(grp_poly_challenge_fu_1288_c_coeffs_we0),
    .c_coeffs_d0(grp_poly_challenge_fu_1288_c_coeffs_d0),
    .c_coeffs_q0(cp_coeffs_q0),
    .seed_address0(grp_poly_challenge_fu_1288_seed_address0),
    .seed_ce0(grp_poly_challenge_fu_1288_seed_ce0),
    .seed_q0(sig_q0)
);

poly_uniform grp_poly_uniform_fu_1297(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_uniform_fu_1297_ap_start),
    .ap_done(grp_poly_uniform_fu_1297_ap_done),
    .ap_idle(grp_poly_uniform_fu_1297_ap_idle),
    .ap_ready(grp_poly_uniform_fu_1297_ap_ready),
    .a_coeffs_address0(grp_poly_uniform_fu_1297_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_uniform_fu_1297_a_coeffs_ce0),
    .a_coeffs_we0(grp_poly_uniform_fu_1297_a_coeffs_we0),
    .a_coeffs_d0(grp_poly_uniform_fu_1297_a_coeffs_d0),
    .a_coeffs_offset(i_0_i_reg_914),
    .a_coeffs_offset1(j_0_i_reg_926),
    .seed_address0(grp_poly_uniform_fu_1297_seed_address0),
    .seed_ce0(grp_poly_uniform_fu_1297_seed_ce0),
    .seed_q0(seedbuf_q0),
    .nonce(add_ln_reg_3525)
);

polyvecl_uniform_gam grp_polyvecl_uniform_gam_fu_1310(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_polyvecl_uniform_gam_fu_1310_ap_start),
    .ap_done(grp_polyvecl_uniform_gam_fu_1310_ap_done),
    .ap_idle(grp_polyvecl_uniform_gam_fu_1310_ap_idle),
    .ap_ready(grp_polyvecl_uniform_gam_fu_1310_ap_ready),
    .v_vec_coeffs_address0(grp_polyvecl_uniform_gam_fu_1310_v_vec_coeffs_address0),
    .v_vec_coeffs_ce0(grp_polyvecl_uniform_gam_fu_1310_v_vec_coeffs_ce0),
    .v_vec_coeffs_we0(grp_polyvecl_uniform_gam_fu_1310_v_vec_coeffs_we0),
    .v_vec_coeffs_d0(grp_polyvecl_uniform_gam_fu_1310_v_vec_coeffs_d0),
    .seed_address0(grp_polyvecl_uniform_gam_fu_1310_seed_address0),
    .seed_ce0(grp_polyvecl_uniform_gam_fu_1310_seed_ce0),
    .seed_q0(seedbuf_q0),
    .nonce(nonce_0_reg_974)
);

keccak_absorb_2 grp_keccak_absorb_2_fu_1320(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_keccak_absorb_2_fu_1320_ap_start),
    .ap_done(grp_keccak_absorb_2_fu_1320_ap_done),
    .ap_idle(grp_keccak_absorb_2_fu_1320_ap_idle),
    .ap_ready(grp_keccak_absorb_2_fu_1320_ap_ready),
    .s_address0(grp_keccak_absorb_2_fu_1320_s_address0),
    .s_ce0(grp_keccak_absorb_2_fu_1320_s_ce0),
    .s_we0(grp_keccak_absorb_2_fu_1320_s_we0),
    .s_d0(grp_keccak_absorb_2_fu_1320_s_d0),
    .s_q0(state_s_q0),
    .s_address1(grp_keccak_absorb_2_fu_1320_s_address1),
    .s_ce1(grp_keccak_absorb_2_fu_1320_s_ce1),
    .s_we1(grp_keccak_absorb_2_fu_1320_s_we1),
    .s_d1(grp_keccak_absorb_2_fu_1320_s_d1),
    .s_q1(state_s_q1),
    .pos_r(7'd48),
    .m_address0(grp_keccak_absorb_2_fu_1320_m_address0),
    .m_ce0(grp_keccak_absorb_2_fu_1320_m_ce0),
    .m_q0(sig_q0),
    .m_offset(grp_keccak_absorb_2_fu_1320_m_offset),
    .mlen(grp_keccak_absorb_2_fu_1320_mlen),
    .ap_return(grp_keccak_absorb_2_fu_1320_ap_return)
);

KeccakF1600_StatePer_1 grp_KeccakF1600_StatePer_1_fu_1336(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_KeccakF1600_StatePer_1_fu_1336_ap_start),
    .ap_done(grp_KeccakF1600_StatePer_1_fu_1336_ap_done),
    .ap_idle(grp_KeccakF1600_StatePer_1_fu_1336_ap_idle),
    .ap_ready(grp_KeccakF1600_StatePer_1_fu_1336_ap_ready),
    .state_address0(grp_KeccakF1600_StatePer_1_fu_1336_state_address0),
    .state_ce0(grp_KeccakF1600_StatePer_1_fu_1336_state_ce0),
    .state_we0(grp_KeccakF1600_StatePer_1_fu_1336_state_we0),
    .state_d0(grp_KeccakF1600_StatePer_1_fu_1336_state_d0),
    .state_q0(state_s_q0),
    .state_address1(grp_KeccakF1600_StatePer_1_fu_1336_state_address1),
    .state_ce1(grp_KeccakF1600_StatePer_1_fu_1336_state_ce1),
    .state_we1(grp_KeccakF1600_StatePer_1_fu_1336_state_we1),
    .state_d1(grp_KeccakF1600_StatePer_1_fu_1336_state_d1),
    .state_q1(state_s_q1)
);

KeccakF1600_StatePer grp_KeccakF1600_StatePer_fu_1343(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_KeccakF1600_StatePer_fu_1343_ap_start),
    .ap_done(grp_KeccakF1600_StatePer_fu_1343_ap_done),
    .ap_idle(grp_KeccakF1600_StatePer_fu_1343_ap_idle),
    .ap_ready(grp_KeccakF1600_StatePer_fu_1343_ap_ready),
    .state_0_address0(grp_KeccakF1600_StatePer_fu_1343_state_0_address0),
    .state_0_ce0(grp_KeccakF1600_StatePer_fu_1343_state_0_ce0),
    .state_0_we0(grp_KeccakF1600_StatePer_fu_1343_state_0_we0),
    .state_0_d0(grp_KeccakF1600_StatePer_fu_1343_state_0_d0),
    .state_0_q0(state_0_s_q0),
    .state_0_address1(grp_KeccakF1600_StatePer_fu_1343_state_0_address1),
    .state_0_ce1(grp_KeccakF1600_StatePer_fu_1343_state_0_ce1),
    .state_0_we1(grp_KeccakF1600_StatePer_fu_1343_state_0_we1),
    .state_0_d1(grp_KeccakF1600_StatePer_fu_1343_state_0_d1),
    .state_0_q1(state_0_s_q1)
);

unpack_sk grp_unpack_sk_fu_1350(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_unpack_sk_fu_1350_ap_start),
    .ap_done(grp_unpack_sk_fu_1350_ap_done),
    .ap_idle(grp_unpack_sk_fu_1350_ap_idle),
    .ap_ready(grp_unpack_sk_fu_1350_ap_ready),
    .rho_address0(grp_unpack_sk_fu_1350_rho_address0),
    .rho_ce0(grp_unpack_sk_fu_1350_rho_ce0),
    .rho_we0(grp_unpack_sk_fu_1350_rho_we0),
    .rho_d0(grp_unpack_sk_fu_1350_rho_d0),
    .t0_vec_coeffs_address0(grp_unpack_sk_fu_1350_t0_vec_coeffs_address0),
    .t0_vec_coeffs_ce0(grp_unpack_sk_fu_1350_t0_vec_coeffs_ce0),
    .t0_vec_coeffs_we0(grp_unpack_sk_fu_1350_t0_vec_coeffs_we0),
    .t0_vec_coeffs_d0(grp_unpack_sk_fu_1350_t0_vec_coeffs_d0),
    .t0_vec_coeffs_address1(grp_unpack_sk_fu_1350_t0_vec_coeffs_address1),
    .t0_vec_coeffs_ce1(grp_unpack_sk_fu_1350_t0_vec_coeffs_ce1),
    .t0_vec_coeffs_we1(grp_unpack_sk_fu_1350_t0_vec_coeffs_we1),
    .t0_vec_coeffs_d1(grp_unpack_sk_fu_1350_t0_vec_coeffs_d1),
    .s1_vec_coeffs_address0(grp_unpack_sk_fu_1350_s1_vec_coeffs_address0),
    .s1_vec_coeffs_ce0(grp_unpack_sk_fu_1350_s1_vec_coeffs_ce0),
    .s1_vec_coeffs_we0(grp_unpack_sk_fu_1350_s1_vec_coeffs_we0),
    .s1_vec_coeffs_d0(grp_unpack_sk_fu_1350_s1_vec_coeffs_d0),
    .s1_vec_coeffs_address1(grp_unpack_sk_fu_1350_s1_vec_coeffs_address1),
    .s1_vec_coeffs_ce1(grp_unpack_sk_fu_1350_s1_vec_coeffs_ce1),
    .s1_vec_coeffs_we1(grp_unpack_sk_fu_1350_s1_vec_coeffs_we1),
    .s1_vec_coeffs_d1(grp_unpack_sk_fu_1350_s1_vec_coeffs_d1),
    .s2_vec_coeffs_address0(grp_unpack_sk_fu_1350_s2_vec_coeffs_address0),
    .s2_vec_coeffs_ce0(grp_unpack_sk_fu_1350_s2_vec_coeffs_ce0),
    .s2_vec_coeffs_we0(grp_unpack_sk_fu_1350_s2_vec_coeffs_we0),
    .s2_vec_coeffs_d0(grp_unpack_sk_fu_1350_s2_vec_coeffs_d0),
    .s2_vec_coeffs_address1(grp_unpack_sk_fu_1350_s2_vec_coeffs_address1),
    .s2_vec_coeffs_ce1(grp_unpack_sk_fu_1350_s2_vec_coeffs_ce1),
    .s2_vec_coeffs_we1(grp_unpack_sk_fu_1350_s2_vec_coeffs_we1),
    .s2_vec_coeffs_d1(grp_unpack_sk_fu_1350_s2_vec_coeffs_d1),
    .sk_address0(grp_unpack_sk_fu_1350_sk_address0),
    .sk_ce0(grp_unpack_sk_fu_1350_sk_ce0),
    .sk_q0(sk_q0),
    .sk_address1(grp_unpack_sk_fu_1350_sk_address1),
    .sk_ce1(grp_unpack_sk_fu_1350_sk_ce1),
    .sk_q1(sk_q1)
);

polyveck_invntt_tomo grp_polyveck_invntt_tomo_fu_1364(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_polyveck_invntt_tomo_fu_1364_ap_start),
    .ap_done(grp_polyveck_invntt_tomo_fu_1364_ap_done),
    .ap_idle(grp_polyveck_invntt_tomo_fu_1364_ap_idle),
    .ap_ready(grp_polyveck_invntt_tomo_fu_1364_ap_ready),
    .v_vec_coeffs_address0(grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_address0),
    .v_vec_coeffs_ce0(grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_ce0),
    .v_vec_coeffs_we0(grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_we0),
    .v_vec_coeffs_d0(grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_d0),
    .v_vec_coeffs_q0(grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_q0),
    .v_vec_coeffs_address1(grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_address1),
    .v_vec_coeffs_ce1(grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_ce1),
    .v_vec_coeffs_q1(grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_q1)
);

invntt_tomont grp_invntt_tomont_fu_1371(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_invntt_tomont_fu_1371_ap_start),
    .ap_done(grp_invntt_tomont_fu_1371_ap_done),
    .ap_idle(grp_invntt_tomont_fu_1371_ap_idle),
    .ap_ready(grp_invntt_tomont_fu_1371_ap_ready),
    .a_address0(grp_invntt_tomont_fu_1371_a_address0),
    .a_ce0(grp_invntt_tomont_fu_1371_a_ce0),
    .a_we0(grp_invntt_tomont_fu_1371_a_we0),
    .a_d0(grp_invntt_tomont_fu_1371_a_d0),
    .a_q0(z_vec_coeffs_q0),
    .a_address1(grp_invntt_tomont_fu_1371_a_address1),
    .a_ce1(grp_invntt_tomont_fu_1371_a_ce1),
    .a_q1(z_vec_coeffs_q1),
    .a_offset(i_0_i49_reg_1120)
);

pack_sig grp_pack_sig_fu_1380(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pack_sig_fu_1380_ap_start),
    .ap_done(grp_pack_sig_fu_1380_ap_done),
    .ap_idle(grp_pack_sig_fu_1380_ap_idle),
    .ap_ready(grp_pack_sig_fu_1380_ap_ready),
    .sig_address0(grp_pack_sig_fu_1380_sig_address0),
    .sig_ce0(grp_pack_sig_fu_1380_sig_ce0),
    .sig_we0(grp_pack_sig_fu_1380_sig_we0),
    .sig_d0(grp_pack_sig_fu_1380_sig_d0),
    .z_vec_coeffs_address0(grp_pack_sig_fu_1380_z_vec_coeffs_address0),
    .z_vec_coeffs_ce0(grp_pack_sig_fu_1380_z_vec_coeffs_ce0),
    .z_vec_coeffs_q0(z_vec_coeffs_q0),
    .h_vec_coeffs_address0(grp_pack_sig_fu_1380_h_vec_coeffs_address0),
    .h_vec_coeffs_ce0(grp_pack_sig_fu_1380_h_vec_coeffs_ce0),
    .h_vec_coeffs_q0(h_vec_coeffs_q0)
);

ntt_1 grp_ntt_1_fu_1388(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ntt_1_fu_1388_ap_start),
    .ap_done(grp_ntt_1_fu_1388_ap_done),
    .ap_idle(grp_ntt_1_fu_1388_ap_idle),
    .ap_ready(grp_ntt_1_fu_1388_ap_ready),
    .a_address0(grp_ntt_1_fu_1388_a_address0),
    .a_ce0(grp_ntt_1_fu_1388_a_ce0),
    .a_we0(grp_ntt_1_fu_1388_a_we0),
    .a_d0(grp_ntt_1_fu_1388_a_d0),
    .a_q0(cp_coeffs_q0),
    .a_address1(grp_ntt_1_fu_1388_a_address1),
    .a_ce1(grp_ntt_1_fu_1388_a_ce1),
    .a_q1(cp_coeffs_q1)
);

ntt grp_ntt_fu_1395(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ntt_fu_1395_ap_start),
    .ap_done(grp_ntt_fu_1395_ap_done),
    .ap_idle(grp_ntt_fu_1395_ap_idle),
    .ap_ready(grp_ntt_fu_1395_ap_ready),
    .a_address0(grp_ntt_fu_1395_a_address0),
    .a_ce0(grp_ntt_fu_1395_a_ce0),
    .a_we0(grp_ntt_fu_1395_a_we0),
    .a_d0(grp_ntt_fu_1395_a_d0),
    .a_q0(grp_ntt_fu_1395_a_q0),
    .a_address1(grp_ntt_fu_1395_a_address1),
    .a_ce1(grp_ntt_fu_1395_a_ce1),
    .a_q1(grp_ntt_fu_1395_a_q1),
    .a_offset(grp_ntt_fu_1395_a_offset)
);

polyvecl_pointwise_a grp_polyvecl_pointwise_a_fu_1407(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_polyvecl_pointwise_a_fu_1407_ap_start),
    .ap_done(grp_polyvecl_pointwise_a_fu_1407_ap_done),
    .ap_idle(grp_polyvecl_pointwise_a_fu_1407_ap_idle),
    .ap_ready(grp_polyvecl_pointwise_a_fu_1407_ap_ready),
    .w_coeffs_address0(grp_polyvecl_pointwise_a_fu_1407_w_coeffs_address0),
    .w_coeffs_ce0(grp_polyvecl_pointwise_a_fu_1407_w_coeffs_ce0),
    .w_coeffs_we0(grp_polyvecl_pointwise_a_fu_1407_w_coeffs_we0),
    .w_coeffs_d0(grp_polyvecl_pointwise_a_fu_1407_w_coeffs_d0),
    .w_coeffs_q0(w1_vec_coeffs_q0),
    .w_coeffs_offset(i_0_i17_reg_1042),
    .u_vec_coeffs_address0(grp_polyvecl_pointwise_a_fu_1407_u_vec_coeffs_address0),
    .u_vec_coeffs_ce0(grp_polyvecl_pointwise_a_fu_1407_u_vec_coeffs_ce0),
    .u_vec_coeffs_q0(mat_vec_coeffs_q0),
    .v_vec_coeffs_address0(grp_polyvecl_pointwise_a_fu_1407_v_vec_coeffs_address0),
    .v_vec_coeffs_ce0(grp_polyvecl_pointwise_a_fu_1407_v_vec_coeffs_ce0),
    .v_vec_coeffs_q0(z_vec_coeffs_q0)
);

keccak_absorb_3199 grp_keccak_absorb_3199_fu_1416(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_keccak_absorb_3199_fu_1416_ap_start),
    .ap_done(grp_keccak_absorb_3199_fu_1416_ap_done),
    .ap_idle(grp_keccak_absorb_3199_fu_1416_ap_idle),
    .ap_ready(grp_keccak_absorb_3199_fu_1416_ap_ready),
    .s_address0(grp_keccak_absorb_3199_fu_1416_s_address0),
    .s_ce0(grp_keccak_absorb_3199_fu_1416_s_ce0),
    .s_we0(grp_keccak_absorb_3199_fu_1416_s_we0),
    .s_d0(grp_keccak_absorb_3199_fu_1416_s_d0),
    .s_q0(state_s_q0),
    .m_address0(grp_keccak_absorb_3199_fu_1416_m_address0),
    .m_ce0(grp_keccak_absorb_3199_fu_1416_m_ce0),
    .m_q0(seedbuf_q0),
    .m_offset(grp_keccak_absorb_3199_fu_1416_m_offset)
);

polyveck_pack_w1 grp_polyveck_pack_w1_fu_1425(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_polyveck_pack_w1_fu_1425_ap_start),
    .ap_done(grp_polyveck_pack_w1_fu_1425_ap_done),
    .ap_idle(grp_polyveck_pack_w1_fu_1425_ap_idle),
    .ap_ready(grp_polyveck_pack_w1_fu_1425_ap_ready),
    .r_address0(grp_polyveck_pack_w1_fu_1425_r_address0),
    .r_ce0(grp_polyveck_pack_w1_fu_1425_r_ce0),
    .r_we0(grp_polyveck_pack_w1_fu_1425_r_we0),
    .r_d0(grp_polyveck_pack_w1_fu_1425_r_d0),
    .r_address1(grp_polyveck_pack_w1_fu_1425_r_address1),
    .r_ce1(grp_polyveck_pack_w1_fu_1425_r_ce1),
    .r_we1(grp_polyveck_pack_w1_fu_1425_r_we1),
    .r_d1(grp_polyveck_pack_w1_fu_1425_r_d1),
    .w1_vec_coeffs_address0(grp_polyveck_pack_w1_fu_1425_w1_vec_coeffs_address0),
    .w1_vec_coeffs_ce0(grp_polyveck_pack_w1_fu_1425_w1_vec_coeffs_ce0),
    .w1_vec_coeffs_q0(w1_vec_coeffs_q0),
    .w1_vec_coeffs_address1(grp_polyveck_pack_w1_fu_1425_w1_vec_coeffs_address1),
    .w1_vec_coeffs_ce1(grp_polyveck_pack_w1_fu_1425_w1_vec_coeffs_ce1),
    .w1_vec_coeffs_q1(w1_vec_coeffs_q1)
);

polyveck_pointwise_p grp_polyveck_pointwise_p_fu_1432(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_polyveck_pointwise_p_fu_1432_ap_start),
    .ap_done(grp_polyveck_pointwise_p_fu_1432_ap_done),
    .ap_idle(grp_polyveck_pointwise_p_fu_1432_ap_idle),
    .ap_ready(grp_polyveck_pointwise_p_fu_1432_ap_ready),
    .r_vec_coeffs_address0(grp_polyveck_pointwise_p_fu_1432_r_vec_coeffs_address0),
    .r_vec_coeffs_ce0(grp_polyveck_pointwise_p_fu_1432_r_vec_coeffs_ce0),
    .r_vec_coeffs_we0(grp_polyveck_pointwise_p_fu_1432_r_vec_coeffs_we0),
    .r_vec_coeffs_d0(grp_polyveck_pointwise_p_fu_1432_r_vec_coeffs_d0),
    .a_coeffs_address0(grp_polyveck_pointwise_p_fu_1432_a_coeffs_address0),
    .a_coeffs_ce0(grp_polyveck_pointwise_p_fu_1432_a_coeffs_ce0),
    .a_coeffs_q0(cp_coeffs_q0),
    .v_vec_coeffs_address0(grp_polyveck_pointwise_p_fu_1432_v_vec_coeffs_address0),
    .v_vec_coeffs_ce0(grp_polyveck_pointwise_p_fu_1432_v_vec_coeffs_ce0),
    .v_vec_coeffs_q0(grp_polyveck_pointwise_p_fu_1432_v_vec_coeffs_q0)
);

polyveck_chknorm grp_polyveck_chknorm_fu_1439(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_polyveck_chknorm_fu_1439_ap_start),
    .ap_done(grp_polyveck_chknorm_fu_1439_ap_done),
    .ap_idle(grp_polyveck_chknorm_fu_1439_ap_idle),
    .ap_ready(grp_polyveck_chknorm_fu_1439_ap_ready),
    .v_vec_coeffs_address0(grp_polyveck_chknorm_fu_1439_v_vec_coeffs_address0),
    .v_vec_coeffs_ce0(grp_polyveck_chknorm_fu_1439_v_vec_coeffs_ce0),
    .v_vec_coeffs_q0(grp_polyveck_chknorm_fu_1439_v_vec_coeffs_q0),
    .bound(grp_polyveck_chknorm_fu_1439_bound),
    .ap_return(grp_polyveck_chknorm_fu_1439_ap_return)
);

polyveck_caddq grp_polyveck_caddq_fu_1447(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_polyveck_caddq_fu_1447_ap_start),
    .ap_done(grp_polyveck_caddq_fu_1447_ap_done),
    .ap_idle(grp_polyveck_caddq_fu_1447_ap_idle),
    .ap_ready(grp_polyveck_caddq_fu_1447_ap_ready),
    .v_vec_coeffs_address0(grp_polyveck_caddq_fu_1447_v_vec_coeffs_address0),
    .v_vec_coeffs_ce0(grp_polyveck_caddq_fu_1447_v_vec_coeffs_ce0),
    .v_vec_coeffs_we0(grp_polyveck_caddq_fu_1447_v_vec_coeffs_we0),
    .v_vec_coeffs_d0(grp_polyveck_caddq_fu_1447_v_vec_coeffs_d0),
    .v_vec_coeffs_q0(grp_polyveck_caddq_fu_1447_v_vec_coeffs_q0)
);

polyveck_reduce grp_polyveck_reduce_fu_1452(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_polyveck_reduce_fu_1452_ap_start),
    .ap_done(grp_polyveck_reduce_fu_1452_ap_done),
    .ap_idle(grp_polyveck_reduce_fu_1452_ap_idle),
    .ap_ready(grp_polyveck_reduce_fu_1452_ap_ready),
    .v_vec_coeffs_address0(grp_polyveck_reduce_fu_1452_v_vec_coeffs_address0),
    .v_vec_coeffs_ce0(grp_polyveck_reduce_fu_1452_v_vec_coeffs_ce0),
    .v_vec_coeffs_we0(grp_polyveck_reduce_fu_1452_v_vec_coeffs_we0),
    .v_vec_coeffs_d0(grp_polyveck_reduce_fu_1452_v_vec_coeffs_d0),
    .v_vec_coeffs_q0(grp_polyveck_reduce_fu_1452_v_vec_coeffs_q0)
);

crypto_sign_mac_mxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 25 ),
    .din2_WIDTH( 25 ),
    .dout_WIDTH( 32 ))
crypto_sign_mac_mxdS_U97(
    .din0(grp_fu_3320_p0),
    .din1(trunc_ln10_fu_2473_p4),
    .din2(grp_fu_3320_p2),
    .dout(grp_fu_3320_p3)
);

crypto_sign_mac_myd2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
crypto_sign_mac_myd2_U98(
    .din0(grp_fu_3329_p0),
    .din1(a1_1_fu_2528_p2),
    .din2(w1_vec_coeffs_q0),
    .dout(grp_fu_3329_p3)
);

crypto_sign_mac_mibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
crypto_sign_mac_mibs_U99(
    .din0(trunc_ln12_fu_2970_p4),
    .din1(grp_fu_3339_p1),
    .din2(z_vec_coeffs_q0),
    .dout(grp_fu_3339_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_KeccakF1600_StatePer_1_fu_1336_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state11))) begin
            grp_KeccakF1600_StatePer_1_fu_1336_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakF1600_StatePer_1_fu_1336_ap_ready == 1'b1)) begin
            grp_KeccakF1600_StatePer_1_fu_1336_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_KeccakF1600_StatePer_fu_1343_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state24)) begin
            grp_KeccakF1600_StatePer_fu_1343_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakF1600_StatePer_fu_1343_ap_ready == 1'b1)) begin
            grp_KeccakF1600_StatePer_fu_1343_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_invntt_tomont_fu_1371_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln107_fu_2840_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
            grp_invntt_tomont_fu_1371_ap_start_reg <= 1'b1;
        end else if ((grp_invntt_tomont_fu_1371_ap_ready == 1'b1)) begin
            grp_invntt_tomont_fu_1371_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_keccak_absorb_2_fu_1320_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state5))) begin
            grp_keccak_absorb_2_fu_1320_ap_start_reg <= 1'b1;
        end else if ((grp_keccak_absorb_2_fu_1320_ap_ready == 1'b1)) begin
            grp_keccak_absorb_2_fu_1320_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_keccak_absorb_3199_fu_1416_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln362_2_fu_2570_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state63)) | ((icmp_ln362_fu_1586_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
            grp_keccak_absorb_3199_fu_1416_ap_start_reg <= 1'b1;
        end else if ((grp_keccak_absorb_3199_fu_1416_ap_ready == 1'b1)) begin
            grp_keccak_absorb_3199_fu_1416_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ntt_1_fu_1388_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state79)) begin
            grp_ntt_1_fu_1388_ap_start_reg <= 1'b1;
        end else if ((grp_ntt_1_fu_1388_ap_ready == 1'b1)) begin
            grp_ntt_1_fu_1388_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ntt_fu_1395_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln100_1_fu_2393_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state50)) | ((icmp_ln282_1_fu_2275_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state38)) | ((icmp_ln282_fu_2263_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36)) | ((icmp_ln100_fu_2251_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34)))) begin
            grp_ntt_fu_1395_ap_start_reg <= 1'b1;
        end else if ((grp_ntt_fu_1395_ap_ready == 1'b1)) begin
            grp_ntt_fu_1395_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pack_sig_fu_1380_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln392_fu_3190_p2 == 1'd1) & (icmp_ln158_reg_3824 == 1'd1) & (tmp_5_reg_3889 == 1'd0) & (tmp_s_reg_3885 == 1'd0) & (icmp_ln172_fu_3214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state115))) begin
            grp_pack_sig_fu_1380_ap_start_reg <= 1'b1;
        end else if ((grp_pack_sig_fu_1380_ap_ready == 1'b1)) begin
            grp_pack_sig_fu_1380_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_challenge_fu_1288_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln540_2_fu_2626_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state73))) begin
            grp_poly_challenge_fu_1288_ap_start_reg <= 1'b1;
        end else if ((grp_poly_challenge_fu_1288_ap_ready == 1'b1)) begin
            grp_poly_challenge_fu_1288_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_uniform_fu_1297_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln21_fu_2224_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
            grp_poly_uniform_fu_1297_ap_start_reg <= 1'b1;
        end else if ((grp_poly_uniform_fu_1297_ap_ready == 1'b1)) begin
            grp_poly_uniform_fu_1297_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_polyveck_caddq_fu_1447_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state57) | ((icmp_ln234_fu_3132_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state111)))) begin
            grp_polyveck_caddq_fu_1447_ap_start_reg <= 1'b1;
        end else if ((grp_polyveck_caddq_fu_1447_ap_ready == 1'b1)) begin
            grp_polyveck_caddq_fu_1447_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_polyveck_chknorm_fu_1439_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state102))) begin
            grp_polyveck_chknorm_fu_1439_ap_start_reg <= 1'b1;
        end else if ((grp_polyveck_chknorm_fu_1439_ap_ready == 1'b1)) begin
            grp_polyveck_chknorm_fu_1439_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_polyveck_invntt_tomo_fu_1364_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state55))) begin
            grp_polyveck_invntt_tomo_fu_1364_ap_start_reg <= 1'b1;
        end else if ((grp_polyveck_invntt_tomo_fu_1364_ap_ready == 1'b1)) begin
            grp_polyveck_invntt_tomo_fu_1364_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_polyveck_pack_w1_fu_1425_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln371_fu_2417_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state59))) begin
            grp_polyveck_pack_w1_fu_1425_ap_start_reg <= 1'b1;
        end else if ((grp_polyveck_pack_w1_fu_1425_ap_ready == 1'b1)) begin
            grp_polyveck_pack_w1_fu_1425_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_polyveck_pointwise_p_fu_1432_ap_start_reg <= 1'b0;
    end else begin
        if ((((grp_polyveck_chknorm_fu_1439_ap_done == 1'b1) & (grp_polyveck_chknorm_fu_1439_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state103)) | ((icmp_ln158_fu_2984_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state92)))) begin
            grp_polyveck_pointwise_p_fu_1432_ap_start_reg <= 1'b1;
        end else if ((grp_polyveck_pointwise_p_fu_1432_ap_ready == 1'b1)) begin
            grp_polyveck_pointwise_p_fu_1432_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_polyveck_reduce_fu_1452_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state107) | ((icmp_ln252_fu_3074_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state98)) | ((icmp_ln28_fu_2405_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52)))) begin
            grp_polyveck_reduce_fu_1452_ap_start_reg <= 1'b1;
        end else if ((grp_polyveck_reduce_fu_1452_ap_ready == 1'b1)) begin
            grp_polyveck_reduce_fu_1452_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_polyvecl_pointwise_a_fu_1407_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln28_fu_2405_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state52))) begin
            grp_polyvecl_pointwise_a_fu_1407_ap_start_reg <= 1'b1;
        end else if ((grp_polyvecl_pointwise_a_fu_1407_ap_ready == 1'b1)) begin
            grp_polyvecl_pointwise_a_fu_1407_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_polyvecl_uniform_gam_fu_1310_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state40)) begin
            grp_polyvecl_uniform_gam_fu_1310_ap_start_reg <= 1'b1;
        end else if ((grp_polyvecl_uniform_gam_fu_1310_ap_ready == 1'b1)) begin
            grp_polyvecl_uniform_gam_fu_1310_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_unpack_sk_fu_1350_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_unpack_sk_fu_1350_ap_start_reg <= 1'b1;
        end else if ((grp_unpack_sk_fu_1350_ap_ready == 1'b1)) begin
            grp_unpack_sk_fu_1350_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_3_reg_3631 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        i_0_i12_reg_1030 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state51) & (grp_ntt_fu_1395_ap_done == 1'b1))) begin
        i_0_i12_reg_1030 <= i_73_reg_3638;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln100_1_fu_2393_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
        i_0_i17_reg_1042 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state53) & (grp_polyvecl_pointwise_a_fu_1407_ap_done == 1'b1))) begin
        i_0_i17_reg_1042 <= i_74_reg_3646;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln225_fu_2441_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state60))) begin
        i_0_i19_reg_1054 <= i_75_reg_3654;
    end else if (((1'b1 == ap_CS_fsm_state58) & (grp_polyveck_caddq_fu_1447_ap_done == 1'b1))) begin
        i_0_i19_reg_1054 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_fu_2212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        i_0_i3_reg_938 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state35) & (grp_ntt_fu_1395_ap_done == 1'b1))) begin
        i_0_i3_reg_938 <= i_70_reg_3533;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln180_fu_2754_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
        i_0_i43_reg_1098 <= i_78_reg_3726;
    end else if (((1'b1 == ap_CS_fsm_state80) & (grp_ntt_1_fu_1388_ap_done == 1'b1))) begin
        i_0_i43_reg_1098 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_fu_2730_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state81))) begin
        i_0_i49_reg_1120 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state85) & (grp_invntt_tomont_fu_1371_ap_done == 1'b1))) begin
        i_0_i49_reg_1120 <= i_79_reg_3762;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_2840_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state84))) begin
        i_0_i51_reg_1132 <= 3'd0;
    end else if (((icmp_ln87_fu_2876_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state87))) begin
        i_0_i51_reg_1132 <= i_81_reg_3770;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln85_fu_2852_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state86))) begin
        i_0_i59_reg_1154 <= 3'd0;
    end else if (((icmp_ln32_fu_2938_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state90))) begin
        i_0_i59_reg_1154 <= i_82_reg_3801;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        i_0_i5_i_reg_878 <= i_45_reg_3435;
    end else if (((icmp_ln416_fu_1844_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        i_0_i5_i_reg_878 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln100_fu_2251_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
        i_0_i5_reg_950 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state37) & (grp_ntt_fu_1395_ap_done == 1'b1))) begin
        i_0_i5_reg_950 <= i_71_reg_3541;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln108_fu_3098_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state99))) begin
        i_0_i66_reg_1198 <= i_86_reg_3857;
    end else if (((1'b1 == ap_CS_fsm_state97) & (grp_polyveck_invntt_tomo_fu_1364_ap_done == 1'b1))) begin
        i_0_i66_reg_1198 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_polyveck_chknorm_fu_1439_ap_done == 1'b1) & (grp_polyveck_chknorm_fu_1439_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state110))) begin
        i_0_i74_reg_1220 <= 3'd0;
    end else if (((icmp_ln87_1_fu_3156_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state112))) begin
        i_0_i74_reg_1220 <= i_89_reg_3896;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln282_fu_2263_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        i_0_i7_reg_962 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state39) & (grp_ntt_fu_1395_ap_done == 1'b1))) begin
        i_0_i7_reg_962 <= i_72_reg_3549;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln53_fu_2914_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state89))) begin
        i_0_i85_reg_1176 <= 3'd0;
    end else if (((icmp_ln298_fu_3008_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state93))) begin
        i_0_i85_reg_1176 <= i_84_reg_3828;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln248_fu_3220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state116))) begin
        i_0_i87_reg_1242 <= i_91_reg_3927;
    end else if (((1'b1 == ap_CS_fsm_state114) & (grp_polyveck_caddq_fu_1447_ap_done == 1'b1))) begin
        i_0_i87_reg_1242 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        i_0_i_i20_reg_1065 <= i_77_reg_3667;
    end else if (((icmp_ln371_fu_2417_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state59))) begin
        i_0_i_i20_reg_1065 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln362_2_fu_2570_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state63))) begin
        i_0_i_i23_reg_1076 <= i_76_fu_2576_p2;
    end else if (((1'b1 == ap_CS_fsm_state62) & (grp_polyveck_pack_w1_fu_1425_ap_done == 1'b1))) begin
        i_0_i_i23_reg_1076 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        i_0_i_i44_reg_1109 <= i_80_reg_3739;
    end else if (((icmp_ln114_fu_2730_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state81))) begin
        i_0_i_i44_reg_1109 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        i_0_i_i52_reg_1143 <= i_83_reg_3783;
    end else if (((icmp_ln85_fu_2852_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state86))) begin
        i_0_i_i52_reg_1143 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        i_0_i_i60_reg_1165 <= i_85_reg_3814;
    end else if (((icmp_ln53_fu_2914_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state89))) begin
        i_0_i_i60_reg_1165 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        i_0_i_i67_reg_1209 <= i_88_reg_3870;
    end else if (((icmp_ln252_fu_3074_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state98))) begin
        i_0_i_i67_reg_1209 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        i_0_i_i75_reg_1231 <= i_90_reg_3909;
    end else if (((icmp_ln234_fu_3132_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state111))) begin
        i_0_i_i75_reg_1231 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln303_fu_3068_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state94))) begin
        i_0_i_i86_reg_1187 <= i_87_reg_3841;
    end else if (((icmp_ln158_fu_2984_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state92))) begin
        i_0_i_i86_reg_1187 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        i_0_i_i88_reg_1265 <= i_92_reg_3943;
    end else if (((icmp_ln158_reg_3824 == 1'd1) & (icmp_ln392_fu_3190_p2 == 1'd0) & (tmp_5_reg_3889 == 1'd0) & (tmp_s_reg_3885 == 1'd0) & (1'b1 == ap_CS_fsm_state115))) begin
        i_0_i_i88_reg_1265 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln540_fu_1642_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        i_0_i_i_i_reg_856 <= 5'd0;
    end else if (((icmp_ln362_1_fu_1823_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        i_0_i_i_i_reg_856 <= i_44_fu_1829_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln362_fu_1586_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_i_i_reg_833 <= i_43_fu_1592_p2;
    end else if (((grp_unpack_sk_fu_1350_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_i_i_reg_833 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln540_1_fu_1960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        i_0_i_reg_914 <= 3'd0;
    end else if (((icmp_ln21_fu_2224_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        i_0_i_reg_914 <= i_47_reg_3512;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln362_1_fu_1823_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        i_3_i1_reg_867 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        i_3_i1_reg_867 <= add_ln416_reg_3410;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        i_3_i3_reg_902 <= add_ln540_1_reg_3459;
    end else if (((grp_KeccakF1600_StatePer_fu_1343_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
        i_3_i3_reg_902 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        i_3_i47_reg_1087 <= add_ln540_2_reg_3698;
    end else if (((grp_KeccakF1600_StatePer_1_fu_1336_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state72))) begin
        i_3_i47_reg_1087 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i_3_i_reg_844 <= add_ln540_reg_3374;
    end else if (((grp_KeccakF1600_StatePer_1_fu_1336_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        i_3_i_reg_844 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_fu_2212_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        j_0_i_reg_926 <= 3'd0;
    end else if (((grp_poly_uniform_fu_1297_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
        j_0_i_reg_926 <= j_reg_3520;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln248_fu_3220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state116))) begin
        n_reg_1253 <= s_fu_3251_p2;
    end else if (((1'b1 == ap_CS_fsm_state114) & (grp_polyveck_caddq_fu_1447_ap_done == 1'b1))) begin
        n_reg_1253 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln282_1_fu_2275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
        nonce_0_reg_974 <= 16'd0;
    end else if (((1'b1 == ap_CS_fsm_state115) & ((icmp_ln158_reg_3824 == 1'd0) | ((tmp_s_reg_3885 == 1'd1) | ((tmp_5_reg_3889 == 1'd1) | ((icmp_ln392_fu_3190_p2 == 1'd1) & (icmp_ln172_fu_3214_p2 == 1'd1))))))) begin
        nonce_0_reg_974 <= nonce_reg_3554;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_reg_3574 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
        phi_ln124_1_reg_997 <= 8'd0;
    end else if (((icmp_ln124_1_reg_3593 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
        phi_ln124_1_reg_997 <= add_ln124_1_reg_3578;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_1_reg_3593 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
        phi_ln124_2_reg_1008 <= 8'd0;
    end else if (((icmp_ln124_2_reg_3612 == 1'd0) & (1'b1 == ap_CS_fsm_state47))) begin
        phi_ln124_2_reg_1008 <= add_ln124_2_reg_3597;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_2_reg_3612 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
        phi_ln124_3_reg_1019 <= 8'd0;
    end else if (((icmp_ln124_3_reg_3631 == 1'd0) & (1'b1 == ap_CS_fsm_state49))) begin
        phi_ln124_3_reg_1019 <= add_ln124_3_reg_3616;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_reg_3574 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
        phi_ln124_reg_986 <= add_ln124_reg_3559;
    end else if (((grp_polyvecl_uniform_gam_fu_1310_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
        phi_ln124_reg_986 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        r_0_i6_i_reg_890 <= r_fu_1928_p2;
    end else if (((icmp_ln416_fu_1844_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        r_0_i6_i_reg_890 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        s_0_i_i_reg_1276 <= s_1_fu_3314_p2;
    end else if (((icmp_ln158_reg_3824 == 1'd1) & (icmp_ln392_fu_3190_p2 == 1'd0) & (tmp_5_reg_3889 == 1'd0) & (tmp_s_reg_3885 == 1'd0) & (1'b1 == ap_CS_fsm_state115))) begin
        s_0_i_i_reg_1276 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        add_ln124_1_reg_3578 <= add_ln124_1_fu_2315_p2;
        icmp_ln124_1_reg_3593 <= icmp_ln124_1_fu_2330_p2;
        tmp_33_reg_3583[7 : 0] <= tmp_33_fu_2321_p3[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        add_ln124_2_reg_3597 <= add_ln124_2_fu_2341_p2;
        icmp_ln124_2_reg_3612 <= icmp_ln124_2_fu_2356_p2;
        tmp_34_reg_3602[7 : 0] <= tmp_34_fu_2347_p3[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        add_ln124_3_reg_3616 <= add_ln124_3_fu_2367_p2;
        icmp_ln124_3_reg_3631 <= icmp_ln124_3_fu_2382_p2;
        tmp_35_reg_3621[7 : 0] <= tmp_35_fu_2373_p3[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        add_ln124_reg_3559 <= add_ln124_fu_2293_p2;
        icmp_ln124_reg_3574 <= icmp_ln124_fu_2304_p2;
        zext_ln124_reg_3564[7 : 0] <= zext_ln124_fu_2299_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        add_ln416_reg_3410 <= add_ln416_fu_1850_p2;
        zext_ln416_reg_3402[3 : 0] <= zext_ln416_fu_1840_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        add_ln540_1_reg_3459 <= add_ln540_1_fu_1966_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        add_ln540_2_reg_3698 <= add_ln540_2_fu_2632_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_ln540_reg_3374 <= add_ln540_fu_1648_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_fu_2224_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        add_ln_reg_3525[2 : 0] <= add_ln_fu_2240_p4[2 : 0];
add_ln_reg_3525[9 : 8] <= add_ln_fu_2240_p4[9 : 8];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        i_45_reg_3435 <= i_45_fu_1874_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        i_47_reg_3512 <= i_47_fu_2218_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        i_70_reg_3533 <= i_70_fu_2257_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        i_71_reg_3541 <= i_71_fu_2269_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        i_72_reg_3549 <= i_72_fu_2281_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        i_73_reg_3638 <= i_73_fu_2399_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        i_74_reg_3646 <= i_74_fu_2411_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        i_75_reg_3654 <= i_75_fu_2423_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        i_77_reg_3667 <= i_77_fu_2447_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        i_78_reg_3726 <= i_78_fu_2736_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        i_79_reg_3762 <= i_79_fu_2846_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        i_80_reg_3739 <= i_80_fu_2760_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        i_81_reg_3770 <= i_81_fu_2858_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        i_82_reg_3801 <= i_82_fu_2920_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        i_83_reg_3783 <= i_83_fu_2882_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        i_84_reg_3828 <= i_84_fu_2990_p2;
        icmp_ln158_reg_3824 <= icmp_ln158_fu_2984_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        i_85_reg_3814 <= i_85_fu_2944_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        i_86_reg_3857 <= i_86_fu_3080_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        i_87_reg_3841 <= i_87_fu_3014_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        i_88_reg_3870 <= i_88_fu_3104_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        i_89_reg_3896 <= i_89_fu_3138_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        i_90_reg_3909 <= i_90_fu_3162_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln158_reg_3824 == 1'd1) & (tmp_5_reg_3889 == 1'd0) & (tmp_s_reg_3885 == 1'd0) & (1'b1 == ap_CS_fsm_state115))) begin
        i_91_reg_3927 <= i_91_fu_3196_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state116)) begin
        i_92_reg_3943 <= i_92_fu_3226_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        j_reg_3520 <= j_fu_2230_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        nonce_reg_3554 <= nonce_fu_2287_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state66) & (grp_keccak_absorb_2_fu_1320_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state6) & (grp_keccak_absorb_2_fu_1320_ap_done == 1'b1)))) begin
        reg_1546 <= grp_keccak_absorb_2_fu_1320_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state14))) begin
        reg_1550 <= {{state_s_q0[23:16]}};
        reg_1556 <= {{state_s_q0[31:24]}};
        reg_1562 <= {{state_s_q0[39:32]}};
        reg_1568 <= {{state_s_q0[47:40]}};
        reg_1574 <= {{state_s_q0[55:48]}};
        reg_1580 <= {{state_s_q0[63:56]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        shl_ln24_reg_3384[5 : 3] <= shl_ln24_fu_1659_p3[5 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        shl_ln541_1_reg_3469[5 : 3] <= shl_ln541_1_fu_1977_p3[5 : 3];
        trunc_ln543_1_reg_3479 <= {{state_0_s_q1[23:16]}};
        trunc_ln544_1_reg_3484 <= {{state_0_s_q1[31:24]}};
        trunc_ln545_1_reg_3489 <= {{state_0_s_q1[39:32]}};
        trunc_ln546_1_reg_3494 <= {{state_0_s_q1[47:40]}};
        trunc_ln547_1_reg_3499 <= {{state_0_s_q1[55:48]}};
        trunc_ln548_1_reg_3504 <= {{state_0_s_q1[63:56]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        shl_ln541_2_reg_3713[4 : 3] <= shl_ln541_2_fu_2647_p3[4 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_fu_1868_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        state_0_s_addr_4_reg_3445[3 : 0] <= zext_ln416_reg_3402[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state66) & (grp_keccak_absorb_2_fu_1320_ap_done == 1'b1))) begin
        state_s_addr_12_reg_3690 <= zext_ln450_6_fu_2587_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (grp_keccak_absorb_2_fu_1320_ap_done == 1'b1))) begin
        state_s_addr_reg_3361 <= zext_ln450_4_fu_1603_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_polyveck_chknorm_fu_1439_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state110))) begin
        tmp_5_reg_3889 <= grp_polyveck_chknorm_fu_1439_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_polyveck_chknorm_fu_1439_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state103))) begin
        tmp_s_reg_3885 <= grp_polyveck_chknorm_fu_1439_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln540_2_fu_2626_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state73))) begin
        trunc_ln541_3_reg_3708 <= trunc_ln541_3_fu_2638_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln108_fu_3098_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state99))) begin
        w0_vec_coeffs_addr_1_reg_3875 <= zext_ln109_1_fu_3119_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_1_fu_3156_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state112))) begin
        w0_vec_coeffs_addr_2_reg_3914 <= zext_ln88_6_fu_3177_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln225_fu_2441_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state60))) begin
        w1_vec_coeffs_addr_reg_3677 <= zext_ln226_1_fu_2462_p1;
        zext_ln226_1_reg_3672[11 : 0] <= zext_ln226_1_fu_2462_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_fu_2876_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state87))) begin
        z_vec_coeffs_addr_5_reg_3793 <= zext_ln88_4_fu_2897_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_2938_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state90))) begin
        z_vec_coeffs_addr_6_reg_3819 <= zext_ln33_2_fu_2959_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_3074_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state98))) begin
        zext_ln104_reg_3862[10 : 8] <= zext_ln104_fu_3094_p1[10 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_fu_2730_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state81))) begin
        zext_ln176_reg_3731[10 : 8] <= zext_ln176_fu_2750_p1[10 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln180_fu_2754_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state82))) begin
        zext_ln181_16_reg_3744[11 : 0] <= zext_ln181_16_fu_2780_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln371_fu_2417_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state59))) begin
        zext_ln221_reg_3659[10 : 8] <= zext_ln221_fu_2437_p1[10 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln158_reg_3824 == 1'd1) & (icmp_ln392_fu_3190_p2 == 1'd0) & (tmp_5_reg_3889 == 1'd0) & (tmp_s_reg_3885 == 1'd0) & (1'b1 == ap_CS_fsm_state115))) begin
        zext_ln244_reg_3932[10 : 8] <= zext_ln244_fu_3210_p1[10 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln248_fu_3220_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state116))) begin
        zext_ln249_1_reg_3948[11 : 0] <= zext_ln249_1_fu_3241_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln416_fu_1844_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        zext_ln26_reg_3415[6 : 3] <= zext_ln26_fu_1864_p1[6 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln158_fu_2984_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state92))) begin
        zext_ln287_reg_3833[10 : 8] <= zext_ln287_fu_3004_p1[10 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln53_fu_2914_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state89))) begin
        zext_ln28_reg_3806[10 : 8] <= zext_ln28_fu_2934_p1[10 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln234_fu_3132_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state111))) begin
        zext_ln83_1_reg_3901[10 : 8] <= zext_ln83_1_fu_3152_p1[10 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln85_fu_2852_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state86))) begin
        zext_ln83_reg_3775[10 : 8] <= zext_ln83_fu_2872_p1[10 : 8];
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state118) & (grp_pack_sig_fu_1380_ap_done == 1'b1)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state118) & (grp_pack_sig_fu_1380_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        cp_coeffs_address0 = zext_ln181_fu_2766_p1;
    end else if (((1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state95))) begin
        cp_coeffs_address0 = grp_polyveck_pointwise_p_fu_1432_a_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        cp_coeffs_address0 = grp_ntt_1_fu_1388_a_address0;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cp_coeffs_address0 = grp_poly_challenge_fu_1288_c_coeffs_address0;
    end else begin
        cp_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        cp_coeffs_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state95))) begin
        cp_coeffs_ce0 = grp_polyveck_pointwise_p_fu_1432_a_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        cp_coeffs_ce0 = grp_ntt_1_fu_1388_a_ce0;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cp_coeffs_ce0 = grp_poly_challenge_fu_1288_c_coeffs_ce0;
    end else begin
        cp_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        cp_coeffs_ce1 = grp_ntt_1_fu_1388_a_ce1;
    end else begin
        cp_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        cp_coeffs_d0 = grp_ntt_1_fu_1388_a_d0;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cp_coeffs_d0 = grp_poly_challenge_fu_1288_c_coeffs_d0;
    end else begin
        cp_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        cp_coeffs_we0 = grp_ntt_1_fu_1388_a_we0;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cp_coeffs_we0 = grp_poly_challenge_fu_1288_c_coeffs_we0;
    end else begin
        cp_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_keccak_absorb_2_fu_1320_m_offset = 13'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_keccak_absorb_2_fu_1320_m_offset = 13'd2420;
    end else begin
        grp_keccak_absorb_2_fu_1320_m_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_keccak_absorb_2_fu_1320_mlen = 64'd768;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_keccak_absorb_2_fu_1320_mlen = mlen;
    end else begin
        grp_keccak_absorb_2_fu_1320_mlen = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_keccak_absorb_3199_fu_1416_m_offset = 8'd112;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_keccak_absorb_3199_fu_1416_m_offset = 8'd32;
    end else begin
        grp_keccak_absorb_3199_fu_1416_m_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_ntt_fu_1395_a_offset = i_0_i12_reg_1030;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_ntt_fu_1395_a_offset = i_0_i7_reg_962;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_ntt_fu_1395_a_offset = i_0_i5_reg_950;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_ntt_fu_1395_a_offset = i_0_i3_reg_938;
    end else begin
        grp_ntt_fu_1395_a_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_ntt_fu_1395_a_q0 = z_vec_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_ntt_fu_1395_a_q0 = t0_vec_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_ntt_fu_1395_a_q0 = s2_vec_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_ntt_fu_1395_a_q0 = s1_vec_coeffs_q0;
    end else begin
        grp_ntt_fu_1395_a_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_ntt_fu_1395_a_q1 = z_vec_coeffs_q1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_ntt_fu_1395_a_q1 = t0_vec_coeffs_q1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_ntt_fu_1395_a_q1 = s2_vec_coeffs_q1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_ntt_fu_1395_a_q1 = s1_vec_coeffs_q1;
    end else begin
        grp_ntt_fu_1395_a_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        grp_polyveck_caddq_fu_1447_v_vec_coeffs_q0 = w0_vec_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_polyveck_caddq_fu_1447_v_vec_coeffs_q0 = w1_vec_coeffs_q0;
    end else begin
        grp_polyveck_caddq_fu_1447_v_vec_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        grp_polyveck_chknorm_fu_1439_bound = 18'd95232;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_polyveck_chknorm_fu_1439_bound = 18'd95154;
    end else begin
        grp_polyveck_chknorm_fu_1439_bound = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        grp_polyveck_chknorm_fu_1439_v_vec_coeffs_q0 = h_vec_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_polyveck_chknorm_fu_1439_v_vec_coeffs_q0 = w0_vec_coeffs_q0;
    end else begin
        grp_polyveck_chknorm_fu_1439_v_vec_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state97))) begin
        grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_q0 = h_vec_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_q0 = w1_vec_coeffs_q0;
    end else begin
        grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state97))) begin
        grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_q1 = h_vec_coeffs_q1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_q1 = w1_vec_coeffs_q1;
    end else begin
        grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        grp_polyveck_pointwise_p_fu_1432_v_vec_coeffs_q0 = t0_vec_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_polyveck_pointwise_p_fu_1432_v_vec_coeffs_q0 = s2_vec_coeffs_q0;
    end else begin
        grp_polyveck_pointwise_p_fu_1432_v_vec_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        grp_polyveck_reduce_fu_1452_v_vec_coeffs_q0 = h_vec_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_polyveck_reduce_fu_1452_v_vec_coeffs_q0 = w0_vec_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_polyveck_reduce_fu_1452_v_vec_coeffs_q0 = w1_vec_coeffs_q0;
    end else begin
        grp_polyveck_reduce_fu_1452_v_vec_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        h_vec_coeffs_address0 = zext_ln249_1_reg_3948;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        h_vec_coeffs_address0 = zext_ln88_6_fu_3177_p1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        h_vec_coeffs_address0 = zext_ln109_1_fu_3119_p1;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        h_vec_coeffs_address0 = grp_polyveck_reduce_fu_1452_v_vec_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        h_vec_coeffs_address0 = grp_polyveck_chknorm_fu_1439_v_vec_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state95))) begin
        h_vec_coeffs_address0 = grp_polyveck_pointwise_p_fu_1432_r_vec_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state118)) begin
        h_vec_coeffs_address0 = grp_pack_sig_fu_1380_h_vec_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state97))) begin
        h_vec_coeffs_address0 = grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_address0;
    end else begin
        h_vec_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state99))) begin
        h_vec_coeffs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        h_vec_coeffs_ce0 = grp_polyveck_reduce_fu_1452_v_vec_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        h_vec_coeffs_ce0 = grp_polyveck_chknorm_fu_1439_v_vec_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state95))) begin
        h_vec_coeffs_ce0 = grp_polyveck_pointwise_p_fu_1432_r_vec_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state118)) begin
        h_vec_coeffs_ce0 = grp_pack_sig_fu_1380_h_vec_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state97))) begin
        h_vec_coeffs_ce0 = grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_ce0;
    end else begin
        h_vec_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state97))) begin
        h_vec_coeffs_ce1 = grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_ce1;
    end else begin
        h_vec_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        h_vec_coeffs_d0 = zext_ln69_1_fu_3309_p1;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        h_vec_coeffs_d0 = grp_polyveck_reduce_fu_1452_v_vec_coeffs_d0;
    end else if (((1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state95))) begin
        h_vec_coeffs_d0 = grp_polyveck_pointwise_p_fu_1432_r_vec_coeffs_d0;
    end else if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state97))) begin
        h_vec_coeffs_d0 = grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_d0;
    end else begin
        h_vec_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        h_vec_coeffs_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        h_vec_coeffs_we0 = grp_polyveck_reduce_fu_1452_v_vec_coeffs_we0;
    end else if (((1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state95))) begin
        h_vec_coeffs_we0 = grp_polyveck_pointwise_p_fu_1432_r_vec_coeffs_we0;
    end else if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state97))) begin
        h_vec_coeffs_we0 = grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_we0;
    end else begin
        h_vec_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        mat_vec_coeffs_address0 = grp_polyvecl_pointwise_a_fu_1407_u_vec_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        mat_vec_coeffs_address0 = grp_poly_uniform_fu_1297_a_coeffs_address0;
    end else begin
        mat_vec_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        mat_vec_coeffs_ce0 = grp_polyvecl_pointwise_a_fu_1407_u_vec_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        mat_vec_coeffs_ce0 = grp_poly_uniform_fu_1297_a_coeffs_ce0;
    end else begin
        mat_vec_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        mat_vec_coeffs_we0 = grp_poly_uniform_fu_1297_a_coeffs_we0;
    end else begin
        mat_vec_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        s1_vec_coeffs_address0 = zext_ln181_16_fu_2780_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        s1_vec_coeffs_address0 = grp_ntt_fu_1395_a_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        s1_vec_coeffs_address0 = grp_unpack_sk_fu_1350_s1_vec_coeffs_address0;
    end else begin
        s1_vec_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        s1_vec_coeffs_address1 = grp_ntt_fu_1395_a_address1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        s1_vec_coeffs_address1 = grp_unpack_sk_fu_1350_s1_vec_coeffs_address1;
    end else begin
        s1_vec_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        s1_vec_coeffs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        s1_vec_coeffs_ce0 = grp_ntt_fu_1395_a_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        s1_vec_coeffs_ce0 = grp_unpack_sk_fu_1350_s1_vec_coeffs_ce0;
    end else begin
        s1_vec_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        s1_vec_coeffs_ce1 = grp_ntt_fu_1395_a_ce1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        s1_vec_coeffs_ce1 = grp_unpack_sk_fu_1350_s1_vec_coeffs_ce1;
    end else begin
        s1_vec_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        s1_vec_coeffs_d0 = grp_ntt_fu_1395_a_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        s1_vec_coeffs_d0 = grp_unpack_sk_fu_1350_s1_vec_coeffs_d0;
    end else begin
        s1_vec_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        s1_vec_coeffs_we0 = grp_ntt_fu_1395_a_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        s1_vec_coeffs_we0 = grp_unpack_sk_fu_1350_s1_vec_coeffs_we0;
    end else begin
        s1_vec_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        s1_vec_coeffs_we1 = grp_unpack_sk_fu_1350_s1_vec_coeffs_we1;
    end else begin
        s1_vec_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        s2_vec_coeffs_address0 = grp_polyveck_pointwise_p_fu_1432_v_vec_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        s2_vec_coeffs_address0 = grp_ntt_fu_1395_a_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        s2_vec_coeffs_address0 = grp_unpack_sk_fu_1350_s2_vec_coeffs_address0;
    end else begin
        s2_vec_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        s2_vec_coeffs_address1 = grp_ntt_fu_1395_a_address1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        s2_vec_coeffs_address1 = grp_unpack_sk_fu_1350_s2_vec_coeffs_address1;
    end else begin
        s2_vec_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        s2_vec_coeffs_ce0 = grp_polyveck_pointwise_p_fu_1432_v_vec_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        s2_vec_coeffs_ce0 = grp_ntt_fu_1395_a_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        s2_vec_coeffs_ce0 = grp_unpack_sk_fu_1350_s2_vec_coeffs_ce0;
    end else begin
        s2_vec_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        s2_vec_coeffs_ce1 = grp_ntt_fu_1395_a_ce1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        s2_vec_coeffs_ce1 = grp_unpack_sk_fu_1350_s2_vec_coeffs_ce1;
    end else begin
        s2_vec_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        s2_vec_coeffs_d0 = grp_ntt_fu_1395_a_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        s2_vec_coeffs_d0 = grp_unpack_sk_fu_1350_s2_vec_coeffs_d0;
    end else begin
        s2_vec_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        s2_vec_coeffs_we0 = grp_ntt_fu_1395_a_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        s2_vec_coeffs_we0 = grp_unpack_sk_fu_1350_s2_vec_coeffs_we0;
    end else begin
        s2_vec_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        s2_vec_coeffs_we1 = grp_unpack_sk_fu_1350_s2_vec_coeffs_we1;
    end else begin
        s2_vec_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        seedbuf_address0 = zext_ln548_3_fu_2207_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        seedbuf_address0 = zext_ln546_3_fu_2167_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        seedbuf_address0 = zext_ln544_3_fu_2127_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        seedbuf_address0 = zext_ln542_3_fu_2027_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        seedbuf_address0 = zext_ln31_18_fu_1897_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        seedbuf_address0 = zext_ln547_1_fu_1798_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        seedbuf_address0 = zext_ln545_1_fu_1758_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        seedbuf_address0 = zext_ln543_1_fu_1718_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        seedbuf_address0 = zext_ln541_1_fu_1677_p1;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state4))) begin
        seedbuf_address0 = grp_keccak_absorb_3199_fu_1416_m_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        seedbuf_address0 = grp_unpack_sk_fu_1350_rho_address0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        seedbuf_address0 = grp_polyvecl_uniform_gam_fu_1310_seed_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        seedbuf_address0 = grp_poly_uniform_fu_1297_seed_address0;
    end else begin
        seedbuf_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        seedbuf_address1 = zext_ln547_3_fu_2187_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        seedbuf_address1 = zext_ln545_3_fu_2147_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        seedbuf_address1 = zext_ln543_3_fu_2107_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        seedbuf_address1 = zext_ln541_3_fu_1995_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        seedbuf_address1 = zext_ln548_1_fu_1818_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        seedbuf_address1 = zext_ln546_1_fu_1778_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        seedbuf_address1 = zext_ln544_1_fu_1738_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        seedbuf_address1 = zext_ln542_1_fu_1698_p1;
    end else begin
        seedbuf_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        seedbuf_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state4))) begin
        seedbuf_ce0 = grp_keccak_absorb_3199_fu_1416_m_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        seedbuf_ce0 = grp_unpack_sk_fu_1350_rho_ce0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        seedbuf_ce0 = grp_polyvecl_uniform_gam_fu_1310_seed_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        seedbuf_ce0 = grp_poly_uniform_fu_1297_seed_ce0;
    end else begin
        seedbuf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        seedbuf_ce1 = 1'b1;
    end else begin
        seedbuf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        seedbuf_d0 = trunc_ln548_1_reg_3504;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        seedbuf_d0 = trunc_ln546_1_reg_3494;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        seedbuf_d0 = trunc_ln544_1_reg_3484;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        seedbuf_d0 = {{state_0_s_q1[15:8]}};
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        seedbuf_d0 = reg_1574;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        seedbuf_d0 = reg_1562;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        seedbuf_d0 = reg_1550;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        seedbuf_d0 = trunc_ln541_fu_1654_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        seedbuf_d0 = grp_unpack_sk_fu_1350_rho_d0;
    end else begin
        seedbuf_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        seedbuf_d1 = trunc_ln547_1_reg_3499;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        seedbuf_d1 = trunc_ln545_1_reg_3489;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        seedbuf_d1 = trunc_ln543_1_reg_3479;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        seedbuf_d1 = trunc_ln541_1_fu_1972_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        seedbuf_d1 = reg_1580;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        seedbuf_d1 = reg_1568;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        seedbuf_d1 = reg_1556;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        seedbuf_d1 = {{state_s_q0[15:8]}};
    end else begin
        seedbuf_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        seedbuf_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        seedbuf_we0 = grp_unpack_sk_fu_1350_rho_we0;
    end else begin
        seedbuf_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        seedbuf_we1 = 1'b1;
    end else begin
        seedbuf_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        sig_address0 = zext_ln547_4_fu_2715_p1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        sig_address0 = zext_ln545_4_fu_2695_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        sig_address0 = zext_ln543_4_fu_2675_p1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        sig_address0 = zext_ln541_4_fu_2654_p1;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        sig_address0 = grp_polyveck_pack_w1_fu_1425_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state118)) begin
        sig_address0 = grp_pack_sig_fu_1380_sig_address0;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state6))) begin
        sig_address0 = grp_keccak_absorb_2_fu_1320_m_address0;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        sig_address0 = grp_poly_challenge_fu_1288_seed_address0;
    end else begin
        sig_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        sig_address1 = zext_ln548_4_fu_2725_p1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        sig_address1 = zext_ln546_4_fu_2705_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        sig_address1 = zext_ln544_4_fu_2685_p1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        sig_address1 = zext_ln542_4_fu_2665_p1;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        sig_address1 = grp_polyveck_pack_w1_fu_1425_r_address1;
    end else begin
        sig_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state77))) begin
        sig_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        sig_ce0 = grp_polyveck_pack_w1_fu_1425_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state118)) begin
        sig_ce0 = grp_pack_sig_fu_1380_sig_ce0;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state6))) begin
        sig_ce0 = grp_keccak_absorb_2_fu_1320_m_ce0;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        sig_ce0 = grp_poly_challenge_fu_1288_seed_ce0;
    end else begin
        sig_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state77))) begin
        sig_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        sig_ce1 = grp_polyveck_pack_w1_fu_1425_r_ce1;
    end else begin
        sig_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        sig_d0 = reg_1574;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        sig_d0 = reg_1562;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        sig_d0 = reg_1550;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        sig_d0 = trunc_ln541_2_fu_2642_p1;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        sig_d0 = grp_polyveck_pack_w1_fu_1425_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state118)) begin
        sig_d0 = grp_pack_sig_fu_1380_sig_d0;
    end else begin
        sig_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        sig_d1 = reg_1580;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        sig_d1 = reg_1568;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        sig_d1 = reg_1556;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        sig_d1 = {{state_s_q0[15:8]}};
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        sig_d1 = grp_polyveck_pack_w1_fu_1425_r_d1;
    end else begin
        sig_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state77))) begin
        sig_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        sig_we0 = grp_polyveck_pack_w1_fu_1425_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state118)) begin
        sig_we0 = grp_pack_sig_fu_1380_sig_we0;
    end else begin
        sig_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state77))) begin
        sig_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        sig_we1 = grp_polyveck_pack_w1_fu_1425_r_we1;
    end else begin
        sig_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        state_0_s_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        state_0_s_address0 = state_0_s_addr_4_reg_3445;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        state_0_s_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        state_0_s_address0 = zext_ln363_1_fu_1835_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        state_0_s_address0 = grp_KeccakF1600_StatePer_fu_1343_state_0_address0;
    end else begin
        state_0_s_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        state_0_s_address1 = zext_ln540_1_fu_1955_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        state_0_s_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        state_0_s_address1 = zext_ln416_reg_3402;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        state_0_s_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        state_0_s_address1 = grp_KeccakF1600_StatePer_fu_1343_state_0_address1;
    end else begin
        state_0_s_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22))) begin
        state_0_s_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        state_0_s_ce0 = grp_KeccakF1600_StatePer_fu_1343_state_0_ce0;
    end else begin
        state_0_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state23))) begin
        state_0_s_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        state_0_s_ce1 = grp_KeccakF1600_StatePer_fu_1343_state_0_ce1;
    end else begin
        state_0_s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        state_0_s_d0 = xor_ln451_1_fu_1948_p2;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        state_0_s_d0 = xor_ln417_fu_1934_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        state_0_s_d0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        state_0_s_d0 = grp_KeccakF1600_StatePer_fu_1343_state_0_d0;
    end else begin
        state_0_s_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        state_0_s_d1 = xor_ln450_1_fu_1941_p2;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        state_0_s_d1 = grp_KeccakF1600_StatePer_fu_1343_state_0_d1;
    end else begin
        state_0_s_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | ((icmp_ln362_1_fu_1823_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        state_0_s_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        state_0_s_we0 = grp_KeccakF1600_StatePer_fu_1343_state_0_we0;
    end else begin
        state_0_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        state_0_s_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        state_0_s_we1 = grp_KeccakF1600_StatePer_fu_1343_state_0_we1;
    end else begin
        state_0_s_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        state_s_address0 = zext_ln540_2_fu_2621_p1;
    end else if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67))) begin
        state_s_address0 = state_s_addr_12_reg_3690;
    end else if (((icmp_ln362_2_fu_2570_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state63))) begin
        state_s_address0 = zext_ln363_2_fu_2582_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        state_s_address0 = zext_ln540_fu_1637_p1;
    end else if (((1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state10))) begin
        state_s_address0 = state_s_addr_9_reg_3366;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        state_s_address0 = 64'd16;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        state_s_address0 = state_s_addr_reg_3361;
    end else if (((icmp_ln362_fu_1586_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        state_s_address0 = zext_ln363_fu_1598_p1;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state4))) begin
        state_s_address0 = grp_keccak_absorb_3199_fu_1416_s_address0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state12))) begin
        state_s_address0 = grp_KeccakF1600_StatePer_1_fu_1336_state_address0;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state6))) begin
        state_s_address0 = grp_keccak_absorb_2_fu_1320_s_address0;
    end else begin
        state_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state12))) begin
        state_s_address1 = grp_KeccakF1600_StatePer_1_fu_1336_state_address1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state6))) begin
        state_s_address1 = grp_keccak_absorb_2_fu_1320_s_address1;
    end else begin
        state_s_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((icmp_ln362_2_fu_2570_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state63)) | ((icmp_ln362_fu_1586_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        state_s_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state4))) begin
        state_s_ce0 = grp_keccak_absorb_3199_fu_1416_s_ce0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state12))) begin
        state_s_ce0 = grp_KeccakF1600_StatePer_1_fu_1336_state_ce0;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state6))) begin
        state_s_ce0 = grp_keccak_absorb_2_fu_1320_s_ce0;
    end else begin
        state_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state12))) begin
        state_s_ce1 = grp_KeccakF1600_StatePer_1_fu_1336_state_ce1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state6))) begin
        state_s_ce1 = grp_keccak_absorb_2_fu_1320_s_ce1;
    end else begin
        state_s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        state_s_d0 = xor_ln450_2_fu_2614_p2;
    end else if (((1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state10))) begin
        state_s_d0 = grp_fu_1467_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        state_s_d0 = xor_ln450_fu_1630_p2;
    end else if ((((icmp_ln362_2_fu_2570_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state63)) | ((icmp_ln362_fu_1586_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        state_s_d0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state4))) begin
        state_s_d0 = grp_keccak_absorb_3199_fu_1416_s_d0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state12))) begin
        state_s_d0 = grp_KeccakF1600_StatePer_1_fu_1336_state_d0;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state6))) begin
        state_s_d0 = grp_keccak_absorb_2_fu_1320_s_d0;
    end else begin
        state_s_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state12))) begin
        state_s_d1 = grp_KeccakF1600_StatePer_1_fu_1336_state_d1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state6))) begin
        state_s_d1 = grp_keccak_absorb_2_fu_1320_s_d1;
    end else begin
        state_s_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | ((icmp_ln362_2_fu_2570_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state63)) | ((icmp_ln362_fu_1586_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        state_s_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state4))) begin
        state_s_we0 = grp_keccak_absorb_3199_fu_1416_s_we0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state12))) begin
        state_s_we0 = grp_KeccakF1600_StatePer_1_fu_1336_state_we0;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state6))) begin
        state_s_we0 = grp_keccak_absorb_2_fu_1320_s_we0;
    end else begin
        state_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state12))) begin
        state_s_we1 = grp_KeccakF1600_StatePer_1_fu_1336_state_we1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state6))) begin
        state_s_we1 = grp_keccak_absorb_2_fu_1320_s_we1;
    end else begin
        state_s_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        t0_vec_coeffs_address0 = grp_polyveck_pointwise_p_fu_1432_v_vec_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        t0_vec_coeffs_address0 = grp_ntt_fu_1395_a_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t0_vec_coeffs_address0 = grp_unpack_sk_fu_1350_t0_vec_coeffs_address0;
    end else begin
        t0_vec_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        t0_vec_coeffs_address1 = grp_ntt_fu_1395_a_address1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t0_vec_coeffs_address1 = grp_unpack_sk_fu_1350_t0_vec_coeffs_address1;
    end else begin
        t0_vec_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        t0_vec_coeffs_ce0 = grp_polyveck_pointwise_p_fu_1432_v_vec_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        t0_vec_coeffs_ce0 = grp_ntt_fu_1395_a_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t0_vec_coeffs_ce0 = grp_unpack_sk_fu_1350_t0_vec_coeffs_ce0;
    end else begin
        t0_vec_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        t0_vec_coeffs_ce1 = grp_ntt_fu_1395_a_ce1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t0_vec_coeffs_ce1 = grp_unpack_sk_fu_1350_t0_vec_coeffs_ce1;
    end else begin
        t0_vec_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        t0_vec_coeffs_d0 = grp_ntt_fu_1395_a_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t0_vec_coeffs_d0 = grp_unpack_sk_fu_1350_t0_vec_coeffs_d0;
    end else begin
        t0_vec_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        t0_vec_coeffs_we0 = grp_ntt_fu_1395_a_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t0_vec_coeffs_we0 = grp_unpack_sk_fu_1350_t0_vec_coeffs_we0;
    end else begin
        t0_vec_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        t0_vec_coeffs_we1 = grp_unpack_sk_fu_1350_t0_vec_coeffs_we1;
    end else begin
        t0_vec_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state116)) begin
        w0_vec_coeffs_address0 = zext_ln249_1_fu_3241_p1;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        w0_vec_coeffs_address0 = w0_vec_coeffs_addr_2_reg_3914;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        w0_vec_coeffs_address0 = zext_ln88_6_fu_3177_p1;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        w0_vec_coeffs_address0 = w0_vec_coeffs_addr_1_reg_3875;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        w0_vec_coeffs_address0 = zext_ln109_1_fu_3119_p1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        w0_vec_coeffs_address0 = zext_ln226_1_reg_3672;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        w0_vec_coeffs_address0 = grp_polyveck_reduce_fu_1452_v_vec_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        w0_vec_coeffs_address0 = grp_polyveck_caddq_fu_1447_v_vec_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        w0_vec_coeffs_address0 = grp_polyveck_chknorm_fu_1439_v_vec_coeffs_address0;
    end else begin
        w0_vec_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state61))) begin
        w0_vec_coeffs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        w0_vec_coeffs_ce0 = grp_polyveck_reduce_fu_1452_v_vec_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        w0_vec_coeffs_ce0 = grp_polyveck_caddq_fu_1447_v_vec_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        w0_vec_coeffs_ce0 = grp_polyveck_chknorm_fu_1439_v_vec_coeffs_ce0;
    end else begin
        w0_vec_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        w0_vec_coeffs_d0 = add_ln88_2_fu_3183_p2;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        w0_vec_coeffs_d0 = sub_ln109_fu_3125_p2;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        w0_vec_coeffs_d0 = sub_ln52_1_fu_2564_p2;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        w0_vec_coeffs_d0 = grp_polyveck_reduce_fu_1452_v_vec_coeffs_d0;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        w0_vec_coeffs_d0 = grp_polyveck_caddq_fu_1447_v_vec_coeffs_d0;
    end else begin
        w0_vec_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state61))) begin
        w0_vec_coeffs_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        w0_vec_coeffs_we0 = grp_polyveck_reduce_fu_1452_v_vec_coeffs_we0;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        w0_vec_coeffs_we0 = grp_polyveck_caddq_fu_1447_v_vec_coeffs_we0;
    end else begin
        w0_vec_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state116)) begin
        w1_vec_coeffs_address0 = zext_ln249_1_fu_3241_p1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        w1_vec_coeffs_address0 = w1_vec_coeffs_addr_reg_3677;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        w1_vec_coeffs_address0 = zext_ln226_1_fu_2462_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        w1_vec_coeffs_address0 = grp_polyveck_reduce_fu_1452_v_vec_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        w1_vec_coeffs_address0 = grp_polyveck_caddq_fu_1447_v_vec_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        w1_vec_coeffs_address0 = grp_polyveck_pack_w1_fu_1425_w1_vec_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        w1_vec_coeffs_address0 = grp_polyvecl_pointwise_a_fu_1407_w_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        w1_vec_coeffs_address0 = grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_address0;
    end else begin
        w1_vec_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        w1_vec_coeffs_address1 = grp_polyveck_pack_w1_fu_1425_w1_vec_coeffs_address1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        w1_vec_coeffs_address1 = grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_address1;
    end else begin
        w1_vec_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state61))) begin
        w1_vec_coeffs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        w1_vec_coeffs_ce0 = grp_polyveck_reduce_fu_1452_v_vec_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        w1_vec_coeffs_ce0 = grp_polyveck_caddq_fu_1447_v_vec_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        w1_vec_coeffs_ce0 = grp_polyveck_pack_w1_fu_1425_w1_vec_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        w1_vec_coeffs_ce0 = grp_polyvecl_pointwise_a_fu_1407_w_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        w1_vec_coeffs_ce0 = grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_ce0;
    end else begin
        w1_vec_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        w1_vec_coeffs_ce1 = grp_polyveck_pack_w1_fu_1425_w1_vec_coeffs_ce1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        w1_vec_coeffs_ce1 = grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_ce1;
    end else begin
        w1_vec_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        w1_vec_coeffs_d0 = sext_ln48_1_fu_2538_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        w1_vec_coeffs_d0 = grp_polyveck_reduce_fu_1452_v_vec_coeffs_d0;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        w1_vec_coeffs_d0 = grp_polyveck_caddq_fu_1447_v_vec_coeffs_d0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        w1_vec_coeffs_d0 = grp_polyvecl_pointwise_a_fu_1407_w_coeffs_d0;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        w1_vec_coeffs_d0 = grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_d0;
    end else begin
        w1_vec_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        w1_vec_coeffs_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        w1_vec_coeffs_we0 = grp_polyveck_reduce_fu_1452_v_vec_coeffs_we0;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        w1_vec_coeffs_we0 = grp_polyveck_caddq_fu_1447_v_vec_coeffs_we0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        w1_vec_coeffs_we0 = grp_polyvecl_pointwise_a_fu_1407_w_coeffs_we0;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        w1_vec_coeffs_we0 = grp_polyveck_invntt_tomo_fu_1364_v_vec_coeffs_we0;
    end else begin
        w1_vec_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        y_vec_coeffs_address0 = zext_ln88_4_fu_2897_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        y_vec_coeffs_address0 = tmp_35_fu_2373_p3;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        y_vec_coeffs_address0 = tmp_34_fu_2347_p3;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        y_vec_coeffs_address0 = tmp_33_fu_2321_p3;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        y_vec_coeffs_address0 = zext_ln124_fu_2299_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        y_vec_coeffs_address0 = grp_polyvecl_uniform_gam_fu_1310_v_vec_coeffs_address0;
    end else begin
        y_vec_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state42))) begin
        y_vec_coeffs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        y_vec_coeffs_ce0 = grp_polyvecl_uniform_gam_fu_1310_v_vec_coeffs_ce0;
    end else begin
        y_vec_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        y_vec_coeffs_we0 = grp_polyvecl_uniform_gam_fu_1310_v_vec_coeffs_we0;
    end else begin
        y_vec_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        z_vec_coeffs_address0 = zext_ln300_2_fu_3029_p1;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        z_vec_coeffs_address0 = z_vec_coeffs_addr_6_reg_3819;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        z_vec_coeffs_address0 = zext_ln33_2_fu_2959_p1;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        z_vec_coeffs_address0 = z_vec_coeffs_addr_5_reg_3793;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        z_vec_coeffs_address0 = zext_ln88_4_fu_2897_p1;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        z_vec_coeffs_address0 = zext_ln181_16_reg_3744;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        z_vec_coeffs_address0 = tmp_35_reg_3621;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        z_vec_coeffs_address0 = tmp_34_reg_3602;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        z_vec_coeffs_address0 = tmp_33_reg_3583;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        z_vec_coeffs_address0 = zext_ln124_reg_3564;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        z_vec_coeffs_address0 = grp_polyvecl_pointwise_a_fu_1407_v_vec_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        z_vec_coeffs_address0 = grp_ntt_fu_1395_a_address0;
    end else if ((1'b1 == ap_CS_fsm_state118)) begin
        z_vec_coeffs_address0 = grp_pack_sig_fu_1380_z_vec_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        z_vec_coeffs_address0 = grp_invntt_tomont_fu_1371_a_address0;
    end else begin
        z_vec_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        z_vec_coeffs_address1 = grp_ntt_fu_1395_a_address1;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        z_vec_coeffs_address1 = grp_invntt_tomont_fu_1371_a_address1;
    end else begin
        z_vec_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43))) begin
        z_vec_coeffs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        z_vec_coeffs_ce0 = grp_polyvecl_pointwise_a_fu_1407_v_vec_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        z_vec_coeffs_ce0 = grp_ntt_fu_1395_a_ce0;
    end else if ((1'b1 == ap_CS_fsm_state118)) begin
        z_vec_coeffs_ce0 = grp_pack_sig_fu_1380_z_vec_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        z_vec_coeffs_ce0 = grp_invntt_tomont_fu_1371_a_ce0;
    end else begin
        z_vec_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        z_vec_coeffs_ce1 = grp_ntt_fu_1395_a_ce1;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        z_vec_coeffs_ce1 = grp_invntt_tomont_fu_1371_a_ce1;
    end else begin
        z_vec_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        z_vec_coeffs_d0 = grp_fu_3339_p3;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        z_vec_coeffs_d0 = add_ln88_fu_2907_p2;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        z_vec_coeffs_d0 = {{add_ln19_fu_2823_p2[63:32]}};
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        z_vec_coeffs_d0 = sext_ln124_3_fu_2388_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        z_vec_coeffs_d0 = sext_ln124_2_fu_2362_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        z_vec_coeffs_d0 = sext_ln124_1_fu_2336_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        z_vec_coeffs_d0 = sext_ln124_fu_2310_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        z_vec_coeffs_d0 = grp_ntt_fu_1395_a_d0;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        z_vec_coeffs_d0 = grp_invntt_tomont_fu_1371_a_d0;
    end else begin
        z_vec_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43))) begin
        z_vec_coeffs_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        z_vec_coeffs_we0 = grp_ntt_fu_1395_a_we0;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        z_vec_coeffs_we0 = grp_invntt_tomont_fu_1371_a_we0;
    end else begin
        z_vec_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_unpack_sk_fu_1350_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln362_fu_1586_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_keccak_absorb_3199_fu_1416_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_keccak_absorb_2_fu_1320_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_KeccakF1600_StatePer_1_fu_1336_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln540_fu_1642_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln362_1_fu_1823_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((icmp_ln416_fu_1844_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln30_fu_1868_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((grp_KeccakF1600_StatePer_fu_1343_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((icmp_ln540_1_fu_1960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state31 : begin
            if (((icmp_ln20_fu_2212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((icmp_ln21_fu_2224_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((grp_poly_uniform_fu_1297_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((icmp_ln100_fu_2251_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((1'b1 == ap_CS_fsm_state35) & (grp_ntt_fu_1395_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            if (((icmp_ln282_fu_2263_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((1'b1 == ap_CS_fsm_state37) & (grp_ntt_fu_1395_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            if (((icmp_ln282_1_fu_2275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_CS_fsm_state39) & (grp_ntt_fu_1395_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if (((grp_polyvecl_uniform_gam_fu_1310_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            if (((icmp_ln124_reg_3574 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((icmp_ln124_1_reg_3593 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            if (((icmp_ln124_2_reg_3612 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            if (((icmp_ln124_3_reg_3631 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state50 : begin
            if (((icmp_ln100_1_fu_2393_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state51 : begin
            if (((1'b1 == ap_CS_fsm_state51) & (grp_ntt_fu_1395_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            if (((icmp_ln28_fu_2405_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state53 : begin
            if (((1'b1 == ap_CS_fsm_state53) & (grp_polyvecl_pointwise_a_fu_1407_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            if (((1'b1 == ap_CS_fsm_state54) & (grp_polyveck_reduce_fu_1452_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            if (((1'b1 == ap_CS_fsm_state56) & (grp_polyveck_invntt_tomo_fu_1364_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            if (((1'b1 == ap_CS_fsm_state58) & (grp_polyveck_caddq_fu_1447_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state59 : begin
            if (((icmp_ln371_fu_2417_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state59))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        ap_ST_fsm_state60 : begin
            if (((icmp_ln225_fu_2441_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state60))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state62 : begin
            if (((1'b1 == ap_CS_fsm_state62) & (grp_polyveck_pack_w1_fu_1425_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        ap_ST_fsm_state63 : begin
            if (((icmp_ln362_2_fu_2570_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state63))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state64 : begin
            if (((1'b1 == ap_CS_fsm_state64) & (grp_keccak_absorb_3199_fu_1416_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            if (((1'b1 == ap_CS_fsm_state66) & (grp_keccak_absorb_2_fu_1320_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            if (((grp_KeccakF1600_StatePer_1_fu_1336_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state72))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state73 : begin
            if (((icmp_ln540_2_fu_2626_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state73))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state78 : begin
            if (((grp_poly_challenge_fu_1288_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state78))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            if (((1'b1 == ap_CS_fsm_state80) & (grp_ntt_1_fu_1388_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end
        end
        ap_ST_fsm_state81 : begin
            if (((icmp_ln114_fu_2730_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state81))) begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end
        end
        ap_ST_fsm_state82 : begin
            if (((icmp_ln180_fu_2754_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state84 : begin
            if (((icmp_ln107_fu_2840_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state84))) begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end
        end
        ap_ST_fsm_state85 : begin
            if (((1'b1 == ap_CS_fsm_state85) & (grp_invntt_tomont_fu_1371_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end
        end
        ap_ST_fsm_state86 : begin
            if (((icmp_ln85_fu_2852_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state86))) begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end
        end
        ap_ST_fsm_state87 : begin
            if (((icmp_ln87_fu_2876_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state87))) begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state89 : begin
            if (((icmp_ln53_fu_2914_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state89))) begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state90;
            end
        end
        ap_ST_fsm_state90 : begin
            if (((icmp_ln32_fu_2938_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state90))) begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state92 : begin
            if (((icmp_ln158_fu_2984_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state92))) begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end
        end
        ap_ST_fsm_state93 : begin
            if (((icmp_ln298_fu_3008_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state93))) begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end
        end
        ap_ST_fsm_state94 : begin
            if (((icmp_ln303_fu_3068_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state94))) begin
                ap_NS_fsm = ap_ST_fsm_state115;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end
        end
        ap_ST_fsm_state95 : begin
            if (((1'b1 == ap_CS_fsm_state95) & (grp_polyveck_pointwise_p_fu_1432_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            if (((1'b1 == ap_CS_fsm_state97) & (grp_polyveck_invntt_tomo_fu_1364_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end
        end
        ap_ST_fsm_state98 : begin
            if (((icmp_ln252_fu_3074_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state98))) begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end
        end
        ap_ST_fsm_state99 : begin
            if (((icmp_ln108_fu_3098_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state99))) begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state101 : begin
            if (((1'b1 == ap_CS_fsm_state101) & (grp_polyveck_reduce_fu_1452_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            if (((grp_polyveck_chknorm_fu_1439_ap_done == 1'b1) & (grp_polyveck_chknorm_fu_1439_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state103))) begin
                ap_NS_fsm = ap_ST_fsm_state115;
            end else if (((grp_polyveck_chknorm_fu_1439_ap_done == 1'b1) & (grp_polyveck_chknorm_fu_1439_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state103))) begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end
        end
        ap_ST_fsm_state104 : begin
            if (((1'b1 == ap_CS_fsm_state104) & (grp_polyveck_pointwise_p_fu_1432_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state105;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            if (((1'b1 == ap_CS_fsm_state106) & (grp_polyveck_invntt_tomo_fu_1364_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            if (((1'b1 == ap_CS_fsm_state108) & (grp_polyveck_reduce_fu_1452_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state108;
            end
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            if (((grp_polyveck_chknorm_fu_1439_ap_done == 1'b1) & (grp_polyveck_chknorm_fu_1439_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state110))) begin
                ap_NS_fsm = ap_ST_fsm_state111;
            end else if (((grp_polyveck_chknorm_fu_1439_ap_done == 1'b1) & (grp_polyveck_chknorm_fu_1439_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state110))) begin
                ap_NS_fsm = ap_ST_fsm_state115;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end
        end
        ap_ST_fsm_state111 : begin
            if (((icmp_ln234_fu_3132_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state111))) begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state114;
            end
        end
        ap_ST_fsm_state112 : begin
            if (((icmp_ln87_1_fu_3156_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state112))) begin
                ap_NS_fsm = ap_ST_fsm_state111;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state114 : begin
            if (((1'b1 == ap_CS_fsm_state114) & (grp_polyveck_caddq_fu_1447_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state115;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state114;
            end
        end
        ap_ST_fsm_state115 : begin
            if (((1'b1 == ap_CS_fsm_state115) & ((icmp_ln158_reg_3824 == 1'd0) | ((tmp_s_reg_3885 == 1'd1) | ((tmp_5_reg_3889 == 1'd1) | ((icmp_ln392_fu_3190_p2 == 1'd1) & (icmp_ln172_fu_3214_p2 == 1'd1))))))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else if (((icmp_ln392_fu_3190_p2 == 1'd1) & (icmp_ln158_reg_3824 == 1'd1) & (tmp_5_reg_3889 == 1'd0) & (tmp_s_reg_3885 == 1'd0) & (icmp_ln172_fu_3214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state115))) begin
                ap_NS_fsm = ap_ST_fsm_state118;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state116;
            end
        end
        ap_ST_fsm_state116 : begin
            if (((icmp_ln248_fu_3220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state116))) begin
                ap_NS_fsm = ap_ST_fsm_state115;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state117;
            end
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state118 : begin
            if (((1'b1 == ap_CS_fsm_state118) & (grp_pack_sig_fu_1380_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state118;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a1_1_fu_2528_p2 = (trunc_ln11_fu_2487_p4 & select_ln48_fu_2520_p3);

assign add_ln109_fu_3114_p2 = (zext_ln104_reg_3862 + zext_ln109_fu_3110_p1);

assign add_ln124_1_fu_2315_p2 = (phi_ln124_1_reg_997 + 8'd1);

assign add_ln124_2_fu_2341_p2 = (phi_ln124_2_reg_1008 + 8'd1);

assign add_ln124_3_fu_2367_p2 = (phi_ln124_3_reg_1019 + 8'd1);

assign add_ln124_fu_2293_p2 = (phi_ln124_reg_986 + 8'd1);

assign add_ln181_fu_2775_p2 = (zext_ln181_15_fu_2771_p1 + zext_ln176_reg_3731);

assign add_ln19_fu_2823_p2 = ($signed(sext_ln19_14_fu_2819_p1) + $signed(mul_ln181_fu_2793_p2));

assign add_ln226_fu_2457_p2 = (zext_ln221_reg_3659 + zext_ln226_fu_2453_p1);

assign add_ln249_fu_3236_p2 = (zext_ln244_reg_3932 + zext_ln249_fu_3232_p1);

assign add_ln300_fu_3024_p2 = (zext_ln287_reg_3833 + zext_ln300_fu_3020_p1);

assign add_ln31_fu_1892_p2 = (zext_ln26_reg_3415 + zext_ln31_fu_1888_p1);

assign add_ln33_fu_2954_p2 = (zext_ln28_reg_3806 + zext_ln33_fu_2950_p1);

assign add_ln36_fu_2964_p2 = (z_vec_coeffs_q0 + 32'd4194304);

assign add_ln416_fu_1850_p2 = (i_3_i1_reg_867 + 4'd1);

assign add_ln42_fu_2467_p2 = (32'd127 + w1_vec_coeffs_q0);

assign add_ln540_1_fu_1966_p2 = (i_3_i3_reg_902 + 3'd1);

assign add_ln540_2_fu_2632_p2 = (i_3_i47_reg_1087 + 3'd1);

assign add_ln540_fu_1648_p2 = (i_3_i_reg_844 + 3'd1);

assign add_ln541_1_fu_1989_p2 = ($signed(8'd160) + $signed(zext_ln541_2_fu_1985_p1));

assign add_ln541_fu_1671_p2 = (8'd112 + zext_ln541_fu_1667_p1);

assign add_ln542_1_fu_2021_p2 = ($signed(8'd160) + $signed(zext_ln542_2_fu_2017_p1));

assign add_ln542_fu_1692_p2 = (8'd112 + zext_ln542_fu_1688_p1);

assign add_ln543_1_fu_2101_p2 = ($signed(8'd160) + $signed(zext_ln543_2_fu_2097_p1));

assign add_ln543_fu_1712_p2 = (8'd112 + zext_ln543_fu_1708_p1);

assign add_ln544_1_fu_2121_p2 = ($signed(8'd160) + $signed(zext_ln544_2_fu_2117_p1));

assign add_ln544_fu_1732_p2 = (8'd112 + zext_ln544_fu_1728_p1);

assign add_ln545_1_fu_2141_p2 = ($signed(8'd160) + $signed(zext_ln545_2_fu_2137_p1));

assign add_ln545_fu_1752_p2 = (8'd112 + zext_ln545_fu_1748_p1);

assign add_ln546_1_fu_2161_p2 = ($signed(8'd160) + $signed(zext_ln546_2_fu_2157_p1));

assign add_ln546_fu_1772_p2 = (8'd112 + zext_ln546_fu_1768_p1);

assign add_ln547_1_fu_2181_p2 = ($signed(8'd160) + $signed(zext_ln547_2_fu_2177_p1));

assign add_ln547_fu_1792_p2 = (8'd112 + zext_ln547_fu_1788_p1);

assign add_ln548_1_fu_2201_p2 = ($signed(8'd160) + $signed(zext_ln548_2_fu_2197_p1));

assign add_ln548_fu_1812_p2 = (8'd112 + zext_ln548_fu_1808_p1);

assign add_ln88_2_fu_3183_p2 = (w0_vec_coeffs_q0 + h_vec_coeffs_q0);

assign add_ln88_3_fu_2892_p2 = (zext_ln83_reg_3775 + zext_ln88_fu_2888_p1);

assign add_ln88_4_fu_3172_p2 = (zext_ln83_1_reg_3901 + zext_ln88_5_fu_3168_p1);

assign add_ln88_fu_2907_p2 = ($signed(z_vec_coeffs_q0) + $signed(sext_ln88_fu_2903_p1));

assign add_ln_fu_2240_p4 = {{{trunc_ln22_fu_2236_p1}, {5'd0}}, {j_0_i_reg_926}};

assign and_ln301_fu_3056_p2 = (t_16_fu_3042_p3 & shl_ln301_fu_3050_p2);

assign and_ln69_fu_3281_p2 = (icmp_ln69_3_fu_3275_p2 & icmp_ln69_2_fu_3269_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign grp_KeccakF1600_StatePer_1_fu_1336_ap_start = grp_KeccakF1600_StatePer_1_fu_1336_ap_start_reg;

assign grp_KeccakF1600_StatePer_fu_1343_ap_start = grp_KeccakF1600_StatePer_fu_1343_ap_start_reg;

assign grp_fu_1457_p4 = {{grp_keccak_absorb_2_fu_1320_ap_return[31:3]}};

assign grp_fu_1467_p2 = (state_s_q0 ^ 64'd9223372036854775808);

assign grp_fu_3320_p0 = 32'd11275;

assign grp_fu_3320_p2 = 32'd8388608;

assign grp_fu_3329_p0 = 27'd134027264;

assign grp_fu_3339_p1 = 32'd4286586879;

assign grp_invntt_tomont_fu_1371_ap_start = grp_invntt_tomont_fu_1371_ap_start_reg;

assign grp_keccak_absorb_2_fu_1320_ap_start = grp_keccak_absorb_2_fu_1320_ap_start_reg;

assign grp_keccak_absorb_3199_fu_1416_ap_start = grp_keccak_absorb_3199_fu_1416_ap_start_reg;

assign grp_ntt_1_fu_1388_ap_start = grp_ntt_1_fu_1388_ap_start_reg;

assign grp_ntt_fu_1395_ap_start = grp_ntt_fu_1395_ap_start_reg;

assign grp_pack_sig_fu_1380_ap_start = grp_pack_sig_fu_1380_ap_start_reg;

assign grp_poly_challenge_fu_1288_ap_start = grp_poly_challenge_fu_1288_ap_start_reg;

assign grp_poly_uniform_fu_1297_ap_start = grp_poly_uniform_fu_1297_ap_start_reg;

assign grp_polyveck_caddq_fu_1447_ap_start = grp_polyveck_caddq_fu_1447_ap_start_reg;

assign grp_polyveck_chknorm_fu_1439_ap_start = grp_polyveck_chknorm_fu_1439_ap_start_reg;

assign grp_polyveck_invntt_tomo_fu_1364_ap_start = grp_polyveck_invntt_tomo_fu_1364_ap_start_reg;

assign grp_polyveck_pack_w1_fu_1425_ap_start = grp_polyveck_pack_w1_fu_1425_ap_start_reg;

assign grp_polyveck_pointwise_p_fu_1432_ap_start = grp_polyveck_pointwise_p_fu_1432_ap_start_reg;

assign grp_polyveck_reduce_fu_1452_ap_start = grp_polyveck_reduce_fu_1452_ap_start_reg;

assign grp_polyvecl_pointwise_a_fu_1407_ap_start = grp_polyvecl_pointwise_a_fu_1407_ap_start_reg;

assign grp_polyvecl_uniform_gam_fu_1310_ap_start = grp_polyvecl_uniform_gam_fu_1310_ap_start_reg;

assign grp_unpack_sk_fu_1350_ap_start = grp_unpack_sk_fu_1350_ap_start_reg;

assign i_43_fu_1592_p2 = (i_0_i_i_reg_833 + 5'd1);

assign i_44_fu_1829_p2 = (i_0_i_i_i_reg_856 + 5'd1);

assign i_45_fu_1874_p2 = (i_0_i5_i_reg_878 + 4'd1);

assign i_47_fu_2218_p2 = (i_0_i_reg_914 + 3'd1);

assign i_70_fu_2257_p2 = (i_0_i3_reg_938 + 3'd1);

assign i_71_fu_2269_p2 = (i_0_i5_reg_950 + 3'd1);

assign i_72_fu_2281_p2 = (i_0_i7_reg_962 + 3'd1);

assign i_73_fu_2399_p2 = (i_0_i12_reg_1030 + 3'd1);

assign i_74_fu_2411_p2 = (i_0_i17_reg_1042 + 3'd1);

assign i_75_fu_2423_p2 = (i_0_i19_reg_1054 + 3'd1);

assign i_76_fu_2576_p2 = (i_0_i_i23_reg_1076 + 5'd1);

assign i_77_fu_2447_p2 = (i_0_i_i20_reg_1065 + 9'd1);

assign i_78_fu_2736_p2 = (i_0_i43_reg_1098 + 3'd1);

assign i_79_fu_2846_p2 = (i_0_i49_reg_1120 + 3'd1);

assign i_80_fu_2760_p2 = (i_0_i_i44_reg_1109 + 9'd1);

assign i_81_fu_2858_p2 = (i_0_i51_reg_1132 + 3'd1);

assign i_82_fu_2920_p2 = (i_0_i59_reg_1154 + 3'd1);

assign i_83_fu_2882_p2 = (i_0_i_i52_reg_1143 + 9'd1);

assign i_84_fu_2990_p2 = (i_0_i85_reg_1176 + 3'd1);

assign i_85_fu_2944_p2 = (i_0_i_i60_reg_1165 + 9'd1);

assign i_86_fu_3080_p2 = (i_0_i66_reg_1198 + 3'd1);

assign i_87_fu_3014_p2 = (i_0_i_i86_reg_1187 + 9'd1);

assign i_88_fu_3104_p2 = (i_0_i_i67_reg_1209 + 9'd1);

assign i_89_fu_3138_p2 = (i_0_i74_reg_1220 + 3'd1);

assign i_90_fu_3162_p2 = (i_0_i_i75_reg_1231 + 9'd1);

assign i_91_fu_3196_p2 = (i_0_i87_reg_1242 + 3'd1);

assign i_92_fu_3226_p2 = (i_0_i_i88_reg_1265 + 9'd1);

assign icmp_ln100_1_fu_2393_p2 = ((i_0_i12_reg_1030 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln100_fu_2251_p2 = ((i_0_i3_reg_938 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln107_fu_2840_p2 = ((i_0_i49_reg_1120 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln108_fu_3098_p2 = ((i_0_i_i67_reg_1209 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln114_fu_2730_p2 = ((i_0_i43_reg_1098 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln124_1_fu_2330_p2 = ((phi_ln124_1_reg_997 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln124_2_fu_2356_p2 = ((phi_ln124_2_reg_1008 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln124_3_fu_2382_p2 = ((phi_ln124_3_reg_1019 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln124_fu_2304_p2 = ((phi_ln124_reg_986 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln158_fu_2984_p2 = ((i_0_i85_reg_1176 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln172_fu_3214_p2 = ((n_reg_1253 > 11'd80) ? 1'b1 : 1'b0);

assign icmp_ln180_fu_2754_p2 = ((i_0_i_i44_reg_1109 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_2212_p2 = ((i_0_i_reg_914 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_2224_p2 = ((j_0_i_reg_926 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln225_fu_2441_p2 = ((i_0_i_i20_reg_1065 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln234_fu_3132_p2 = ((i_0_i74_reg_1220 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln248_fu_3220_p2 = ((i_0_i_i88_reg_1265 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln252_fu_3074_p2 = ((i_0_i66_reg_1198 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln282_1_fu_2275_p2 = ((i_0_i7_reg_962 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln282_fu_2263_p2 = ((i_0_i5_reg_950 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_2405_p2 = ((i_0_i17_reg_1042 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln298_fu_3008_p2 = ((i_0_i_i86_reg_1187 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln303_fu_3068_p2 = (($signed(t_17_fu_3062_p2) < $signed(32'd130994)) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_1868_p2 = ((i_0_i5_i_reg_878 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_2938_p2 = ((i_0_i_i60_reg_1165 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln362_1_fu_1823_p2 = ((i_0_i_i_i_reg_856 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln362_2_fu_2570_p2 = ((i_0_i_i23_reg_1076 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln362_fu_1586_p2 = ((i_0_i_i_reg_833 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln371_fu_2417_p2 = ((i_0_i19_reg_1054 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln392_fu_3190_p2 = ((i_0_i87_reg_1242 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln416_fu_1844_p2 = ((i_3_i1_reg_867 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_2914_p2 = ((i_0_i59_reg_1154 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln540_1_fu_1960_p2 = ((i_3_i3_reg_902 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln540_2_fu_2626_p2 = ((i_3_i47_reg_1087 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln540_fu_1642_p2 = ((i_3_i_reg_844 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln69_1_fu_3263_p2 = (($signed(w0_vec_coeffs_q0) > $signed(32'd8285185)) ? 1'b1 : 1'b0);

assign icmp_ln69_2_fu_3269_p2 = ((w0_vec_coeffs_q0 == 32'd8285185) ? 1'b1 : 1'b0);

assign icmp_ln69_3_fu_3275_p2 = ((w1_vec_coeffs_q0 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_3257_p2 = (($signed(w0_vec_coeffs_q0) < $signed(32'd95233)) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_2852_p2 = ((i_0_i51_reg_1132 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln87_1_fu_3156_p2 = ((i_0_i_i75_reg_1231 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_2876_p2 = ((i_0_i_i52_reg_1143 == 9'd256) ? 1'b1 : 1'b0);

assign j_fu_2230_p2 = (j_0_i_reg_926 + 3'd1);

assign mul_ln181_fu_2793_p0 = s1_vec_coeffs_q0;

assign mul_ln181_fu_2793_p1 = cp_coeffs_q0;

assign mul_ln181_fu_2793_p2 = ($signed(mul_ln181_fu_2793_p0) * $signed(mul_ln181_fu_2793_p1));

assign mul_ln19_fu_2813_p1 = t_fu_2803_p2;

assign mul_ln19_fu_2813_p2 = ($signed(55'd36028797010583551) * $signed(mul_ln19_fu_2813_p1));

assign nonce_fu_2287_p2 = (nonce_0_reg_974 + 16'd1);

assign or_ln542_1_fu_2011_p2 = (shl_ln541_1_fu_1977_p3 | 6'd1);

assign or_ln542_2_fu_2659_p2 = (shl_ln541_2_fu_2647_p3 | 5'd1);

assign or_ln542_fu_1682_p2 = (shl_ln24_fu_1659_p3 | 6'd1);

assign or_ln543_1_fu_2092_p2 = (shl_ln541_1_reg_3469 | 6'd2);

assign or_ln543_2_fu_2670_p2 = (shl_ln541_2_reg_3713 | 5'd2);

assign or_ln543_fu_1703_p2 = (shl_ln24_reg_3384 | 6'd2);

assign or_ln544_1_fu_2112_p2 = (shl_ln541_1_reg_3469 | 6'd3);

assign or_ln544_2_fu_2680_p2 = (shl_ln541_2_reg_3713 | 5'd3);

assign or_ln544_fu_1723_p2 = (shl_ln24_reg_3384 | 6'd3);

assign or_ln545_1_fu_2132_p2 = (shl_ln541_1_reg_3469 | 6'd4);

assign or_ln545_2_fu_2690_p2 = (shl_ln541_2_reg_3713 | 5'd4);

assign or_ln545_fu_1743_p2 = (shl_ln24_reg_3384 | 6'd4);

assign or_ln546_1_fu_2152_p2 = (shl_ln541_1_reg_3469 | 6'd5);

assign or_ln546_2_fu_2700_p2 = (shl_ln541_2_reg_3713 | 5'd5);

assign or_ln546_fu_1763_p2 = (shl_ln24_reg_3384 | 6'd5);

assign or_ln547_1_fu_2172_p2 = (shl_ln541_1_reg_3469 | 6'd6);

assign or_ln547_2_fu_2710_p2 = (shl_ln541_2_reg_3713 | 5'd6);

assign or_ln547_fu_1783_p2 = (shl_ln24_reg_3384 | 6'd6);

assign or_ln548_1_fu_2192_p2 = (shl_ln541_1_reg_3469 | 6'd7);

assign or_ln548_2_fu_2720_p2 = (shl_ln541_2_reg_3713 | 5'd7);

assign or_ln548_fu_1803_p2 = (shl_ln24_reg_3384 | 6'd7);

assign or_ln69_1_fu_3293_p2 = (or_ln69_fu_3287_p2 | icmp_ln69_fu_3257_p2);

assign or_ln69_fu_3287_p2 = (icmp_ln69_1_fu_3263_p2 | and_ln69_fu_3281_p2);

assign or_ln_fu_1880_p3 = {{3'd5}, {i_0_i5_i_reg_878}};

assign r_fu_1928_p2 = (shl_ln31_fu_1922_p2 | r_0_i6_i_reg_890);

assign s_1_fu_3314_p2 = (s_0_i_i_reg_1276 + zext_ln69_fu_3305_p1);

assign s_fu_3251_p2 = (zext_ln248_fu_3247_p1 + n_reg_1253);

assign select_ln48_fu_2520_p3 = ((xor_ln48_fu_2514_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign select_ln52_fu_2556_p3 = ((tmp_13_fu_2548_p3[0:0] === 1'b1) ? 32'd8380417 : 32'd0);

assign sext_ln124_1_fu_2336_p1 = $signed(y_vec_coeffs_q0);

assign sext_ln124_2_fu_2362_p1 = $signed(y_vec_coeffs_q0);

assign sext_ln124_3_fu_2388_p1 = $signed(y_vec_coeffs_q0);

assign sext_ln124_fu_2310_p1 = $signed(y_vec_coeffs_q0);

assign sext_ln19_14_fu_2819_p1 = $signed(mul_ln19_fu_2813_p2);

assign sext_ln47_fu_2496_p1 = trunc_ln11_fu_2487_p4;

assign sext_ln48_1_fu_2538_p1 = a1_1_fu_2528_p2;

assign sext_ln88_fu_2903_p1 = $signed(y_vec_coeffs_q0);

assign shl_ln24_fu_1659_p3 = {{i_3_i_reg_844}, {3'd0}};

assign shl_ln25_fu_1856_p3 = {{i_3_i1_reg_867}, {3'd0}};

assign shl_ln26_fu_1910_p3 = {{trunc_ln31_fu_1906_p1}, {3'd0}};

assign shl_ln301_fu_3050_p2 = z_vec_coeffs_q0 << 32'd1;

assign shl_ln31_fu_1922_p2 = zext_ln31_19_fu_1902_p1 << zext_ln31_20_fu_1918_p1;

assign shl_ln450_1_fu_2608_p2 = 64'd31 << zext_ln450_5_fu_2604_p1;

assign shl_ln450_5_fu_2596_p3 = {{trunc_ln450_1_fu_2592_p1}, {3'd0}};

assign shl_ln450_fu_1624_p2 = 64'd31 << zext_ln450_fu_1620_p1;

assign shl_ln541_1_fu_1977_p3 = {{i_3_i3_reg_902}, {3'd0}};

assign shl_ln541_2_fu_2647_p3 = {{trunc_ln541_3_reg_3708}, {3'd0}};

assign shl_ln_fu_1612_p3 = {{trunc_ln450_fu_1608_p1}, {3'd0}};

assign sk_address0 = grp_unpack_sk_fu_1350_sk_address0;

assign sk_address1 = grp_unpack_sk_fu_1350_sk_address1;

assign sk_ce0 = grp_unpack_sk_fu_1350_sk_ce0;

assign sk_ce1 = grp_unpack_sk_fu_1350_sk_ce1;

assign state_s_addr_9_reg_3366 = 64'd16;

assign sub_ln109_fu_3125_p2 = (w0_vec_coeffs_q0 - h_vec_coeffs_q0);

assign sub_ln48_fu_2500_p2 = ($signed(9'd43) - $signed(sext_ln47_fu_2496_p1));

assign sub_ln52_1_fu_2564_p2 = ($signed(grp_fu_3329_p3) - $signed(select_ln52_fu_2556_p3));

assign sub_ln52_fu_2543_p2 = ($signed(32'd4190208) - $signed(grp_fu_3329_p3));

assign t_16_fu_3042_p3 = ((tmp_14_fu_3034_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign t_17_fu_3062_p2 = (z_vec_coeffs_q0 - and_ln301_fu_3056_p2);

assign t_fu_2803_p2 = ($signed({{1'b0}, {32'd58728449}}) * $signed(trunc_ln18_fu_2799_p1));

assign tmp_13_fu_2548_p3 = sub_ln52_fu_2543_p2[32'd31];

assign tmp_14_fu_3034_p3 = z_vec_coeffs_q0[32'd31];

assign tmp_33_fu_2321_p3 = {{56'd1}, {phi_ln124_1_reg_997}};

assign tmp_34_fu_2347_p3 = {{56'd2}, {phi_ln124_2_reg_1008}};

assign tmp_35_fu_2373_p3 = {{56'd3}, {phi_ln124_3_reg_1019}};

assign tmp_36_fu_2429_p3 = {{i_0_i19_reg_1054}, {8'd0}};

assign tmp_37_fu_2742_p3 = {{i_0_i43_reg_1098}, {8'd0}};

assign tmp_38_fu_2864_p3 = {{i_0_i51_reg_1132}, {8'd0}};

assign tmp_39_fu_2926_p3 = {{i_0_i59_reg_1154}, {8'd0}};

assign tmp_40_fu_2996_p3 = {{i_0_i85_reg_1176}, {8'd0}};

assign tmp_41_fu_3086_p3 = {{i_0_i66_reg_1198}, {8'd0}};

assign tmp_42_fu_3144_p3 = {{i_0_i74_reg_1220}, {8'd0}};

assign tmp_43_fu_3202_p3 = {{i_0_i87_reg_1242}, {8'd0}};

assign tmp_fu_2506_p3 = sub_ln48_fu_2500_p2[32'd8];

assign trunc_ln10_fu_2473_p4 = {{add_ln42_fu_2467_p2[31:7]}};

assign trunc_ln11_fu_2487_p4 = {{grp_fu_3320_p3[31:24]}};

assign trunc_ln12_fu_2970_p4 = {{add_ln36_fu_2964_p2[31:23]}};

assign trunc_ln18_fu_2799_p1 = mul_ln181_fu_2793_p2[31:0];

assign trunc_ln22_fu_2236_p1 = i_0_i_reg_914[1:0];

assign trunc_ln31_fu_1906_p1 = i_0_i5_i_reg_878[2:0];

assign trunc_ln450_1_fu_2592_p1 = reg_1546[2:0];

assign trunc_ln450_fu_1608_p1 = reg_1546[2:0];

assign trunc_ln541_1_fu_1972_p1 = state_0_s_q1[7:0];

assign trunc_ln541_2_fu_2642_p1 = state_s_q0[7:0];

assign trunc_ln541_3_fu_2638_p1 = i_3_i47_reg_1087[1:0];

assign trunc_ln541_fu_1654_p1 = state_s_q0[7:0];

assign xor_ln417_fu_1934_p2 = (state_0_s_q1 ^ r_0_i6_i_reg_890);

assign xor_ln450_1_fu_1941_p2 = (state_0_s_q0 ^ 64'd31);

assign xor_ln450_2_fu_2614_p2 = (state_s_q0 ^ shl_ln450_1_fu_2608_p2);

assign xor_ln450_fu_1630_p2 = (state_s_q0 ^ shl_ln450_fu_1624_p2);

assign xor_ln451_1_fu_1948_p2 = (state_0_s_q1 ^ 64'd9223372036854775808);

assign xor_ln48_fu_2514_p2 = (tmp_fu_2506_p3 ^ 1'd1);

assign xor_ln69_fu_3299_p2 = (or_ln69_1_fu_3293_p2 ^ 1'd1);

assign zext_ln104_fu_3094_p1 = tmp_41_fu_3086_p3;

assign zext_ln109_1_fu_3119_p1 = add_ln109_fu_3114_p2;

assign zext_ln109_fu_3110_p1 = i_0_i_i67_reg_1209;

assign zext_ln124_fu_2299_p1 = phi_ln124_reg_986;

assign zext_ln176_fu_2750_p1 = tmp_37_fu_2742_p3;

assign zext_ln181_15_fu_2771_p1 = i_0_i_i44_reg_1109;

assign zext_ln181_16_fu_2780_p1 = add_ln181_fu_2775_p2;

assign zext_ln181_fu_2766_p1 = i_0_i_i44_reg_1109;

assign zext_ln221_fu_2437_p1 = tmp_36_fu_2429_p3;

assign zext_ln226_1_fu_2462_p1 = add_ln226_fu_2457_p2;

assign zext_ln226_fu_2453_p1 = i_0_i_i20_reg_1065;

assign zext_ln244_fu_3210_p1 = tmp_43_fu_3202_p3;

assign zext_ln248_fu_3247_p1 = s_0_i_i_reg_1276;

assign zext_ln249_1_fu_3241_p1 = add_ln249_fu_3236_p2;

assign zext_ln249_fu_3232_p1 = i_0_i_i88_reg_1265;

assign zext_ln26_fu_1864_p1 = shl_ln25_fu_1856_p3;

assign zext_ln287_fu_3004_p1 = tmp_40_fu_2996_p3;

assign zext_ln28_fu_2934_p1 = tmp_39_fu_2926_p3;

assign zext_ln300_2_fu_3029_p1 = add_ln300_fu_3024_p2;

assign zext_ln300_fu_3020_p1 = i_0_i_i86_reg_1187;

assign zext_ln31_18_fu_1897_p1 = add_ln31_fu_1892_p2;

assign zext_ln31_19_fu_1902_p1 = seedbuf_q0;

assign zext_ln31_20_fu_1918_p1 = shl_ln26_fu_1910_p3;

assign zext_ln31_fu_1888_p1 = or_ln_fu_1880_p3;

assign zext_ln33_2_fu_2959_p1 = add_ln33_fu_2954_p2;

assign zext_ln33_fu_2950_p1 = i_0_i_i60_reg_1165;

assign zext_ln363_1_fu_1835_p1 = i_0_i_i_i_reg_856;

assign zext_ln363_2_fu_2582_p1 = i_0_i_i23_reg_1076;

assign zext_ln363_fu_1598_p1 = i_0_i_i_reg_833;

assign zext_ln416_fu_1840_p1 = i_3_i1_reg_867;

assign zext_ln450_4_fu_1603_p1 = grp_fu_1457_p4;

assign zext_ln450_5_fu_2604_p1 = shl_ln450_5_fu_2596_p3;

assign zext_ln450_6_fu_2587_p1 = grp_fu_1457_p4;

assign zext_ln450_fu_1620_p1 = shl_ln_fu_1612_p3;

assign zext_ln540_1_fu_1955_p1 = i_3_i3_reg_902;

assign zext_ln540_2_fu_2621_p1 = i_3_i47_reg_1087;

assign zext_ln540_fu_1637_p1 = i_3_i_reg_844;

assign zext_ln541_1_fu_1677_p1 = add_ln541_fu_1671_p2;

assign zext_ln541_2_fu_1985_p1 = shl_ln541_1_fu_1977_p3;

assign zext_ln541_3_fu_1995_p1 = add_ln541_1_fu_1989_p2;

assign zext_ln541_4_fu_2654_p1 = shl_ln541_2_fu_2647_p3;

assign zext_ln541_fu_1667_p1 = shl_ln24_fu_1659_p3;

assign zext_ln542_1_fu_1698_p1 = add_ln542_fu_1692_p2;

assign zext_ln542_2_fu_2017_p1 = or_ln542_1_fu_2011_p2;

assign zext_ln542_3_fu_2027_p1 = add_ln542_1_fu_2021_p2;

assign zext_ln542_4_fu_2665_p1 = or_ln542_2_fu_2659_p2;

assign zext_ln542_fu_1688_p1 = or_ln542_fu_1682_p2;

assign zext_ln543_1_fu_1718_p1 = add_ln543_fu_1712_p2;

assign zext_ln543_2_fu_2097_p1 = or_ln543_1_fu_2092_p2;

assign zext_ln543_3_fu_2107_p1 = add_ln543_1_fu_2101_p2;

assign zext_ln543_4_fu_2675_p1 = or_ln543_2_fu_2670_p2;

assign zext_ln543_fu_1708_p1 = or_ln543_fu_1703_p2;

assign zext_ln544_1_fu_1738_p1 = add_ln544_fu_1732_p2;

assign zext_ln544_2_fu_2117_p1 = or_ln544_1_fu_2112_p2;

assign zext_ln544_3_fu_2127_p1 = add_ln544_1_fu_2121_p2;

assign zext_ln544_4_fu_2685_p1 = or_ln544_2_fu_2680_p2;

assign zext_ln544_fu_1728_p1 = or_ln544_fu_1723_p2;

assign zext_ln545_1_fu_1758_p1 = add_ln545_fu_1752_p2;

assign zext_ln545_2_fu_2137_p1 = or_ln545_1_fu_2132_p2;

assign zext_ln545_3_fu_2147_p1 = add_ln545_1_fu_2141_p2;

assign zext_ln545_4_fu_2695_p1 = or_ln545_2_fu_2690_p2;

assign zext_ln545_fu_1748_p1 = or_ln545_fu_1743_p2;

assign zext_ln546_1_fu_1778_p1 = add_ln546_fu_1772_p2;

assign zext_ln546_2_fu_2157_p1 = or_ln546_1_fu_2152_p2;

assign zext_ln546_3_fu_2167_p1 = add_ln546_1_fu_2161_p2;

assign zext_ln546_4_fu_2705_p1 = or_ln546_2_fu_2700_p2;

assign zext_ln546_fu_1768_p1 = or_ln546_fu_1763_p2;

assign zext_ln547_1_fu_1798_p1 = add_ln547_fu_1792_p2;

assign zext_ln547_2_fu_2177_p1 = or_ln547_1_fu_2172_p2;

assign zext_ln547_3_fu_2187_p1 = add_ln547_1_fu_2181_p2;

assign zext_ln547_4_fu_2715_p1 = or_ln547_2_fu_2710_p2;

assign zext_ln547_fu_1788_p1 = or_ln547_fu_1783_p2;

assign zext_ln548_1_fu_1818_p1 = add_ln548_fu_1812_p2;

assign zext_ln548_2_fu_2197_p1 = or_ln548_1_fu_2192_p2;

assign zext_ln548_3_fu_2207_p1 = add_ln548_1_fu_2201_p2;

assign zext_ln548_4_fu_2725_p1 = or_ln548_2_fu_2720_p2;

assign zext_ln548_fu_1808_p1 = or_ln548_fu_1803_p2;

assign zext_ln69_1_fu_3309_p1 = xor_ln69_fu_3299_p2;

assign zext_ln69_fu_3305_p1 = xor_ln69_fu_3299_p2;

assign zext_ln83_1_fu_3152_p1 = tmp_42_fu_3144_p3;

assign zext_ln83_fu_2872_p1 = tmp_38_fu_2864_p3;

assign zext_ln88_4_fu_2897_p1 = add_ln88_3_fu_2892_p2;

assign zext_ln88_5_fu_3168_p1 = i_0_i_i75_reg_1231;

assign zext_ln88_6_fu_3177_p1 = add_ln88_4_fu_3172_p2;

assign zext_ln88_fu_2888_p1 = i_0_i_i52_reg_1143;

always @ (posedge ap_clk) begin
    shl_ln24_reg_3384[2:0] <= 3'b000;
    zext_ln416_reg_3402[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln26_reg_3415[2:0] <= 3'b000;
    zext_ln26_reg_3415[7] <= 1'b0;
    state_0_s_addr_4_reg_3445[4] <= 1'b0;
    shl_ln541_1_reg_3469[2:0] <= 3'b000;
    add_ln_reg_3525[7:3] <= 5'b00000;
    zext_ln124_reg_3564[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    tmp_33_reg_3583[63:8] <= 56'b00000000000000000000000000000000000000000000000000000001;
    tmp_34_reg_3602[63:8] <= 56'b00000000000000000000000000000000000000000000000000000010;
    tmp_35_reg_3621[63:8] <= 56'b00000000000000000000000000000000000000000000000000000011;
    zext_ln221_reg_3659[7:0] <= 8'b00000000;
    zext_ln221_reg_3659[11] <= 1'b0;
    zext_ln226_1_reg_3672[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    shl_ln541_2_reg_3713[2:0] <= 3'b000;
    zext_ln176_reg_3731[7:0] <= 8'b00000000;
    zext_ln176_reg_3731[11] <= 1'b0;
    zext_ln181_16_reg_3744[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln83_reg_3775[7:0] <= 8'b00000000;
    zext_ln83_reg_3775[11] <= 1'b0;
    zext_ln28_reg_3806[7:0] <= 8'b00000000;
    zext_ln28_reg_3806[11] <= 1'b0;
    zext_ln287_reg_3833[7:0] <= 8'b00000000;
    zext_ln287_reg_3833[11] <= 1'b0;
    zext_ln104_reg_3862[7:0] <= 8'b00000000;
    zext_ln104_reg_3862[11] <= 1'b0;
    zext_ln83_1_reg_3901[7:0] <= 8'b00000000;
    zext_ln83_1_reg_3901[11] <= 1'b0;
    zext_ln244_reg_3932[7:0] <= 8'b00000000;
    zext_ln244_reg_3932[11] <= 1'b0;
    zext_ln249_1_reg_3948[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
end

endmodule //crypto_sign_signatur
