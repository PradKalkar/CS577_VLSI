// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module poly_uniform_gamma1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_coeffs_address0,
        a_coeffs_ce0,
        a_coeffs_we0,
        a_coeffs_d0,
        a_coeffs_offset,
        seed_address0,
        seed_ce0,
        seed_q0,
        nonce
);

parameter    ap_ST_fsm_state1 = 23'd1;
parameter    ap_ST_fsm_state2 = 23'd2;
parameter    ap_ST_fsm_state3 = 23'd4;
parameter    ap_ST_fsm_state4 = 23'd8;
parameter    ap_ST_fsm_state5 = 23'd16;
parameter    ap_ST_fsm_state6 = 23'd32;
parameter    ap_ST_fsm_state7 = 23'd64;
parameter    ap_ST_fsm_state8 = 23'd128;
parameter    ap_ST_fsm_state9 = 23'd256;
parameter    ap_ST_fsm_state10 = 23'd512;
parameter    ap_ST_fsm_state11 = 23'd1024;
parameter    ap_ST_fsm_state12 = 23'd2048;
parameter    ap_ST_fsm_state13 = 23'd4096;
parameter    ap_ST_fsm_state14 = 23'd8192;
parameter    ap_ST_fsm_state15 = 23'd16384;
parameter    ap_ST_fsm_state16 = 23'd32768;
parameter    ap_ST_fsm_state17 = 23'd65536;
parameter    ap_ST_fsm_state18 = 23'd131072;
parameter    ap_ST_fsm_state19 = 23'd262144;
parameter    ap_ST_fsm_state20 = 23'd524288;
parameter    ap_ST_fsm_state21 = 23'd1048576;
parameter    ap_ST_fsm_state22 = 23'd2097152;
parameter    ap_ST_fsm_state23 = 23'd4194304;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] a_coeffs_address0;
output   a_coeffs_ce0;
output   a_coeffs_we0;
output  [18:0] a_coeffs_d0;
input  [2:0] a_coeffs_offset;
output  [7:0] seed_address0;
output   seed_ce0;
input  [7:0] seed_q0;
input  [15:0] nonce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] a_coeffs_address0;
reg a_coeffs_ce0;
reg a_coeffs_we0;
reg[18:0] a_coeffs_d0;
reg seed_ce0;

(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] buf_q0;
reg   [7:0] reg_572;
wire    ap_CS_fsm_state19;
wire   [7:0] buf_q1;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire   [4:0] i_fu_583_p2;
wire    ap_CS_fsm_state2;
wire   [63:0] zext_ln417_fu_594_p1;
reg   [63:0] zext_ln417_reg_1356;
wire    ap_CS_fsm_state3;
wire   [2:0] add_ln417_fu_604_p2;
reg   [2:0] add_ln417_reg_1364;
wire   [7:0] zext_ln26_fu_618_p1;
reg   [7:0] zext_ln26_reg_1369;
wire   [0:0] icmp_ln417_fu_598_p2;
wire   [3:0] i_20_fu_628_p2;
reg   [3:0] i_20_reg_1377;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln30_fu_622_p2;
reg   [4:0] state_s_addr_1_reg_1387;
wire   [63:0] r_fu_678_p2;
wire    ap_CS_fsm_state5;
wire   [2:0] add_ln388_fu_691_p2;
wire    ap_CS_fsm_state7;
wire   [3:0] i_21_fu_714_p2;
wire    ap_CS_fsm_state8;
wire   [1:0] i_22_fu_736_p2;
wire    ap_CS_fsm_state9;
wire   [3:0] i_23_fu_773_p2;
reg   [3:0] i_23_reg_1424;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln30_1_fu_767_p2;
wire   [63:0] r_1_fu_810_p2;
wire    ap_CS_fsm_state11;
wire   [4:0] i_24_fu_848_p2;
reg   [4:0] i_24_reg_1457;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln477_fu_842_p2;
wire   [9:0] add_ln479_fu_859_p2;
wire   [2:0] add_ln480_fu_865_p2;
wire   [7:0] shl_ln11_fu_871_p3;
reg   [7:0] shl_ln11_reg_1477;
wire    ap_CS_fsm_state16;
wire   [63:0] state_s_q1;
reg   [63:0] state_s_load_3_reg_1482;
wire   [3:0] i_26_fu_885_p2;
wire    ap_CS_fsm_state17;
wire   [6:0] i_25_fu_951_p2;
reg   [6:0] i_25_reg_1498;
wire    ap_CS_fsm_state18;
wire   [5:0] trunc_ln857_fu_957_p1;
reg   [5:0] trunc_ln857_reg_1503;
wire   [0:0] icmp_ln856_fu_945_p2;
wire   [9:0] add_ln857_fu_973_p2;
reg   [9:0] add_ln857_reg_1509;
wire   [7:0] shl_ln857_1_fu_1062_p3;
reg   [7:0] shl_ln857_1_reg_1546;
reg   [2:0] t_address0;
reg    t_ce0;
reg    t_we0;
reg   [7:0] t_d0;
wire   [7:0] t_q0;
reg   [9:0] buf_address0;
reg    buf_ce0;
reg    buf_we0;
wire   [7:0] buf_d0;
reg   [9:0] buf_address1;
reg    buf_ce1;
reg   [4:0] state_s_address0;
reg    state_s_ce0;
reg    state_s_we0;
reg   [63:0] state_s_d0;
wire   [63:0] state_s_q0;
reg   [4:0] state_s_address1;
reg    state_s_ce1;
reg    state_s_we1;
reg   [63:0] state_s_d1;
wire    grp_KeccakF1600_StatePer_1_fu_565_ap_start;
wire    grp_KeccakF1600_StatePer_1_fu_565_ap_done;
wire    grp_KeccakF1600_StatePer_1_fu_565_ap_idle;
wire    grp_KeccakF1600_StatePer_1_fu_565_ap_ready;
wire   [4:0] grp_KeccakF1600_StatePer_1_fu_565_state_address0;
wire    grp_KeccakF1600_StatePer_1_fu_565_state_ce0;
wire    grp_KeccakF1600_StatePer_1_fu_565_state_we0;
wire   [63:0] grp_KeccakF1600_StatePer_1_fu_565_state_d0;
wire   [4:0] grp_KeccakF1600_StatePer_1_fu_565_state_address1;
wire    grp_KeccakF1600_StatePer_1_fu_565_state_ce1;
wire    grp_KeccakF1600_StatePer_1_fu_565_state_we1;
wire   [63:0] grp_KeccakF1600_StatePer_1_fu_565_state_d1;
reg   [4:0] i_0_i_i_i_reg_404;
wire   [0:0] icmp_ln362_fu_577_p2;
reg   [2:0] i_3_i_i32_i_reg_415;
wire    ap_CS_fsm_state6;
reg   [3:0] i_0_i_reg_426;
reg   [63:0] r_0_i_reg_438;
reg   [2:0] phi_ln388_reg_450;
wire   [0:0] icmp_ln388_fu_702_p2;
reg   [3:0] i_4_i_i_i_reg_461;
wire   [0:0] icmp_ln424_fu_708_p2;
reg   [1:0] i_5_i_i_i_reg_472;
wire   [0:0] icmp_ln426_fu_730_p2;
reg   [3:0] i_0_i1_reg_483;
reg   [63:0] r_0_i2_reg_495;
reg   [2:0] p_01_i_i_reg_507;
wire    ap_CS_fsm_state12;
reg   [9:0] p_0_rec_i_i_reg_519;
reg   [4:0] i_0_i_i_reg_531;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln47_fu_879_p2;
reg   [3:0] i_0_i13_reg_543;
reg   [6:0] i_0_i2_reg_554;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln475_fu_836_p2;
reg    grp_KeccakF1600_StatePer_1_fu_565_ap_start_reg;
wire   [63:0] zext_ln363_fu_589_p1;
wire   [63:0] zext_ln31_fu_647_p1;
wire   [63:0] zext_ln388_fu_697_p1;
wire   [63:0] zext_ln425_fu_720_p1;
wire   [63:0] zext_ln426_fu_725_p1;
wire   [63:0] zext_ln31_3_fu_779_p1;
wire   [63:0] zext_ln478_fu_854_p1;
wire   [63:0] zext_ln48_6_fu_936_p1;
wire   [63:0] zext_ln857_1_fu_979_p1;
wire   [63:0] zext_ln858_fu_989_p1;
wire   [63:0] zext_ln859_fu_999_p1;
wire   [63:0] zext_ln857_2_fu_1012_p1;
wire   [63:0] zext_ln863_fu_1040_p1;
wire   [63:0] zext_ln864_fu_1050_p1;
wire   [63:0] zext_ln862_2_fu_1096_p1;
wire   [63:0] zext_ln868_fu_1144_p1;
wire   [63:0] zext_ln869_fu_1154_p1;
wire   [63:0] zext_ln867_1_fu_1192_p1;
wire   [63:0] zext_ln873_fu_1240_p1;
wire   [63:0] zext_ln874_fu_1250_p1;
wire   [63:0] zext_ln872_1_fu_1288_p1;
wire   [63:0] xor_ln418_fu_684_p2;
wire   [63:0] xor_ln451_fu_822_p2;
wire   [63:0] xor_ln452_fu_829_p2;
wire   [7:0] select_ln427_fu_758_p3;
wire   [18:0] sub_ln877_fu_1055_p2;
wire   [18:0] sub_ln878_fu_1159_p2;
wire   [18:0] sub_ln879_fu_1255_p2;
wire   [18:0] sub_ln880_fu_1327_p2;
wire   [5:0] shl_ln_fu_610_p3;
wire   [7:0] or_ln_fu_634_p3;
wire   [7:0] add_ln31_fu_642_p2;
wire   [2:0] trunc_ln31_fu_656_p1;
wire   [5:0] shl_ln6_fu_660_p3;
wire   [63:0] zext_ln31_1_fu_652_p1;
wire   [63:0] zext_ln31_2_fu_668_p1;
wire   [63:0] shl_ln31_fu_672_p2;
wire   [0:0] trunc_ln427_fu_742_p1;
wire   [7:0] tmp_25_fu_746_p4;
wire   [7:0] trunc_ln427_1_fu_755_p1;
wire   [2:0] trunc_ln31_1_fu_788_p1;
wire   [5:0] shl_ln31_2_fu_792_p3;
wire   [63:0] zext_ln31_4_fu_784_p1;
wire   [63:0] zext_ln31_5_fu_800_p1;
wire   [63:0] shl_ln31_1_fu_804_p2;
wire   [63:0] xor_ln451_1_fu_816_p2;
wire   [2:0] trunc_ln48_fu_891_p1;
wire   [5:0] shl_ln12_fu_895_p3;
wire   [63:0] zext_ln48_fu_903_p1;
wire   [63:0] lshr_ln48_fu_907_p2;
wire   [7:0] zext_ln48_4_fu_917_p1;
wire   [7:0] add_ln48_2_fu_921_p2;
wire   [9:0] zext_ln48_5_fu_926_p1;
wire   [9:0] add_ln48_fu_930_p2;
wire   [8:0] shl_ln7_fu_961_p3;
wire   [9:0] zext_ln857_fu_969_p1;
wire   [9:0] zext_ln856_fu_941_p1;
wire   [9:0] add_ln858_fu_984_p2;
wire   [9:0] add_ln859_fu_994_p2;
wire   [10:0] tmp_26_fu_1004_p4;
wire   [1:0] trunc_ln860_fu_1017_p1;
wire   [17:0] tmp_2_i_fu_1021_p4;
wire   [9:0] add_ln863_fu_1035_p2;
wire   [9:0] add_ln864_fu_1045_p2;
wire   [18:0] zext_ln862_fu_1031_p1;
wire   [5:0] lshr_ln_fu_1069_p4;
wire   [7:0] or_ln862_fu_1083_p2;
wire   [10:0] tmp_27_fu_1089_p3;
wire   [7:0] zext_ln862_1_fu_1079_p1;
wire   [13:0] tmp_s_fu_1113_p3;
wire   [13:0] shl_ln8_fu_1101_p3;
wire   [3:0] trunc_ln865_fu_1109_p1;
wire   [13:0] or_ln865_fu_1121_p2;
wire   [17:0] or_ln865_i_fu_1127_p3;
wire   [9:0] add_ln868_fu_1139_p2;
wire   [9:0] add_ln869_fu_1149_p2;
wire   [18:0] zext_ln865_fu_1135_p1;
wire   [3:0] lshr_ln7_fu_1166_p4;
wire   [7:0] or_ln867_fu_1180_p2;
wire   [10:0] tmp_28_fu_1185_p3;
wire   [7:0] zext_ln867_fu_1176_p1;
wire   [11:0] tmp_3_fu_1209_p3;
wire   [11:0] shl_ln9_fu_1197_p3;
wire   [5:0] trunc_ln870_fu_1205_p1;
wire   [11:0] or_ln870_fu_1217_p2;
wire   [17:0] or_ln870_i_fu_1223_p3;
wire   [9:0] add_ln873_fu_1235_p2;
wire   [9:0] add_ln874_fu_1245_p2;
wire   [18:0] zext_ln870_fu_1231_p1;
wire   [1:0] lshr_ln8_fu_1262_p4;
wire   [7:0] or_ln872_fu_1276_p2;
wire   [10:0] tmp_29_fu_1281_p3;
wire   [7:0] zext_ln872_fu_1272_p1;
wire   [9:0] tmp_4_fu_1301_p3;
wire   [9:0] shl_ln10_fu_1293_p3;
wire   [9:0] or_ln874_fu_1309_p2;
wire   [17:0] or_ln874_i_fu_1315_p3;
wire   [18:0] zext_ln874_1_fu_1323_p1;
reg   [22:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 23'd1;
#0 grp_KeccakF1600_StatePer_1_fu_565_ap_start_reg = 1'b0;
end

dilithium_shake12dEe #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
t_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(t_address0),
    .ce0(t_ce0),
    .we0(t_we0),
    .d0(t_d0),
    .q0(t_q0)
);

poly_uniform_gammfYi #(
    .DataWidth( 8 ),
    .AddressRange( 680 ),
    .AddressWidth( 10 ))
buf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_address0),
    .ce0(buf_ce0),
    .we0(buf_we0),
    .d0(buf_d0),
    .q0(buf_q0),
    .address1(buf_address1),
    .ce1(buf_ce1),
    .q1(buf_q1)
);

poly_uniform_gammg8j #(
    .DataWidth( 64 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
state_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(state_s_address0),
    .ce0(state_s_ce0),
    .we0(state_s_we0),
    .d0(state_s_d0),
    .q0(state_s_q0),
    .address1(state_s_address1),
    .ce1(state_s_ce1),
    .we1(state_s_we1),
    .d1(state_s_d1),
    .q1(state_s_q1)
);

KeccakF1600_StatePer_1 grp_KeccakF1600_StatePer_1_fu_565(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_KeccakF1600_StatePer_1_fu_565_ap_start),
    .ap_done(grp_KeccakF1600_StatePer_1_fu_565_ap_done),
    .ap_idle(grp_KeccakF1600_StatePer_1_fu_565_ap_idle),
    .ap_ready(grp_KeccakF1600_StatePer_1_fu_565_ap_ready),
    .state_address0(grp_KeccakF1600_StatePer_1_fu_565_state_address0),
    .state_ce0(grp_KeccakF1600_StatePer_1_fu_565_state_ce0),
    .state_we0(grp_KeccakF1600_StatePer_1_fu_565_state_we0),
    .state_d0(grp_KeccakF1600_StatePer_1_fu_565_state_d0),
    .state_q0(state_s_q0),
    .state_address1(grp_KeccakF1600_StatePer_1_fu_565_state_address1),
    .state_ce1(grp_KeccakF1600_StatePer_1_fu_565_state_ce1),
    .state_we1(grp_KeccakF1600_StatePer_1_fu_565_state_we1),
    .state_d1(grp_KeccakF1600_StatePer_1_fu_565_state_d1),
    .state_q1(state_s_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_KeccakF1600_StatePer_1_fu_565_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln475_fu_836_p2 == 1'd0))) begin
            grp_KeccakF1600_StatePer_1_fu_565_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakF1600_StatePer_1_fu_565_ap_ready == 1'b1)) begin
            grp_KeccakF1600_StatePer_1_fu_565_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln47_fu_879_p2 == 1'd0))) begin
        i_0_i13_reg_543 <= i_26_fu_885_p2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        i_0_i13_reg_543 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln426_fu_730_p2 == 1'd1))) begin
        i_0_i1_reg_483 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        i_0_i1_reg_483 <= i_23_reg_1424;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln475_fu_836_p2 == 1'd1))) begin
        i_0_i2_reg_554 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        i_0_i2_reg_554 <= i_25_reg_1498;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln362_fu_577_p2 == 1'd0))) begin
        i_0_i_i_i_reg_404 <= i_fu_583_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_i_i_reg_404 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln47_fu_879_p2 == 1'd1))) begin
        i_0_i_i_reg_531 <= i_24_reg_1457;
    end else if (((grp_KeccakF1600_StatePer_1_fu_565_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        i_0_i_i_reg_531 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_0_i_reg_426 <= i_20_reg_1377;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln417_fu_598_p2 == 1'd0))) begin
        i_0_i_reg_426 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln362_fu_577_p2 == 1'd1))) begin
        i_3_i_i32_i_reg_415 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        i_3_i_i32_i_reg_415 <= add_ln417_reg_1364;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln388_fu_702_p2 == 1'd1))) begin
        i_4_i_i_i_reg_461 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln424_fu_708_p2 == 1'd0))) begin
        i_4_i_i_i_reg_461 <= i_21_fu_714_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln424_fu_708_p2 == 1'd1))) begin
        i_5_i_i_i_reg_472 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln426_fu_730_p2 == 1'd0))) begin
        i_5_i_i_i_reg_472 <= i_22_fu_736_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln477_fu_842_p2 == 1'd1))) begin
        p_01_i_i_reg_507 <= add_ln480_fu_865_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        p_01_i_i_reg_507 <= 3'd5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln477_fu_842_p2 == 1'd1))) begin
        p_0_rec_i_i_reg_519 <= add_ln479_fu_859_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        p_0_rec_i_i_reg_519 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln417_fu_598_p2 == 1'd1))) begin
        phi_ln388_reg_450 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln388_fu_702_p2 == 1'd0))) begin
        phi_ln388_reg_450 <= add_ln388_fu_691_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln426_fu_730_p2 == 1'd1))) begin
        r_0_i2_reg_495 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        r_0_i2_reg_495 <= r_1_fu_810_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        r_0_i_reg_438 <= r_fu_678_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln417_fu_598_p2 == 1'd0))) begin
        r_0_i_reg_438 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        reg_572 <= buf_q1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19))) begin
        reg_572 <= buf_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln417_reg_1364 <= add_ln417_fu_604_p2;
        zext_ln417_reg_1356[2 : 0] <= zext_ln417_fu_594_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln856_fu_945_p2 == 1'd0))) begin
        add_ln857_reg_1509 <= add_ln857_fu_973_p2;
        trunc_ln857_reg_1503 <= trunc_ln857_fu_957_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_20_reg_1377 <= i_20_fu_628_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_23_reg_1424 <= i_23_fu_773_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_24_reg_1457 <= i_24_fu_848_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i_25_reg_1498 <= i_25_fu_951_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        shl_ln11_reg_1477[7 : 3] <= shl_ln11_fu_871_p3[7 : 3];
        state_s_load_3_reg_1482 <= state_s_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        shl_ln857_1_reg_1546[7 : 2] <= shl_ln857_1_fu_1062_p3[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln30_fu_622_p2 == 1'd1))) begin
        state_s_addr_1_reg_1387[2 : 0] <= zext_ln417_reg_1356[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln417_fu_598_p2 == 1'd0))) begin
        zext_ln26_reg_1369[5 : 3] <= zext_ln26_fu_618_p1[5 : 3];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        a_coeffs_address0 = zext_ln872_1_fu_1288_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        a_coeffs_address0 = zext_ln867_1_fu_1192_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        a_coeffs_address0 = zext_ln862_2_fu_1096_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        a_coeffs_address0 = zext_ln857_2_fu_1012_p1;
    end else begin
        a_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state23))) begin
        a_coeffs_ce0 = 1'b1;
    end else begin
        a_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        a_coeffs_d0 = sub_ln880_fu_1327_p2;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        a_coeffs_d0 = sub_ln879_fu_1255_p2;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        a_coeffs_d0 = sub_ln878_fu_1159_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        a_coeffs_d0 = sub_ln877_fu_1055_p2;
    end else begin
        a_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state23))) begin
        a_coeffs_we0 = 1'b1;
    end else begin
        a_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state18) & (icmp_ln856_fu_945_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln856_fu_945_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        buf_address0 = zext_ln874_fu_1250_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        buf_address0 = zext_ln869_fu_1154_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        buf_address0 = zext_ln864_fu_1050_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        buf_address0 = zext_ln858_fu_989_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        buf_address0 = zext_ln857_1_fu_979_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        buf_address0 = zext_ln48_6_fu_936_p1;
    end else begin
        buf_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        buf_address1 = zext_ln873_fu_1240_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        buf_address1 = zext_ln868_fu_1144_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        buf_address1 = zext_ln863_fu_1040_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        buf_address1 = zext_ln859_fu_999_p1;
    end else begin
        buf_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        buf_ce0 = 1'b1;
    end else begin
        buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        buf_ce1 = 1'b1;
    end else begin
        buf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln47_fu_879_p2 == 1'd0))) begin
        buf_we0 = 1'b1;
    end else begin
        buf_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        seed_ce0 = 1'b1;
    end else begin
        seed_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        state_s_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        state_s_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        state_s_address0 = state_s_addr_1_reg_1387;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        state_s_address0 = zext_ln417_reg_1356;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        state_s_address0 = zext_ln363_fu_589_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        state_s_address0 = grp_KeccakF1600_StatePer_1_fu_565_state_address0;
    end else begin
        state_s_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        state_s_address1 = zext_ln478_fu_854_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        state_s_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        state_s_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        state_s_address1 = grp_KeccakF1600_StatePer_1_fu_565_state_address1;
    end else begin
        state_s_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state4))) begin
        state_s_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        state_s_ce0 = grp_KeccakF1600_StatePer_1_fu_565_state_ce0;
    end else begin
        state_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state10))) begin
        state_s_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        state_s_ce1 = grp_KeccakF1600_StatePer_1_fu_565_state_ce1;
    end else begin
        state_s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        state_s_d0 = xor_ln452_fu_829_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        state_s_d0 = xor_ln418_fu_684_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        state_s_d0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        state_s_d0 = grp_KeccakF1600_StatePer_1_fu_565_state_d0;
    end else begin
        state_s_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        state_s_d1 = xor_ln451_fu_822_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        state_s_d1 = grp_KeccakF1600_StatePer_1_fu_565_state_d1;
    end else begin
        state_s_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln362_fu_577_p2 == 1'd0)))) begin
        state_s_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        state_s_we0 = grp_KeccakF1600_StatePer_1_fu_565_state_we0;
    end else begin
        state_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        state_s_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        state_s_we1 = grp_KeccakF1600_StatePer_1_fu_565_state_we1;
    end else begin
        state_s_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        t_address0 = zext_ln31_3_fu_779_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        t_address0 = zext_ln426_fu_725_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        t_address0 = zext_ln425_fu_720_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        t_address0 = zext_ln388_fu_697_p1;
    end else begin
        t_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        t_ce0 = 1'b1;
    end else begin
        t_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        t_d0 = select_ln427_fu_758_p3;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        t_d0 = 8'd0;
    end else begin
        t_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state9) & (icmp_ln426_fu_730_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state8) & (icmp_ln424_fu_708_p2 == 1'd0)))) begin
        t_we0 = 1'b1;
    end else begin
        t_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln362_fu_577_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln417_fu_598_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln30_fu_622_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln388_fu_702_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln424_fu_708_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln426_fu_730_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln30_1_fu_767_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln475_fu_836_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((grp_KeccakF1600_StatePer_1_fu_565_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln477_fu_842_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln47_fu_879_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln856_fu_945_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln31_fu_642_p2 = (zext_ln26_reg_1369 + or_ln_fu_634_p3);

assign add_ln388_fu_691_p2 = (phi_ln388_reg_450 + 3'd1);

assign add_ln417_fu_604_p2 = (i_3_i_i32_i_reg_415 + 3'd1);

assign add_ln479_fu_859_p2 = (p_0_rec_i_i_reg_519 + 10'd136);

assign add_ln480_fu_865_p2 = ($signed(p_01_i_i_reg_507) + $signed(3'd7));

assign add_ln48_2_fu_921_p2 = (zext_ln48_4_fu_917_p1 + shl_ln11_reg_1477);

assign add_ln48_fu_930_p2 = (p_0_rec_i_i_reg_519 + zext_ln48_5_fu_926_p1);

assign add_ln857_fu_973_p2 = (zext_ln857_fu_969_p1 + zext_ln856_fu_941_p1);

assign add_ln858_fu_984_p2 = (10'd1 + add_ln857_reg_1509);

assign add_ln859_fu_994_p2 = (10'd2 + add_ln857_reg_1509);

assign add_ln863_fu_1035_p2 = (10'd3 + add_ln857_reg_1509);

assign add_ln864_fu_1045_p2 = (10'd4 + add_ln857_reg_1509);

assign add_ln868_fu_1139_p2 = (10'd5 + add_ln857_reg_1509);

assign add_ln869_fu_1149_p2 = (10'd6 + add_ln857_reg_1509);

assign add_ln873_fu_1235_p2 = (10'd7 + add_ln857_reg_1509);

assign add_ln874_fu_1245_p2 = (10'd8 + add_ln857_reg_1509);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign buf_d0 = lshr_ln48_fu_907_p2[7:0];

assign grp_KeccakF1600_StatePer_1_fu_565_ap_start = grp_KeccakF1600_StatePer_1_fu_565_ap_start_reg;

assign i_20_fu_628_p2 = (i_0_i_reg_426 + 4'd1);

assign i_21_fu_714_p2 = (i_4_i_i_i_reg_461 + 4'd1);

assign i_22_fu_736_p2 = (i_5_i_i_i_reg_472 + 2'd1);

assign i_23_fu_773_p2 = (i_0_i1_reg_483 + 4'd1);

assign i_24_fu_848_p2 = (i_0_i_i_reg_531 + 5'd1);

assign i_25_fu_951_p2 = (i_0_i2_reg_554 + 7'd1);

assign i_26_fu_885_p2 = (i_0_i13_reg_543 + 4'd1);

assign i_fu_583_p2 = (i_0_i_i_i_reg_404 + 5'd1);

assign icmp_ln30_1_fu_767_p2 = ((i_0_i1_reg_483 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_622_p2 = ((i_0_i_reg_426 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln362_fu_577_p2 = ((i_0_i_i_i_reg_404 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln388_fu_702_p2 = ((phi_ln388_reg_450 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln417_fu_598_p2 = ((i_3_i_i32_i_reg_415 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln424_fu_708_p2 = ((i_4_i_i_i_reg_461 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln426_fu_730_p2 = ((i_5_i_i_i_reg_472 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln475_fu_836_p2 = ((p_01_i_i_reg_507 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln477_fu_842_p2 = ((i_0_i_i_reg_531 == 5'd17) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_879_p2 = ((i_0_i13_reg_543 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln856_fu_945_p2 = ((i_0_i2_reg_554 == 7'd64) ? 1'b1 : 1'b0);

assign lshr_ln48_fu_907_p2 = state_s_load_3_reg_1482 >> zext_ln48_fu_903_p1;

assign lshr_ln7_fu_1166_p4 = {{reg_572[7:4]}};

assign lshr_ln8_fu_1262_p4 = {{reg_572[7:6]}};

assign lshr_ln_fu_1069_p4 = {{reg_572[7:2]}};

assign or_ln862_fu_1083_p2 = (shl_ln857_1_fu_1062_p3 | 8'd1);

assign or_ln865_fu_1121_p2 = (tmp_s_fu_1113_p3 | shl_ln8_fu_1101_p3);

assign or_ln865_i_fu_1127_p3 = {{trunc_ln865_fu_1109_p1}, {or_ln865_fu_1121_p2}};

assign or_ln867_fu_1180_p2 = (shl_ln857_1_reg_1546 | 8'd2);

assign or_ln870_fu_1217_p2 = (tmp_3_fu_1209_p3 | shl_ln9_fu_1197_p3);

assign or_ln870_i_fu_1223_p3 = {{trunc_ln870_fu_1205_p1}, {or_ln870_fu_1217_p2}};

assign or_ln872_fu_1276_p2 = (shl_ln857_1_reg_1546 | 8'd3);

assign or_ln874_fu_1309_p2 = (tmp_4_fu_1301_p3 | shl_ln10_fu_1293_p3);

assign or_ln874_i_fu_1315_p3 = {{buf_q0}, {or_ln874_fu_1309_p2}};

assign or_ln_fu_634_p3 = {{4'd10}, {i_0_i_reg_426}};

assign r_1_fu_810_p2 = (shl_ln31_1_fu_804_p2 | r_0_i2_reg_495);

assign r_fu_678_p2 = (shl_ln31_fu_672_p2 | r_0_i_reg_438);

assign seed_address0 = zext_ln31_fu_647_p1;

assign select_ln427_fu_758_p3 = ((trunc_ln427_fu_742_p1[0:0] === 1'b1) ? tmp_25_fu_746_p4 : trunc_ln427_1_fu_755_p1);

assign shl_ln10_fu_1293_p3 = {{buf_q1}, {2'd0}};

assign shl_ln11_fu_871_p3 = {{i_0_i_i_reg_531}, {3'd0}};

assign shl_ln12_fu_895_p3 = {{trunc_ln48_fu_891_p1}, {3'd0}};

assign shl_ln31_1_fu_804_p2 = zext_ln31_4_fu_784_p1 << zext_ln31_5_fu_800_p1;

assign shl_ln31_2_fu_792_p3 = {{trunc_ln31_1_fu_788_p1}, {3'd0}};

assign shl_ln31_fu_672_p2 = zext_ln31_1_fu_652_p1 << zext_ln31_2_fu_668_p1;

assign shl_ln6_fu_660_p3 = {{trunc_ln31_fu_656_p1}, {3'd0}};

assign shl_ln7_fu_961_p3 = {{trunc_ln857_fu_957_p1}, {3'd0}};

assign shl_ln857_1_fu_1062_p3 = {{trunc_ln857_reg_1503}, {2'd0}};

assign shl_ln8_fu_1101_p3 = {{buf_q1}, {6'd0}};

assign shl_ln9_fu_1197_p3 = {{buf_q1}, {4'd0}};

assign shl_ln_fu_610_p3 = {{i_3_i_i32_i_reg_415}, {3'd0}};

assign sub_ln877_fu_1055_p2 = (19'd131072 - zext_ln862_fu_1031_p1);

assign sub_ln878_fu_1159_p2 = (19'd131072 - zext_ln865_fu_1135_p1);

assign sub_ln879_fu_1255_p2 = (19'd131072 - zext_ln870_fu_1231_p1);

assign sub_ln880_fu_1327_p2 = (19'd131072 - zext_ln874_1_fu_1323_p1);

assign tmp_25_fu_746_p4 = {{nonce[15:8]}};

assign tmp_26_fu_1004_p4 = {{{a_coeffs_offset}, {trunc_ln857_reg_1503}}, {2'd0}};

assign tmp_27_fu_1089_p3 = {{a_coeffs_offset}, {or_ln862_fu_1083_p2}};

assign tmp_28_fu_1185_p3 = {{a_coeffs_offset}, {or_ln867_fu_1180_p2}};

assign tmp_29_fu_1281_p3 = {{a_coeffs_offset}, {or_ln872_fu_1276_p2}};

assign tmp_2_i_fu_1021_p4 = {{{trunc_ln860_fu_1017_p1}, {buf_q0}}, {reg_572}};

assign tmp_3_fu_1209_p3 = {{4'd0}, {zext_ln867_fu_1176_p1}};

assign tmp_4_fu_1301_p3 = {{2'd0}, {zext_ln872_fu_1272_p1}};

assign tmp_s_fu_1113_p3 = {{6'd0}, {zext_ln862_1_fu_1079_p1}};

assign trunc_ln31_1_fu_788_p1 = i_0_i1_reg_483[2:0];

assign trunc_ln31_fu_656_p1 = i_0_i_reg_426[2:0];

assign trunc_ln427_1_fu_755_p1 = nonce[7:0];

assign trunc_ln427_fu_742_p1 = i_5_i_i_i_reg_472[0:0];

assign trunc_ln48_fu_891_p1 = i_0_i13_reg_543[2:0];

assign trunc_ln857_fu_957_p1 = i_0_i2_reg_554[5:0];

assign trunc_ln860_fu_1017_p1 = buf_q1[1:0];

assign trunc_ln865_fu_1109_p1 = buf_q0[3:0];

assign trunc_ln870_fu_1205_p1 = buf_q0[5:0];

assign xor_ln418_fu_684_p2 = (state_s_q0 ^ r_0_i_reg_438);

assign xor_ln451_1_fu_816_p2 = (r_0_i2_reg_495 ^ 64'd2031616);

assign xor_ln451_fu_822_p2 = (xor_ln451_1_fu_816_p2 ^ state_s_q0);

assign xor_ln452_fu_829_p2 = (state_s_q1 ^ 64'd9223372036854775808);

assign zext_ln26_fu_618_p1 = shl_ln_fu_610_p3;

assign zext_ln31_1_fu_652_p1 = seed_q0;

assign zext_ln31_2_fu_668_p1 = shl_ln6_fu_660_p3;

assign zext_ln31_3_fu_779_p1 = i_0_i1_reg_483;

assign zext_ln31_4_fu_784_p1 = t_q0;

assign zext_ln31_5_fu_800_p1 = shl_ln31_2_fu_792_p3;

assign zext_ln31_fu_647_p1 = add_ln31_fu_642_p2;

assign zext_ln363_fu_589_p1 = i_0_i_i_i_reg_404;

assign zext_ln388_fu_697_p1 = phi_ln388_reg_450;

assign zext_ln417_fu_594_p1 = i_3_i_i32_i_reg_415;

assign zext_ln425_fu_720_p1 = i_4_i_i_i_reg_461;

assign zext_ln426_fu_725_p1 = i_5_i_i_i_reg_472;

assign zext_ln478_fu_854_p1 = i_0_i_i_reg_531;

assign zext_ln48_4_fu_917_p1 = i_0_i13_reg_543;

assign zext_ln48_5_fu_926_p1 = add_ln48_2_fu_921_p2;

assign zext_ln48_6_fu_936_p1 = add_ln48_fu_930_p2;

assign zext_ln48_fu_903_p1 = shl_ln12_fu_895_p3;

assign zext_ln856_fu_941_p1 = i_0_i2_reg_554;

assign zext_ln857_1_fu_979_p1 = add_ln857_fu_973_p2;

assign zext_ln857_2_fu_1012_p1 = tmp_26_fu_1004_p4;

assign zext_ln857_fu_969_p1 = shl_ln7_fu_961_p3;

assign zext_ln858_fu_989_p1 = add_ln858_fu_984_p2;

assign zext_ln859_fu_999_p1 = add_ln859_fu_994_p2;

assign zext_ln862_1_fu_1079_p1 = lshr_ln_fu_1069_p4;

assign zext_ln862_2_fu_1096_p1 = tmp_27_fu_1089_p3;

assign zext_ln862_fu_1031_p1 = tmp_2_i_fu_1021_p4;

assign zext_ln863_fu_1040_p1 = add_ln863_fu_1035_p2;

assign zext_ln864_fu_1050_p1 = add_ln864_fu_1045_p2;

assign zext_ln865_fu_1135_p1 = or_ln865_i_fu_1127_p3;

assign zext_ln867_1_fu_1192_p1 = tmp_28_fu_1185_p3;

assign zext_ln867_fu_1176_p1 = lshr_ln7_fu_1166_p4;

assign zext_ln868_fu_1144_p1 = add_ln868_fu_1139_p2;

assign zext_ln869_fu_1154_p1 = add_ln869_fu_1149_p2;

assign zext_ln870_fu_1231_p1 = or_ln870_i_fu_1223_p3;

assign zext_ln872_1_fu_1288_p1 = tmp_29_fu_1281_p3;

assign zext_ln872_fu_1272_p1 = lshr_ln8_fu_1262_p4;

assign zext_ln873_fu_1240_p1 = add_ln873_fu_1235_p2;

assign zext_ln874_1_fu_1323_p1 = or_ln874_i_fu_1315_p3;

assign zext_ln874_fu_1250_p1 = add_ln874_fu_1245_p2;

always @ (posedge ap_clk) begin
    zext_ln417_reg_1356[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln26_reg_1369[2:0] <= 3'b000;
    zext_ln26_reg_1369[7:6] <= 2'b00;
    state_s_addr_1_reg_1387[4:3] <= 2'b00;
    shl_ln11_reg_1477[2:0] <= 3'b000;
    shl_ln857_1_reg_1546[1:0] <= 2'b00;
end

endmodule //poly_uniform_gamma1
