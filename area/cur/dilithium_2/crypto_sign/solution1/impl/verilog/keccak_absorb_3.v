// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module keccak_absorb_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        s_address0,
        s_ce0,
        s_we0,
        s_d0,
        s_q0,
        s_address1,
        s_ce1,
        s_we1,
        s_d1,
        s_q1,
        m_address0,
        m_ce0,
        m_q0,
        m_offset,
        mlen,
        ap_return
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_state2 = 17'd2;
parameter    ap_ST_fsm_state3 = 17'd4;
parameter    ap_ST_fsm_state4 = 17'd8;
parameter    ap_ST_fsm_state5 = 17'd16;
parameter    ap_ST_fsm_state6 = 17'd32;
parameter    ap_ST_fsm_state7 = 17'd64;
parameter    ap_ST_fsm_state8 = 17'd128;
parameter    ap_ST_fsm_state9 = 17'd256;
parameter    ap_ST_fsm_state10 = 17'd512;
parameter    ap_ST_fsm_state11 = 17'd1024;
parameter    ap_ST_fsm_state12 = 17'd2048;
parameter    ap_ST_fsm_state13 = 17'd4096;
parameter    ap_ST_fsm_state14 = 17'd8192;
parameter    ap_ST_fsm_state15 = 17'd16384;
parameter    ap_ST_fsm_state16 = 17'd32768;
parameter    ap_ST_fsm_state17 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] s_address0;
output   s_ce0;
output   s_we0;
output  [63:0] s_d0;
input  [63:0] s_q0;
output  [4:0] s_address1;
output   s_ce1;
output   s_we1;
output  [63:0] s_d1;
input  [63:0] s_q1;
output  [12:0] m_address0;
output   m_ce0;
input  [7:0] m_q0;
input  [12:0] m_offset;
input  [63:0] mlen;
output  [9:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] s_address0;
reg s_ce0;
reg s_we0;
reg[63:0] s_d0;
reg s_ce1;
reg s_we1;
reg[12:0] m_address0;
reg m_ce0;
reg[9:0] ap_return;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] add_ln387_fu_378_p2;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln399_fu_395_p2;
reg   [0:0] icmp_ln399_reg_829;
wire   [0:0] icmp_ln387_fu_389_p2;
wire   [11:0] trunc_ln401_fu_400_p1;
reg   [11:0] trunc_ln401_reg_833;
wire   [3:0] i_fu_413_p2;
reg   [3:0] i_reg_841;
wire    ap_CS_fsm_state3;
wire   [63:0] zext_ln401_2_fu_436_p1;
reg   [63:0] zext_ln401_2_reg_846;
wire   [0:0] icmp_ln400_fu_407_p2;
reg   [4:0] s_addr_reg_851;
wire   [8:0] zext_ln408_1_fu_466_p1;
reg   [8:0] zext_ln408_1_reg_856;
wire    ap_CS_fsm_state5;
wire    grp_KeccakF1600_StatePer_1_fu_356_ap_ready;
wire    grp_KeccakF1600_StatePer_1_fu_356_ap_done;
reg    ap_block_state5_on_subcall_done;
wire   [11:0] add_ln410_fu_473_p2;
reg   [11:0] add_ln410_reg_861;
wire   [63:0] zext_ln410_2_fu_479_p1;
reg   [63:0] zext_ln410_2_reg_866;
wire   [13:0] trunc_ln408_fu_489_p1;
reg   [13:0] trunc_ln408_reg_875;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln408_fu_483_p2;
wire   [4:0] zext_ln417_2_fu_507_p1;
reg   [4:0] zext_ln417_2_reg_880;
reg   [4:0] tmp_reg_885;
wire   [4:0] i_33_fu_527_p2;
reg   [4:0] i_33_reg_894;
wire    ap_CS_fsm_state7;
wire   [63:0] add_ln410_2_fu_551_p2;
reg   [63:0] add_ln410_2_reg_899;
wire   [0:0] icmp_ln409_fu_521_p2;
reg   [4:0] s_addr_2_reg_904;
wire   [63:0] add_ln411_fu_562_p2;
reg   [63:0] add_ln411_reg_909;
wire   [63:0] add_ln414_fu_568_p2;
reg   [63:0] add_ln414_reg_914;
wire   [4:0] add_ln416_fu_579_p2;
reg   [4:0] add_ln416_reg_922;
wire    ap_CS_fsm_state10;
wire   [63:0] add_ln417_2_fu_607_p2;
reg   [63:0] add_ln417_2_reg_927;
wire   [0:0] icmp_ln416_fu_574_p2;
reg   [4:0] s_addr_1_reg_932;
wire   [13:0] zext_ln419_fu_638_p1;
reg   [13:0] zext_ln419_reg_937;
wire   [63:0] sub_ln419_fu_642_p2;
reg   [63:0] sub_ln419_reg_942;
wire   [32:0] trunc_ln419_fu_648_p1;
reg   [32:0] trunc_ln419_reg_947;
wire   [8:0] add_ln420_fu_652_p2;
reg   [8:0] add_ln420_reg_952;
wire   [9:0] zext_ln420_fu_657_p1;
reg   [9:0] zext_ln420_reg_957;
wire   [0:0] icmp_ln422_fu_661_p2;
reg   [0:0] icmp_ln422_reg_963;
wire   [3:0] i_34_fu_673_p2;
wire    ap_CS_fsm_state12;
wire   [13:0] zext_ln426_fu_684_p1;
reg   [13:0] zext_ln426_reg_975;
wire   [0:0] icmp_ln423_fu_667_p2;
wire   [63:0] zext_ln425_fu_687_p1;
reg   [63:0] zext_ln425_reg_980;
wire    ap_CS_fsm_state13;
wire   [31:0] i_35_fu_704_p2;
reg   [31:0] i_35_reg_988;
wire   [0:0] icmp_ln425_fu_699_p2;
wire   [3:0] i_36_fu_736_p2;
reg   [3:0] i_36_reg_1001;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln30_fu_730_p2;
reg   [4:0] s_addr_3_reg_1011;
wire   [9:0] trunc_ln428_fu_761_p1;
reg   [9:0] trunc_ln428_reg_1016;
wire   [63:0] r_fu_790_p2;
wire    ap_CS_fsm_state16;
reg   [2:0] t_address0;
reg    t_ce0;
reg    t_we0;
reg   [7:0] t_d0;
wire   [7:0] t_q0;
wire    grp_KeccakF1600_StatePer_1_fu_356_ap_start;
wire    grp_KeccakF1600_StatePer_1_fu_356_ap_idle;
wire   [4:0] grp_KeccakF1600_StatePer_1_fu_356_state_address0;
wire    grp_KeccakF1600_StatePer_1_fu_356_state_ce0;
wire    grp_KeccakF1600_StatePer_1_fu_356_state_we0;
wire   [63:0] grp_KeccakF1600_StatePer_1_fu_356_state_d0;
wire   [4:0] grp_KeccakF1600_StatePer_1_fu_356_state_address1;
wire    grp_KeccakF1600_StatePer_1_fu_356_state_ce1;
wire    grp_KeccakF1600_StatePer_1_fu_356_state_we1;
wire   [63:0] grp_KeccakF1600_StatePer_1_fu_356_state_d1;
wire    grp_load64_2_fu_364_ap_start;
wire    grp_load64_2_fu_364_ap_done;
wire    grp_load64_2_fu_364_ap_idle;
wire    grp_load64_2_fu_364_ap_ready;
wire   [12:0] grp_load64_2_fu_364_x_address0;
wire    grp_load64_2_fu_364_x_ce0;
reg   [63:0] grp_load64_2_fu_364_x_offset;
wire   [63:0] grp_load64_2_fu_364_ap_return;
reg   [2:0] phi_ln387_reg_199;
reg   [3:0] i_1_reg_210;
wire    ap_CS_fsm_state4;
reg   [6:0] ap_phi_mux_p_2722_phi_fu_225_p4;
reg   [6:0] p_2722_reg_221;
reg  signed [4:0] ap_phi_mux_p_23_phi_fu_237_p4;
reg  signed [4:0] p_23_reg_233;
wire   [63:0] add_ln403_fu_452_p2;
reg   [63:0] ap_phi_mux_p_2_phi_fu_249_p4;
reg   [63:0] p_2_reg_246;
reg   [63:0] indvars_iv_reg_256;
wire    ap_CS_fsm_state9;
reg   [63:0] p_38_rec_reg_267;
reg   [4:0] i_2_reg_279;
wire    ap_CS_fsm_state8;
reg   [4:0] i_3_reg_290;
wire    ap_CS_fsm_state11;
reg   [3:0] i_4_reg_301;
reg   [31:0] i_5_reg_312;
wire    ap_CS_fsm_state14;
reg   [3:0] i_0_i1_reg_323;
reg   [63:0] r_0_i2_reg_335;
wire   [9:0] add_ln428_fu_803_p2;
reg   [9:0] ap_phi_mux_p_34_phi_fu_350_p4;
reg   [9:0] p_34_reg_347;
wire    ap_CS_fsm_state17;
reg    grp_KeccakF1600_StatePer_1_fu_356_ap_start_reg;
reg    grp_load64_2_fu_364_ap_start_reg;
wire   [63:0] zext_ln387_fu_384_p1;
wire   [63:0] zext_ln401_1_fu_447_p1;
wire   [63:0] zext_ln410_1_fu_557_p1;
wire   [63:0] zext_ln417_1_fu_618_p1;
wire   [63:0] zext_ln424_fu_679_p1;
wire   [63:0] zext_ln426_1_fu_725_p1;
wire   [63:0] zext_ln31_fu_742_p1;
wire   [63:0] zext_ln427_fu_756_p1;
wire   [63:0] grp_fu_371_p2;
wire   [63:0] xor_ln427_fu_796_p2;
wire   [6:0] shl_ln_fu_419_p3;
wire   [11:0] zext_ln401_fu_427_p1;
wire   [11:0] add_ln401_1_fu_431_p2;
wire   [4:0] zext_ln400_fu_403_p1;
wire   [4:0] add_ln401_fu_441_p2;
wire  signed [5:0] sext_ln408_fu_458_p1;
wire   [11:0] zext_ln408_fu_462_p1;
wire   [11:0] trunc_ln410_fu_470_p1;
wire   [1:0] trunc_ln417_1_fu_493_p4;
wire  signed [2:0] sext_ln417_fu_503_p1;
wire   [7:0] shl_ln21_fu_533_p3;
wire   [63:0] zext_ln410_fu_541_p1;
wire   [63:0] add_ln410_1_fu_545_p2;
wire   [3:0] trunc_ln417_fu_585_p1;
wire   [6:0] shl_ln20_fu_589_p3;
wire   [63:0] zext_ln417_fu_597_p1;
wire   [63:0] add_ln417_fu_601_p2;
wire   [4:0] add_ln417_1_fu_613_p2;
wire   [7:0] and_ln_fu_623_p3;
wire   [63:0] zext_ln418_fu_634_p1;
wire   [8:0] zext_ln418_1_fu_630_p1;
wire   [32:0] zext_ln425_1_fu_695_p1;
wire   [13:0] trunc_ln425_fu_691_p1;
wire   [13:0] add_ln426_fu_710_p2;
wire   [13:0] add_ln426_1_fu_715_p2;
wire   [13:0] add_ln426_2_fu_720_p2;
wire   [5:0] lshr_ln_fu_747_p4;
wire   [2:0] trunc_ln31_fu_768_p1;
wire   [5:0] shl_ln22_fu_772_p3;
wire   [63:0] zext_ln31_11_fu_764_p1;
wire   [63:0] zext_ln31_12_fu_780_p1;
wire   [63:0] shl_ln31_fu_784_p2;
reg   [9:0] ap_return_preg;
reg   [16:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
#0 grp_KeccakF1600_StatePer_1_fu_356_ap_start_reg = 1'b0;
#0 grp_load64_2_fu_364_ap_start_reg = 1'b0;
#0 ap_return_preg = 10'd0;
end

keccak_absorb_3_t #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
t_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(t_address0),
    .ce0(t_ce0),
    .we0(t_we0),
    .d0(t_d0),
    .q0(t_q0)
);

KeccakF1600_StatePer_1 grp_KeccakF1600_StatePer_1_fu_356(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_KeccakF1600_StatePer_1_fu_356_ap_start),
    .ap_done(grp_KeccakF1600_StatePer_1_fu_356_ap_done),
    .ap_idle(grp_KeccakF1600_StatePer_1_fu_356_ap_idle),
    .ap_ready(grp_KeccakF1600_StatePer_1_fu_356_ap_ready),
    .state_address0(grp_KeccakF1600_StatePer_1_fu_356_state_address0),
    .state_ce0(grp_KeccakF1600_StatePer_1_fu_356_state_ce0),
    .state_we0(grp_KeccakF1600_StatePer_1_fu_356_state_we0),
    .state_d0(grp_KeccakF1600_StatePer_1_fu_356_state_d0),
    .state_q0(s_q0),
    .state_address1(grp_KeccakF1600_StatePer_1_fu_356_state_address1),
    .state_ce1(grp_KeccakF1600_StatePer_1_fu_356_state_ce1),
    .state_we1(grp_KeccakF1600_StatePer_1_fu_356_state_we1),
    .state_d1(grp_KeccakF1600_StatePer_1_fu_356_state_d1),
    .state_q1(s_q1)
);

load64_2 grp_load64_2_fu_364(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_load64_2_fu_364_ap_start),
    .ap_done(grp_load64_2_fu_364_ap_done),
    .ap_idle(grp_load64_2_fu_364_ap_idle),
    .ap_ready(grp_load64_2_fu_364_ap_ready),
    .x_address0(grp_load64_2_fu_364_x_address0),
    .x_ce0(grp_load64_2_fu_364_x_ce0),
    .x_q0(m_q0),
    .x_offset(grp_load64_2_fu_364_x_offset),
    .ap_return(grp_load64_2_fu_364_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 10'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_return_preg <= ap_phi_mux_p_34_phi_fu_350_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_KeccakF1600_StatePer_1_fu_356_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln400_fu_407_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln409_fu_521_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7)))) begin
            grp_KeccakF1600_StatePer_1_fu_356_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakF1600_StatePer_1_fu_356_ap_ready == 1'b1)) begin
            grp_KeccakF1600_StatePer_1_fu_356_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_load64_2_fu_364_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln400_fu_407_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln416_fu_574_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10)) | ((icmp_ln409_fu_521_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
            grp_load64_2_fu_364_ap_start_reg <= 1'b1;
        end else if ((grp_load64_2_fu_364_ap_ready == 1'b1)) begin
            grp_load64_2_fu_364_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln425_fu_699_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        i_0_i1_reg_323 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        i_0_i1_reg_323 <= i_36_reg_1001;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_fu_389_p2 == 1'd1) & (icmp_ln399_fu_395_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_1_reg_210 <= 4'd0;
    end else if (((grp_load64_2_fu_364_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        i_1_reg_210 <= i_reg_841;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln408_fu_483_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        i_2_reg_279 <= 5'd0;
    end else if (((grp_load64_2_fu_364_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_2_reg_279 <= i_33_reg_894;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_load64_2_fu_364_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        i_3_reg_290 <= add_ln416_reg_922;
    end else if (((icmp_ln408_fu_483_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        i_3_reg_290 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln422_fu_661_p2 == 1'd0) & (icmp_ln416_fu_574_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        i_4_reg_301 <= 4'd0;
    end else if (((icmp_ln423_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        i_4_reg_301 <= i_34_fu_673_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln423_fu_667_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        i_5_reg_312 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        i_5_reg_312 <= i_35_reg_988;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done))) begin
        indvars_iv_reg_256 <= ap_phi_mux_p_2_phi_fu_249_p4;
    end else if (((1'b1 == ap_CS_fsm_state9) & (grp_KeccakF1600_StatePer_1_fu_356_ap_done == 1'b1))) begin
        indvars_iv_reg_256 <= add_ln414_reg_914;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_fu_389_p2 == 1'd1) & (icmp_ln399_fu_395_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                p_23_reg_233[4] <= 1'b1;
    end else if (((icmp_ln399_reg_829 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done))) begin
                p_23_reg_233[4] <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_fu_389_p2 == 1'd1) & (icmp_ln399_fu_395_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                p_2722_reg_221[3] <= 1'b0;
        p_2722_reg_221[4] <= 1'b0;
        p_2722_reg_221[6] <= 1'b0;
    end else if (((icmp_ln399_reg_829 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done))) begin
                p_2722_reg_221[3] <= 1'b1;
        p_2722_reg_221[4] <= 1'b1;
        p_2722_reg_221[6] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_fu_389_p2 == 1'd1) & (icmp_ln399_fu_395_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_2_reg_246 <= mlen;
    end else if (((icmp_ln399_reg_829 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done))) begin
        p_2_reg_246 <= add_ln403_fu_452_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln422_fu_661_p2 == 1'd1) & (icmp_ln416_fu_574_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        p_34_reg_347 <= zext_ln420_fu_657_p1;
    end else if (((icmp_ln422_reg_963 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        p_34_reg_347 <= add_ln428_fu_803_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done))) begin
        p_38_rec_reg_267 <= 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state9) & (grp_KeccakF1600_StatePer_1_fu_356_ap_done == 1'b1))) begin
        p_38_rec_reg_267 <= add_ln411_reg_909;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_fu_389_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_ln387_reg_199 <= add_ln387_fu_378_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_ln387_reg_199 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln425_fu_699_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        r_0_i2_reg_335 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        r_0_i2_reg_335 <= r_fu_790_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln409_fu_521_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        add_ln410_2_reg_899 <= add_ln410_2_fu_551_p2;
        s_addr_2_reg_904 <= zext_ln410_1_fu_557_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done))) begin
        add_ln410_reg_861 <= add_ln410_fu_473_p2;
        zext_ln408_1_reg_856[5 : 4] <= zext_ln408_1_fu_466_p1[5 : 4];
        zext_ln410_2_reg_866[11 : 0] <= zext_ln410_2_fu_479_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln409_fu_521_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        add_ln411_reg_909 <= add_ln411_fu_562_p2;
        add_ln414_reg_914 <= add_ln414_fu_568_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln416_reg_922 <= add_ln416_fu_579_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln416_fu_574_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        add_ln417_2_reg_927 <= add_ln417_2_fu_607_p2;
        s_addr_1_reg_932 <= zext_ln417_1_fu_618_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln416_fu_574_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        add_ln420_reg_952[8 : 3] <= add_ln420_fu_652_p2[8 : 3];
        icmp_ln422_reg_963 <= icmp_ln422_fu_661_p2;
        sub_ln419_reg_942 <= sub_ln419_fu_642_p2;
        trunc_ln419_reg_947 <= trunc_ln419_fu_648_p1;
        zext_ln419_reg_937[7 : 3] <= zext_ln419_fu_638_p1[7 : 3];
        zext_ln420_reg_957[8 : 3] <= zext_ln420_fu_657_p1[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_33_reg_894 <= i_33_fu_527_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_35_reg_988 <= i_35_fu_704_p2;
        zext_ln425_reg_980[31 : 0] <= zext_ln425_fu_687_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_36_reg_1001 <= i_36_fu_736_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_reg_841 <= i_fu_413_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_fu_389_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln399_reg_829 <= icmp_ln399_fu_395_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_fu_730_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        s_addr_3_reg_1011 <= zext_ln427_fu_756_p1;
        trunc_ln428_reg_1016 <= trunc_ln428_fu_761_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln400_fu_407_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        s_addr_reg_851 <= zext_ln401_1_fu_447_p1;
        zext_ln401_2_reg_846[11 : 0] <= zext_ln401_2_fu_436_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln408_fu_483_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_reg_885 <= {{indvars_iv_reg_256[7:3]}};
        trunc_ln408_reg_875 <= trunc_ln408_fu_489_p1;
        zext_ln417_2_reg_880[2 : 1] <= zext_ln417_2_fu_507_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_fu_389_p2 == 1'd1) & (icmp_ln399_fu_395_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        trunc_ln401_reg_833 <= trunc_ln401_fu_400_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln423_fu_667_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        zext_ln426_reg_975[11 : 0] <= zext_ln426_fu_684_p1[11 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln399_reg_829 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_phi_mux_p_23_phi_fu_237_p4 = 5'd0;
    end else begin
        ap_phi_mux_p_23_phi_fu_237_p4 = p_23_reg_233;
    end
end

always @ (*) begin
    if (((icmp_ln399_reg_829 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_phi_mux_p_2722_phi_fu_225_p4 = 7'd88;
    end else begin
        ap_phi_mux_p_2722_phi_fu_225_p4 = p_2722_reg_221;
    end
end

always @ (*) begin
    if (((icmp_ln399_reg_829 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_phi_mux_p_2_phi_fu_249_p4 = add_ln403_fu_452_p2;
    end else begin
        ap_phi_mux_p_2_phi_fu_249_p4 = p_2_reg_246;
    end
end

always @ (*) begin
    if (((icmp_ln422_reg_963 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        ap_phi_mux_p_34_phi_fu_350_p4 = add_ln428_fu_803_p2;
    end else begin
        ap_phi_mux_p_34_phi_fu_350_p4 = p_34_reg_347;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ap_return = ap_phi_mux_p_34_phi_fu_350_p4;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_load64_2_fu_364_x_offset = add_ln417_2_reg_927;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_load64_2_fu_364_x_offset = add_ln410_2_reg_899;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_load64_2_fu_364_x_offset = zext_ln401_2_reg_846;
    end else begin
        grp_load64_2_fu_364_x_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        m_address0 = zext_ln426_1_fu_725_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        m_address0 = grp_load64_2_fu_364_x_address0;
    end else begin
        m_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        m_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        m_ce0 = grp_load64_2_fu_364_x_ce0;
    end else begin
        m_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        s_address0 = s_addr_3_reg_1011;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        s_address0 = zext_ln427_fu_756_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        s_address0 = s_addr_1_reg_932;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        s_address0 = zext_ln417_1_fu_618_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        s_address0 = s_addr_2_reg_904;
    end else if (((icmp_ln409_fu_521_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        s_address0 = zext_ln410_1_fu_557_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        s_address0 = s_addr_reg_851;
    end else if (((icmp_ln400_fu_407_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        s_address0 = zext_ln401_1_fu_447_p1;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln399_reg_829 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        s_address0 = grp_KeccakF1600_StatePer_1_fu_356_state_address0;
    end else begin
        s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state10) | ((icmp_ln400_fu_407_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((grp_load64_2_fu_364_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((grp_load64_2_fu_364_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_load64_2_fu_364_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln409_fu_521_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        s_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln399_reg_829 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        s_ce0 = grp_KeccakF1600_StatePer_1_fu_356_state_ce0;
    end else begin
        s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln399_reg_829 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        s_ce1 = grp_KeccakF1600_StatePer_1_fu_356_state_ce1;
    end else begin
        s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        s_d0 = xor_ln427_fu_796_p2;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        s_d0 = grp_fu_371_p2;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln399_reg_829 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        s_d0 = grp_KeccakF1600_StatePer_1_fu_356_state_d0;
    end else begin
        s_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln422_reg_963 == 1'd0) & (1'b1 == ap_CS_fsm_state17)) | ((grp_load64_2_fu_364_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((grp_load64_2_fu_364_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_load64_2_fu_364_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        s_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln399_reg_829 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        s_we0 = grp_KeccakF1600_StatePer_1_fu_356_state_we0;
    end else begin
        s_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln399_reg_829 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        s_we1 = grp_KeccakF1600_StatePer_1_fu_356_state_we1;
    end else begin
        s_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        t_address0 = zext_ln31_fu_742_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        t_address0 = zext_ln425_reg_980;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        t_address0 = zext_ln424_fu_679_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t_address0 = zext_ln387_fu_384_p1;
    end else begin
        t_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12))) begin
        t_ce0 = 1'b1;
    end else begin
        t_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        t_d0 = m_q0;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state12))) begin
        t_d0 = 8'd0;
    end else begin
        t_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state14) | ((icmp_ln423_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        t_we0 = 1'b1;
    end else begin
        t_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln387_fu_389_p2 == 1'd1) & (icmp_ln399_fu_395_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((icmp_ln387_fu_389_p2 == 1'd1) & (icmp_ln399_fu_395_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln400_fu_407_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((grp_load64_2_fu_364_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln408_fu_483_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln409_fu_521_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((grp_load64_2_fu_364_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (grp_KeccakF1600_StatePer_1_fu_356_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln422_fu_661_p2 == 1'd0) & (icmp_ln416_fu_574_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else if (((icmp_ln422_fu_661_p2 == 1'd1) & (icmp_ln416_fu_574_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((grp_load64_2_fu_364_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln423_fu_667_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln425_fu_699_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln30_fu_730_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln387_fu_378_p2 = (phi_ln387_reg_199 + 3'd1);

assign add_ln401_1_fu_431_p2 = (trunc_ln401_reg_833 + zext_ln401_fu_427_p1);

assign add_ln401_fu_441_p2 = (zext_ln400_fu_403_p1 + 5'd6);

assign add_ln403_fu_452_p2 = ($signed(mlen) + $signed(64'd18446744073709551528));

assign add_ln410_1_fu_545_p2 = (zext_ln410_fu_541_p1 + p_38_rec_reg_267);

assign add_ln410_2_fu_551_p2 = (zext_ln410_2_reg_866 + add_ln410_1_fu_545_p2);

assign add_ln410_fu_473_p2 = (zext_ln408_fu_462_p1 + trunc_ln410_fu_470_p1);

assign add_ln411_fu_562_p2 = (p_38_rec_reg_267 + 64'd136);

assign add_ln414_fu_568_p2 = ($signed(indvars_iv_reg_256) + $signed(64'd18446744073709551480));

assign add_ln416_fu_579_p2 = (i_3_reg_290 + 5'd1);

assign add_ln417_1_fu_613_p2 = (zext_ln417_2_reg_880 + i_3_reg_290);

assign add_ln417_2_fu_607_p2 = (zext_ln410_2_reg_866 + add_ln417_fu_601_p2);

assign add_ln417_fu_601_p2 = (zext_ln417_fu_597_p1 + p_38_rec_reg_267);

assign add_ln420_fu_652_p2 = (zext_ln408_1_reg_856 + zext_ln418_1_fu_630_p1);

assign add_ln426_1_fu_715_p2 = (add_ln426_fu_710_p2 + trunc_ln408_reg_875);

assign add_ln426_2_fu_720_p2 = (add_ln426_1_fu_715_p2 + zext_ln426_reg_975);

assign add_ln426_fu_710_p2 = (zext_ln419_reg_937 + trunc_ln425_fu_691_p1);

assign add_ln428_fu_803_p2 = (trunc_ln428_reg_1016 + zext_ln420_reg_957);

assign and_ln_fu_623_p3 = {{tmp_reg_885}, {3'd0}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state5_on_subcall_done = ((icmp_ln399_reg_829 == 1'd0) & (grp_KeccakF1600_StatePer_1_fu_356_ap_done == 1'b0));
end

assign grp_KeccakF1600_StatePer_1_fu_356_ap_start = grp_KeccakF1600_StatePer_1_fu_356_ap_start_reg;

assign grp_fu_371_p2 = (s_q0 ^ grp_load64_2_fu_364_ap_return);

assign grp_load64_2_fu_364_ap_start = grp_load64_2_fu_364_ap_start_reg;

assign i_33_fu_527_p2 = (i_2_reg_279 + 5'd1);

assign i_34_fu_673_p2 = (i_4_reg_301 + 4'd1);

assign i_35_fu_704_p2 = (32'd1 + i_5_reg_312);

assign i_36_fu_736_p2 = (i_0_i1_reg_323 + 4'd1);

assign i_fu_413_p2 = (i_1_reg_210 + 4'd1);

assign icmp_ln30_fu_730_p2 = ((i_0_i1_reg_323 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln387_fu_389_p2 = ((phi_ln387_reg_199 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln399_fu_395_p2 = ((mlen < 64'd88) ? 1'b1 : 1'b0);

assign icmp_ln400_fu_407_p2 = ((i_1_reg_210 == 4'd11) ? 1'b1 : 1'b0);

assign icmp_ln408_fu_483_p2 = ((indvars_iv_reg_256 < 64'd136) ? 1'b1 : 1'b0);

assign icmp_ln409_fu_521_p2 = ((i_2_reg_279 == 5'd17) ? 1'b1 : 1'b0);

assign icmp_ln416_fu_574_p2 = ((i_3_reg_290 == tmp_reg_885) ? 1'b1 : 1'b0);

assign icmp_ln422_fu_661_p2 = ((indvars_iv_reg_256 == zext_ln418_fu_634_p1) ? 1'b1 : 1'b0);

assign icmp_ln423_fu_667_p2 = ((i_4_reg_301 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln425_fu_699_p2 = ((zext_ln425_1_fu_695_p1 < trunc_ln419_reg_947) ? 1'b1 : 1'b0);

assign lshr_ln_fu_747_p4 = {{add_ln420_reg_952[8:3]}};

assign r_fu_790_p2 = (shl_ln31_fu_784_p2 | r_0_i2_reg_335);

assign s_address1 = grp_KeccakF1600_StatePer_1_fu_356_state_address1;

assign s_d1 = grp_KeccakF1600_StatePer_1_fu_356_state_d1;

assign sext_ln408_fu_458_p1 = ap_phi_mux_p_23_phi_fu_237_p4;

assign sext_ln417_fu_503_p1 = $signed(trunc_ln417_1_fu_493_p4);

assign shl_ln20_fu_589_p3 = {{trunc_ln417_fu_585_p1}, {3'd0}};

assign shl_ln21_fu_533_p3 = {{i_2_reg_279}, {3'd0}};

assign shl_ln22_fu_772_p3 = {{trunc_ln31_fu_768_p1}, {3'd0}};

assign shl_ln31_fu_784_p2 = zext_ln31_11_fu_764_p1 << zext_ln31_12_fu_780_p1;

assign shl_ln_fu_419_p3 = {{i_1_reg_210}, {3'd0}};

assign sub_ln419_fu_642_p2 = (indvars_iv_reg_256 - zext_ln418_fu_634_p1);

assign trunc_ln31_fu_768_p1 = i_0_i1_reg_323[2:0];

assign trunc_ln401_fu_400_p1 = m_offset[11:0];

assign trunc_ln408_fu_489_p1 = p_38_rec_reg_267[13:0];

assign trunc_ln410_fu_470_p1 = m_offset[11:0];

assign trunc_ln417_1_fu_493_p4 = {{p_23_reg_233[4:3]}};

assign trunc_ln417_fu_585_p1 = i_3_reg_290[3:0];

assign trunc_ln419_fu_648_p1 = sub_ln419_fu_642_p2[32:0];

assign trunc_ln425_fu_691_p1 = i_5_reg_312[13:0];

assign trunc_ln428_fu_761_p1 = sub_ln419_reg_942[9:0];

assign xor_ln427_fu_796_p2 = (s_q0 ^ r_0_i2_reg_335);

assign zext_ln31_11_fu_764_p1 = t_q0;

assign zext_ln31_12_fu_780_p1 = shl_ln22_fu_772_p3;

assign zext_ln31_fu_742_p1 = i_0_i1_reg_323;

assign zext_ln387_fu_384_p1 = phi_ln387_reg_199;

assign zext_ln400_fu_403_p1 = i_1_reg_210;

assign zext_ln401_1_fu_447_p1 = add_ln401_fu_441_p2;

assign zext_ln401_2_fu_436_p1 = add_ln401_1_fu_431_p2;

assign zext_ln401_fu_427_p1 = shl_ln_fu_419_p3;

assign zext_ln408_1_fu_466_p1 = $unsigned(sext_ln408_fu_458_p1);

assign zext_ln408_fu_462_p1 = ap_phi_mux_p_2722_phi_fu_225_p4;

assign zext_ln410_1_fu_557_p1 = i_2_reg_279;

assign zext_ln410_2_fu_479_p1 = add_ln410_fu_473_p2;

assign zext_ln410_fu_541_p1 = shl_ln21_fu_533_p3;

assign zext_ln417_1_fu_618_p1 = add_ln417_1_fu_613_p2;

assign zext_ln417_2_fu_507_p1 = $unsigned(sext_ln417_fu_503_p1);

assign zext_ln417_fu_597_p1 = shl_ln20_fu_589_p3;

assign zext_ln418_1_fu_630_p1 = and_ln_fu_623_p3;

assign zext_ln418_fu_634_p1 = and_ln_fu_623_p3;

assign zext_ln419_fu_638_p1 = and_ln_fu_623_p3;

assign zext_ln420_fu_657_p1 = add_ln420_fu_652_p2;

assign zext_ln424_fu_679_p1 = i_4_reg_301;

assign zext_ln425_1_fu_695_p1 = i_5_reg_312;

assign zext_ln425_fu_687_p1 = i_5_reg_312;

assign zext_ln426_1_fu_725_p1 = add_ln426_2_fu_720_p2;

assign zext_ln426_fu_684_p1 = add_ln410_reg_861;

assign zext_ln427_fu_756_p1 = lshr_ln_fu_747_p4;

always @ (posedge ap_clk) begin
    zext_ln401_2_reg_846[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln408_1_reg_856[3:0] <= 4'b0000;
    zext_ln408_1_reg_856[8:6] <= 3'b000;
    zext_ln410_2_reg_866[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln417_2_reg_880[0] <= 1'b0;
    zext_ln417_2_reg_880[4:3] <= 2'b00;
    zext_ln419_reg_937[2:0] <= 3'b000;
    zext_ln419_reg_937[13:8] <= 6'b000000;
    add_ln420_reg_952[2:0] <= 3'b000;
    zext_ln420_reg_957[2:0] <= 3'b000;
    zext_ln420_reg_957[9] <= 1'b0;
    zext_ln426_reg_975[13:12] <= 2'b00;
    zext_ln425_reg_980[63:32] <= 32'b00000000000000000000000000000000;
    p_2722_reg_221[2:0] <= 3'b000;
    p_2722_reg_221[5] <= 1'b0;
    p_23_reg_233[3:0] <= 4'b0000;
end

endmodule //keccak_absorb_3
