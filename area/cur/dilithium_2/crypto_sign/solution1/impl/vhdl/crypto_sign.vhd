-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity crypto_sign is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    sm_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    sm_ce0 : OUT STD_LOGIC;
    sm_we0 : OUT STD_LOGIC;
    sm_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    sm_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    sm_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    sm_ce1 : OUT STD_LOGIC;
    sm_we1 : OUT STD_LOGIC;
    sm_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    smlen : OUT STD_LOGIC_VECTOR (63 downto 0);
    smlen_ap_vld : OUT STD_LOGIC;
    m_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    m_ce0 : OUT STD_LOGIC;
    m_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    mlen : IN STD_LOGIC_VECTOR (63 downto 0);
    sk_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sk_ce0 : OUT STD_LOGIC;
    sk_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    sk_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sk_ce1 : OUT STD_LOGIC;
    sk_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of crypto_sign is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "crypto_sign,hls_ip_2019_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200t-fbg676-2,HLS_INPUT_CLOCK=10000.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=31.143429,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=61,HLS_SYN_DSP=88,HLS_SYN_FF=18684,HLS_SYN_LUT=90401,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state101 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state104 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state105 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state106 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state107 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state108 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state109 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state110 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state111 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state112 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state113 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state114 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state115 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state116 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state117 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state118 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state119 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state120 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state121 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state122 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state123 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state124 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state125 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state126 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state127 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state128 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state129 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state130 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state131 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state132 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state133 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state134 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state135 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state136 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state137 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state138 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state139 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state140 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state141 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state142 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state143 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state144 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state145 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state146 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state147 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state148 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state149 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state150 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state151 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state152 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state153 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state154 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state155 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state156 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state157 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state158 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state159 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state160 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state161 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state162 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state163 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state164 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state165 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state166 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state167 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state168 : STD_LOGIC_VECTOR (178 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state169 : STD_LOGIC_VECTOR (178 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state170 : STD_LOGIC_VECTOR (178 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state171 : STD_LOGIC_VECTOR (178 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state172 : STD_LOGIC_VECTOR (178 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state173 : STD_LOGIC_VECTOR (178 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state174 : STD_LOGIC_VECTOR (178 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state175 : STD_LOGIC_VECTOR (178 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state176 : STD_LOGIC_VECTOR (178 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state177 : STD_LOGIC_VECTOR (178 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state178 : STD_LOGIC_VECTOR (178 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state179 : STD_LOGIC_VECTOR (178 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_7D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111101";
    constant ap_const_lv32_86 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100001";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv32_65 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100101";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_6B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101011";
    constant ap_const_lv32_71 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110001";
    constant ap_const_lv32_72 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110010";
    constant ap_const_lv32_76 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110110";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_7C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111100";
    constant ap_const_lv32_7E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111110";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_81 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000001";
    constant ap_const_lv32_85 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000101";
    constant ap_const_lv32_87 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000111";
    constant ap_const_lv32_88 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001000";
    constant ap_const_lv32_89 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001001";
    constant ap_const_lv32_8A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001010";
    constant ap_const_lv32_8D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001101";
    constant ap_const_lv32_8E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001110";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_92 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010010";
    constant ap_const_lv32_93 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010011";
    constant ap_const_lv32_95 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010101";
    constant ap_const_lv32_96 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010110";
    constant ap_const_lv32_98 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011000";
    constant ap_const_lv32_99 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011001";
    constant ap_const_lv32_9E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011110";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100011";
    constant ap_const_lv32_AA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101010";
    constant ap_const_lv32_AB : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101011";
    constant ap_const_lv32_AC : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101100";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_B1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv12_9CC : STD_LOGIC_VECTOR (11 downto 0) := "100111001100";
    constant ap_const_lv12_974 : STD_LOGIC_VECTOR (11 downto 0) := "100101110100";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv9_148 : STD_LOGIC_VECTOR (8 downto 0) := "101001000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100010";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv32_66 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100110";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_6D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101101";
    constant ap_const_lv10_2A8 : STD_LOGIC_VECTOR (9 downto 0) := "1010101000";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_6C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101100";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_75 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110101";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_7B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111011";
    constant ap_const_lv32_8B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001011";
    constant ap_const_lv9_D9 : STD_LOGIC_VECTOR (8 downto 0) := "011011001";
    constant ap_const_lv32_82 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000010";
    constant ap_const_lv32_84 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000100";
    constant ap_const_lv32_83 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000011";
    constant ap_const_lv32_8C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001100";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_91 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010001";
    constant ap_const_lv32_94 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010100";
    constant ap_const_lv32_97 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010111";
    constant ap_const_lv32_9A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011010";
    constant ap_const_lv32_9D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011101";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_AD : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101101";
    constant ap_const_lv32_AE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101110";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_7A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111010";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv32_9C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011100";
    constant ap_const_lv32_A5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100101";
    constant ap_const_lv32_5D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011101";
    constant ap_const_lv32_A6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100110";
    constant ap_const_lv32_B2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110010";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv10_100 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_const_lv11_348 : STD_LOGIC_VECTOR (10 downto 0) := "01101001000";
    constant ap_const_lv32_9B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011011";
    constant ap_const_lv32_A4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100100";
    constant ap_const_lv32_A2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100010";
    constant ap_const_lv32_A9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101001";
    constant ap_const_lv18_173B2 : STD_LOGIC_VECTOR (17 downto 0) := "010111001110110010";
    constant ap_const_lv18_17400 : STD_LOGIC_VECTOR (17 downto 0) := "010111010000000000";
    constant ap_const_lv32_5E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011110";
    constant ap_const_lv32_A7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100111";
    constant ap_const_lv32_5B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011011";
    constant ap_const_lv32_A1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100001";
    constant ap_const_lv32_A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101000";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv32_73 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110011";
    constant ap_const_lv32_74 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_6E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101110";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_79 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111001";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv14_973 : STD_LOGIC_VECTOR (13 downto 0) := "00100101110011";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv64_58 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001011000";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv64_FFFFFFFFFFFFFFA8 : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111110101000";
    constant ap_const_lv64_88 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010001000";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv64_FFFFFFFFFFFFFF78 : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111101111000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv64_1F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011111";
    constant ap_const_lv64_8000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_70 : STD_LOGIC_VECTOR (7 downto 0) := "01110000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv8_50 : STD_LOGIC_VECTOR (7 downto 0) := "01010000";
    constant ap_const_lv8_A0 : STD_LOGIC_VECTOR (7 downto 0) := "10100000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv9_3 : STD_LOGIC_VECTOR (8 downto 0) := "000000011";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv8_A8 : STD_LOGIC_VECTOR (7 downto 0) := "10101000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv16_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv56_1 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv56_2 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv56_3 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_2B : STD_LOGIC_VECTOR (8 downto 0) := "000101011";
    constant ap_const_lv32_3FF000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000001111111111000000000000";
    constant ap_const_lv32_7FE001 : STD_LOGIC_VECTOR (31 downto 0) := "00000000011111111110000000000001";
    constant ap_const_lv10_88 : STD_LOGIC_VECTOR (9 downto 0) := "0010001000";
    constant ap_const_lv8_58 : STD_LOGIC_VECTOR (7 downto 0) := "01011000";
    constant ap_const_lv10_378 : STD_LOGIC_VECTOR (9 downto 0) := "1101111000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv32_3802001 : STD_LOGIC_VECTOR (31 downto 0) := "00000011100000000010000000000001";
    constant ap_const_lv55_7FFFFFFF801FFF : STD_LOGIC_VECTOR (54 downto 0) := "1111111111111111111111111111111100000000001111111111111";
    constant ap_const_lv32_400000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000010000000000000000000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_1FFB2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000011111111110110010";
    constant ap_const_lv11_50 : STD_LOGIC_VECTOR (10 downto 0) := "00001010000";
    constant ap_const_lv64_974 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000100101110100";
    constant ap_const_lv32_17401 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010111010000000001";
    constant ap_const_lv32_7E6C01 : STD_LOGIC_VECTOR (31 downto 0) := "00000000011111100110110000000001";
    constant ap_const_lv32_2C0B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000010110000001011";
    constant ap_const_lv32_800000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000100000000000000000000000";
    constant ap_const_lv27_7FD1800 : STD_LOGIC_VECTOR (26 downto 0) := "111111111010001100000000000";
    constant ap_const_lv32_FF801FFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111100000000001111111111111";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (178 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal state_s_1_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_2261 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state126 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state126 : signal is "none";
    signal state_s_1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state135 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state135 : signal is "none";
    signal add_ln208_fu_2270_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln208_reg_5306 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln208_1_fu_2280_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln208_1_reg_5311 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_fu_2299_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_reg_5319 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln207_fu_2294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln208_1_fu_2315_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln208_1_reg_5329 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_33_fu_2330_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal add_ln417_fu_2352_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln417_reg_5345 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal zext_ln418_1_fu_2376_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln418_1_reg_5350 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln417_fu_2346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal state_s_2_addr_1_reg_5355 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln388_fu_2381_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal icmp_ln400_fu_2398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln400_reg_5368 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln388_fu_2392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_34_fu_2413_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_34_reg_5375 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal zext_ln402_1_fu_2437_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln402_1_reg_5380 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln401_fu_2407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal state_s_2_addr_2_reg_5385 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln409_fu_2463_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln409_reg_5390 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_KeccakF1600_StatePer_1_fu_2102_ap_ready : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_1_fu_2102_ap_done : STD_LOGIC;
    signal ap_block_state11_on_subcall_done : BOOLEAN;
    signal zext_ln409_1_fu_2467_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln409_1_reg_5395 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln409_2_fu_2471_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln409_2_reg_5401 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln409_fu_2481_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln409_reg_5409 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal icmp_ln409_fu_2475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln418_2_fu_2499_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln418_2_reg_5414 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_30_reg_5419 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_35_fu_2519_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_35_reg_5428 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal add_ln411_fu_2543_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln411_reg_5433 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln410_fu_2513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal state_s_2_addr_4_reg_5438 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln412_fu_2554_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln412_reg_5443 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln415_1_fu_2560_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln415_1_reg_5448 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln417_1_fu_2571_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln417_1_reg_5456 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal add_ln418_2_fu_2599_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln418_2_reg_5461 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln417_1_fu_2566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal state_s_2_addr_3_reg_5466 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln420_fu_2630_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln420_reg_5471 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln420_fu_2634_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln420_reg_5476 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln420_fu_2640_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln420_reg_5481 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln421_fu_2644_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln421_reg_5486 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln421_fu_2649_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln421_reg_5491 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln423_fu_2653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln423_reg_5497 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_36_fu_2665_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal add_ln427_fu_2676_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln427_reg_5509 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln424_fu_2659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln426_fu_2680_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln426_reg_5514 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal i_37_fu_2697_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_37_reg_5522 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln426_fu_2692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_38_fu_2724_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_38_reg_5535 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal icmp_ln30_fu_2718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal state_s_2_addr_5_reg_5545 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln429_fu_2749_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln429_reg_5550 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_fu_2778_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal add_ln429_fu_2791_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal state_s_2_addr_6_reg_5565 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal state_s_2_addr_7_reg_5570 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal add_ln542_fu_2861_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln542_reg_5579 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal icmp_ln542_fu_2855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln18_fu_2872_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln18_reg_5589 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal trunc_ln5_reg_5599 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln6_reg_5604 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln7_reg_5609 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln8_reg_5614 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln9_reg_5619 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln10_reg_5624 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_39_fu_3113_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal add_ln417_2_fu_3135_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln417_2_reg_5640 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal add_ln418_4_fu_3153_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln418_4_reg_5645 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln417_2_fu_3129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal state_0_s_addr_3_reg_5650 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln542_1_fu_3192_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln542_1_reg_5671 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal icmp_ln542_1_fu_3186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln543_1_fu_3203_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln543_1_reg_5681 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal trunc_ln545_1_reg_5691 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln546_1_reg_5696 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln547_1_reg_5701 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln548_1_reg_5706 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln549_1_reg_5711 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln550_1_reg_5716 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_41_fu_3444_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_41_reg_5724 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal j_fu_3456_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_reg_5732 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal nonce_assign_fu_3466_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal nonce_assign_reg_5737 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln21_fu_3450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rej_uniform_fu_2185_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal grp_rej_uniform_fu_2185_ap_ready : STD_LOGIC;
    signal grp_rej_uniform_fu_2185_ap_done : STD_LOGIC;
    signal zext_ln378_fu_3481_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln378_reg_5747 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal trunc_ln379_fu_3507_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln379_reg_5755 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal trunc_ln379_1_fu_3511_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln379_1_reg_5760 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln381_fu_3519_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln381_reg_5766 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_77_fu_3533_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_77_reg_5774 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal icmp_ln380_fu_3528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln384_fu_3563_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln384_reg_5784 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal sub_ln385_fu_3571_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln385_reg_5789 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln385_fu_3578_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln385_reg_5794 : STD_LOGIC_VECTOR (10 downto 0);
    signal ctr_2_fu_3583_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal i_74_fu_3595_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_74_reg_5807 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal i_75_fu_3607_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_75_reg_5815 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal i_76_fu_3619_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_76_reg_5823 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal icmp_ln282_1_fu_3613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nonce_fu_3625_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal nonce_reg_5846 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal shl_ln47_fu_3631_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln47_reg_5851 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_78_fu_3643_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_78_reg_5859 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal add_ln47_fu_3653_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln47_reg_5864 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln46_fu_3637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln125_fu_3659_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln125_reg_5869 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal zext_ln125_fu_3665_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln125_reg_5874 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln125_fu_3670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln125_reg_5884 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln125_1_fu_3681_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln125_1_reg_5888 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal tmp_31_fu_3687_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_reg_5893 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln125_1_fu_3696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln125_1_reg_5903 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln125_2_fu_3707_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln125_2_reg_5907 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal tmp_32_fu_3713_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_reg_5912 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln125_2_fu_3722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln125_2_reg_5922 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln125_3_fu_3733_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln125_3_reg_5926 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state86 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state86 : signal is "none";
    signal tmp_33_fu_3739_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_33_reg_5931 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln125_3_fu_3748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln125_3_reg_5941 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_79_fu_3765_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_79_reg_5948 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state88 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state88 : signal is "none";
    signal i_80_fu_3777_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_80_reg_5956 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state90 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal i_81_fu_3789_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_81_reg_5964 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state97 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state97 : signal is "none";
    signal zext_ln222_fu_3803_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln222_reg_5969 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln371_fu_3783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_83_fu_3813_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_83_reg_5977 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state98 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state98 : signal is "none";
    signal zext_ln227_1_fu_3828_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln227_1_reg_5982 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln226_fu_3807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w1_vec_coeffs_addr_reg_5987 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_82_fu_3942_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state101 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state101 : signal is "none";
    signal add_ln417_3_fu_3964_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln417_3_reg_6003 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state102 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state102 : signal is "none";
    signal add_ln418_5_fu_3982_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln418_5_reg_6008 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln417_3_fu_3958_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal state_s_2_addr_11_reg_6013 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_84_fu_3999_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_84_reg_6021 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state104 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state104 : signal is "none";
    signal zext_ln402_3_fu_4013_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln402_3_reg_6026 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln401_1_fu_3993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal state_s_2_addr_12_reg_6031 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_85_fu_4041_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_85_reg_6042 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state108 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state108 : signal is "none";
    signal zext_ln411_3_fu_4071_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln411_3_reg_6047 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln410_1_fu_4035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal state_s_2_addr_14_reg_6052 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln412_1_fu_4081_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln412_1_reg_6057 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln415_fu_4087_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln415_reg_6062 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln542_2_fu_4125_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln542_2_reg_6070 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state114 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state114 : signal is "none";
    signal icmp_ln542_2_fu_4119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln543_3_fu_4131_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln543_3_reg_6080 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln543_2_fu_4140_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln543_2_reg_6085 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state115 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state115 : signal is "none";
    signal trunc_ln545_2_reg_6095 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln546_2_reg_6100 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln547_2_reg_6105 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln548_2_reg_6110 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln549_2_reg_6115 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln550_2_reg_6120 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_86_fu_4300_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state119 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state119 : signal is "none";
    signal add_ln417_4_fu_4322_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln417_4_reg_6136 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state120 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state120 : signal is "none";
    signal zext_ln418_7_fu_4340_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln418_7_reg_6141 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln417_4_fu_4316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal state_s_1_addr_3_reg_6146 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln477_fu_4372_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln477_reg_6155 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state125 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state125 : signal is "none";
    signal icmp_ln477_fu_4366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln19_fu_4383_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln19_reg_6165 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_88_fu_4397_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state127 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state127 : signal is "none";
    signal i_87_fu_4450_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_87_reg_6181 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state128 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state128 : signal is "none";
    signal icmp_ln525_fu_4444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signs_fu_4487_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state129 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state129 : signal is "none";
    signal i_89_fu_4499_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state130 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state130 : signal is "none";
    signal add_ln477_1_fu_4528_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln477_1_reg_6213 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state134 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state134 : signal is "none";
    signal icmp_ln477_1_fu_4522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln478_1_fu_4539_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln478_1_reg_6223 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_95_fu_4553_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state136 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state136 : signal is "none";
    signal pos_fu_4600_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal pos_reg_6236 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state137 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state137 : signal is "none";
    signal cp_coeffs_addr_2_reg_6250 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state138 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state138 : signal is "none";
    signal icmp_ln539_fu_4615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln542_fu_4626_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln542_reg_6255 : STD_LOGIC_VECTOR (0 downto 0);
    signal signs_2_fu_4640_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal signs_2_reg_6260 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_94_fu_4649_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_94_reg_6265 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state139 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state139 : signal is "none";
    signal i_90_fu_4679_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_90_reg_6273 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state142 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state142 : signal is "none";
    signal zext_ln177_fu_4693_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln177_reg_6278 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln114_fu_4673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_92_fu_4703_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_92_reg_6286 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state143 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state143 : signal is "none";
    signal zext_ln182_17_fu_4723_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln182_17_reg_6291 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln181_fu_4697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_91_fu_4789_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_91_reg_6309 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state145 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state145 : signal is "none";
    signal i_93_fu_4801_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_93_reg_6317 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state147 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state147 : signal is "none";
    signal zext_ln83_fu_4815_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln83_reg_6322 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln85_fu_4795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_97_fu_4825_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_97_reg_6330 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state148 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state148 : signal is "none";
    signal icmp_ln87_fu_4819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal z_vec_coeffs_addr_5_reg_6340 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_96_fu_4863_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_96_reg_6348 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state150 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state150 : signal is "none";
    signal zext_ln28_fu_4877_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln28_reg_6353 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln53_fu_4857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_99_fu_4887_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_99_reg_6361 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state151 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state151 : signal is "none";
    signal z_vec_coeffs_addr_6_reg_6366 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln32_fu_4881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln158_fu_4927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln158_reg_6371 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state153 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state153 : signal is "none";
    signal i_98_fu_4933_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_98_reg_6375 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln288_fu_4947_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln288_reg_6380 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_101_fu_4957_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_101_reg_6388 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state154 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state154 : signal is "none";
    signal icmp_ln299_fu_4951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_100_fu_5023_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_100_reg_6404 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state159 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state159 : signal is "none";
    signal zext_ln104_fu_5037_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln104_reg_6409 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln252_fu_5017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_102_fu_5047_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_102_reg_6417 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state160 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state160 : signal is "none";
    signal w0_vec_coeffs_addr_1_reg_6422 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln108_fu_5041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_polyveck_chknorm_fu_2229_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_6432 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state164 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state164 : signal is "none";
    signal grp_polyveck_chknorm_fu_2229_ap_ready : STD_LOGIC;
    signal grp_polyveck_chknorm_fu_2229_ap_done : STD_LOGIC;
    signal tmp_12_reg_6436 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state171 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state171 : signal is "none";
    signal i_103_fu_5081_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_103_reg_6443 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state172 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state172 : signal is "none";
    signal zext_ln83_1_fu_5095_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln83_1_reg_6448 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln234_fu_5075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_104_fu_5105_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_104_reg_6456 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state173 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state173 : signal is "none";
    signal w0_vec_coeffs_addr_2_reg_6461 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln87_1_fu_5099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_105_fu_5139_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_105_reg_6474 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state176 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state176 : signal is "none";
    signal zext_ln245_fu_5153_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln245_reg_6479 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln392_fu_5133_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_106_fu_5175_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_106_reg_6490 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state177 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state177 : signal is "none";
    signal zext_ln250_1_fu_5190_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln250_1_reg_6495 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln249_fu_5169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal s_fu_5200_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal s_1_fu_5263_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state178 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state178 : signal is "none";
    signal buf_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_1_ce0 : STD_LOGIC;
    signal buf_1_we0 : STD_LOGIC;
    signal buf_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_ce1 : STD_LOGIC;
    signal buf_1_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal state_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal state_s_ce0 : STD_LOGIC;
    signal state_s_we0 : STD_LOGIC;
    signal state_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal state_s_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal state_s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal state_s_ce1 : STD_LOGIC;
    signal state_s_we1 : STD_LOGIC;
    signal state_s_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal state_s_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal buf_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_ce0 : STD_LOGIC;
    signal buf_we0 : STD_LOGIC;
    signal buf_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal state_s_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal state_s_1_ce0 : STD_LOGIC;
    signal state_s_1_we0 : STD_LOGIC;
    signal state_s_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal state_s_1_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal state_s_1_ce1 : STD_LOGIC;
    signal state_s_1_we1 : STD_LOGIC;
    signal state_s_1_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal state_0_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal state_0_s_ce0 : STD_LOGIC;
    signal state_0_s_we0 : STD_LOGIC;
    signal state_0_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal state_0_s_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal state_0_s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal state_0_s_ce1 : STD_LOGIC;
    signal state_0_s_we1 : STD_LOGIC;
    signal state_0_s_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal state_0_s_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal t_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal t_ce0 : STD_LOGIC;
    signal t_we0 : STD_LOGIC;
    signal t_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal seedbuf_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal seedbuf_ce0 : STD_LOGIC;
    signal seedbuf_we0 : STD_LOGIC;
    signal seedbuf_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal seedbuf_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal seedbuf_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal seedbuf_ce1 : STD_LOGIC;
    signal seedbuf_we1 : STD_LOGIC;
    signal seedbuf_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mat_vec_coeffs_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mat_vec_coeffs_ce0 : STD_LOGIC;
    signal mat_vec_coeffs_we0 : STD_LOGIC;
    signal mat_vec_coeffs_q0 : STD_LOGIC_VECTOR (22 downto 0);
    signal s1_vec_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal s1_vec_coeffs_ce0 : STD_LOGIC;
    signal s1_vec_coeffs_we0 : STD_LOGIC;
    signal s1_vec_coeffs_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s1_vec_coeffs_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s1_vec_coeffs_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal s1_vec_coeffs_ce1 : STD_LOGIC;
    signal s1_vec_coeffs_we1 : STD_LOGIC;
    signal s1_vec_coeffs_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_vec_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_vec_coeffs_ce0 : STD_LOGIC;
    signal y_vec_coeffs_we0 : STD_LOGIC;
    signal y_vec_coeffs_q0 : STD_LOGIC_VECTOR (18 downto 0);
    signal z_vec_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal z_vec_coeffs_ce0 : STD_LOGIC;
    signal z_vec_coeffs_we0 : STD_LOGIC;
    signal z_vec_coeffs_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_vec_coeffs_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_vec_coeffs_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal z_vec_coeffs_ce1 : STD_LOGIC;
    signal z_vec_coeffs_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal t0_vec_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal t0_vec_coeffs_ce0 : STD_LOGIC;
    signal t0_vec_coeffs_we0 : STD_LOGIC;
    signal t0_vec_coeffs_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal t0_vec_coeffs_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal t0_vec_coeffs_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal t0_vec_coeffs_ce1 : STD_LOGIC;
    signal t0_vec_coeffs_we1 : STD_LOGIC;
    signal t0_vec_coeffs_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_vec_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal s2_vec_coeffs_ce0 : STD_LOGIC;
    signal s2_vec_coeffs_we0 : STD_LOGIC;
    signal s2_vec_coeffs_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_vec_coeffs_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_vec_coeffs_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal s2_vec_coeffs_ce1 : STD_LOGIC;
    signal s2_vec_coeffs_we1 : STD_LOGIC;
    signal s2_vec_coeffs_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal w1_vec_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal w1_vec_coeffs_ce0 : STD_LOGIC;
    signal w1_vec_coeffs_we0 : STD_LOGIC;
    signal w1_vec_coeffs_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal w1_vec_coeffs_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal w1_vec_coeffs_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal w1_vec_coeffs_ce1 : STD_LOGIC;
    signal w1_vec_coeffs_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal w0_vec_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal w0_vec_coeffs_ce0 : STD_LOGIC;
    signal w0_vec_coeffs_we0 : STD_LOGIC;
    signal w0_vec_coeffs_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal w0_vec_coeffs_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_vec_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal h_vec_coeffs_ce0 : STD_LOGIC;
    signal h_vec_coeffs_we0 : STD_LOGIC;
    signal h_vec_coeffs_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_vec_coeffs_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_vec_coeffs_ce1 : STD_LOGIC;
    signal h_vec_coeffs_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cp_coeffs_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cp_coeffs_ce0 : STD_LOGIC;
    signal cp_coeffs_we0 : STD_LOGIC;
    signal cp_coeffs_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cp_coeffs_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cp_coeffs_ce1 : STD_LOGIC;
    signal cp_coeffs_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal state_s_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal state_s_2_ce0 : STD_LOGIC;
    signal state_s_2_we0 : STD_LOGIC;
    signal state_s_2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal state_s_2_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal state_s_2_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal state_s_2_ce1 : STD_LOGIC;
    signal state_s_2_we1 : STD_LOGIC;
    signal state_s_2_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal state_s_2_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_poly_uniform_gamma1_fu_2078_ap_start : STD_LOGIC;
    signal grp_poly_uniform_gamma1_fu_2078_ap_done : STD_LOGIC;
    signal grp_poly_uniform_gamma1_fu_2078_ap_idle : STD_LOGIC;
    signal grp_poly_uniform_gamma1_fu_2078_ap_ready : STD_LOGIC;
    signal grp_poly_uniform_gamma1_fu_2078_a_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_poly_uniform_gamma1_fu_2078_a_coeffs_ce0 : STD_LOGIC;
    signal grp_poly_uniform_gamma1_fu_2078_a_coeffs_we0 : STD_LOGIC;
    signal grp_poly_uniform_gamma1_fu_2078_a_coeffs_d0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_poly_uniform_gamma1_fu_2078_seed_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_poly_uniform_gamma1_fu_2078_seed_ce0 : STD_LOGIC;
    signal grp_shake128_squeezebloc_fu_2089_ap_start : STD_LOGIC;
    signal grp_shake128_squeezebloc_fu_2089_ap_done : STD_LOGIC;
    signal grp_shake128_squeezebloc_fu_2089_ap_idle : STD_LOGIC;
    signal grp_shake128_squeezebloc_fu_2089_ap_ready : STD_LOGIC;
    signal grp_shake128_squeezebloc_fu_2089_out_r_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_shake128_squeezebloc_fu_2089_out_r_ce0 : STD_LOGIC;
    signal grp_shake128_squeezebloc_fu_2089_out_r_we0 : STD_LOGIC;
    signal grp_shake128_squeezebloc_fu_2089_out_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_shake128_squeezebloc_fu_2089_out_offset : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_shake128_squeezebloc_fu_2089_nblocks : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_shake128_squeezebloc_fu_2089_state_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake128_squeezebloc_fu_2089_state_s_ce0 : STD_LOGIC;
    signal grp_shake128_squeezebloc_fu_2089_state_s_we0 : STD_LOGIC;
    signal grp_shake128_squeezebloc_fu_2089_state_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_shake128_squeezebloc_fu_2089_state_s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake128_squeezebloc_fu_2089_state_s_ce1 : STD_LOGIC;
    signal grp_shake128_squeezebloc_fu_2089_state_s_we1 : STD_LOGIC;
    signal grp_shake128_squeezebloc_fu_2089_state_s_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_1_fu_2102_ap_start : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_1_fu_2102_ap_idle : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_1_fu_2102_state_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakF1600_StatePer_1_fu_2102_state_ce0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_1_fu_2102_state_we0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_1_fu_2102_state_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_1_fu_2102_state_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_1_fu_2102_state_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakF1600_StatePer_1_fu_2102_state_ce1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_1_fu_2102_state_we1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_1_fu_2102_state_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_1_fu_2102_state_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_2109_ap_start : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_2109_ap_done : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_2109_ap_idle : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_2109_ap_ready : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_2109_state_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakF1600_StatePer_fu_2109_state_0_ce0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_2109_state_0_we0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_2109_state_0_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_2109_state_0_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakF1600_StatePer_fu_2109_state_0_ce1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_2109_state_0_we1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_2109_state_0_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_unpack_sk_fu_2116_ap_start : STD_LOGIC;
    signal grp_unpack_sk_fu_2116_ap_done : STD_LOGIC;
    signal grp_unpack_sk_fu_2116_ap_idle : STD_LOGIC;
    signal grp_unpack_sk_fu_2116_ap_ready : STD_LOGIC;
    signal grp_unpack_sk_fu_2116_rho_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_unpack_sk_fu_2116_rho_ce0 : STD_LOGIC;
    signal grp_unpack_sk_fu_2116_rho_we0 : STD_LOGIC;
    signal grp_unpack_sk_fu_2116_rho_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_unpack_sk_fu_2116_t0_vec_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_unpack_sk_fu_2116_t0_vec_coeffs_ce0 : STD_LOGIC;
    signal grp_unpack_sk_fu_2116_t0_vec_coeffs_we0 : STD_LOGIC;
    signal grp_unpack_sk_fu_2116_t0_vec_coeffs_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_unpack_sk_fu_2116_t0_vec_coeffs_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_unpack_sk_fu_2116_t0_vec_coeffs_ce1 : STD_LOGIC;
    signal grp_unpack_sk_fu_2116_t0_vec_coeffs_we1 : STD_LOGIC;
    signal grp_unpack_sk_fu_2116_t0_vec_coeffs_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_unpack_sk_fu_2116_s1_vec_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_unpack_sk_fu_2116_s1_vec_coeffs_ce0 : STD_LOGIC;
    signal grp_unpack_sk_fu_2116_s1_vec_coeffs_we0 : STD_LOGIC;
    signal grp_unpack_sk_fu_2116_s1_vec_coeffs_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_unpack_sk_fu_2116_s1_vec_coeffs_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_unpack_sk_fu_2116_s1_vec_coeffs_ce1 : STD_LOGIC;
    signal grp_unpack_sk_fu_2116_s1_vec_coeffs_we1 : STD_LOGIC;
    signal grp_unpack_sk_fu_2116_s1_vec_coeffs_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_unpack_sk_fu_2116_s2_vec_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_unpack_sk_fu_2116_s2_vec_coeffs_ce0 : STD_LOGIC;
    signal grp_unpack_sk_fu_2116_s2_vec_coeffs_we0 : STD_LOGIC;
    signal grp_unpack_sk_fu_2116_s2_vec_coeffs_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_unpack_sk_fu_2116_s2_vec_coeffs_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_unpack_sk_fu_2116_s2_vec_coeffs_ce1 : STD_LOGIC;
    signal grp_unpack_sk_fu_2116_s2_vec_coeffs_we1 : STD_LOGIC;
    signal grp_unpack_sk_fu_2116_s2_vec_coeffs_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_unpack_sk_fu_2116_sk_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_unpack_sk_fu_2116_sk_ce0 : STD_LOGIC;
    signal grp_unpack_sk_fu_2116_sk_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_unpack_sk_fu_2116_sk_ce1 : STD_LOGIC;
    signal grp_dilithium_shake128_s_fu_2126_ap_start : STD_LOGIC;
    signal grp_dilithium_shake128_s_fu_2126_ap_done : STD_LOGIC;
    signal grp_dilithium_shake128_s_fu_2126_ap_idle : STD_LOGIC;
    signal grp_dilithium_shake128_s_fu_2126_ap_ready : STD_LOGIC;
    signal grp_dilithium_shake128_s_fu_2126_state_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dilithium_shake128_s_fu_2126_state_s_ce0 : STD_LOGIC;
    signal grp_dilithium_shake128_s_fu_2126_state_s_we0 : STD_LOGIC;
    signal grp_dilithium_shake128_s_fu_2126_state_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dilithium_shake128_s_fu_2126_state_s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dilithium_shake128_s_fu_2126_state_s_ce1 : STD_LOGIC;
    signal grp_dilithium_shake128_s_fu_2126_state_s_we1 : STD_LOGIC;
    signal grp_dilithium_shake128_s_fu_2126_state_s_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dilithium_shake128_s_fu_2126_seed_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dilithium_shake128_s_fu_2126_seed_ce0 : STD_LOGIC;
    signal grp_polyveck_invntt_tomo_fu_2133_ap_start : STD_LOGIC;
    signal grp_polyveck_invntt_tomo_fu_2133_ap_done : STD_LOGIC;
    signal grp_polyveck_invntt_tomo_fu_2133_ap_idle : STD_LOGIC;
    signal grp_polyveck_invntt_tomo_fu_2133_ap_ready : STD_LOGIC;
    signal grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_ce0 : STD_LOGIC;
    signal grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_we0 : STD_LOGIC;
    signal grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_ce1 : STD_LOGIC;
    signal grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_invntt_tomont_fu_2140_ap_start : STD_LOGIC;
    signal grp_invntt_tomont_fu_2140_ap_done : STD_LOGIC;
    signal grp_invntt_tomont_fu_2140_ap_idle : STD_LOGIC;
    signal grp_invntt_tomont_fu_2140_ap_ready : STD_LOGIC;
    signal grp_invntt_tomont_fu_2140_a_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_invntt_tomont_fu_2140_a_ce0 : STD_LOGIC;
    signal grp_invntt_tomont_fu_2140_a_we0 : STD_LOGIC;
    signal grp_invntt_tomont_fu_2140_a_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_invntt_tomont_fu_2140_a_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_invntt_tomont_fu_2140_a_ce1 : STD_LOGIC;
    signal grp_pack_sig_fu_2149_ap_start : STD_LOGIC;
    signal grp_pack_sig_fu_2149_ap_done : STD_LOGIC;
    signal grp_pack_sig_fu_2149_ap_idle : STD_LOGIC;
    signal grp_pack_sig_fu_2149_ap_ready : STD_LOGIC;
    signal grp_pack_sig_fu_2149_sig_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_pack_sig_fu_2149_sig_ce0 : STD_LOGIC;
    signal grp_pack_sig_fu_2149_sig_we0 : STD_LOGIC;
    signal grp_pack_sig_fu_2149_sig_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_pack_sig_fu_2149_z_vec_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_pack_sig_fu_2149_z_vec_coeffs_ce0 : STD_LOGIC;
    signal grp_pack_sig_fu_2149_h_vec_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_pack_sig_fu_2149_h_vec_coeffs_ce0 : STD_LOGIC;
    signal grp_ntt_fu_2157_ap_start : STD_LOGIC;
    signal grp_ntt_fu_2157_ap_done : STD_LOGIC;
    signal grp_ntt_fu_2157_ap_idle : STD_LOGIC;
    signal grp_ntt_fu_2157_ap_ready : STD_LOGIC;
    signal grp_ntt_fu_2157_a_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ntt_fu_2157_a_ce0 : STD_LOGIC;
    signal grp_ntt_fu_2157_a_we0 : STD_LOGIC;
    signal grp_ntt_fu_2157_a_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ntt_fu_2157_a_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ntt_fu_2157_a_ce1 : STD_LOGIC;
    signal grp_ntt_1_fu_2164_ap_start : STD_LOGIC;
    signal grp_ntt_1_fu_2164_ap_done : STD_LOGIC;
    signal grp_ntt_1_fu_2164_ap_idle : STD_LOGIC;
    signal grp_ntt_1_fu_2164_ap_ready : STD_LOGIC;
    signal grp_ntt_1_fu_2164_a_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_ntt_1_fu_2164_a_ce0 : STD_LOGIC;
    signal grp_ntt_1_fu_2164_a_we0 : STD_LOGIC;
    signal grp_ntt_1_fu_2164_a_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ntt_1_fu_2164_a_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ntt_1_fu_2164_a_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_ntt_1_fu_2164_a_ce1 : STD_LOGIC;
    signal grp_ntt_1_fu_2164_a_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ntt_1_fu_2164_a_offset : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_polyvecl_pointwise_a_fu_2176_ap_start : STD_LOGIC;
    signal grp_polyvecl_pointwise_a_fu_2176_ap_done : STD_LOGIC;
    signal grp_polyvecl_pointwise_a_fu_2176_ap_idle : STD_LOGIC;
    signal grp_polyvecl_pointwise_a_fu_2176_ap_ready : STD_LOGIC;
    signal grp_polyvecl_pointwise_a_fu_2176_w_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_polyvecl_pointwise_a_fu_2176_w_coeffs_ce0 : STD_LOGIC;
    signal grp_polyvecl_pointwise_a_fu_2176_w_coeffs_we0 : STD_LOGIC;
    signal grp_polyvecl_pointwise_a_fu_2176_w_coeffs_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_polyvecl_pointwise_a_fu_2176_u_vec_coeffs_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_polyvecl_pointwise_a_fu_2176_u_vec_coeffs_ce0 : STD_LOGIC;
    signal grp_polyvecl_pointwise_a_fu_2176_v_vec_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_polyvecl_pointwise_a_fu_2176_v_vec_coeffs_ce0 : STD_LOGIC;
    signal grp_rej_uniform_fu_2185_ap_start : STD_LOGIC;
    signal grp_rej_uniform_fu_2185_ap_idle : STD_LOGIC;
    signal grp_rej_uniform_fu_2185_a_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_rej_uniform_fu_2185_a_ce0 : STD_LOGIC;
    signal grp_rej_uniform_fu_2185_a_we0 : STD_LOGIC;
    signal grp_rej_uniform_fu_2185_a_d0 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_rej_uniform_fu_2185_a_offset2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rej_uniform_fu_2185_len : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_rej_uniform_fu_2185_buf_r_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_rej_uniform_fu_2185_buf_r_ce0 : STD_LOGIC;
    signal grp_rej_uniform_fu_2185_buf_r_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_rej_uniform_fu_2185_buf_r_ce1 : STD_LOGIC;
    signal grp_rej_uniform_fu_2185_buflen : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_polyveck_pack_w1_fu_2202_ap_start : STD_LOGIC;
    signal grp_polyveck_pack_w1_fu_2202_ap_done : STD_LOGIC;
    signal grp_polyveck_pack_w1_fu_2202_ap_idle : STD_LOGIC;
    signal grp_polyveck_pack_w1_fu_2202_ap_ready : STD_LOGIC;
    signal grp_polyveck_pack_w1_fu_2202_r_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_polyveck_pack_w1_fu_2202_r_ce0 : STD_LOGIC;
    signal grp_polyveck_pack_w1_fu_2202_r_we0 : STD_LOGIC;
    signal grp_polyveck_pack_w1_fu_2202_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_polyveck_pack_w1_fu_2202_r_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_polyveck_pack_w1_fu_2202_r_ce1 : STD_LOGIC;
    signal grp_polyveck_pack_w1_fu_2202_r_we1 : STD_LOGIC;
    signal grp_polyveck_pack_w1_fu_2202_r_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_polyveck_pack_w1_fu_2202_w1_vec_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_polyveck_pack_w1_fu_2202_w1_vec_coeffs_ce0 : STD_LOGIC;
    signal grp_polyveck_pack_w1_fu_2202_w1_vec_coeffs_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_polyveck_pack_w1_fu_2202_w1_vec_coeffs_ce1 : STD_LOGIC;
    signal grp_polyveck_pointwise_p_fu_2209_ap_start : STD_LOGIC;
    signal grp_polyveck_pointwise_p_fu_2209_ap_done : STD_LOGIC;
    signal grp_polyveck_pointwise_p_fu_2209_ap_idle : STD_LOGIC;
    signal grp_polyveck_pointwise_p_fu_2209_ap_ready : STD_LOGIC;
    signal grp_polyveck_pointwise_p_fu_2209_r_vec_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_polyveck_pointwise_p_fu_2209_r_vec_coeffs_ce0 : STD_LOGIC;
    signal grp_polyveck_pointwise_p_fu_2209_r_vec_coeffs_we0 : STD_LOGIC;
    signal grp_polyveck_pointwise_p_fu_2209_r_vec_coeffs_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_polyveck_pointwise_p_fu_2209_a_coeffs_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_polyveck_pointwise_p_fu_2209_a_coeffs_ce0 : STD_LOGIC;
    signal grp_polyveck_pointwise_p_fu_2209_v_vec_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_polyveck_pointwise_p_fu_2209_v_vec_coeffs_ce0 : STD_LOGIC;
    signal grp_polyveck_pointwise_p_fu_2209_v_vec_coeffs_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load64_3_fu_2216_ap_start : STD_LOGIC;
    signal grp_load64_3_fu_2216_ap_done : STD_LOGIC;
    signal grp_load64_3_fu_2216_ap_idle : STD_LOGIC;
    signal grp_load64_3_fu_2216_ap_ready : STD_LOGIC;
    signal grp_load64_3_fu_2216_x_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_load64_3_fu_2216_x_ce0 : STD_LOGIC;
    signal grp_load64_3_fu_2216_x_offset : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load64_3_fu_2216_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load64_2_fu_2223_ap_start : STD_LOGIC;
    signal grp_load64_2_fu_2223_ap_done : STD_LOGIC;
    signal grp_load64_2_fu_2223_ap_idle : STD_LOGIC;
    signal grp_load64_2_fu_2223_ap_ready : STD_LOGIC;
    signal grp_load64_2_fu_2223_x_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_load64_2_fu_2223_x_ce0 : STD_LOGIC;
    signal grp_load64_2_fu_2223_x_offset : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_load64_2_fu_2223_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_polyveck_chknorm_fu_2229_ap_start : STD_LOGIC;
    signal grp_polyveck_chknorm_fu_2229_ap_idle : STD_LOGIC;
    signal grp_polyveck_chknorm_fu_2229_v_vec_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_polyveck_chknorm_fu_2229_v_vec_coeffs_ce0 : STD_LOGIC;
    signal grp_polyveck_chknorm_fu_2229_v_vec_coeffs_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_polyveck_chknorm_fu_2229_bound : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_polyveck_caddq_fu_2237_ap_start : STD_LOGIC;
    signal grp_polyveck_caddq_fu_2237_ap_done : STD_LOGIC;
    signal grp_polyveck_caddq_fu_2237_ap_idle : STD_LOGIC;
    signal grp_polyveck_caddq_fu_2237_ap_ready : STD_LOGIC;
    signal grp_polyveck_caddq_fu_2237_v_vec_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_polyveck_caddq_fu_2237_v_vec_coeffs_ce0 : STD_LOGIC;
    signal grp_polyveck_caddq_fu_2237_v_vec_coeffs_we0 : STD_LOGIC;
    signal grp_polyveck_caddq_fu_2237_v_vec_coeffs_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_polyveck_caddq_fu_2237_v_vec_coeffs_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_polyveck_reduce_fu_2242_ap_start : STD_LOGIC;
    signal grp_polyveck_reduce_fu_2242_ap_done : STD_LOGIC;
    signal grp_polyveck_reduce_fu_2242_ap_idle : STD_LOGIC;
    signal grp_polyveck_reduce_fu_2242_ap_ready : STD_LOGIC;
    signal grp_polyveck_reduce_fu_2242_v_vec_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_polyveck_reduce_fu_2242_v_vec_coeffs_ce0 : STD_LOGIC;
    signal grp_polyveck_reduce_fu_2242_v_vec_coeffs_we0 : STD_LOGIC;
    signal grp_polyveck_reduce_fu_2242_v_vec_coeffs_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_polyveck_reduce_fu_2242_v_vec_coeffs_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_0_reg_1204 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal i_0_i_i4_i_reg_1215 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln362_fu_2324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_i_i119_i_reg_1226 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal phi_ln388_reg_1237 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_1_i_i65_i_reg_1248 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_phi_mux_phi_ln403_phi_fu_1263_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal phi_ln403_reg_1259 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_mux_p_23_i_i68_i_phi_fu_1275_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_23_i_i68_i_reg_1271 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln404_fu_2453_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_p_2_i_i69_i_phi_fu_1287_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_2_i_i69_i_reg_1284 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvars_iv_i_i71_i_reg_1294 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal p_38_rec_i_i72_i_reg_1305 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_2_i_i73_i_reg_1317 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal i_3_i_i78_i_reg_1328 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal i_4_i_i80_i_reg_1339 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_5_i_i84_i_reg_1350 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal i_0_i_reg_1361 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_0_i_reg_1373 : STD_LOGIC_VECTOR (63 downto 0);
    signal state_pos_reg_1385 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_3_i_i_reg_1395 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal i_0_i_i_i_i_reg_1407 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln362_1_fu_3107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_i_i_i_i_reg_1418 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal i_3_i_i1_reg_1429 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal i_0_i_i_reg_1441 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_0_i_i_reg_1453 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln378_fu_3495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln20_fu_3438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctr_0_i_reg_1465 : STD_LOGIC_VECTOR (31 downto 0);
    signal buflen_0_i_reg_1475 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_0_i63_reg_1487 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal i_0_i65_reg_1499 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal i_0_i67_reg_1511 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal icmp_ln100_fu_3589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i69_reg_1523 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal icmp_ln282_fu_3601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nonce_assign_1_reg_1535 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln173_fu_5157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i74_reg_1546 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal phi_ln125_reg_1558 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal phi_ln125_1_reg_1569 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal phi_ln125_2_reg_1580 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal phi_ln125_3_reg_1591 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state87 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state87 : signal is "none";
    signal i_0_i76_reg_1602 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state89 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state89 : signal is "none";
    signal i_0_i81_reg_1614 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state91 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state91 : signal is "none";
    signal icmp_ln100_1_fu_3759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i83_reg_1626 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state96 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state96 : signal is "none";
    signal i_0_i_i84_reg_1637 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state99 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state99 : signal is "none";
    signal i_0_i_i_i_reg_1648 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state100 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state100 : signal is "none";
    signal icmp_ln362_2_fu_3936_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_i_i37_i_reg_1659 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state103 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state103 : signal is "none";
    signal i_1_i_i_i_reg_1670 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state105 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state105 : signal is "none";
    signal indvars_iv_i_i_i_reg_1681 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state110 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state110 : signal is "none";
    signal ap_CS_fsm_state106 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state106 : signal is "none";
    signal p_38_rec_i_i_i_reg_1693 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_2_i_i_i_reg_1705 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state109 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state109 : signal is "none";
    signal ap_CS_fsm_state107 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state107 : signal is "none";
    signal icmp_ln409_1_fu_4029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_i_i45_reg_1716 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state113 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state113 : signal is "none";
    signal ap_CS_fsm_state118 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state118 : signal is "none";
    signal i_0_i_i_i136_i_reg_1727 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln362_3_fu_4294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_i_i_i166_i_reg_1738 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state121 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state121 : signal is "none";
    signal i_0_i_i14_i_i_0_reg_1749 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state124 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state124 : signal is "none";
    signal icmp_ln47_fu_4391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i86_reg_1761 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_0_i177_i_reg_1772 : STD_LOGIC_VECTOR (3 downto 0);
    signal signs_0_i_i_reg_1784 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_1_i_i_reg_1796 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln529_fu_4493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_i_i_reg_1807 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state140 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state140 : signal is "none";
    signal pos_0_i_i_reg_1819 : STD_LOGIC_VECTOR (31 downto 0);
    signal signs_1_i_i_reg_1831 : STD_LOGIC_VECTOR (63 downto 0);
    signal pos_1_i_i_reg_1842 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state131 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state131 : signal is "none";
    signal icmp_ln531_fu_4510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i10_i_i_0_reg_1853 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state133 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state133 : signal is "none";
    signal icmp_ln47_1_fu_4547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i89_reg_1865 : STD_LOGIC_VECTOR (3 downto 0);
    signal pos_2_i_i_reg_1876 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state132 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state132 : signal is "none";
    signal icmp_ln533_fu_4516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i100_reg_1888 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state141 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state141 : signal is "none";
    signal i_0_i_i101_reg_1899 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state144 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state144 : signal is "none";
    signal i_0_i106_reg_1910 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state146 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state146 : signal is "none";
    signal i_0_i108_reg_1922 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln107_fu_4783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i109_reg_1933 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state149 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state149 : signal is "none";
    signal i_0_i116_reg_1944 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_0_i_i117_reg_1955 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state152 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state152 : signal is "none";
    signal i_0_i84_reg_1966 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_0_i_i85_reg_1977 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state155 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state155 : signal is "none";
    signal icmp_ln304_fu_5011_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i123_reg_1988 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state158 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state158 : signal is "none";
    signal i_0_i_i124_reg_1999 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state161 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state161 : signal is "none";
    signal i_0_i131_reg_2010 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_0_i_i132_reg_2021 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state174 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state174 : signal is "none";
    signal i_0_i87_reg_2032 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state175 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state175 : signal is "none";
    signal n_reg_2043 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_0_i_i88_reg_2055 : STD_LOGIC_VECTOR (8 downto 0);
    signal s_0_i_i_reg_2066 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_poly_uniform_gamma1_fu_2078_ap_start_reg : STD_LOGIC := '0';
    signal grp_shake128_squeezebloc_fu_2089_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal grp_KeccakF1600_StatePer_1_fu_2102_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state112 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state112 : signal is "none";
    signal ap_CS_fsm_state123 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state123 : signal is "none";
    signal grp_KeccakF1600_StatePer_fu_2109_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal grp_unpack_sk_fu_2116_ap_start_reg : STD_LOGIC := '0';
    signal grp_dilithium_shake128_s_fu_2126_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal grp_polyveck_invntt_tomo_fu_2133_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state93 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state93 : signal is "none";
    signal ap_CS_fsm_state157 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state157 : signal is "none";
    signal ap_CS_fsm_state166 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state166 : signal is "none";
    signal ap_CS_fsm_state94 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state94 : signal is "none";
    signal ap_CS_fsm_state167 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state167 : signal is "none";
    signal grp_invntt_tomont_fu_2140_ap_start_reg : STD_LOGIC := '0';
    signal grp_pack_sig_fu_2149_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state179 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state179 : signal is "none";
    signal grp_ntt_fu_2157_ap_start_reg : STD_LOGIC := '0';
    signal grp_ntt_1_fu_2164_ap_start_reg : STD_LOGIC := '0';
    signal grp_polyvecl_pointwise_a_fu_2176_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln28_fu_3771_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rej_uniform_fu_2185_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal grp_polyveck_pack_w1_fu_2202_ap_start_reg : STD_LOGIC := '0';
    signal grp_polyveck_pointwise_p_fu_2209_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state156 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state156 : signal is "none";
    signal ap_CS_fsm_state165 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state165 : signal is "none";
    signal grp_load64_3_fu_2216_ap_start_reg : STD_LOGIC := '0';
    signal grp_load64_2_fu_2223_ap_start_reg : STD_LOGIC := '0';
    signal grp_polyveck_chknorm_fu_2229_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state163 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state163 : signal is "none";
    signal ap_CS_fsm_state170 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state170 : signal is "none";
    signal grp_polyveck_caddq_fu_2237_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state95 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state95 : signal is "none";
    signal grp_polyveck_reduce_fu_2242_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state168 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state168 : signal is "none";
    signal ap_CS_fsm_state92 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state92 : signal is "none";
    signal ap_CS_fsm_state162 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state162 : signal is "none";
    signal ap_CS_fsm_state169 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state169 : signal is "none";
    signal zext_ln208_fu_2310_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln208_1_fu_2320_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln363_fu_2336_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln417_fu_2341_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_fu_2387_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln402_2_fu_2448_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln411_1_fu_2549_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln418_4_fu_2610_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln425_fu_2671_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln427_fu_2713_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln31_fu_2730_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln428_fu_2744_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln451_1_fu_2809_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln542_fu_2850_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln543_1_fu_2890_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_1_fu_2922_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln545_1_fu_3002_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal zext_ln546_1_fu_3022_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln547_1_fu_3042_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal zext_ln548_1_fu_3062_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln549_1_fu_3082_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln550_1_fu_3102_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln363_1_fu_3119_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln417_1_fu_3124_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln542_1_fu_3181_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln543_3_fu_3221_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_3_fu_3253_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln545_3_fu_3333_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal zext_ln546_3_fu_3353_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln547_3_fu_3373_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal zext_ln548_3_fu_3393_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln549_3_fu_3413_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln550_3_fu_3433_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln381_fu_3548_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln381_1_fu_3553_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln363_2_fu_3948_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln417_2_fu_3953_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln402_4_fu_4024_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln411_4_fu_4076_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln542_2_fu_4114_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln543_4_fu_4147_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_4_fu_4169_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln545_4_fu_4239_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state116 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state116 : signal is "none";
    signal zext_ln546_4_fu_4249_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln547_4_fu_4259_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state117 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state117 : signal is "none";
    signal zext_ln548_4_fu_4269_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln549_4_fu_4279_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln550_4_fu_4289_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln363_3_fu_4306_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln417_3_fu_4311_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln478_fu_4378_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln48_8_fu_4439_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln526_fu_4456_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln530_fu_4505_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln478_1_fu_4534_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln48_10_fu_4595_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln538_fu_4606_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln541_fu_4621_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln541_1_fu_4644_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln182_fu_4709_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln88_4_fu_4840_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln33_2_fu_4902_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln301_2_fu_4972_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_1_fu_5062_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln88_6_fu_5120_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln543_2_fu_4135_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2247_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_2254_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln428_fu_2784_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal xor_ln451_fu_2836_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal xor_ln452_fu_2843_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln411_1_fu_4093_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state111 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state111 : signal is "none";
    signal xor_ln451_2_fu_4100_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln452_2_fu_4107_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln543_fu_2867_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln543_1_fu_3198_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln418_2_fu_3160_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal xor_ln451_1_fu_3167_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln452_1_fu_3174_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln125_fu_3676_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln125_1_fu_3702_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln125_2_fu_3728_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln125_3_fu_3754_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln88_fu_4850_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_5288_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln48_1_fu_3904_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln52_1_fu_3930_p2 : STD_LOGIC_VECTOR (31 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of sub_ln52_1_fu_3930_p2 : signal is "no";
    signal sub_ln109_fu_5068_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln88_2_fu_5126_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln418_4_fu_4345_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state122 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state122 : signal is "none";
    signal xor_ln451_3_fu_4352_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln452_3_fu_4359_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln48_3_fu_4425_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln48_5_fu_4581_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln542_fu_4668_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln69_1_fu_5258_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln208_fu_2266_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln208_1_fu_2276_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln207_1_fu_2290_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln208_fu_2305_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln207_fu_2286_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln_fu_2358_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln418_fu_2366_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln418_fu_2370_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln14_fu_2419_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln402_fu_2427_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln402_fu_2431_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln401_fu_2403_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln402_1_fu_2442_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln409_fu_2459_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln418_1_fu_2485_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln418_fu_2495_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln15_fu_2525_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln411_fu_2533_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln411_1_fu_2537_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln418_fu_2577_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln418_1_fu_2581_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln418_3_fu_2589_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln418_1_fu_2593_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln418_3_fu_2605_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln_fu_2615_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln419_fu_2626_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln419_2_fu_2622_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln426_1_fu_2688_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln426_fu_2684_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln427_1_fu_2703_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln427_2_fu_2708_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln_fu_2735_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln31_4_fu_2756_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln16_fu_2760_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln31_6_fu_2752_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln31_7_fu_2768_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln31_fu_2772_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln_fu_2795_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln449_fu_2805_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln451_fu_2814_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln17_fu_2818_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln451_fu_2826_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln451_fu_2830_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln543_fu_2880_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln543_fu_2884_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln544_fu_2906_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln544_fu_2912_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln544_fu_2916_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln545_fu_2987_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln545_fu_2992_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln545_fu_2996_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln546_fu_3007_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln546_fu_3012_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln546_fu_3016_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln547_fu_3027_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln547_fu_3032_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln547_fu_3036_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln548_fu_3047_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln548_fu_3052_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln548_fu_3056_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln549_fu_3067_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln549_fu_3072_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln549_fu_3076_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln550_fu_3087_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln550_fu_3092_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln550_fu_3096_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln418_2_fu_3141_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln418_5_fu_3149_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln543_2_fu_3211_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln543_1_fu_3215_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln544_1_fu_3237_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln544_2_fu_3243_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln544_1_fu_3247_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln545_1_fu_3318_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln545_2_fu_3323_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln545_1_fu_3327_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln546_1_fu_3338_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln546_2_fu_3343_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln546_1_fu_3347_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln547_1_fu_3358_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln547_2_fu_3363_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln547_1_fu_3367_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln548_1_fu_3378_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln548_2_fu_3383_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln548_1_fu_3387_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln549_1_fu_3398_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln549_2_fu_3403_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln549_1_fu_3407_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln550_1_fu_3418_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln550_2_fu_3423_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln550_1_fu_3427_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln22_fu_3462_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln378_fu_3477_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_13_fu_3485_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_3501_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_3501_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln379_fu_3515_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln380_fu_3524_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln381_fu_3539_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln381_fu_3544_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buflen_fu_3558_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln385_fu_3567_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln47_fu_3649_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_34_fu_3795_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln227_fu_3819_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln227_fu_3823_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln42_fu_3833_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln11_fu_3839_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_5269_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln12_fu_3853_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln47_fu_3862_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln48_fu_3866_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_14_fu_3872_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln48_fu_3880_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln48_fu_3886_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal a1_1_fu_3894_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_5278_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln52_fu_3909_p2 : STD_LOGIC_VECTOR (31 downto 0);
    attribute use_dsp48 of sub_ln52_fu_3909_p2 : signal is "no";
    signal tmp_15_fu_3914_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln52_fu_3922_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln418_3_fu_3970_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln418_6_fu_3978_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln402_1_fu_4005_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln401_1_fu_3989_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln402_2_fu_4018_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln411_1_fu_4047_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln411_2_fu_4055_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln411_2_fu_4061_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln411_3_fu_4065_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln544_2_fu_4163_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln545_2_fu_4234_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln546_2_fu_4244_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln547_2_fu_4254_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln548_2_fu_4264_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln549_2_fu_4274_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln550_2_fu_4284_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln418_2_fu_4328_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln418_4_fu_4332_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln48_fu_4403_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln21_fu_4407_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln48_fu_4415_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln48_fu_4419_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln48_7_fu_4430_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln48_fu_4434_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln526_fu_4465_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln20_fu_4469_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln526_1_fu_4461_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln526_2_fu_4477_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln526_fu_4481_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln48_4_fu_4559_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln48_1_fu_4563_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln48_4_fu_4571_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln48_1_fu_4575_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln48_9_fu_4586_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln48_1_fu_4590_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln538_1_fu_4611_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal signs_1_fu_4630_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal shl_ln22_fu_4655_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln542_fu_4662_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_35_fu_4685_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln182_16_fu_4714_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln182_fu_4718_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln182_fu_4736_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln182_fu_4736_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln182_fu_4736_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln18_fu_4742_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_13_fu_4746_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln19_fu_4756_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln19_fu_4756_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal sext_ln19_14_fu_4762_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln19_fu_4766_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_36_fu_4807_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln88_fu_4831_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln88_3_fu_4835_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln88_fu_4846_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_fu_4869_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln33_fu_4893_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln33_fu_4897_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln36_fu_4907_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln13_fu_4913_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_38_fu_4939_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln301_fu_4963_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln301_fu_4967_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_16_fu_4977_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln302_fu_4993_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_17_fu_4985_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln302_fu_4999_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_18_fu_5005_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_fu_5029_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln109_fu_5053_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln109_fu_5057_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_40_fu_5087_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln88_5_fu_5111_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln88_4_fu_5115_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_41_fu_5145_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln250_fu_5181_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln250_fu_5185_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln249_fu_5196_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln69_2_fu_5218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln69_3_fu_5224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln69_1_fu_5212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln69_fu_5230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln69_fu_5236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln69_fu_5206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln69_1_fu_5242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln69_fu_5248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln69_fu_5254_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_5269_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_5269_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_5278_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_5288_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_3501_ap_start : STD_LOGIC;
    signal grp_fu_3501_ap_done : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (178 downto 0);

    component poly_uniform_gamma1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_coeffs_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        a_coeffs_ce0 : OUT STD_LOGIC;
        a_coeffs_we0 : OUT STD_LOGIC;
        a_coeffs_d0 : OUT STD_LOGIC_VECTOR (18 downto 0);
        a_coeffs_offset : IN STD_LOGIC_VECTOR (2 downto 0);
        seed_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        seed_ce0 : OUT STD_LOGIC;
        seed_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        nonce : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component shake128_squeezebloc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_offset : IN STD_LOGIC_VECTOR (1 downto 0);
        nblocks : IN STD_LOGIC_VECTOR (3 downto 0);
        state_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        state_s_ce0 : OUT STD_LOGIC;
        state_s_we0 : OUT STD_LOGIC;
        state_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_s_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        state_s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        state_s_ce1 : OUT STD_LOGIC;
        state_s_we1 : OUT STD_LOGIC;
        state_s_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_s_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component KeccakF1600_StatePer_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        state_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        state_ce0 : OUT STD_LOGIC;
        state_we0 : OUT STD_LOGIC;
        state_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        state_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        state_ce1 : OUT STD_LOGIC;
        state_we1 : OUT STD_LOGIC;
        state_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component KeccakF1600_StatePer IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        state_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        state_0_ce0 : OUT STD_LOGIC;
        state_0_we0 : OUT STD_LOGIC;
        state_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_0_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        state_0_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        state_0_ce1 : OUT STD_LOGIC;
        state_0_we1 : OUT STD_LOGIC;
        state_0_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_0_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component unpack_sk IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rho_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        rho_ce0 : OUT STD_LOGIC;
        rho_we0 : OUT STD_LOGIC;
        rho_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        t0_vec_coeffs_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        t0_vec_coeffs_ce0 : OUT STD_LOGIC;
        t0_vec_coeffs_we0 : OUT STD_LOGIC;
        t0_vec_coeffs_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t0_vec_coeffs_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        t0_vec_coeffs_ce1 : OUT STD_LOGIC;
        t0_vec_coeffs_we1 : OUT STD_LOGIC;
        t0_vec_coeffs_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        s1_vec_coeffs_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        s1_vec_coeffs_ce0 : OUT STD_LOGIC;
        s1_vec_coeffs_we0 : OUT STD_LOGIC;
        s1_vec_coeffs_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        s1_vec_coeffs_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        s1_vec_coeffs_ce1 : OUT STD_LOGIC;
        s1_vec_coeffs_we1 : OUT STD_LOGIC;
        s1_vec_coeffs_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        s2_vec_coeffs_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        s2_vec_coeffs_ce0 : OUT STD_LOGIC;
        s2_vec_coeffs_we0 : OUT STD_LOGIC;
        s2_vec_coeffs_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        s2_vec_coeffs_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        s2_vec_coeffs_ce1 : OUT STD_LOGIC;
        s2_vec_coeffs_we1 : OUT STD_LOGIC;
        s2_vec_coeffs_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        sk_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        sk_ce0 : OUT STD_LOGIC;
        sk_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        sk_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        sk_ce1 : OUT STD_LOGIC;
        sk_q1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dilithium_shake128_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        state_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        state_s_ce0 : OUT STD_LOGIC;
        state_s_we0 : OUT STD_LOGIC;
        state_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_s_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        state_s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        state_s_ce1 : OUT STD_LOGIC;
        state_s_we1 : OUT STD_LOGIC;
        state_s_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_s_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        seed_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        seed_ce0 : OUT STD_LOGIC;
        seed_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        nonce : IN STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component polyveck_invntt_tomo IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v_vec_coeffs_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v_vec_coeffs_ce0 : OUT STD_LOGIC;
        v_vec_coeffs_we0 : OUT STD_LOGIC;
        v_vec_coeffs_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v_vec_coeffs_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v_vec_coeffs_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v_vec_coeffs_ce1 : OUT STD_LOGIC;
        v_vec_coeffs_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component invntt_tomont IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_we0 : OUT STD_LOGIC;
        a_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        a_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        a_ce1 : OUT STD_LOGIC;
        a_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_offset : IN STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component pack_sig IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sig_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        sig_ce0 : OUT STD_LOGIC;
        sig_we0 : OUT STD_LOGIC;
        sig_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        z_vec_coeffs_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        z_vec_coeffs_ce0 : OUT STD_LOGIC;
        z_vec_coeffs_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        h_vec_coeffs_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        h_vec_coeffs_ce0 : OUT STD_LOGIC;
        h_vec_coeffs_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ntt IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_we0 : OUT STD_LOGIC;
        a_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        a_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_ce1 : OUT STD_LOGIC;
        a_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ntt_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_we0 : OUT STD_LOGIC;
        a_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        a_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        a_ce1 : OUT STD_LOGIC;
        a_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_offset : IN STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component polyvecl_pointwise_a IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        w_coeffs_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        w_coeffs_ce0 : OUT STD_LOGIC;
        w_coeffs_we0 : OUT STD_LOGIC;
        w_coeffs_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        w_coeffs_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        w_coeffs_offset : IN STD_LOGIC_VECTOR (2 downto 0);
        u_vec_coeffs_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        u_vec_coeffs_ce0 : OUT STD_LOGIC;
        u_vec_coeffs_q0 : IN STD_LOGIC_VECTOR (22 downto 0);
        v_vec_coeffs_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v_vec_coeffs_ce0 : OUT STD_LOGIC;
        v_vec_coeffs_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component rej_uniform IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_we0 : OUT STD_LOGIC;
        a_d0 : OUT STD_LOGIC_VECTOR (22 downto 0);
        a_offset : IN STD_LOGIC_VECTOR (2 downto 0);
        a_offset1 : IN STD_LOGIC_VECTOR (2 downto 0);
        a_offset2 : IN STD_LOGIC_VECTOR (31 downto 0);
        len : IN STD_LOGIC_VECTOR (9 downto 0);
        buf_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        buf_r_ce0 : OUT STD_LOGIC;
        buf_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        buf_r_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        buf_r_ce1 : OUT STD_LOGIC;
        buf_r_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        buflen : IN STD_LOGIC_VECTOR (10 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component polyveck_pack_w1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        r_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        r_ce0 : OUT STD_LOGIC;
        r_we0 : OUT STD_LOGIC;
        r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        r_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        r_ce1 : OUT STD_LOGIC;
        r_we1 : OUT STD_LOGIC;
        r_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        w1_vec_coeffs_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        w1_vec_coeffs_ce0 : OUT STD_LOGIC;
        w1_vec_coeffs_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        w1_vec_coeffs_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        w1_vec_coeffs_ce1 : OUT STD_LOGIC;
        w1_vec_coeffs_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component polyveck_pointwise_p IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        r_vec_coeffs_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        r_vec_coeffs_ce0 : OUT STD_LOGIC;
        r_vec_coeffs_we0 : OUT STD_LOGIC;
        r_vec_coeffs_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        a_coeffs_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_coeffs_ce0 : OUT STD_LOGIC;
        a_coeffs_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v_vec_coeffs_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v_vec_coeffs_ce0 : OUT STD_LOGIC;
        v_vec_coeffs_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component load64_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        x_ce0 : OUT STD_LOGIC;
        x_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        x_offset : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component load64_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        x_ce0 : OUT STD_LOGIC;
        x_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        x_offset : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component polyveck_chknorm IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v_vec_coeffs_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v_vec_coeffs_ce0 : OUT STD_LOGIC;
        v_vec_coeffs_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bound : IN STD_LOGIC_VECTOR (17 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component polyveck_caddq IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v_vec_coeffs_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v_vec_coeffs_ce0 : OUT STD_LOGIC;
        v_vec_coeffs_we0 : OUT STD_LOGIC;
        v_vec_coeffs_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v_vec_coeffs_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component polyveck_reduce IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v_vec_coeffs_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v_vec_coeffs_ce0 : OUT STD_LOGIC;
        v_vec_coeffs_we0 : OUT STD_LOGIC;
        v_vec_coeffs_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v_vec_coeffs_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component crypto_sign_urem_wdI IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component crypto_sign_mac_mxdS IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (24 downto 0);
        din2 : IN STD_LOGIC_VECTOR (24 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component crypto_sign_mac_myd2 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (18 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component crypto_sign_mac_mibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component crypto_sign_buf_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component poly_uniform_gammg8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component crypto_sign_buf IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dilithium_shake12dEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component crypto_sign_seedbuf IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component crypto_sign_mat_vlbW IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (22 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component crypto_sign_s1_vemb6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component crypto_sign_y_vecncg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (18 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component crypto_sign_z_vecocq IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component crypto_sign_w0_vesc4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component crypto_sign_cp_coudo IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    buf_1_U : component crypto_sign_buf_1
    generic map (
        DataWidth => 8,
        AddressRange => 842,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_1_address0,
        ce0 => buf_1_ce0,
        we0 => buf_1_we0,
        d0 => buf_1_d0,
        q0 => buf_1_q0,
        address1 => grp_rej_uniform_fu_2185_buf_r_address1,
        ce1 => buf_1_ce1,
        q1 => buf_1_q1);

    state_s_U : component poly_uniform_gammg8j
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => state_s_address0,
        ce0 => state_s_ce0,
        we0 => state_s_we0,
        d0 => state_s_d0,
        q0 => state_s_q0,
        address1 => state_s_address1,
        ce1 => state_s_ce1,
        we1 => state_s_we1,
        d1 => state_s_d1,
        q1 => state_s_q1);

    buf_U : component crypto_sign_buf
    generic map (
        DataWidth => 8,
        AddressRange => 136,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_address0,
        ce0 => buf_ce0,
        we0 => buf_we0,
        d0 => buf_d0,
        q0 => buf_q0);

    state_s_1_U : component poly_uniform_gammg8j
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => state_s_1_address0,
        ce0 => state_s_1_ce0,
        we0 => state_s_1_we0,
        d0 => state_s_1_d0,
        q0 => state_s_1_q0,
        address1 => state_s_1_address1,
        ce1 => state_s_1_ce1,
        we1 => state_s_1_we1,
        d1 => state_s_1_d1,
        q1 => state_s_1_q1);

    state_0_s_U : component poly_uniform_gammg8j
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => state_0_s_address0,
        ce0 => state_0_s_ce0,
        we0 => state_0_s_we0,
        d0 => state_0_s_d0,
        q0 => state_0_s_q0,
        address1 => state_0_s_address1,
        ce1 => state_0_s_ce1,
        we1 => state_0_s_we1,
        d1 => state_0_s_d1,
        q1 => state_0_s_q1);

    t_U : component dilithium_shake12dEe
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => t_address0,
        ce0 => t_ce0,
        we0 => t_we0,
        d0 => t_d0,
        q0 => t_q0);

    seedbuf_U : component crypto_sign_seedbuf
    generic map (
        DataWidth => 8,
        AddressRange => 208,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => seedbuf_address0,
        ce0 => seedbuf_ce0,
        we0 => seedbuf_we0,
        d0 => seedbuf_d0,
        q0 => seedbuf_q0,
        address1 => seedbuf_address1,
        ce1 => seedbuf_ce1,
        we1 => seedbuf_we1,
        d1 => seedbuf_d1);

    mat_vec_coeffs_U : component crypto_sign_mat_vlbW
    generic map (
        DataWidth => 23,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mat_vec_coeffs_address0,
        ce0 => mat_vec_coeffs_ce0,
        we0 => mat_vec_coeffs_we0,
        d0 => grp_rej_uniform_fu_2185_a_d0,
        q0 => mat_vec_coeffs_q0);

    s1_vec_coeffs_U : component crypto_sign_s1_vemb6
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => s1_vec_coeffs_address0,
        ce0 => s1_vec_coeffs_ce0,
        we0 => s1_vec_coeffs_we0,
        d0 => s1_vec_coeffs_d0,
        q0 => s1_vec_coeffs_q0,
        address1 => s1_vec_coeffs_address1,
        ce1 => s1_vec_coeffs_ce1,
        we1 => s1_vec_coeffs_we1,
        d1 => grp_unpack_sk_fu_2116_s1_vec_coeffs_d1,
        q1 => s1_vec_coeffs_q1);

    y_vec_coeffs_U : component crypto_sign_y_vecncg
    generic map (
        DataWidth => 19,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => y_vec_coeffs_address0,
        ce0 => y_vec_coeffs_ce0,
        we0 => y_vec_coeffs_we0,
        d0 => grp_poly_uniform_gamma1_fu_2078_a_coeffs_d0,
        q0 => y_vec_coeffs_q0);

    z_vec_coeffs_U : component crypto_sign_z_vecocq
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => z_vec_coeffs_address0,
        ce0 => z_vec_coeffs_ce0,
        we0 => z_vec_coeffs_we0,
        d0 => z_vec_coeffs_d0,
        q0 => z_vec_coeffs_q0,
        address1 => z_vec_coeffs_address1,
        ce1 => z_vec_coeffs_ce1,
        q1 => z_vec_coeffs_q1);

    t0_vec_coeffs_U : component crypto_sign_s1_vemb6
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => t0_vec_coeffs_address0,
        ce0 => t0_vec_coeffs_ce0,
        we0 => t0_vec_coeffs_we0,
        d0 => t0_vec_coeffs_d0,
        q0 => t0_vec_coeffs_q0,
        address1 => t0_vec_coeffs_address1,
        ce1 => t0_vec_coeffs_ce1,
        we1 => t0_vec_coeffs_we1,
        d1 => grp_unpack_sk_fu_2116_t0_vec_coeffs_d1,
        q1 => t0_vec_coeffs_q1);

    s2_vec_coeffs_U : component crypto_sign_s1_vemb6
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => s2_vec_coeffs_address0,
        ce0 => s2_vec_coeffs_ce0,
        we0 => s2_vec_coeffs_we0,
        d0 => s2_vec_coeffs_d0,
        q0 => s2_vec_coeffs_q0,
        address1 => s2_vec_coeffs_address1,
        ce1 => s2_vec_coeffs_ce1,
        we1 => s2_vec_coeffs_we1,
        d1 => grp_unpack_sk_fu_2116_s2_vec_coeffs_d1,
        q1 => s2_vec_coeffs_q1);

    w1_vec_coeffs_U : component crypto_sign_z_vecocq
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w1_vec_coeffs_address0,
        ce0 => w1_vec_coeffs_ce0,
        we0 => w1_vec_coeffs_we0,
        d0 => w1_vec_coeffs_d0,
        q0 => w1_vec_coeffs_q0,
        address1 => w1_vec_coeffs_address1,
        ce1 => w1_vec_coeffs_ce1,
        q1 => w1_vec_coeffs_q1);

    w0_vec_coeffs_U : component crypto_sign_w0_vesc4
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w0_vec_coeffs_address0,
        ce0 => w0_vec_coeffs_ce0,
        we0 => w0_vec_coeffs_we0,
        d0 => w0_vec_coeffs_d0,
        q0 => w0_vec_coeffs_q0);

    h_vec_coeffs_U : component crypto_sign_z_vecocq
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => h_vec_coeffs_address0,
        ce0 => h_vec_coeffs_ce0,
        we0 => h_vec_coeffs_we0,
        d0 => h_vec_coeffs_d0,
        q0 => h_vec_coeffs_q0,
        address1 => grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_address1,
        ce1 => h_vec_coeffs_ce1,
        q1 => h_vec_coeffs_q1);

    cp_coeffs_U : component crypto_sign_cp_coudo
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cp_coeffs_address0,
        ce0 => cp_coeffs_ce0,
        we0 => cp_coeffs_we0,
        d0 => cp_coeffs_d0,
        q0 => cp_coeffs_q0,
        address1 => grp_ntt_fu_2157_a_address1,
        ce1 => cp_coeffs_ce1,
        q1 => cp_coeffs_q1);

    state_s_2_U : component poly_uniform_gammg8j
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => state_s_2_address0,
        ce0 => state_s_2_ce0,
        we0 => state_s_2_we0,
        d0 => state_s_2_d0,
        q0 => state_s_2_q0,
        address1 => state_s_2_address1,
        ce1 => state_s_2_ce1,
        we1 => state_s_2_we1,
        d1 => state_s_2_d1,
        q1 => state_s_2_q1);

    grp_poly_uniform_gamma1_fu_2078 : component poly_uniform_gamma1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_poly_uniform_gamma1_fu_2078_ap_start,
        ap_done => grp_poly_uniform_gamma1_fu_2078_ap_done,
        ap_idle => grp_poly_uniform_gamma1_fu_2078_ap_idle,
        ap_ready => grp_poly_uniform_gamma1_fu_2078_ap_ready,
        a_coeffs_address0 => grp_poly_uniform_gamma1_fu_2078_a_coeffs_address0,
        a_coeffs_ce0 => grp_poly_uniform_gamma1_fu_2078_a_coeffs_ce0,
        a_coeffs_we0 => grp_poly_uniform_gamma1_fu_2078_a_coeffs_we0,
        a_coeffs_d0 => grp_poly_uniform_gamma1_fu_2078_a_coeffs_d0,
        a_coeffs_offset => i_0_i74_reg_1546,
        seed_address0 => grp_poly_uniform_gamma1_fu_2078_seed_address0,
        seed_ce0 => grp_poly_uniform_gamma1_fu_2078_seed_ce0,
        seed_q0 => seedbuf_q0,
        nonce => add_ln47_reg_5864);

    grp_shake128_squeezebloc_fu_2089 : component shake128_squeezebloc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shake128_squeezebloc_fu_2089_ap_start,
        ap_done => grp_shake128_squeezebloc_fu_2089_ap_done,
        ap_idle => grp_shake128_squeezebloc_fu_2089_ap_idle,
        ap_ready => grp_shake128_squeezebloc_fu_2089_ap_ready,
        out_r_address0 => grp_shake128_squeezebloc_fu_2089_out_r_address0,
        out_r_ce0 => grp_shake128_squeezebloc_fu_2089_out_r_ce0,
        out_r_we0 => grp_shake128_squeezebloc_fu_2089_out_r_we0,
        out_r_d0 => grp_shake128_squeezebloc_fu_2089_out_r_d0,
        out_offset => grp_shake128_squeezebloc_fu_2089_out_offset,
        nblocks => grp_shake128_squeezebloc_fu_2089_nblocks,
        state_s_address0 => grp_shake128_squeezebloc_fu_2089_state_s_address0,
        state_s_ce0 => grp_shake128_squeezebloc_fu_2089_state_s_ce0,
        state_s_we0 => grp_shake128_squeezebloc_fu_2089_state_s_we0,
        state_s_d0 => grp_shake128_squeezebloc_fu_2089_state_s_d0,
        state_s_q0 => state_s_q0,
        state_s_address1 => grp_shake128_squeezebloc_fu_2089_state_s_address1,
        state_s_ce1 => grp_shake128_squeezebloc_fu_2089_state_s_ce1,
        state_s_we1 => grp_shake128_squeezebloc_fu_2089_state_s_we1,
        state_s_d1 => grp_shake128_squeezebloc_fu_2089_state_s_d1,
        state_s_q1 => state_s_q1);

    grp_KeccakF1600_StatePer_1_fu_2102 : component KeccakF1600_StatePer_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakF1600_StatePer_1_fu_2102_ap_start,
        ap_done => grp_KeccakF1600_StatePer_1_fu_2102_ap_done,
        ap_idle => grp_KeccakF1600_StatePer_1_fu_2102_ap_idle,
        ap_ready => grp_KeccakF1600_StatePer_1_fu_2102_ap_ready,
        state_address0 => grp_KeccakF1600_StatePer_1_fu_2102_state_address0,
        state_ce0 => grp_KeccakF1600_StatePer_1_fu_2102_state_ce0,
        state_we0 => grp_KeccakF1600_StatePer_1_fu_2102_state_we0,
        state_d0 => grp_KeccakF1600_StatePer_1_fu_2102_state_d0,
        state_q0 => grp_KeccakF1600_StatePer_1_fu_2102_state_q0,
        state_address1 => grp_KeccakF1600_StatePer_1_fu_2102_state_address1,
        state_ce1 => grp_KeccakF1600_StatePer_1_fu_2102_state_ce1,
        state_we1 => grp_KeccakF1600_StatePer_1_fu_2102_state_we1,
        state_d1 => grp_KeccakF1600_StatePer_1_fu_2102_state_d1,
        state_q1 => grp_KeccakF1600_StatePer_1_fu_2102_state_q1);

    grp_KeccakF1600_StatePer_fu_2109 : component KeccakF1600_StatePer
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakF1600_StatePer_fu_2109_ap_start,
        ap_done => grp_KeccakF1600_StatePer_fu_2109_ap_done,
        ap_idle => grp_KeccakF1600_StatePer_fu_2109_ap_idle,
        ap_ready => grp_KeccakF1600_StatePer_fu_2109_ap_ready,
        state_0_address0 => grp_KeccakF1600_StatePer_fu_2109_state_0_address0,
        state_0_ce0 => grp_KeccakF1600_StatePer_fu_2109_state_0_ce0,
        state_0_we0 => grp_KeccakF1600_StatePer_fu_2109_state_0_we0,
        state_0_d0 => grp_KeccakF1600_StatePer_fu_2109_state_0_d0,
        state_0_q0 => state_0_s_q0,
        state_0_address1 => grp_KeccakF1600_StatePer_fu_2109_state_0_address1,
        state_0_ce1 => grp_KeccakF1600_StatePer_fu_2109_state_0_ce1,
        state_0_we1 => grp_KeccakF1600_StatePer_fu_2109_state_0_we1,
        state_0_d1 => grp_KeccakF1600_StatePer_fu_2109_state_0_d1,
        state_0_q1 => state_0_s_q1);

    grp_unpack_sk_fu_2116 : component unpack_sk
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_unpack_sk_fu_2116_ap_start,
        ap_done => grp_unpack_sk_fu_2116_ap_done,
        ap_idle => grp_unpack_sk_fu_2116_ap_idle,
        ap_ready => grp_unpack_sk_fu_2116_ap_ready,
        rho_address0 => grp_unpack_sk_fu_2116_rho_address0,
        rho_ce0 => grp_unpack_sk_fu_2116_rho_ce0,
        rho_we0 => grp_unpack_sk_fu_2116_rho_we0,
        rho_d0 => grp_unpack_sk_fu_2116_rho_d0,
        t0_vec_coeffs_address0 => grp_unpack_sk_fu_2116_t0_vec_coeffs_address0,
        t0_vec_coeffs_ce0 => grp_unpack_sk_fu_2116_t0_vec_coeffs_ce0,
        t0_vec_coeffs_we0 => grp_unpack_sk_fu_2116_t0_vec_coeffs_we0,
        t0_vec_coeffs_d0 => grp_unpack_sk_fu_2116_t0_vec_coeffs_d0,
        t0_vec_coeffs_address1 => grp_unpack_sk_fu_2116_t0_vec_coeffs_address1,
        t0_vec_coeffs_ce1 => grp_unpack_sk_fu_2116_t0_vec_coeffs_ce1,
        t0_vec_coeffs_we1 => grp_unpack_sk_fu_2116_t0_vec_coeffs_we1,
        t0_vec_coeffs_d1 => grp_unpack_sk_fu_2116_t0_vec_coeffs_d1,
        s1_vec_coeffs_address0 => grp_unpack_sk_fu_2116_s1_vec_coeffs_address0,
        s1_vec_coeffs_ce0 => grp_unpack_sk_fu_2116_s1_vec_coeffs_ce0,
        s1_vec_coeffs_we0 => grp_unpack_sk_fu_2116_s1_vec_coeffs_we0,
        s1_vec_coeffs_d0 => grp_unpack_sk_fu_2116_s1_vec_coeffs_d0,
        s1_vec_coeffs_address1 => grp_unpack_sk_fu_2116_s1_vec_coeffs_address1,
        s1_vec_coeffs_ce1 => grp_unpack_sk_fu_2116_s1_vec_coeffs_ce1,
        s1_vec_coeffs_we1 => grp_unpack_sk_fu_2116_s1_vec_coeffs_we1,
        s1_vec_coeffs_d1 => grp_unpack_sk_fu_2116_s1_vec_coeffs_d1,
        s2_vec_coeffs_address0 => grp_unpack_sk_fu_2116_s2_vec_coeffs_address0,
        s2_vec_coeffs_ce0 => grp_unpack_sk_fu_2116_s2_vec_coeffs_ce0,
        s2_vec_coeffs_we0 => grp_unpack_sk_fu_2116_s2_vec_coeffs_we0,
        s2_vec_coeffs_d0 => grp_unpack_sk_fu_2116_s2_vec_coeffs_d0,
        s2_vec_coeffs_address1 => grp_unpack_sk_fu_2116_s2_vec_coeffs_address1,
        s2_vec_coeffs_ce1 => grp_unpack_sk_fu_2116_s2_vec_coeffs_ce1,
        s2_vec_coeffs_we1 => grp_unpack_sk_fu_2116_s2_vec_coeffs_we1,
        s2_vec_coeffs_d1 => grp_unpack_sk_fu_2116_s2_vec_coeffs_d1,
        sk_address0 => grp_unpack_sk_fu_2116_sk_address0,
        sk_ce0 => grp_unpack_sk_fu_2116_sk_ce0,
        sk_q0 => sk_q0,
        sk_address1 => grp_unpack_sk_fu_2116_sk_address1,
        sk_ce1 => grp_unpack_sk_fu_2116_sk_ce1,
        sk_q1 => sk_q1);

    grp_dilithium_shake128_s_fu_2126 : component dilithium_shake128_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dilithium_shake128_s_fu_2126_ap_start,
        ap_done => grp_dilithium_shake128_s_fu_2126_ap_done,
        ap_idle => grp_dilithium_shake128_s_fu_2126_ap_idle,
        ap_ready => grp_dilithium_shake128_s_fu_2126_ap_ready,
        state_s_address0 => grp_dilithium_shake128_s_fu_2126_state_s_address0,
        state_s_ce0 => grp_dilithium_shake128_s_fu_2126_state_s_ce0,
        state_s_we0 => grp_dilithium_shake128_s_fu_2126_state_s_we0,
        state_s_d0 => grp_dilithium_shake128_s_fu_2126_state_s_d0,
        state_s_q0 => state_s_q0,
        state_s_address1 => grp_dilithium_shake128_s_fu_2126_state_s_address1,
        state_s_ce1 => grp_dilithium_shake128_s_fu_2126_state_s_ce1,
        state_s_we1 => grp_dilithium_shake128_s_fu_2126_state_s_we1,
        state_s_d1 => grp_dilithium_shake128_s_fu_2126_state_s_d1,
        state_s_q1 => state_s_q1,
        seed_address0 => grp_dilithium_shake128_s_fu_2126_seed_address0,
        seed_ce0 => grp_dilithium_shake128_s_fu_2126_seed_ce0,
        seed_q0 => seedbuf_q0,
        nonce => nonce_assign_reg_5737);

    grp_polyveck_invntt_tomo_fu_2133 : component polyveck_invntt_tomo
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_polyveck_invntt_tomo_fu_2133_ap_start,
        ap_done => grp_polyveck_invntt_tomo_fu_2133_ap_done,
        ap_idle => grp_polyveck_invntt_tomo_fu_2133_ap_idle,
        ap_ready => grp_polyveck_invntt_tomo_fu_2133_ap_ready,
        v_vec_coeffs_address0 => grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_address0,
        v_vec_coeffs_ce0 => grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_ce0,
        v_vec_coeffs_we0 => grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_we0,
        v_vec_coeffs_d0 => grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_d0,
        v_vec_coeffs_q0 => grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_q0,
        v_vec_coeffs_address1 => grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_address1,
        v_vec_coeffs_ce1 => grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_ce1,
        v_vec_coeffs_q1 => grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_q1);

    grp_invntt_tomont_fu_2140 : component invntt_tomont
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_invntt_tomont_fu_2140_ap_start,
        ap_done => grp_invntt_tomont_fu_2140_ap_done,
        ap_idle => grp_invntt_tomont_fu_2140_ap_idle,
        ap_ready => grp_invntt_tomont_fu_2140_ap_ready,
        a_address0 => grp_invntt_tomont_fu_2140_a_address0,
        a_ce0 => grp_invntt_tomont_fu_2140_a_ce0,
        a_we0 => grp_invntt_tomont_fu_2140_a_we0,
        a_d0 => grp_invntt_tomont_fu_2140_a_d0,
        a_q0 => z_vec_coeffs_q0,
        a_address1 => grp_invntt_tomont_fu_2140_a_address1,
        a_ce1 => grp_invntt_tomont_fu_2140_a_ce1,
        a_q1 => z_vec_coeffs_q1,
        a_offset => i_0_i106_reg_1910);

    grp_pack_sig_fu_2149 : component pack_sig
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_pack_sig_fu_2149_ap_start,
        ap_done => grp_pack_sig_fu_2149_ap_done,
        ap_idle => grp_pack_sig_fu_2149_ap_idle,
        ap_ready => grp_pack_sig_fu_2149_ap_ready,
        sig_address0 => grp_pack_sig_fu_2149_sig_address0,
        sig_ce0 => grp_pack_sig_fu_2149_sig_ce0,
        sig_we0 => grp_pack_sig_fu_2149_sig_we0,
        sig_d0 => grp_pack_sig_fu_2149_sig_d0,
        z_vec_coeffs_address0 => grp_pack_sig_fu_2149_z_vec_coeffs_address0,
        z_vec_coeffs_ce0 => grp_pack_sig_fu_2149_z_vec_coeffs_ce0,
        z_vec_coeffs_q0 => z_vec_coeffs_q0,
        h_vec_coeffs_address0 => grp_pack_sig_fu_2149_h_vec_coeffs_address0,
        h_vec_coeffs_ce0 => grp_pack_sig_fu_2149_h_vec_coeffs_ce0,
        h_vec_coeffs_q0 => h_vec_coeffs_q0);

    grp_ntt_fu_2157 : component ntt
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ntt_fu_2157_ap_start,
        ap_done => grp_ntt_fu_2157_ap_done,
        ap_idle => grp_ntt_fu_2157_ap_idle,
        ap_ready => grp_ntt_fu_2157_ap_ready,
        a_address0 => grp_ntt_fu_2157_a_address0,
        a_ce0 => grp_ntt_fu_2157_a_ce0,
        a_we0 => grp_ntt_fu_2157_a_we0,
        a_d0 => grp_ntt_fu_2157_a_d0,
        a_q0 => cp_coeffs_q0,
        a_address1 => grp_ntt_fu_2157_a_address1,
        a_ce1 => grp_ntt_fu_2157_a_ce1,
        a_q1 => cp_coeffs_q1);

    grp_ntt_1_fu_2164 : component ntt_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ntt_1_fu_2164_ap_start,
        ap_done => grp_ntt_1_fu_2164_ap_done,
        ap_idle => grp_ntt_1_fu_2164_ap_idle,
        ap_ready => grp_ntt_1_fu_2164_ap_ready,
        a_address0 => grp_ntt_1_fu_2164_a_address0,
        a_ce0 => grp_ntt_1_fu_2164_a_ce0,
        a_we0 => grp_ntt_1_fu_2164_a_we0,
        a_d0 => grp_ntt_1_fu_2164_a_d0,
        a_q0 => grp_ntt_1_fu_2164_a_q0,
        a_address1 => grp_ntt_1_fu_2164_a_address1,
        a_ce1 => grp_ntt_1_fu_2164_a_ce1,
        a_q1 => grp_ntt_1_fu_2164_a_q1,
        a_offset => grp_ntt_1_fu_2164_a_offset);

    grp_polyvecl_pointwise_a_fu_2176 : component polyvecl_pointwise_a
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_polyvecl_pointwise_a_fu_2176_ap_start,
        ap_done => grp_polyvecl_pointwise_a_fu_2176_ap_done,
        ap_idle => grp_polyvecl_pointwise_a_fu_2176_ap_idle,
        ap_ready => grp_polyvecl_pointwise_a_fu_2176_ap_ready,
        w_coeffs_address0 => grp_polyvecl_pointwise_a_fu_2176_w_coeffs_address0,
        w_coeffs_ce0 => grp_polyvecl_pointwise_a_fu_2176_w_coeffs_ce0,
        w_coeffs_we0 => grp_polyvecl_pointwise_a_fu_2176_w_coeffs_we0,
        w_coeffs_d0 => grp_polyvecl_pointwise_a_fu_2176_w_coeffs_d0,
        w_coeffs_q0 => w1_vec_coeffs_q0,
        w_coeffs_offset => i_0_i81_reg_1614,
        u_vec_coeffs_address0 => grp_polyvecl_pointwise_a_fu_2176_u_vec_coeffs_address0,
        u_vec_coeffs_ce0 => grp_polyvecl_pointwise_a_fu_2176_u_vec_coeffs_ce0,
        u_vec_coeffs_q0 => mat_vec_coeffs_q0,
        v_vec_coeffs_address0 => grp_polyvecl_pointwise_a_fu_2176_v_vec_coeffs_address0,
        v_vec_coeffs_ce0 => grp_polyvecl_pointwise_a_fu_2176_v_vec_coeffs_ce0,
        v_vec_coeffs_q0 => z_vec_coeffs_q0);

    grp_rej_uniform_fu_2185 : component rej_uniform
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rej_uniform_fu_2185_ap_start,
        ap_done => grp_rej_uniform_fu_2185_ap_done,
        ap_idle => grp_rej_uniform_fu_2185_ap_idle,
        ap_ready => grp_rej_uniform_fu_2185_ap_ready,
        a_address0 => grp_rej_uniform_fu_2185_a_address0,
        a_ce0 => grp_rej_uniform_fu_2185_a_ce0,
        a_we0 => grp_rej_uniform_fu_2185_a_we0,
        a_d0 => grp_rej_uniform_fu_2185_a_d0,
        a_offset => i_0_i_i_reg_1441,
        a_offset1 => j_0_i_i_reg_1453,
        a_offset2 => grp_rej_uniform_fu_2185_a_offset2,
        len => grp_rej_uniform_fu_2185_len,
        buf_r_address0 => grp_rej_uniform_fu_2185_buf_r_address0,
        buf_r_ce0 => grp_rej_uniform_fu_2185_buf_r_ce0,
        buf_r_q0 => buf_1_q0,
        buf_r_address1 => grp_rej_uniform_fu_2185_buf_r_address1,
        buf_r_ce1 => grp_rej_uniform_fu_2185_buf_r_ce1,
        buf_r_q1 => buf_1_q1,
        buflen => grp_rej_uniform_fu_2185_buflen,
        ap_return => grp_rej_uniform_fu_2185_ap_return);

    grp_polyveck_pack_w1_fu_2202 : component polyveck_pack_w1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_polyveck_pack_w1_fu_2202_ap_start,
        ap_done => grp_polyveck_pack_w1_fu_2202_ap_done,
        ap_idle => grp_polyveck_pack_w1_fu_2202_ap_idle,
        ap_ready => grp_polyveck_pack_w1_fu_2202_ap_ready,
        r_address0 => grp_polyveck_pack_w1_fu_2202_r_address0,
        r_ce0 => grp_polyveck_pack_w1_fu_2202_r_ce0,
        r_we0 => grp_polyveck_pack_w1_fu_2202_r_we0,
        r_d0 => grp_polyveck_pack_w1_fu_2202_r_d0,
        r_address1 => grp_polyveck_pack_w1_fu_2202_r_address1,
        r_ce1 => grp_polyveck_pack_w1_fu_2202_r_ce1,
        r_we1 => grp_polyveck_pack_w1_fu_2202_r_we1,
        r_d1 => grp_polyveck_pack_w1_fu_2202_r_d1,
        w1_vec_coeffs_address0 => grp_polyveck_pack_w1_fu_2202_w1_vec_coeffs_address0,
        w1_vec_coeffs_ce0 => grp_polyveck_pack_w1_fu_2202_w1_vec_coeffs_ce0,
        w1_vec_coeffs_q0 => w1_vec_coeffs_q0,
        w1_vec_coeffs_address1 => grp_polyveck_pack_w1_fu_2202_w1_vec_coeffs_address1,
        w1_vec_coeffs_ce1 => grp_polyveck_pack_w1_fu_2202_w1_vec_coeffs_ce1,
        w1_vec_coeffs_q1 => w1_vec_coeffs_q1);

    grp_polyveck_pointwise_p_fu_2209 : component polyveck_pointwise_p
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_polyveck_pointwise_p_fu_2209_ap_start,
        ap_done => grp_polyveck_pointwise_p_fu_2209_ap_done,
        ap_idle => grp_polyveck_pointwise_p_fu_2209_ap_idle,
        ap_ready => grp_polyveck_pointwise_p_fu_2209_ap_ready,
        r_vec_coeffs_address0 => grp_polyveck_pointwise_p_fu_2209_r_vec_coeffs_address0,
        r_vec_coeffs_ce0 => grp_polyveck_pointwise_p_fu_2209_r_vec_coeffs_ce0,
        r_vec_coeffs_we0 => grp_polyveck_pointwise_p_fu_2209_r_vec_coeffs_we0,
        r_vec_coeffs_d0 => grp_polyveck_pointwise_p_fu_2209_r_vec_coeffs_d0,
        a_coeffs_address0 => grp_polyveck_pointwise_p_fu_2209_a_coeffs_address0,
        a_coeffs_ce0 => grp_polyveck_pointwise_p_fu_2209_a_coeffs_ce0,
        a_coeffs_q0 => cp_coeffs_q0,
        v_vec_coeffs_address0 => grp_polyveck_pointwise_p_fu_2209_v_vec_coeffs_address0,
        v_vec_coeffs_ce0 => grp_polyveck_pointwise_p_fu_2209_v_vec_coeffs_ce0,
        v_vec_coeffs_q0 => grp_polyveck_pointwise_p_fu_2209_v_vec_coeffs_q0);

    grp_load64_3_fu_2216 : component load64_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_load64_3_fu_2216_ap_start,
        ap_done => grp_load64_3_fu_2216_ap_done,
        ap_idle => grp_load64_3_fu_2216_ap_idle,
        ap_ready => grp_load64_3_fu_2216_ap_ready,
        x_address0 => grp_load64_3_fu_2216_x_address0,
        x_ce0 => grp_load64_3_fu_2216_x_ce0,
        x_q0 => sm_q0,
        x_offset => grp_load64_3_fu_2216_x_offset,
        ap_return => grp_load64_3_fu_2216_ap_return);

    grp_load64_2_fu_2223 : component load64_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_load64_2_fu_2223_ap_start,
        ap_done => grp_load64_2_fu_2223_ap_done,
        ap_idle => grp_load64_2_fu_2223_ap_idle,
        ap_ready => grp_load64_2_fu_2223_ap_ready,
        x_address0 => grp_load64_2_fu_2223_x_address0,
        x_ce0 => grp_load64_2_fu_2223_x_ce0,
        x_q0 => seedbuf_q0,
        x_offset => grp_load64_2_fu_2223_x_offset,
        ap_return => grp_load64_2_fu_2223_ap_return);

    grp_polyveck_chknorm_fu_2229 : component polyveck_chknorm
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_polyveck_chknorm_fu_2229_ap_start,
        ap_done => grp_polyveck_chknorm_fu_2229_ap_done,
        ap_idle => grp_polyveck_chknorm_fu_2229_ap_idle,
        ap_ready => grp_polyveck_chknorm_fu_2229_ap_ready,
        v_vec_coeffs_address0 => grp_polyveck_chknorm_fu_2229_v_vec_coeffs_address0,
        v_vec_coeffs_ce0 => grp_polyveck_chknorm_fu_2229_v_vec_coeffs_ce0,
        v_vec_coeffs_q0 => grp_polyveck_chknorm_fu_2229_v_vec_coeffs_q0,
        bound => grp_polyveck_chknorm_fu_2229_bound,
        ap_return => grp_polyveck_chknorm_fu_2229_ap_return);

    grp_polyveck_caddq_fu_2237 : component polyveck_caddq
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_polyveck_caddq_fu_2237_ap_start,
        ap_done => grp_polyveck_caddq_fu_2237_ap_done,
        ap_idle => grp_polyveck_caddq_fu_2237_ap_idle,
        ap_ready => grp_polyveck_caddq_fu_2237_ap_ready,
        v_vec_coeffs_address0 => grp_polyveck_caddq_fu_2237_v_vec_coeffs_address0,
        v_vec_coeffs_ce0 => grp_polyveck_caddq_fu_2237_v_vec_coeffs_ce0,
        v_vec_coeffs_we0 => grp_polyveck_caddq_fu_2237_v_vec_coeffs_we0,
        v_vec_coeffs_d0 => grp_polyveck_caddq_fu_2237_v_vec_coeffs_d0,
        v_vec_coeffs_q0 => grp_polyveck_caddq_fu_2237_v_vec_coeffs_q0);

    grp_polyveck_reduce_fu_2242 : component polyveck_reduce
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_polyveck_reduce_fu_2242_ap_start,
        ap_done => grp_polyveck_reduce_fu_2242_ap_done,
        ap_idle => grp_polyveck_reduce_fu_2242_ap_idle,
        ap_ready => grp_polyveck_reduce_fu_2242_ap_ready,
        v_vec_coeffs_address0 => grp_polyveck_reduce_fu_2242_v_vec_coeffs_address0,
        v_vec_coeffs_ce0 => grp_polyveck_reduce_fu_2242_v_vec_coeffs_ce0,
        v_vec_coeffs_we0 => grp_polyveck_reduce_fu_2242_v_vec_coeffs_we0,
        v_vec_coeffs_d0 => grp_polyveck_reduce_fu_2242_v_vec_coeffs_d0,
        v_vec_coeffs_q0 => grp_polyveck_reduce_fu_2242_v_vec_coeffs_q0);

    crypto_sign_urem_wdI_U72 : component crypto_sign_urem_wdI
    generic map (
        ID => 1,
        NUM_STAGE => 13,
        din0_WIDTH => 9,
        din1_WIDTH => 3,
        dout_WIDTH => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_3501_ap_start,
        done => grp_fu_3501_ap_done,
        din0 => buflen_0_i_reg_1475,
        din1 => grp_fu_3501_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_3501_p2);

    crypto_sign_mac_mxdS_U73 : component crypto_sign_mac_mxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 25,
        din2_WIDTH => 25,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_5269_p0,
        din1 => trunc_ln11_fu_3839_p4,
        din2 => grp_fu_5269_p2,
        dout => grp_fu_5269_p3);

    crypto_sign_mac_myd2_U74 : component crypto_sign_mac_myd2
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 8,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_5278_p0,
        din1 => a1_1_fu_3894_p2,
        din2 => w1_vec_coeffs_q0,
        dout => grp_fu_5278_p3);

    crypto_sign_mac_mibs_U75 : component crypto_sign_mac_mibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 24,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => trunc_ln13_fu_4913_p4,
        din1 => grp_fu_5288_p1,
        din2 => z_vec_coeffs_q0,
        dout => grp_fu_5288_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_KeccakF1600_StatePer_1_fu_2102_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakF1600_StatePer_1_fu_2102_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state123) or (ap_const_logic_1 = ap_CS_fsm_state112) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((icmp_ln410_1_fu_4035_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state108)) or ((icmp_ln401_1_fu_3993_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state104)) or ((icmp_ln410_fu_2513_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((icmp_ln401_fu_2407_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((icmp_ln533_fu_4516_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state132)))) then 
                    grp_KeccakF1600_StatePer_1_fu_2102_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakF1600_StatePer_1_fu_2102_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakF1600_StatePer_1_fu_2102_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_KeccakF1600_StatePer_fu_2109_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakF1600_StatePer_fu_2109_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
                    grp_KeccakF1600_StatePer_fu_2109_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakF1600_StatePer_fu_2109_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakF1600_StatePer_fu_2109_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dilithium_shake128_s_fu_2126_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dilithium_shake128_s_fu_2126_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln21_fu_3450_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state47))) then 
                    grp_dilithium_shake128_s_fu_2126_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dilithium_shake128_s_fu_2126_ap_ready = ap_const_logic_1)) then 
                    grp_dilithium_shake128_s_fu_2126_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_invntt_tomont_fu_2140_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_invntt_tomont_fu_2140_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln107_fu_4783_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state145))) then 
                    grp_invntt_tomont_fu_2140_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_invntt_tomont_fu_2140_ap_ready = ap_const_logic_1)) then 
                    grp_invntt_tomont_fu_2140_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_load64_2_fu_2223_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_load64_2_fu_2223_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln417_3_fu_3958_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state102)) or ((icmp_ln417_2_fu_3129_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((icmp_ln417_fu_2346_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
                    grp_load64_2_fu_2223_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load64_2_fu_2223_ap_ready = ap_const_logic_1)) then 
                    grp_load64_2_fu_2223_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_load64_3_fu_2216_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_load64_3_fu_2216_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln417_4_fu_4316_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state120)) or ((icmp_ln410_1_fu_4035_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state108)) or ((icmp_ln401_1_fu_3993_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state104)) or ((icmp_ln417_1_fu_2566_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((icmp_ln410_fu_2513_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((icmp_ln401_fu_2407_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
                    grp_load64_3_fu_2216_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load64_3_fu_2216_ap_ready = ap_const_logic_1)) then 
                    grp_load64_3_fu_2216_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ntt_1_fu_2164_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ntt_1_fu_2164_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln100_1_fu_3759_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state88)) or ((icmp_ln282_1_fu_3613_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state75)) or ((icmp_ln282_fu_3601_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state73)) or ((icmp_ln100_fu_3589_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71)))) then 
                    grp_ntt_1_fu_2164_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ntt_1_fu_2164_ap_ready = ap_const_logic_1)) then 
                    grp_ntt_1_fu_2164_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ntt_fu_2157_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ntt_fu_2157_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln531_fu_4510_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state131))) then 
                    grp_ntt_fu_2157_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ntt_fu_2157_ap_ready = ap_const_logic_1)) then 
                    grp_ntt_fu_2157_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_pack_sig_fu_2149_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_pack_sig_fu_2149_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln392_fu_5133_p2 = ap_const_lv1_1) and (icmp_ln158_reg_6371 = ap_const_lv1_1) and (icmp_ln173_fu_5157_p2 = ap_const_lv1_0) and (tmp_12_reg_6436 = ap_const_lv1_0) and (tmp_11_reg_6432 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state176))) then 
                    grp_pack_sig_fu_2149_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_pack_sig_fu_2149_ap_ready = ap_const_logic_1)) then 
                    grp_pack_sig_fu_2149_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_poly_uniform_gamma1_fu_2078_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_poly_uniform_gamma1_fu_2078_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln46_fu_3637_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state78))) then 
                    grp_poly_uniform_gamma1_fu_2078_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_poly_uniform_gamma1_fu_2078_ap_ready = ap_const_logic_1)) then 
                    grp_poly_uniform_gamma1_fu_2078_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_polyveck_caddq_fu_2237_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_polyveck_caddq_fu_2237_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state95) or ((icmp_ln234_fu_5075_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state172)))) then 
                    grp_polyveck_caddq_fu_2237_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_polyveck_caddq_fu_2237_ap_ready = ap_const_logic_1)) then 
                    grp_polyveck_caddq_fu_2237_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_polyveck_chknorm_fu_2229_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_polyveck_chknorm_fu_2229_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state170) or (ap_const_logic_1 = ap_CS_fsm_state163))) then 
                    grp_polyveck_chknorm_fu_2229_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_polyveck_chknorm_fu_2229_ap_ready = ap_const_logic_1)) then 
                    grp_polyveck_chknorm_fu_2229_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_polyveck_invntt_tomo_fu_2133_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_polyveck_invntt_tomo_fu_2133_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state166) or (ap_const_logic_1 = ap_CS_fsm_state157) or (ap_const_logic_1 = ap_CS_fsm_state93))) then 
                    grp_polyveck_invntt_tomo_fu_2133_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_polyveck_invntt_tomo_fu_2133_ap_ready = ap_const_logic_1)) then 
                    grp_polyveck_invntt_tomo_fu_2133_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_polyveck_pack_w1_fu_2202_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_polyveck_pack_w1_fu_2202_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln371_fu_3783_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state97))) then 
                    grp_polyveck_pack_w1_fu_2202_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_polyveck_pack_w1_fu_2202_ap_ready = ap_const_logic_1)) then 
                    grp_polyveck_pack_w1_fu_2202_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_polyveck_pointwise_p_fu_2209_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_polyveck_pointwise_p_fu_2209_ap_start_reg <= ap_const_logic_0;
            else
                if ((((grp_polyveck_chknorm_fu_2229_ap_return = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state164) and (grp_polyveck_chknorm_fu_2229_ap_done = ap_const_logic_1)) or ((icmp_ln158_fu_4927_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state153)))) then 
                    grp_polyveck_pointwise_p_fu_2209_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_polyveck_pointwise_p_fu_2209_ap_ready = ap_const_logic_1)) then 
                    grp_polyveck_pointwise_p_fu_2209_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_polyveck_reduce_fu_2242_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_polyveck_reduce_fu_2242_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state168) or ((icmp_ln28_fu_3771_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state90)) or ((icmp_ln252_fu_5017_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state159)))) then 
                    grp_polyveck_reduce_fu_2242_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_polyveck_reduce_fu_2242_ap_ready = ap_const_logic_1)) then 
                    grp_polyveck_reduce_fu_2242_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_polyvecl_pointwise_a_fu_2176_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_polyvecl_pointwise_a_fu_2176_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln28_fu_3771_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state90))) then 
                    grp_polyvecl_pointwise_a_fu_2176_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_polyvecl_pointwise_a_fu_2176_ap_ready = ap_const_logic_1)) then 
                    grp_polyvecl_pointwise_a_fu_2176_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_rej_uniform_fu_2185_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rej_uniform_fu_2185_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state51))) then 
                    grp_rej_uniform_fu_2185_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rej_uniform_fu_2185_ap_ready = ap_const_logic_1)) then 
                    grp_rej_uniform_fu_2185_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_shake128_squeezebloc_fu_2089_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_shake128_squeezebloc_fu_2089_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state49) or ((icmp_ln380_fu_3528_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state66)))) then 
                    grp_shake128_squeezebloc_fu_2089_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_shake128_squeezebloc_fu_2089_ap_ready = ap_const_logic_1)) then 
                    grp_shake128_squeezebloc_fu_2089_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_unpack_sk_fu_2116_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_unpack_sk_fu_2116_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln207_fu_2294_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_unpack_sk_fu_2116_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_unpack_sk_fu_2116_ap_ready = ap_const_logic_1)) then 
                    grp_unpack_sk_fu_2116_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    buflen_0_i_reg_1475_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((grp_rej_uniform_fu_2185_ap_done = ap_const_logic_1)) then
                if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
                                        buflen_0_i_reg_1475(2 downto 0) <= zext_ln384_reg_5784(2 downto 0);                    buflen_0_i_reg_1475(8 downto 4) <= zext_ln384_reg_5784(8 downto 4);
                elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                    buflen_0_i_reg_1475(0) <= '0';
                    buflen_0_i_reg_1475(1) <= '0';
                    buflen_0_i_reg_1475(2) <= '0';
                    buflen_0_i_reg_1475(4) <= '0';
                    buflen_0_i_reg_1475(5) <= '0';
                    buflen_0_i_reg_1475(6) <= '1';
                    buflen_0_i_reg_1475(7) <= '0';
                    buflen_0_i_reg_1475(8) <= '1';
                end if;
            end if; 
        end if;
    end process;

    ctr_0_i_reg_1465_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((grp_rej_uniform_fu_2185_ap_done = ap_const_logic_1)) then
                if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
                    ctr_0_i_reg_1465 <= ctr_2_fu_3583_p2;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                    ctr_0_i_reg_1465 <= grp_rej_uniform_fu_2185_ap_return;
                end if;
            end if; 
        end if;
    end process;

    i_0_i100_reg_1888_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln181_fu_4697_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state143))) then 
                i_0_i100_reg_1888 <= i_90_reg_6273;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state141) and (grp_ntt_fu_2157_ap_done = ap_const_logic_1))) then 
                i_0_i100_reg_1888 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_0_i106_reg_1910_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln114_fu_4673_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state142))) then 
                i_0_i106_reg_1910 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state146) and (grp_invntt_tomont_fu_2140_ap_done = ap_const_logic_1))) then 
                i_0_i106_reg_1910 <= i_91_reg_6309;
            end if; 
        end if;
    end process;

    i_0_i108_reg_1922_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln107_fu_4783_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state145))) then 
                i_0_i108_reg_1922 <= ap_const_lv3_0;
            elsif (((icmp_ln87_fu_4819_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state148))) then 
                i_0_i108_reg_1922 <= i_93_reg_6317;
            end if; 
        end if;
    end process;

    i_0_i116_reg_1944_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln85_fu_4795_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state147))) then 
                i_0_i116_reg_1944 <= ap_const_lv3_0;
            elsif (((icmp_ln32_fu_4881_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state151))) then 
                i_0_i116_reg_1944 <= i_96_reg_6348;
            end if; 
        end if;
    end process;

    i_0_i123_reg_1988_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln108_fu_5041_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state160))) then 
                i_0_i123_reg_1988 <= i_100_reg_6404;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state158) and (grp_polyveck_invntt_tomo_fu_2133_ap_done = ap_const_logic_1))) then 
                i_0_i123_reg_1988 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_0_i131_reg_2010_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_polyveck_chknorm_fu_2229_ap_return = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state171) and (grp_polyveck_chknorm_fu_2229_ap_done = ap_const_logic_1))) then 
                i_0_i131_reg_2010 <= ap_const_lv3_0;
            elsif (((icmp_ln87_1_fu_5099_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state173))) then 
                i_0_i131_reg_2010 <= i_103_reg_6443;
            end if; 
        end if;
    end process;

    i_0_i177_i_reg_1772_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln477_fu_4366_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state125))) then 
                i_0_i177_i_reg_1772 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state129)) then 
                i_0_i177_i_reg_1772 <= i_87_reg_6181;
            end if; 
        end if;
    end process;

    i_0_i63_reg_1487_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                i_0_i63_reg_1487 <= i_77_reg_5774;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
                i_0_i63_reg_1487 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    i_0_i65_reg_1499_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln20_fu_3438_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
                i_0_i65_reg_1499 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state72) and (grp_ntt_1_fu_2164_ap_done = ap_const_logic_1))) then 
                i_0_i65_reg_1499 <= i_74_reg_5807;
            end if; 
        end if;
    end process;

    i_0_i67_reg_1511_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln100_fu_3589_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                i_0_i67_reg_1511 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state74) and (grp_ntt_1_fu_2164_ap_done = ap_const_logic_1))) then 
                i_0_i67_reg_1511 <= i_75_reg_5815;
            end if; 
        end if;
    end process;

    i_0_i69_reg_1523_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln282_fu_3601_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state73))) then 
                i_0_i69_reg_1523 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state76) and (grp_ntt_1_fu_2164_ap_done = ap_const_logic_1))) then 
                i_0_i69_reg_1523 <= i_76_reg_5823;
            end if; 
        end if;
    end process;

    i_0_i74_reg_1546_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state79) and (grp_poly_uniform_gamma1_fu_2078_ap_done = ap_const_logic_1))) then 
                i_0_i74_reg_1546 <= i_78_reg_5859;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
                i_0_i74_reg_1546 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_0_i76_reg_1602_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln125_3_reg_5941 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state87))) then 
                i_0_i76_reg_1602 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state89) and (grp_ntt_1_fu_2164_ap_done = ap_const_logic_1))) then 
                i_0_i76_reg_1602 <= i_79_reg_5948;
            end if; 
        end if;
    end process;

    i_0_i81_reg_1614_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln100_1_fu_3759_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state88))) then 
                i_0_i81_reg_1614 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state91) and (grp_polyvecl_pointwise_a_fu_2176_ap_done = ap_const_logic_1))) then 
                i_0_i81_reg_1614 <= i_80_reg_5956;
            end if; 
        end if;
    end process;

    i_0_i83_reg_1626_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln226_fu_3807_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state98))) then 
                i_0_i83_reg_1626 <= i_81_reg_5964;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state96) and (grp_polyveck_caddq_fu_2237_ap_done = ap_const_logic_1))) then 
                i_0_i83_reg_1626 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_0_i84_reg_1966_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln53_fu_4857_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state150))) then 
                i_0_i84_reg_1966 <= ap_const_lv3_0;
            elsif (((icmp_ln299_fu_4951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state154))) then 
                i_0_i84_reg_1966 <= i_98_reg_6375;
            end if; 
        end if;
    end process;

    i_0_i86_reg_1761_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln47_fu_4391_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state127))) then 
                i_0_i86_reg_1761 <= i_88_fu_4397_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state126)) then 
                i_0_i86_reg_1761 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i_0_i87_reg_2032_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln249_fu_5169_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state177))) then 
                i_0_i87_reg_2032 <= i_105_reg_6474;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state175) and (grp_polyveck_caddq_fu_2237_ap_done = ap_const_logic_1))) then 
                i_0_i87_reg_2032 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_0_i89_reg_1865_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln47_1_fu_4547_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state136))) then 
                i_0_i89_reg_1865 <= i_95_fu_4553_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state135)) then 
                i_0_i89_reg_1865 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i_0_i_i101_reg_1899_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state144)) then 
                i_0_i_i101_reg_1899 <= i_92_reg_6286;
            elsif (((icmp_ln114_fu_4673_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state142))) then 
                i_0_i_i101_reg_1899 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    i_0_i_i109_reg_1933_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state149)) then 
                i_0_i_i109_reg_1933 <= i_97_reg_6330;
            elsif (((icmp_ln85_fu_4795_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state147))) then 
                i_0_i_i109_reg_1933 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    i_0_i_i10_i_i_0_reg_1853_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln47_1_fu_4547_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state136))) then 
                i_0_i_i10_i_i_0_reg_1853 <= add_ln477_1_reg_6213;
            elsif (((grp_KeccakF1600_StatePer_1_fu_2102_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state133))) then 
                i_0_i_i10_i_i_0_reg_1853 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i_0_i_i117_reg_1955_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state152)) then 
                i_0_i_i117_reg_1955 <= i_99_reg_6361;
            elsif (((icmp_ln53_fu_4857_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state150))) then 
                i_0_i_i117_reg_1955 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    i_0_i_i124_reg_1999_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state161)) then 
                i_0_i_i124_reg_1999 <= i_102_reg_6417;
            elsif (((icmp_ln252_fu_5017_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state159))) then 
                i_0_i_i124_reg_1999 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    i_0_i_i132_reg_2021_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state174)) then 
                i_0_i_i132_reg_2021 <= i_104_reg_6456;
            elsif (((icmp_ln234_fu_5075_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state172))) then 
                i_0_i_i132_reg_2021 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    i_0_i_i14_i_i_0_reg_1749_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln47_fu_4391_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state127))) then 
                i_0_i_i14_i_i_0_reg_1749 <= add_ln477_reg_6155;
            elsif (((grp_KeccakF1600_StatePer_1_fu_2102_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state124))) then 
                i_0_i_i14_i_i_0_reg_1749 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i_0_i_i4_i_reg_1215_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln362_fu_2324_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                i_0_i_i4_i_reg_1215 <= i_33_fu_2330_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_unpack_sk_fu_2116_ap_done = ap_const_logic_1))) then 
                i_0_i_i4_i_reg_1215 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i_0_i_i84_reg_1637_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
                i_0_i_i84_reg_1637 <= i_83_reg_5977;
            elsif (((icmp_ln371_fu_3783_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state97))) then 
                i_0_i_i84_reg_1637 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    i_0_i_i85_reg_1977_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln304_fu_5011_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state155))) then 
                i_0_i_i85_reg_1977 <= i_101_reg_6388;
            elsif (((icmp_ln158_fu_4927_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state153))) then 
                i_0_i_i85_reg_1977 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    i_0_i_i88_reg_2055_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state178)) then 
                i_0_i_i88_reg_2055 <= i_106_reg_6490;
            elsif (((icmp_ln158_reg_6371 = ap_const_lv1_1) and (icmp_ln392_fu_5133_p2 = ap_const_lv1_0) and (tmp_12_reg_6436 = ap_const_lv1_0) and (tmp_11_reg_6432 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state176))) then 
                i_0_i_i88_reg_2055 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    i_0_i_i_i136_i_reg_1727_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln542_2_fu_4119_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state114))) then 
                i_0_i_i_i136_i_reg_1727 <= ap_const_lv5_0;
            elsif (((icmp_ln362_3_fu_4294_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state119))) then 
                i_0_i_i_i136_i_reg_1727 <= i_86_fu_4300_p2;
            end if; 
        end if;
    end process;

    i_0_i_i_i_i_reg_1407_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln542_fu_2855_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                i_0_i_i_i_i_reg_1407 <= ap_const_lv5_0;
            elsif (((icmp_ln362_1_fu_3107_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                i_0_i_i_i_i_reg_1407 <= i_39_fu_3113_p2;
            end if; 
        end if;
    end process;

    i_0_i_i_i_reg_1648_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln362_2_fu_3936_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state101))) then 
                i_0_i_i_i_reg_1648 <= i_82_fu_3942_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state100) and (grp_polyveck_pack_w1_fu_2202_ap_done = ap_const_logic_1))) then 
                i_0_i_i_i_reg_1648 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i_0_i_i_reg_1441_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln542_1_fu_3186_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
                i_0_i_i_reg_1441 <= ap_const_lv3_0;
            elsif (((icmp_ln21_fu_3450_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then 
                i_0_i_i_reg_1441 <= i_41_reg_5724;
            end if; 
        end if;
    end process;

    i_0_i_reg_1361_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln426_fu_2692_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                i_0_i_reg_1361 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                i_0_i_reg_1361 <= i_38_reg_5535;
            end if; 
        end if;
    end process;

    i_0_reg_1204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                i_0_reg_1204 <= i_reg_5319;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_0_reg_1204 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    i_1_i_i65_i_reg_1248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln388_fu_2392_p2 = ap_const_lv1_1) and (icmp_ln400_fu_2398_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                i_1_i_i65_i_reg_1248 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_load64_3_fu_2216_ap_done = ap_const_logic_1))) then 
                i_1_i_i65_i_reg_1248 <= i_34_reg_5375;
            end if; 
        end if;
    end process;

    i_1_i_i_i_reg_1670_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln417_3_fu_3958_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state102))) then 
                i_1_i_i_i_reg_1670 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state105) and (grp_load64_3_fu_2216_ap_done = ap_const_logic_1))) then 
                i_1_i_i_i_reg_1670 <= i_84_reg_6021;
            end if; 
        end if;
    end process;

    i_1_i_i_reg_1796_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln525_fu_4444_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state128))) then 
                i_1_i_i_reg_1796 <= ap_const_lv9_0;
            elsif (((icmp_ln529_fu_4493_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state130))) then 
                i_1_i_i_reg_1796 <= i_89_fu_4499_p2;
            end if; 
        end if;
    end process;

    i_2_i_i73_i_reg_1317_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln409_fu_2475_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                i_2_i_i73_i_reg_1317 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (grp_load64_3_fu_2216_ap_done = ap_const_logic_1))) then 
                i_2_i_i73_i_reg_1317 <= i_35_reg_5428;
            end if; 
        end if;
    end process;

    i_2_i_i_i_reg_1705_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln409_1_fu_4029_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state107))) then 
                i_2_i_i_i_reg_1705 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state109) and (grp_load64_3_fu_2216_ap_done = ap_const_logic_1))) then 
                i_2_i_i_i_reg_1705 <= i_85_reg_6042;
            end if; 
        end if;
    end process;

    i_2_i_i_reg_1807_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln529_fu_4493_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state130))) then 
                i_2_i_i_reg_1807 <= ap_const_lv9_D9;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state140)) then 
                i_2_i_i_reg_1807 <= i_94_reg_6265;
            end if; 
        end if;
    end process;

    i_3_i_i119_i_reg_1226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln362_fu_2324_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                i_3_i_i119_i_reg_1226 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_load64_2_fu_2223_ap_done = ap_const_logic_1))) then 
                i_3_i_i119_i_reg_1226 <= add_ln417_reg_5345;
            end if; 
        end if;
    end process;

    i_3_i_i1_reg_1429_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
                i_3_i_i1_reg_1429 <= add_ln542_1_reg_5671;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state40) and (grp_KeccakF1600_StatePer_fu_2109_ap_done = ap_const_logic_1))) then 
                i_3_i_i1_reg_1429 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_3_i_i37_i_reg_1659_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln362_2_fu_3936_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state101))) then 
                i_3_i_i37_i_reg_1659 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state103) and (grp_load64_2_fu_2223_ap_done = ap_const_logic_1))) then 
                i_3_i_i37_i_reg_1659 <= add_ln417_3_reg_6003;
            end if; 
        end if;
    end process;

    i_3_i_i45_reg_1716_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state118)) then 
                i_3_i_i45_reg_1716 <= add_ln542_2_reg_6070;
            elsif (((grp_KeccakF1600_StatePer_1_fu_2102_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state113))) then 
                i_3_i_i45_reg_1716 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_3_i_i78_i_reg_1328_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_load64_3_fu_2216_ap_done = ap_const_logic_1))) then 
                i_3_i_i78_i_reg_1328 <= add_ln417_1_reg_5456;
            elsif (((icmp_ln409_fu_2475_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                i_3_i_i78_i_reg_1328 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i_3_i_i_i166_i_reg_1738_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln362_3_fu_4294_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state119))) then 
                i_3_i_i_i166_i_reg_1738 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state121) and (grp_load64_3_fu_2216_ap_done = ap_const_logic_1))) then 
                i_3_i_i_i166_i_reg_1738 <= add_ln417_4_reg_6136;
            end if; 
        end if;
    end process;

    i_3_i_i_i_i_reg_1418_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln362_1_fu_3107_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                i_3_i_i_i_i_reg_1418 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state37) and (grp_load64_2_fu_2223_ap_done = ap_const_logic_1))) then 
                i_3_i_i_i_i_reg_1418 <= add_ln417_2_reg_5640;
            end if; 
        end if;
    end process;

    i_3_i_i_reg_1395_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
                i_3_i_i_reg_1395 <= add_ln542_reg_5579;
            elsif (((grp_KeccakF1600_StatePer_1_fu_2102_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                i_3_i_i_reg_1395 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_4_i_i80_i_reg_1339_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln417_1_fu_2566_p2 = ap_const_lv1_1) and (icmp_ln423_fu_2653_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                i_4_i_i80_i_reg_1339 <= ap_const_lv4_0;
            elsif (((icmp_ln424_fu_2659_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                i_4_i_i80_i_reg_1339 <= i_36_fu_2665_p2;
            end if; 
        end if;
    end process;

    i_5_i_i84_i_reg_1350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln424_fu_2659_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                i_5_i_i84_i_reg_1350 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                i_5_i_i84_i_reg_1350 <= i_37_reg_5522;
            end if; 
        end if;
    end process;

    indvars_iv_i_i71_i_reg_1294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                indvars_iv_i_i71_i_reg_1294 <= ap_phi_mux_p_2_i_i69_i_phi_fu_1287_p4;
            elsif (((grp_KeccakF1600_StatePer_1_fu_2102_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                indvars_iv_i_i71_i_reg_1294 <= add_ln415_1_reg_5448;
            end if; 
        end if;
    end process;

    indvars_iv_i_i_i_reg_1681_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((grp_KeccakF1600_StatePer_1_fu_2102_ap_done = ap_const_logic_1)) then
                if ((ap_const_logic_1 = ap_CS_fsm_state106)) then 
                    indvars_iv_i_i_i_reg_1681 <= ap_const_lv10_2A8;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state110)) then 
                    indvars_iv_i_i_i_reg_1681 <= add_ln415_reg_6062;
                end if;
            end if; 
        end if;
    end process;

    j_0_i_i_reg_1453_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln20_fu_3438_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
                j_0_i_i_reg_1453 <= ap_const_lv3_0;
            elsif (((icmp_ln378_fu_3495_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state53))) then 
                j_0_i_i_reg_1453 <= j_reg_5732;
            end if; 
        end if;
    end process;

    n_reg_2043_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln249_fu_5169_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state177))) then 
                n_reg_2043 <= s_fu_5200_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state175) and (grp_polyveck_caddq_fu_2237_ap_done = ap_const_logic_1))) then 
                n_reg_2043 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    nonce_assign_1_reg_1535_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln282_1_fu_3613_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state75))) then 
                nonce_assign_1_reg_1535 <= ap_const_lv16_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state176) and ((icmp_ln158_reg_6371 = ap_const_lv1_0) or ((tmp_11_reg_6432 = ap_const_lv1_1) or ((tmp_12_reg_6436 = ap_const_lv1_1) or ((icmp_ln173_fu_5157_p2 = ap_const_lv1_1) and (icmp_ln392_fu_5133_p2 = ap_const_lv1_1))))))) then 
                nonce_assign_1_reg_1535 <= nonce_reg_5846;
            end if; 
        end if;
    end process;

    p_23_i_i68_i_reg_1271_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln388_fu_2392_p2 = ap_const_lv1_1) and (icmp_ln400_fu_2398_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                p_23_i_i68_i_reg_1271(4) <= '1';
            elsif (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (icmp_ln400_reg_5368 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                p_23_i_i68_i_reg_1271(4) <= '0';
            end if; 
        end if;
    end process;

    p_2_i_i69_i_reg_1284_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln388_fu_2392_p2 = ap_const_lv1_1) and (icmp_ln400_fu_2398_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                p_2_i_i69_i_reg_1284 <= mlen;
            elsif (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (icmp_ln400_reg_5368 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                p_2_i_i69_i_reg_1284 <= add_ln404_fu_2453_p2;
            end if; 
        end if;
    end process;

    p_38_rec_i_i72_i_reg_1305_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                p_38_rec_i_i72_i_reg_1305 <= ap_const_lv64_0;
            elsif (((grp_KeccakF1600_StatePer_1_fu_2102_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                p_38_rec_i_i72_i_reg_1305 <= add_ln412_reg_5443;
            end if; 
        end if;
    end process;

    p_38_rec_i_i_i_reg_1693_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((grp_KeccakF1600_StatePer_1_fu_2102_ap_done = ap_const_logic_1)) then
                if ((ap_const_logic_1 = ap_CS_fsm_state106)) then 
                    p_38_rec_i_i_i_reg_1693 <= ap_const_lv10_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state110)) then 
                    p_38_rec_i_i_i_reg_1693 <= add_ln412_1_reg_6057;
                end if;
            end if; 
        end if;
    end process;

    phi_ln125_1_reg_1569_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln125_reg_5884 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state81))) then 
                phi_ln125_1_reg_1569 <= ap_const_lv8_0;
            elsif (((icmp_ln125_1_reg_5903 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state83))) then 
                phi_ln125_1_reg_1569 <= add_ln125_1_reg_5888;
            end if; 
        end if;
    end process;

    phi_ln125_2_reg_1580_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln125_1_reg_5903 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state83))) then 
                phi_ln125_2_reg_1580 <= ap_const_lv8_0;
            elsif (((icmp_ln125_2_reg_5922 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state85))) then 
                phi_ln125_2_reg_1580 <= add_ln125_2_reg_5907;
            end if; 
        end if;
    end process;

    phi_ln125_3_reg_1591_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln125_2_reg_5922 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state85))) then 
                phi_ln125_3_reg_1591 <= ap_const_lv8_0;
            elsif (((icmp_ln125_3_reg_5941 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state87))) then 
                phi_ln125_3_reg_1591 <= add_ln125_3_reg_5926;
            end if; 
        end if;
    end process;

    phi_ln125_reg_1558_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln46_fu_3637_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state78))) then 
                phi_ln125_reg_1558 <= ap_const_lv8_0;
            elsif (((icmp_ln125_reg_5884 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state81))) then 
                phi_ln125_reg_1558 <= add_ln125_reg_5869;
            end if; 
        end if;
    end process;

    phi_ln388_reg_1237_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln417_fu_2346_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                phi_ln388_reg_1237 <= ap_const_lv3_0;
            elsif (((icmp_ln388_fu_2392_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                phi_ln388_reg_1237 <= add_ln388_fu_2381_p2;
            end if; 
        end if;
    end process;

    phi_ln403_reg_1259_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln388_fu_2392_p2 = ap_const_lv1_1) and (icmp_ln400_fu_2398_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                phi_ln403_reg_1259(3) <= '0';
                phi_ln403_reg_1259(4) <= '1';
                phi_ln403_reg_1259(5) <= '1';
                phi_ln403_reg_1259(7) <= '0';
            elsif (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (icmp_ln400_reg_5368 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                phi_ln403_reg_1259(3) <= '1';
                phi_ln403_reg_1259(4) <= '0';
                phi_ln403_reg_1259(5) <= '0';
                phi_ln403_reg_1259(7) <= '1';
            end if; 
        end if;
    end process;

    pos_0_i_i_reg_1819_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln529_fu_4493_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state130))) then 
                pos_0_i_i_reg_1819 <= ap_const_lv32_8;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state140)) then 
                pos_0_i_i_reg_1819 <= pos_reg_6236;
            end if; 
        end if;
    end process;

    pos_1_i_i_reg_1842_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln531_fu_4510_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state131))) then 
                pos_1_i_i_reg_1842 <= pos_0_i_i_reg_1819;
            elsif (((icmp_ln539_fu_4615_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state138))) then 
                pos_1_i_i_reg_1842 <= pos_reg_6236;
            end if; 
        end if;
    end process;

    pos_2_i_i_reg_1876_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln477_1_fu_4522_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state134))) then 
                pos_2_i_i_reg_1876 <= ap_const_lv32_0;
            elsif (((icmp_ln533_fu_4516_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state132))) then 
                pos_2_i_i_reg_1876 <= pos_1_i_i_reg_1842;
            end if; 
        end if;
    end process;

    r_0_i_reg_1373_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln426_fu_2692_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                r_0_i_reg_1373 <= ap_const_lv64_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                r_0_i_reg_1373 <= r_fu_2778_p2;
            end if; 
        end if;
    end process;

    reg_2261_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state135)) then 
                reg_2261 <= state_s_1_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state126)) then 
                reg_2261 <= state_s_1_q1;
            end if; 
        end if;
    end process;

    s_0_i_i_reg_2066_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state178)) then 
                s_0_i_i_reg_2066 <= s_1_fu_5263_p2;
            elsif (((icmp_ln158_reg_6371 = ap_const_lv1_1) and (icmp_ln392_fu_5133_p2 = ap_const_lv1_0) and (tmp_12_reg_6436 = ap_const_lv1_0) and (tmp_11_reg_6432 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state176))) then 
                s_0_i_i_reg_2066 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    signs_0_i_i_reg_1784_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln477_fu_4366_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state125))) then 
                signs_0_i_i_reg_1784 <= ap_const_lv64_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state129)) then 
                signs_0_i_i_reg_1784 <= signs_fu_4487_p2;
            end if; 
        end if;
    end process;

    signs_1_i_i_reg_1831_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln529_fu_4493_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state130))) then 
                signs_1_i_i_reg_1831 <= signs_0_i_i_reg_1784;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state140)) then 
                signs_1_i_i_reg_1831 <= signs_2_reg_6260;
            end if; 
        end if;
    end process;

    state_pos_reg_1385_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln423_fu_2653_p2 = ap_const_lv1_1) and (icmp_ln417_1_fu_2566_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                state_pos_reg_1385 <= zext_ln421_fu_2649_p1;
            elsif (((icmp_ln423_reg_5497 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                state_pos_reg_1385 <= add_ln429_fu_2791_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state82)) then
                add_ln125_1_reg_5888 <= add_ln125_1_fu_3681_p2;
                icmp_ln125_1_reg_5903 <= icmp_ln125_1_fu_3696_p2;
                    tmp_31_reg_5893(7 downto 0) <= tmp_31_fu_3687_p3(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state84)) then
                add_ln125_2_reg_5907 <= add_ln125_2_fu_3707_p2;
                icmp_ln125_2_reg_5922 <= icmp_ln125_2_fu_3722_p2;
                    tmp_32_reg_5912(7 downto 0) <= tmp_32_fu_3713_p3(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state86)) then
                add_ln125_3_reg_5926 <= add_ln125_3_fu_3733_p2;
                icmp_ln125_3_reg_5941 <= icmp_ln125_3_fu_3748_p2;
                    tmp_33_reg_5931(7 downto 0) <= tmp_33_fu_3739_p3(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state80)) then
                add_ln125_reg_5869 <= add_ln125_fu_3659_p2;
                icmp_ln125_reg_5884 <= icmp_ln125_fu_3670_p2;
                    zext_ln125_reg_5874(7 downto 0) <= zext_ln125_fu_3665_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                add_ln208_1_reg_5311 <= add_ln208_1_fu_2280_p2;
                add_ln208_reg_5306 <= add_ln208_fu_2270_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln410_fu_2513_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                add_ln411_reg_5433 <= add_ln411_fu_2543_p2;
                state_s_2_addr_4_reg_5438 <= zext_ln411_1_fu_2549_p1(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln410_1_fu_4035_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state108))) then
                add_ln412_1_reg_6057 <= add_ln412_1_fu_4081_p2;
                add_ln415_reg_6062 <= add_ln415_fu_4087_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln410_fu_2513_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                add_ln412_reg_5443 <= add_ln412_fu_2554_p2;
                add_ln415_1_reg_5448 <= add_ln415_1_fu_2560_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                add_ln417_1_reg_5456 <= add_ln417_1_fu_2571_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                add_ln417_2_reg_5640 <= add_ln417_2_fu_3135_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state102)) then
                add_ln417_3_reg_6003 <= add_ln417_3_fu_3964_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state120)) then
                add_ln417_4_reg_6136 <= add_ln417_4_fu_4322_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln417_reg_5345 <= add_ln417_fu_2352_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln417_1_fu_2566_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                add_ln418_2_reg_5461 <= add_ln418_2_fu_2599_p2;
                state_s_2_addr_3_reg_5466 <= zext_ln418_4_fu_2610_p1(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln417_2_fu_3129_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    add_ln418_4_reg_5645(7 downto 3) <= add_ln418_4_fu_3153_p2(7 downto 3);
                    state_0_s_addr_3_reg_5650(3 downto 0) <= zext_ln417_1_fu_3124_p1(5 - 1 downto 0)(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln417_3_fu_3958_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state102))) then
                    add_ln418_5_reg_6008(7 downto 3) <= add_ln418_5_fu_3982_p2(7 downto 3);
                    state_s_2_addr_11_reg_6013(2 downto 0) <= zext_ln417_2_fu_3953_p1(5 - 1 downto 0)(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln417_1_fu_2566_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    add_ln421_reg_5486(8 downto 3) <= add_ln421_fu_2644_p2(8 downto 3);
                icmp_ln423_reg_5497 <= icmp_ln423_fu_2653_p2;
                sub_ln420_reg_5476 <= sub_ln420_fu_2634_p2;
                trunc_ln420_reg_5481 <= trunc_ln420_fu_2640_p1;
                    zext_ln420_reg_5471(7 downto 3) <= zext_ln420_fu_2630_p1(7 downto 3);
                    zext_ln421_reg_5491(8 downto 3) <= zext_ln421_fu_2649_p1(8 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln424_fu_2659_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                add_ln427_reg_5509 <= add_ln427_fu_2676_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state134)) then
                add_ln477_1_reg_6213 <= add_ln477_1_fu_4528_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state125)) then
                add_ln477_reg_6155 <= add_ln477_fu_4372_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln46_fu_3637_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state78))) then
                add_ln47_reg_5864 <= add_ln47_fu_3653_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                add_ln542_1_reg_5671 <= add_ln542_1_fu_3192_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state114)) then
                add_ln542_2_reg_6070 <= add_ln542_2_fu_4125_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                add_ln542_reg_5579 <= add_ln542_fu_2861_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln539_fu_4615_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state138))) then
                cp_coeffs_addr_2_reg_6250 <= zext_ln541_fu_4621_p1(8 - 1 downto 0);
                    signs_2_reg_6260(62 downto 0) <= signs_2_fu_4640_p1(62 downto 0);
                trunc_ln542_reg_6255 <= trunc_ln542_fu_4626_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state159)) then
                i_100_reg_6404 <= i_100_fu_5023_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state154)) then
                i_101_reg_6388 <= i_101_fu_4957_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state160)) then
                i_102_reg_6417 <= i_102_fu_5047_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state172)) then
                i_103_reg_6443 <= i_103_fu_5081_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state173)) then
                i_104_reg_6456 <= i_104_fu_5105_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln158_reg_6371 = ap_const_lv1_1) and (tmp_12_reg_6436 = ap_const_lv1_0) and (tmp_11_reg_6432 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state176))) then
                i_105_reg_6474 <= i_105_fu_5139_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state177)) then
                i_106_reg_6490 <= i_106_fu_5175_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                i_34_reg_5375 <= i_34_fu_2413_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                i_35_reg_5428 <= i_35_fu_2519_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                i_37_reg_5522 <= i_37_fu_2697_p2;
                    zext_ln426_reg_5514(31 downto 0) <= zext_ln426_fu_2680_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                i_38_reg_5535 <= i_38_fu_2724_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state46)) then
                i_41_reg_5724 <= i_41_fu_3444_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then
                i_74_reg_5807 <= i_74_fu_3595_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state73)) then
                i_75_reg_5815 <= i_75_fu_3607_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state75)) then
                i_76_reg_5823 <= i_76_fu_3619_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state66)) then
                i_77_reg_5774 <= i_77_fu_3533_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state78)) then
                i_78_reg_5859 <= i_78_fu_3643_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state88)) then
                i_79_reg_5948 <= i_79_fu_3765_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state90)) then
                i_80_reg_5956 <= i_80_fu_3777_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state97)) then
                i_81_reg_5964 <= i_81_fu_3789_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state98)) then
                i_83_reg_5977 <= i_83_fu_3813_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state104)) then
                i_84_reg_6021 <= i_84_fu_3999_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state108)) then
                i_85_reg_6042 <= i_85_fu_4041_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state128)) then
                i_87_reg_6181 <= i_87_fu_4450_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state142)) then
                i_90_reg_6273 <= i_90_fu_4679_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state145)) then
                i_91_reg_6309 <= i_91_fu_4789_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state143)) then
                i_92_reg_6286 <= i_92_fu_4703_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state147)) then
                i_93_reg_6317 <= i_93_fu_4801_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state139)) then
                i_94_reg_6265 <= i_94_fu_4649_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state150)) then
                i_96_reg_6348 <= i_96_fu_4863_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state148)) then
                i_97_reg_6330 <= i_97_fu_4825_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state153)) then
                i_98_reg_6375 <= i_98_fu_4933_p2;
                icmp_ln158_reg_6371 <= icmp_ln158_fu_4927_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state151)) then
                i_99_reg_6361 <= i_99_fu_4887_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_5319 <= i_fu_2299_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln388_fu_2392_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                icmp_ln400_reg_5368 <= icmp_ln400_fu_2398_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then
                j_reg_5732 <= j_fu_3456_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_fu_3450_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state47))) then
                    nonce_assign_reg_5737(2 downto 0) <= nonce_assign_fu_3466_p4(2 downto 0);    nonce_assign_reg_5737(9 downto 8) <= nonce_assign_fu_3466_p4(9 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state77)) then
                nonce_reg_5846 <= nonce_fu_3625_p2;
                    shl_ln47_reg_5851(15 downto 2) <= shl_ln47_fu_3631_p2(15 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state137)) then
                pos_reg_6236 <= pos_fu_4600_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then
                    shl_ln18_reg_5589(5 downto 3) <= shl_ln18_fu_2872_p3(5 downto 3);
                trunc_ln10_reg_5624 <= state_s_2_q0(63 downto 56);
                trunc_ln5_reg_5599 <= state_s_2_q0(23 downto 16);
                trunc_ln6_reg_5604 <= state_s_2_q0(31 downto 24);
                trunc_ln7_reg_5609 <= state_s_2_q0(39 downto 32);
                trunc_ln8_reg_5614 <= state_s_2_q0(47 downto 40);
                trunc_ln9_reg_5619 <= state_s_2_q0(55 downto 48);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state126)) then
                    shl_ln19_reg_6165(7 downto 3) <= shl_ln19_fu_4383_p3(7 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state135)) then
                    shl_ln478_1_reg_6223(7 downto 3) <= shl_ln478_1_fu_4539_p3(7 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                    shl_ln543_1_reg_5681(5 downto 3) <= shl_ln543_1_fu_3203_p3(5 downto 3);
                trunc_ln545_1_reg_5691 <= state_0_s_q1(23 downto 16);
                trunc_ln546_1_reg_5696 <= state_0_s_q1(31 downto 24);
                trunc_ln547_1_reg_5701 <= state_0_s_q1(39 downto 32);
                trunc_ln548_1_reg_5706 <= state_0_s_q1(47 downto 40);
                trunc_ln549_1_reg_5711 <= state_0_s_q1(55 downto 48);
                trunc_ln550_1_reg_5716 <= state_0_s_q1(63 downto 56);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state115)) then
                    shl_ln543_2_reg_6085(4 downto 3) <= shl_ln543_2_fu_4140_p3(4 downto 3);
                trunc_ln545_2_reg_6095 <= state_s_2_q1(23 downto 16);
                trunc_ln546_2_reg_6100 <= state_s_2_q1(31 downto 24);
                trunc_ln547_2_reg_6105 <= state_s_2_q1(39 downto 32);
                trunc_ln548_2_reg_6110 <= state_s_2_q1(47 downto 40);
                trunc_ln549_2_reg_6115 <= state_s_2_q1(55 downto 48);
                trunc_ln550_2_reg_6120 <= state_s_2_q1(63 downto 56);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln417_4_fu_4316_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state120))) then
                    state_s_1_addr_3_reg_6146(2 downto 0) <= zext_ln417_3_fu_4311_p1(5 - 1 downto 0)(2 downto 0);
                    zext_ln418_7_reg_6141(4 downto 3) <= zext_ln418_7_fu_4340_p1(4 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln401_1_fu_3993_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state104))) then
                state_s_2_addr_12_reg_6031 <= zext_ln402_4_fu_4024_p1(5 - 1 downto 0);
                    zext_ln402_3_reg_6026(6 downto 3) <= zext_ln402_3_fu_4013_p1(6 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln410_1_fu_4035_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state108))) then
                state_s_2_addr_14_reg_6052 <= zext_ln411_4_fu_4076_p1(5 - 1 downto 0);
                    zext_ln411_3_reg_6047(9 downto 0) <= zext_ln411_3_fu_4071_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln417_fu_2346_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    state_s_2_addr_1_reg_5355(2 downto 0) <= zext_ln417_fu_2341_p1(5 - 1 downto 0)(2 downto 0);
                    zext_ln418_1_reg_5350(6 downto 3) <= zext_ln418_1_fu_2376_p1(6 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln401_fu_2407_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                state_s_2_addr_2_reg_5385 <= zext_ln402_2_fu_2448_p1(5 - 1 downto 0);
                    zext_ln402_1_reg_5380(11 downto 3) <= zext_ln402_1_fu_2437_p1(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln30_fu_2718_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                state_s_2_addr_5_reg_5545 <= zext_ln428_fu_2744_p1(5 - 1 downto 0);
                trunc_ln429_reg_5550 <= trunc_ln429_fu_2749_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                state_s_2_addr_6_reg_5565 <= zext_ln451_1_fu_2809_p1(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln207_fu_2294_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                sub_ln208_1_reg_5329 <= sub_ln208_1_fu_2315_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state65)) then
                sub_ln381_reg_5766 <= sub_ln381_fu_3519_p2;
                trunc_ln379_1_reg_5760 <= trunc_ln379_1_fu_3511_p1;
                trunc_ln379_reg_5755 <= trunc_ln379_fu_3507_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state69)) then
                sub_ln385_reg_5789 <= sub_ln385_fu_3571_p2;
                    zext_ln384_reg_5784(2 downto 0) <= zext_ln384_fu_3563_p1(2 downto 0);    zext_ln384_reg_5784(4) <= zext_ln384_fu_3563_p1(4);    zext_ln384_reg_5784(6) <= zext_ln384_fu_3563_p1(6);
                    zext_ln385_reg_5794(2 downto 0) <= zext_ln385_fu_3578_p1(2 downto 0);    zext_ln385_reg_5794(4) <= zext_ln385_fu_3578_p1(4);    zext_ln385_reg_5794(6) <= zext_ln385_fu_3578_p1(6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state164) and (grp_polyveck_chknorm_fu_2229_ap_done = ap_const_logic_1))) then
                tmp_11_reg_6432 <= grp_polyveck_chknorm_fu_2229_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state171) and (grp_polyveck_chknorm_fu_2229_ap_done = ap_const_logic_1))) then
                tmp_12_reg_6436 <= grp_polyveck_chknorm_fu_2229_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln409_fu_2475_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                tmp_30_reg_5419 <= indvars_iv_i_i71_i_reg_1294(7 downto 3);
                trunc_ln409_reg_5409 <= trunc_ln409_fu_2481_p1;
                    zext_ln418_2_reg_5414(2 downto 1) <= zext_ln418_2_fu_2499_p1(2 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln542_2_fu_4119_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state114))) then
                trunc_ln543_3_reg_6080 <= trunc_ln543_3_fu_4131_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln108_fu_5041_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state160))) then
                w0_vec_coeffs_addr_1_reg_6422 <= zext_ln109_1_fu_5062_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln87_1_fu_5099_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state173))) then
                w0_vec_coeffs_addr_2_reg_6461 <= zext_ln88_6_fu_5120_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln226_fu_3807_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state98))) then
                w1_vec_coeffs_addr_reg_5987 <= zext_ln227_1_fu_3828_p1(10 - 1 downto 0);
                    zext_ln227_1_reg_5982(11 downto 0) <= zext_ln227_1_fu_3828_p1(11 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln87_fu_4819_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state148))) then
                z_vec_coeffs_addr_5_reg_6340 <= zext_ln88_4_fu_4840_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln32_fu_4881_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state151))) then
                z_vec_coeffs_addr_6_reg_6366 <= zext_ln33_2_fu_4902_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln252_fu_5017_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state159))) then
                    zext_ln104_reg_6409(10 downto 8) <= zext_ln104_fu_5037_p1(10 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln114_fu_4673_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state142))) then
                    zext_ln177_reg_6278(10 downto 8) <= zext_ln177_fu_4693_p1(10 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln181_fu_4697_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state143))) then
                    zext_ln182_17_reg_6291(11 downto 0) <= zext_ln182_17_fu_4723_p1(11 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln371_fu_3783_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state97))) then
                    zext_ln222_reg_5969(10 downto 8) <= zext_ln222_fu_3803_p1(10 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln158_reg_6371 = ap_const_lv1_1) and (icmp_ln392_fu_5133_p2 = ap_const_lv1_0) and (tmp_12_reg_6436 = ap_const_lv1_0) and (tmp_11_reg_6432 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state176))) then
                    zext_ln245_reg_6479(10 downto 8) <= zext_ln245_fu_5153_p1(10 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln249_fu_5169_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state177))) then
                    zext_ln250_1_reg_6495(11 downto 0) <= zext_ln250_1_fu_5190_p1(11 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln158_fu_4927_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state153))) then
                    zext_ln288_reg_6380(10 downto 8) <= zext_ln288_fu_4947_p1(10 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln53_fu_4857_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state150))) then
                    zext_ln28_reg_6353(10 downto 8) <= zext_ln28_fu_4877_p1(10 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then
                    zext_ln378_reg_5747(2 downto 0) <= zext_ln378_fu_3481_p1(2 downto 0);    zext_ln378_reg_5747(9 downto 4) <= zext_ln378_fu_3481_p1(9 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    zext_ln409_1_reg_5395(5 downto 3) <= zext_ln409_1_fu_2467_p1(5 downto 3);    zext_ln409_1_reg_5395(7) <= zext_ln409_1_fu_2467_p1(7);
                    zext_ln409_2_reg_5401(5 downto 4) <= zext_ln409_2_fu_2471_p1(5 downto 4);
                    zext_ln409_reg_5390(5 downto 3) <= zext_ln409_fu_2463_p1(5 downto 3);    zext_ln409_reg_5390(7) <= zext_ln409_fu_2463_p1(7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln234_fu_5075_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state172))) then
                    zext_ln83_1_reg_6448(10 downto 8) <= zext_ln83_1_fu_5095_p1(10 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln85_fu_4795_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state147))) then
                    zext_ln83_reg_6322(10 downto 8) <= zext_ln83_fu_4815_p1(10 downto 8);
            end if;
        end if;
    end process;
    zext_ln418_1_reg_5350(2 downto 0) <= "000";
    zext_ln418_1_reg_5350(7) <= '0';
    state_s_2_addr_1_reg_5355(4 downto 3) <= "00";
    zext_ln402_1_reg_5380(2 downto 0) <= "100";
    zext_ln402_1_reg_5380(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln409_reg_5390(2 downto 0) <= "100";
    zext_ln409_reg_5390(6 downto 6) <= "1";
    zext_ln409_reg_5390(13 downto 8) <= "001001";
    zext_ln409_1_reg_5395(2 downto 0) <= "100";
    zext_ln409_1_reg_5395(6 downto 6) <= "1";
    zext_ln409_1_reg_5395(63 downto 8) <= "00000000000000000000000000000000000000000000000000001001";
    zext_ln409_2_reg_5401(3 downto 0) <= "0000";
    zext_ln409_2_reg_5401(8 downto 6) <= "000";
    zext_ln418_2_reg_5414(0) <= '0';
    zext_ln418_2_reg_5414(4 downto 3) <= "00";
    zext_ln420_reg_5471(2 downto 0) <= "000";
    zext_ln420_reg_5471(13 downto 8) <= "000000";
    add_ln421_reg_5486(2 downto 0) <= "000";
    zext_ln421_reg_5491(2 downto 0) <= "000";
    zext_ln421_reg_5491(9) <= '0';
    zext_ln426_reg_5514(63 downto 32) <= "00000000000000000000000000000000";
    shl_ln18_reg_5589(2 downto 0) <= "000";
    add_ln418_4_reg_5645(2 downto 0) <= "000";
    state_0_s_addr_3_reg_5650(4) <= '0';
    shl_ln543_1_reg_5681(2 downto 0) <= "000";
    nonce_assign_reg_5737(7 downto 3) <= "00000";
    zext_ln378_reg_5747(3) <= '1';
    zext_ln378_reg_5747(10) <= '0';
    zext_ln384_reg_5784(3) <= '1';
    zext_ln384_reg_5784(5 downto 5) <= "1";
    zext_ln384_reg_5784(8 downto 7) <= "01";
    zext_ln385_reg_5794(3) <= '1';
    zext_ln385_reg_5794(5 downto 5) <= "1";
    zext_ln385_reg_5794(10 downto 7) <= "0001";
    shl_ln47_reg_5851(1 downto 0) <= "00";
    zext_ln125_reg_5874(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    tmp_31_reg_5893(63 downto 8) <= "00000000000000000000000000000000000000000000000000000001";
    tmp_32_reg_5912(63 downto 8) <= "00000000000000000000000000000000000000000000000000000010";
    tmp_33_reg_5931(63 downto 8) <= "00000000000000000000000000000000000000000000000000000011";
    zext_ln222_reg_5969(7 downto 0) <= "00000000";
    zext_ln222_reg_5969(11) <= '0';
    zext_ln227_1_reg_5982(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    add_ln418_5_reg_6008(2 downto 0) <= "000";
    state_s_2_addr_11_reg_6013(4 downto 3) <= "00";
    zext_ln402_3_reg_6026(2 downto 0) <= "000";
    zext_ln402_3_reg_6026(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln411_3_reg_6047(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    shl_ln543_2_reg_6085(2 downto 0) <= "000";
    zext_ln418_7_reg_6141(2 downto 0) <= "000";
    zext_ln418_7_reg_6141(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    state_s_1_addr_3_reg_6146(4 downto 3) <= "00";
    shl_ln19_reg_6165(2 downto 0) <= "000";
    shl_ln478_1_reg_6223(2 downto 0) <= "000";
    signs_2_reg_6260(63) <= '0';
    zext_ln177_reg_6278(7 downto 0) <= "00000000";
    zext_ln177_reg_6278(11) <= '0';
    zext_ln182_17_reg_6291(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln83_reg_6322(7 downto 0) <= "00000000";
    zext_ln83_reg_6322(11) <= '0';
    zext_ln28_reg_6353(7 downto 0) <= "00000000";
    zext_ln28_reg_6353(11) <= '0';
    zext_ln288_reg_6380(7 downto 0) <= "00000000";
    zext_ln288_reg_6380(11) <= '0';
    zext_ln104_reg_6409(7 downto 0) <= "00000000";
    zext_ln104_reg_6409(11) <= '0';
    zext_ln83_1_reg_6448(7 downto 0) <= "00000000";
    zext_ln83_1_reg_6448(11) <= '0';
    zext_ln245_reg_6479(7 downto 0) <= "00000000";
    zext_ln245_reg_6479(11) <= '0';
    zext_ln250_1_reg_6495(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    phi_ln403_reg_1259(2 downto 0) <= "100";
    phi_ln403_reg_1259(6 downto 6) <= "1";
    phi_ln403_reg_1259(11 downto 8) <= "1001";
    p_23_i_i68_i_reg_1271(3 downto 0) <= "0000";
    buflen_0_i_reg_1475(3) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln207_fu_2294_p2, ap_CS_fsm_state5, ap_CS_fsm_state6, icmp_ln417_fu_2346_p2, ap_CS_fsm_state8, icmp_ln400_fu_2398_p2, icmp_ln388_fu_2392_p2, ap_CS_fsm_state9, icmp_ln401_fu_2407_p2, ap_CS_fsm_state11, grp_KeccakF1600_StatePer_1_fu_2102_ap_done, ap_block_state11_on_subcall_done, ap_CS_fsm_state12, icmp_ln409_fu_2475_p2, ap_CS_fsm_state13, icmp_ln410_fu_2513_p2, ap_CS_fsm_state16, icmp_ln417_1_fu_2566_p2, icmp_ln423_fu_2653_p2, ap_CS_fsm_state18, icmp_ln424_fu_2659_p2, ap_CS_fsm_state19, icmp_ln426_fu_2692_p2, ap_CS_fsm_state21, icmp_ln30_fu_2718_p2, ap_CS_fsm_state30, icmp_ln542_fu_2855_p2, ap_CS_fsm_state35, ap_CS_fsm_state36, icmp_ln417_2_fu_3129_p2, ap_CS_fsm_state41, icmp_ln542_1_fu_3186_p2, ap_CS_fsm_state46, ap_CS_fsm_state47, icmp_ln21_fu_3450_p2, ap_CS_fsm_state52, grp_rej_uniform_fu_2185_ap_done, ap_CS_fsm_state53, ap_CS_fsm_state66, icmp_ln380_fu_3528_p2, ap_CS_fsm_state70, ap_CS_fsm_state71, ap_CS_fsm_state73, ap_CS_fsm_state75, icmp_ln282_1_fu_3613_p2, ap_CS_fsm_state78, icmp_ln46_fu_3637_p2, icmp_ln125_reg_5884, icmp_ln125_1_reg_5903, icmp_ln125_2_reg_5922, icmp_ln125_3_reg_5941, ap_CS_fsm_state88, ap_CS_fsm_state90, ap_CS_fsm_state97, icmp_ln371_fu_3783_p2, ap_CS_fsm_state98, icmp_ln226_fu_3807_p2, ap_CS_fsm_state101, ap_CS_fsm_state102, icmp_ln417_3_fu_3958_p2, ap_CS_fsm_state104, icmp_ln401_1_fu_3993_p2, ap_CS_fsm_state108, icmp_ln410_1_fu_4035_p2, ap_CS_fsm_state114, icmp_ln542_2_fu_4119_p2, ap_CS_fsm_state119, ap_CS_fsm_state120, icmp_ln417_4_fu_4316_p2, ap_CS_fsm_state125, icmp_ln477_fu_4366_p2, ap_CS_fsm_state127, ap_CS_fsm_state128, icmp_ln525_fu_4444_p2, ap_CS_fsm_state130, ap_CS_fsm_state134, icmp_ln477_1_fu_4522_p2, ap_CS_fsm_state136, ap_CS_fsm_state138, icmp_ln539_fu_4615_p2, ap_CS_fsm_state142, icmp_ln114_fu_4673_p2, ap_CS_fsm_state143, icmp_ln181_fu_4697_p2, ap_CS_fsm_state145, ap_CS_fsm_state147, icmp_ln85_fu_4795_p2, ap_CS_fsm_state148, icmp_ln87_fu_4819_p2, ap_CS_fsm_state150, icmp_ln53_fu_4857_p2, ap_CS_fsm_state151, icmp_ln32_fu_4881_p2, icmp_ln158_fu_4927_p2, icmp_ln158_reg_6371, ap_CS_fsm_state153, ap_CS_fsm_state154, icmp_ln299_fu_4951_p2, ap_CS_fsm_state159, icmp_ln252_fu_5017_p2, ap_CS_fsm_state160, icmp_ln108_fu_5041_p2, grp_polyveck_chknorm_fu_2229_ap_return, tmp_11_reg_6432, ap_CS_fsm_state164, grp_polyveck_chknorm_fu_2229_ap_done, tmp_12_reg_6436, ap_CS_fsm_state171, ap_CS_fsm_state172, icmp_ln234_fu_5075_p2, ap_CS_fsm_state173, icmp_ln87_1_fu_5099_p2, ap_CS_fsm_state176, icmp_ln392_fu_5133_p2, ap_CS_fsm_state177, icmp_ln249_fu_5169_p2, grp_poly_uniform_gamma1_fu_2078_ap_done, grp_shake128_squeezebloc_fu_2089_ap_done, grp_KeccakF1600_StatePer_fu_2109_ap_done, grp_unpack_sk_fu_2116_ap_done, grp_dilithium_shake128_s_fu_2126_ap_done, grp_polyveck_invntt_tomo_fu_2133_ap_done, grp_invntt_tomont_fu_2140_ap_done, grp_pack_sig_fu_2149_ap_done, grp_ntt_fu_2157_ap_done, grp_ntt_1_fu_2164_ap_done, grp_polyvecl_pointwise_a_fu_2176_ap_done, grp_polyveck_pack_w1_fu_2202_ap_done, grp_polyveck_pointwise_p_fu_2209_ap_done, grp_load64_3_fu_2216_ap_done, grp_load64_2_fu_2223_ap_done, grp_polyveck_caddq_fu_2237_ap_done, grp_polyveck_reduce_fu_2242_ap_done, ap_CS_fsm_state4, icmp_ln362_fu_2324_p2, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state15, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state29, icmp_ln362_1_fu_3107_p2, ap_CS_fsm_state37, ap_CS_fsm_state40, icmp_ln378_fu_3495_p2, icmp_ln20_fu_3438_p2, ap_CS_fsm_state72, ap_CS_fsm_state74, icmp_ln100_fu_3589_p2, ap_CS_fsm_state76, icmp_ln282_fu_3601_p2, icmp_ln173_fu_5157_p2, ap_CS_fsm_state79, ap_CS_fsm_state81, ap_CS_fsm_state83, ap_CS_fsm_state85, ap_CS_fsm_state87, ap_CS_fsm_state89, ap_CS_fsm_state91, icmp_ln100_1_fu_3759_p2, ap_CS_fsm_state96, ap_CS_fsm_state100, icmp_ln362_2_fu_3936_p2, ap_CS_fsm_state103, ap_CS_fsm_state105, ap_CS_fsm_state110, ap_CS_fsm_state106, ap_CS_fsm_state109, ap_CS_fsm_state107, icmp_ln409_1_fu_4029_p2, ap_CS_fsm_state113, icmp_ln362_3_fu_4294_p2, ap_CS_fsm_state121, ap_CS_fsm_state124, icmp_ln47_fu_4391_p2, icmp_ln529_fu_4493_p2, ap_CS_fsm_state131, icmp_ln531_fu_4510_p2, ap_CS_fsm_state133, icmp_ln47_1_fu_4547_p2, ap_CS_fsm_state132, icmp_ln533_fu_4516_p2, ap_CS_fsm_state141, ap_CS_fsm_state146, icmp_ln107_fu_4783_p2, ap_CS_fsm_state155, icmp_ln304_fu_5011_p2, ap_CS_fsm_state158, ap_CS_fsm_state175, ap_CS_fsm_state50, ap_CS_fsm_state68, ap_CS_fsm_state48, ap_CS_fsm_state94, ap_CS_fsm_state167, ap_CS_fsm_state179, icmp_ln28_fu_3771_p2, ap_CS_fsm_state156, ap_CS_fsm_state165, ap_CS_fsm_state92, ap_CS_fsm_state162, ap_CS_fsm_state169)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln207_fu_2294_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_unpack_sk_fu_2116_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln362_fu_2324_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln417_fu_2346_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_load64_2_fu_2223_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln388_fu_2392_p2 = ap_const_lv1_1) and (icmp_ln400_fu_2398_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                elsif (((icmp_ln388_fu_2392_p2 = ap_const_lv1_1) and (icmp_ln400_fu_2398_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((icmp_ln401_fu_2407_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_load64_3_fu_2216_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((icmp_ln409_fu_2475_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                if (((icmp_ln410_fu_2513_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (grp_load64_3_fu_2216_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if (((grp_KeccakF1600_StatePer_1_fu_2102_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if (((icmp_ln417_1_fu_2566_p2 = ap_const_lv1_1) and (icmp_ln423_fu_2653_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                elsif (((icmp_ln423_fu_2653_p2 = ap_const_lv1_1) and (icmp_ln417_1_fu_2566_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_load64_3_fu_2216_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                if (((icmp_ln424_fu_2659_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                if (((icmp_ln426_fu_2692_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state21 => 
                if (((icmp_ln30_fu_2718_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (((grp_KeccakF1600_StatePer_1_fu_2102_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                if (((icmp_ln542_fu_2855_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state35 => 
                if (((icmp_ln362_1_fu_3107_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state36 => 
                if (((icmp_ln417_2_fu_3129_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state37 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state37) and (grp_load64_2_fu_2223_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state40) and (grp_KeccakF1600_StatePer_fu_2109_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_state41 => 
                if (((icmp_ln542_1_fu_3186_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state46 => 
                if (((icmp_ln20_fu_3438_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state46))) then
                    ap_NS_fsm <= ap_ST_fsm_state71;
                else
                    ap_NS_fsm <= ap_ST_fsm_state47;
                end if;
            when ap_ST_fsm_state47 => 
                if (((icmp_ln21_fu_3450_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_state48;
                end if;
            when ap_ST_fsm_state48 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state48) and (grp_dilithium_shake128_s_fu_2126_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state49;
                else
                    ap_NS_fsm <= ap_ST_fsm_state48;
                end if;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state50) and (grp_shake128_squeezebloc_fu_2089_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_state50;
                end if;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                if (((grp_rej_uniform_fu_2185_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when ap_ST_fsm_state53 => 
                if (((icmp_ln378_fu_3495_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state53))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                if (((icmp_ln380_fu_3528_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state66))) then
                    ap_NS_fsm <= ap_ST_fsm_state68;
                else
                    ap_NS_fsm <= ap_ST_fsm_state67;
                end if;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state68 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state68) and (grp_shake128_squeezebloc_fu_2089_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                else
                    ap_NS_fsm <= ap_ST_fsm_state68;
                end if;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                if (((grp_rej_uniform_fu_2185_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state70))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_state70;
                end if;
            when ap_ST_fsm_state71 => 
                if (((icmp_ln100_fu_3589_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then
                    ap_NS_fsm <= ap_ST_fsm_state73;
                else
                    ap_NS_fsm <= ap_ST_fsm_state72;
                end if;
            when ap_ST_fsm_state72 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state72) and (grp_ntt_1_fu_2164_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state71;
                else
                    ap_NS_fsm <= ap_ST_fsm_state72;
                end if;
            when ap_ST_fsm_state73 => 
                if (((icmp_ln282_fu_3601_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state73))) then
                    ap_NS_fsm <= ap_ST_fsm_state75;
                else
                    ap_NS_fsm <= ap_ST_fsm_state74;
                end if;
            when ap_ST_fsm_state74 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state74) and (grp_ntt_1_fu_2164_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state73;
                else
                    ap_NS_fsm <= ap_ST_fsm_state74;
                end if;
            when ap_ST_fsm_state75 => 
                if (((icmp_ln282_1_fu_3613_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state75))) then
                    ap_NS_fsm <= ap_ST_fsm_state77;
                else
                    ap_NS_fsm <= ap_ST_fsm_state76;
                end if;
            when ap_ST_fsm_state76 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state76) and (grp_ntt_1_fu_2164_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state75;
                else
                    ap_NS_fsm <= ap_ST_fsm_state76;
                end if;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                if (((icmp_ln46_fu_3637_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state78))) then
                    ap_NS_fsm <= ap_ST_fsm_state80;
                else
                    ap_NS_fsm <= ap_ST_fsm_state79;
                end if;
            when ap_ST_fsm_state79 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state79) and (grp_poly_uniform_gamma1_fu_2078_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state78;
                else
                    ap_NS_fsm <= ap_ST_fsm_state79;
                end if;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                if (((icmp_ln125_reg_5884 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state81))) then
                    ap_NS_fsm <= ap_ST_fsm_state82;
                else
                    ap_NS_fsm <= ap_ST_fsm_state80;
                end if;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                if (((icmp_ln125_1_reg_5903 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state83))) then
                    ap_NS_fsm <= ap_ST_fsm_state84;
                else
                    ap_NS_fsm <= ap_ST_fsm_state82;
                end if;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                if (((icmp_ln125_2_reg_5922 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state85))) then
                    ap_NS_fsm <= ap_ST_fsm_state86;
                else
                    ap_NS_fsm <= ap_ST_fsm_state84;
                end if;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                if (((icmp_ln125_3_reg_5941 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state87))) then
                    ap_NS_fsm <= ap_ST_fsm_state88;
                else
                    ap_NS_fsm <= ap_ST_fsm_state86;
                end if;
            when ap_ST_fsm_state88 => 
                if (((icmp_ln100_1_fu_3759_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state88))) then
                    ap_NS_fsm <= ap_ST_fsm_state90;
                else
                    ap_NS_fsm <= ap_ST_fsm_state89;
                end if;
            when ap_ST_fsm_state89 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state89) and (grp_ntt_1_fu_2164_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state88;
                else
                    ap_NS_fsm <= ap_ST_fsm_state89;
                end if;
            when ap_ST_fsm_state90 => 
                if (((icmp_ln28_fu_3771_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state90))) then
                    ap_NS_fsm <= ap_ST_fsm_state92;
                else
                    ap_NS_fsm <= ap_ST_fsm_state91;
                end if;
            when ap_ST_fsm_state91 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state91) and (grp_polyvecl_pointwise_a_fu_2176_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state90;
                else
                    ap_NS_fsm <= ap_ST_fsm_state91;
                end if;
            when ap_ST_fsm_state92 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state92) and (grp_polyveck_reduce_fu_2242_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state93;
                else
                    ap_NS_fsm <= ap_ST_fsm_state92;
                end if;
            when ap_ST_fsm_state93 => 
                ap_NS_fsm <= ap_ST_fsm_state94;
            when ap_ST_fsm_state94 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state94) and (grp_polyveck_invntt_tomo_fu_2133_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state95;
                else
                    ap_NS_fsm <= ap_ST_fsm_state94;
                end if;
            when ap_ST_fsm_state95 => 
                ap_NS_fsm <= ap_ST_fsm_state96;
            when ap_ST_fsm_state96 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state96) and (grp_polyveck_caddq_fu_2237_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state97;
                else
                    ap_NS_fsm <= ap_ST_fsm_state96;
                end if;
            when ap_ST_fsm_state97 => 
                if (((icmp_ln371_fu_3783_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state97))) then
                    ap_NS_fsm <= ap_ST_fsm_state98;
                else
                    ap_NS_fsm <= ap_ST_fsm_state100;
                end if;
            when ap_ST_fsm_state98 => 
                if (((icmp_ln226_fu_3807_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state98))) then
                    ap_NS_fsm <= ap_ST_fsm_state97;
                else
                    ap_NS_fsm <= ap_ST_fsm_state99;
                end if;
            when ap_ST_fsm_state99 => 
                ap_NS_fsm <= ap_ST_fsm_state98;
            when ap_ST_fsm_state100 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state100) and (grp_polyveck_pack_w1_fu_2202_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state101;
                else
                    ap_NS_fsm <= ap_ST_fsm_state100;
                end if;
            when ap_ST_fsm_state101 => 
                if (((icmp_ln362_2_fu_3936_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state101))) then
                    ap_NS_fsm <= ap_ST_fsm_state102;
                else
                    ap_NS_fsm <= ap_ST_fsm_state101;
                end if;
            when ap_ST_fsm_state102 => 
                if (((icmp_ln417_3_fu_3958_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state102))) then
                    ap_NS_fsm <= ap_ST_fsm_state104;
                else
                    ap_NS_fsm <= ap_ST_fsm_state103;
                end if;
            when ap_ST_fsm_state103 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state103) and (grp_load64_2_fu_2223_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state102;
                else
                    ap_NS_fsm <= ap_ST_fsm_state103;
                end if;
            when ap_ST_fsm_state104 => 
                if (((icmp_ln401_1_fu_3993_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state104))) then
                    ap_NS_fsm <= ap_ST_fsm_state106;
                else
                    ap_NS_fsm <= ap_ST_fsm_state105;
                end if;
            when ap_ST_fsm_state105 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state105) and (grp_load64_3_fu_2216_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state104;
                else
                    ap_NS_fsm <= ap_ST_fsm_state105;
                end if;
            when ap_ST_fsm_state106 => 
                if (((grp_KeccakF1600_StatePer_1_fu_2102_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state106))) then
                    ap_NS_fsm <= ap_ST_fsm_state107;
                else
                    ap_NS_fsm <= ap_ST_fsm_state106;
                end if;
            when ap_ST_fsm_state107 => 
                if (((icmp_ln409_1_fu_4029_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state107))) then
                    ap_NS_fsm <= ap_ST_fsm_state108;
                else
                    ap_NS_fsm <= ap_ST_fsm_state111;
                end if;
            when ap_ST_fsm_state108 => 
                if (((icmp_ln410_1_fu_4035_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state108))) then
                    ap_NS_fsm <= ap_ST_fsm_state110;
                else
                    ap_NS_fsm <= ap_ST_fsm_state109;
                end if;
            when ap_ST_fsm_state109 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state109) and (grp_load64_3_fu_2216_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state108;
                else
                    ap_NS_fsm <= ap_ST_fsm_state109;
                end if;
            when ap_ST_fsm_state110 => 
                if (((grp_KeccakF1600_StatePer_1_fu_2102_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state110))) then
                    ap_NS_fsm <= ap_ST_fsm_state107;
                else
                    ap_NS_fsm <= ap_ST_fsm_state110;
                end if;
            when ap_ST_fsm_state111 => 
                ap_NS_fsm <= ap_ST_fsm_state112;
            when ap_ST_fsm_state112 => 
                ap_NS_fsm <= ap_ST_fsm_state113;
            when ap_ST_fsm_state113 => 
                if (((grp_KeccakF1600_StatePer_1_fu_2102_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state113))) then
                    ap_NS_fsm <= ap_ST_fsm_state114;
                else
                    ap_NS_fsm <= ap_ST_fsm_state113;
                end if;
            when ap_ST_fsm_state114 => 
                if (((icmp_ln542_2_fu_4119_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state114))) then
                    ap_NS_fsm <= ap_ST_fsm_state119;
                else
                    ap_NS_fsm <= ap_ST_fsm_state115;
                end if;
            when ap_ST_fsm_state115 => 
                ap_NS_fsm <= ap_ST_fsm_state116;
            when ap_ST_fsm_state116 => 
                ap_NS_fsm <= ap_ST_fsm_state117;
            when ap_ST_fsm_state117 => 
                ap_NS_fsm <= ap_ST_fsm_state118;
            when ap_ST_fsm_state118 => 
                ap_NS_fsm <= ap_ST_fsm_state114;
            when ap_ST_fsm_state119 => 
                if (((icmp_ln362_3_fu_4294_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state119))) then
                    ap_NS_fsm <= ap_ST_fsm_state120;
                else
                    ap_NS_fsm <= ap_ST_fsm_state119;
                end if;
            when ap_ST_fsm_state120 => 
                if (((icmp_ln417_4_fu_4316_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state120))) then
                    ap_NS_fsm <= ap_ST_fsm_state122;
                else
                    ap_NS_fsm <= ap_ST_fsm_state121;
                end if;
            when ap_ST_fsm_state121 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state121) and (grp_load64_3_fu_2216_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state120;
                else
                    ap_NS_fsm <= ap_ST_fsm_state121;
                end if;
            when ap_ST_fsm_state122 => 
                ap_NS_fsm <= ap_ST_fsm_state123;
            when ap_ST_fsm_state123 => 
                ap_NS_fsm <= ap_ST_fsm_state124;
            when ap_ST_fsm_state124 => 
                if (((grp_KeccakF1600_StatePer_1_fu_2102_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state124))) then
                    ap_NS_fsm <= ap_ST_fsm_state125;
                else
                    ap_NS_fsm <= ap_ST_fsm_state124;
                end if;
            when ap_ST_fsm_state125 => 
                if (((icmp_ln477_fu_4366_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state125))) then
                    ap_NS_fsm <= ap_ST_fsm_state128;
                else
                    ap_NS_fsm <= ap_ST_fsm_state126;
                end if;
            when ap_ST_fsm_state126 => 
                ap_NS_fsm <= ap_ST_fsm_state127;
            when ap_ST_fsm_state127 => 
                if (((icmp_ln47_fu_4391_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state127))) then
                    ap_NS_fsm <= ap_ST_fsm_state125;
                else
                    ap_NS_fsm <= ap_ST_fsm_state127;
                end if;
            when ap_ST_fsm_state128 => 
                if (((icmp_ln525_fu_4444_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state128))) then
                    ap_NS_fsm <= ap_ST_fsm_state130;
                else
                    ap_NS_fsm <= ap_ST_fsm_state129;
                end if;
            when ap_ST_fsm_state129 => 
                ap_NS_fsm <= ap_ST_fsm_state128;
            when ap_ST_fsm_state130 => 
                if (((icmp_ln529_fu_4493_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state130))) then
                    ap_NS_fsm <= ap_ST_fsm_state131;
                else
                    ap_NS_fsm <= ap_ST_fsm_state130;
                end if;
            when ap_ST_fsm_state131 => 
                if (((icmp_ln531_fu_4510_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state131))) then
                    ap_NS_fsm <= ap_ST_fsm_state132;
                else
                    ap_NS_fsm <= ap_ST_fsm_state141;
                end if;
            when ap_ST_fsm_state132 => 
                if (((icmp_ln533_fu_4516_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state132))) then
                    ap_NS_fsm <= ap_ST_fsm_state137;
                else
                    ap_NS_fsm <= ap_ST_fsm_state133;
                end if;
            when ap_ST_fsm_state133 => 
                if (((grp_KeccakF1600_StatePer_1_fu_2102_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state133))) then
                    ap_NS_fsm <= ap_ST_fsm_state134;
                else
                    ap_NS_fsm <= ap_ST_fsm_state133;
                end if;
            when ap_ST_fsm_state134 => 
                if (((icmp_ln477_1_fu_4522_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state134))) then
                    ap_NS_fsm <= ap_ST_fsm_state137;
                else
                    ap_NS_fsm <= ap_ST_fsm_state135;
                end if;
            when ap_ST_fsm_state135 => 
                ap_NS_fsm <= ap_ST_fsm_state136;
            when ap_ST_fsm_state136 => 
                if (((icmp_ln47_1_fu_4547_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state136))) then
                    ap_NS_fsm <= ap_ST_fsm_state134;
                else
                    ap_NS_fsm <= ap_ST_fsm_state136;
                end if;
            when ap_ST_fsm_state137 => 
                ap_NS_fsm <= ap_ST_fsm_state138;
            when ap_ST_fsm_state138 => 
                if (((icmp_ln539_fu_4615_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state138))) then
                    ap_NS_fsm <= ap_ST_fsm_state139;
                else
                    ap_NS_fsm <= ap_ST_fsm_state132;
                end if;
            when ap_ST_fsm_state139 => 
                ap_NS_fsm <= ap_ST_fsm_state140;
            when ap_ST_fsm_state140 => 
                ap_NS_fsm <= ap_ST_fsm_state131;
            when ap_ST_fsm_state141 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state141) and (grp_ntt_fu_2157_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state142;
                else
                    ap_NS_fsm <= ap_ST_fsm_state141;
                end if;
            when ap_ST_fsm_state142 => 
                if (((icmp_ln114_fu_4673_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state142))) then
                    ap_NS_fsm <= ap_ST_fsm_state145;
                else
                    ap_NS_fsm <= ap_ST_fsm_state143;
                end if;
            when ap_ST_fsm_state143 => 
                if (((icmp_ln181_fu_4697_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state143))) then
                    ap_NS_fsm <= ap_ST_fsm_state142;
                else
                    ap_NS_fsm <= ap_ST_fsm_state144;
                end if;
            when ap_ST_fsm_state144 => 
                ap_NS_fsm <= ap_ST_fsm_state143;
            when ap_ST_fsm_state145 => 
                if (((icmp_ln107_fu_4783_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state145))) then
                    ap_NS_fsm <= ap_ST_fsm_state147;
                else
                    ap_NS_fsm <= ap_ST_fsm_state146;
                end if;
            when ap_ST_fsm_state146 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state146) and (grp_invntt_tomont_fu_2140_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state145;
                else
                    ap_NS_fsm <= ap_ST_fsm_state146;
                end if;
            when ap_ST_fsm_state147 => 
                if (((icmp_ln85_fu_4795_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state147))) then
                    ap_NS_fsm <= ap_ST_fsm_state150;
                else
                    ap_NS_fsm <= ap_ST_fsm_state148;
                end if;
            when ap_ST_fsm_state148 => 
                if (((icmp_ln87_fu_4819_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state148))) then
                    ap_NS_fsm <= ap_ST_fsm_state147;
                else
                    ap_NS_fsm <= ap_ST_fsm_state149;
                end if;
            when ap_ST_fsm_state149 => 
                ap_NS_fsm <= ap_ST_fsm_state148;
            when ap_ST_fsm_state150 => 
                if (((icmp_ln53_fu_4857_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state150))) then
                    ap_NS_fsm <= ap_ST_fsm_state153;
                else
                    ap_NS_fsm <= ap_ST_fsm_state151;
                end if;
            when ap_ST_fsm_state151 => 
                if (((icmp_ln32_fu_4881_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state151))) then
                    ap_NS_fsm <= ap_ST_fsm_state150;
                else
                    ap_NS_fsm <= ap_ST_fsm_state152;
                end if;
            when ap_ST_fsm_state152 => 
                ap_NS_fsm <= ap_ST_fsm_state151;
            when ap_ST_fsm_state153 => 
                if (((icmp_ln158_fu_4927_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state153))) then
                    ap_NS_fsm <= ap_ST_fsm_state154;
                else
                    ap_NS_fsm <= ap_ST_fsm_state156;
                end if;
            when ap_ST_fsm_state154 => 
                if (((icmp_ln299_fu_4951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state154))) then
                    ap_NS_fsm <= ap_ST_fsm_state153;
                else
                    ap_NS_fsm <= ap_ST_fsm_state155;
                end if;
            when ap_ST_fsm_state155 => 
                if (((icmp_ln304_fu_5011_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state155))) then
                    ap_NS_fsm <= ap_ST_fsm_state176;
                else
                    ap_NS_fsm <= ap_ST_fsm_state154;
                end if;
            when ap_ST_fsm_state156 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state156) and (grp_polyveck_pointwise_p_fu_2209_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state157;
                else
                    ap_NS_fsm <= ap_ST_fsm_state156;
                end if;
            when ap_ST_fsm_state157 => 
                ap_NS_fsm <= ap_ST_fsm_state158;
            when ap_ST_fsm_state158 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state158) and (grp_polyveck_invntt_tomo_fu_2133_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state159;
                else
                    ap_NS_fsm <= ap_ST_fsm_state158;
                end if;
            when ap_ST_fsm_state159 => 
                if (((icmp_ln252_fu_5017_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state159))) then
                    ap_NS_fsm <= ap_ST_fsm_state160;
                else
                    ap_NS_fsm <= ap_ST_fsm_state162;
                end if;
            when ap_ST_fsm_state160 => 
                if (((icmp_ln108_fu_5041_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state160))) then
                    ap_NS_fsm <= ap_ST_fsm_state159;
                else
                    ap_NS_fsm <= ap_ST_fsm_state161;
                end if;
            when ap_ST_fsm_state161 => 
                ap_NS_fsm <= ap_ST_fsm_state160;
            when ap_ST_fsm_state162 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state162) and (grp_polyveck_reduce_fu_2242_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state163;
                else
                    ap_NS_fsm <= ap_ST_fsm_state162;
                end if;
            when ap_ST_fsm_state163 => 
                ap_NS_fsm <= ap_ST_fsm_state164;
            when ap_ST_fsm_state164 => 
                if (((grp_polyveck_chknorm_fu_2229_ap_return = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state164) and (grp_polyveck_chknorm_fu_2229_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state176;
                elsif (((grp_polyveck_chknorm_fu_2229_ap_return = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state164) and (grp_polyveck_chknorm_fu_2229_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state165;
                else
                    ap_NS_fsm <= ap_ST_fsm_state164;
                end if;
            when ap_ST_fsm_state165 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state165) and (grp_polyveck_pointwise_p_fu_2209_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state166;
                else
                    ap_NS_fsm <= ap_ST_fsm_state165;
                end if;
            when ap_ST_fsm_state166 => 
                ap_NS_fsm <= ap_ST_fsm_state167;
            when ap_ST_fsm_state167 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state167) and (grp_polyveck_invntt_tomo_fu_2133_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state168;
                else
                    ap_NS_fsm <= ap_ST_fsm_state167;
                end if;
            when ap_ST_fsm_state168 => 
                ap_NS_fsm <= ap_ST_fsm_state169;
            when ap_ST_fsm_state169 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state169) and (grp_polyveck_reduce_fu_2242_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state170;
                else
                    ap_NS_fsm <= ap_ST_fsm_state169;
                end if;
            when ap_ST_fsm_state170 => 
                ap_NS_fsm <= ap_ST_fsm_state171;
            when ap_ST_fsm_state171 => 
                if (((grp_polyveck_chknorm_fu_2229_ap_return = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state171) and (grp_polyveck_chknorm_fu_2229_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state172;
                elsif (((grp_polyveck_chknorm_fu_2229_ap_return = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state171) and (grp_polyveck_chknorm_fu_2229_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state176;
                else
                    ap_NS_fsm <= ap_ST_fsm_state171;
                end if;
            when ap_ST_fsm_state172 => 
                if (((icmp_ln234_fu_5075_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state172))) then
                    ap_NS_fsm <= ap_ST_fsm_state173;
                else
                    ap_NS_fsm <= ap_ST_fsm_state175;
                end if;
            when ap_ST_fsm_state173 => 
                if (((icmp_ln87_1_fu_5099_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state173))) then
                    ap_NS_fsm <= ap_ST_fsm_state172;
                else
                    ap_NS_fsm <= ap_ST_fsm_state174;
                end if;
            when ap_ST_fsm_state174 => 
                ap_NS_fsm <= ap_ST_fsm_state173;
            when ap_ST_fsm_state175 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state175) and (grp_polyveck_caddq_fu_2237_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state176;
                else
                    ap_NS_fsm <= ap_ST_fsm_state175;
                end if;
            when ap_ST_fsm_state176 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state176) and ((icmp_ln158_reg_6371 = ap_const_lv1_0) or ((tmp_11_reg_6432 = ap_const_lv1_1) or ((tmp_12_reg_6436 = ap_const_lv1_1) or ((icmp_ln173_fu_5157_p2 = ap_const_lv1_1) and (icmp_ln392_fu_5133_p2 = ap_const_lv1_1))))))) then
                    ap_NS_fsm <= ap_ST_fsm_state77;
                elsif (((icmp_ln392_fu_5133_p2 = ap_const_lv1_1) and (icmp_ln158_reg_6371 = ap_const_lv1_1) and (icmp_ln173_fu_5157_p2 = ap_const_lv1_0) and (tmp_12_reg_6436 = ap_const_lv1_0) and (tmp_11_reg_6432 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state176))) then
                    ap_NS_fsm <= ap_ST_fsm_state179;
                else
                    ap_NS_fsm <= ap_ST_fsm_state177;
                end if;
            when ap_ST_fsm_state177 => 
                if (((icmp_ln249_fu_5169_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state177))) then
                    ap_NS_fsm <= ap_ST_fsm_state176;
                else
                    ap_NS_fsm <= ap_ST_fsm_state178;
                end if;
            when ap_ST_fsm_state178 => 
                ap_NS_fsm <= ap_ST_fsm_state177;
            when ap_ST_fsm_state179 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state179) and (grp_pack_sig_fu_2149_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state179;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    a1_1_fu_3894_p2 <= (trunc_ln12_fu_3853_p4 and select_ln48_fu_3886_p3);
    add_ln109_fu_5057_p2 <= std_logic_vector(unsigned(zext_ln104_reg_6409) + unsigned(zext_ln109_fu_5053_p1));
    add_ln125_1_fu_3681_p2 <= std_logic_vector(unsigned(phi_ln125_1_reg_1569) + unsigned(ap_const_lv8_1));
    add_ln125_2_fu_3707_p2 <= std_logic_vector(unsigned(phi_ln125_2_reg_1580) + unsigned(ap_const_lv8_1));
    add_ln125_3_fu_3733_p2 <= std_logic_vector(unsigned(phi_ln125_3_reg_1591) + unsigned(ap_const_lv8_1));
    add_ln125_fu_3659_p2 <= std_logic_vector(unsigned(phi_ln125_reg_1558) + unsigned(ap_const_lv8_1));
    add_ln182_fu_4718_p2 <= std_logic_vector(unsigned(zext_ln182_16_fu_4714_p1) + unsigned(zext_ln177_reg_6278));
    add_ln19_fu_4766_p2 <= std_logic_vector(signed(sext_ln19_14_fu_4762_p1) + signed(mul_ln182_fu_4736_p2));
    add_ln208_1_fu_2280_p2 <= std_logic_vector(unsigned(ap_const_lv14_973) + unsigned(trunc_ln208_1_fu_2276_p1));
    add_ln208_fu_2270_p2 <= std_logic_vector(signed(ap_const_lv13_1FFF) + signed(trunc_ln208_fu_2266_p1));
    add_ln227_fu_3823_p2 <= std_logic_vector(unsigned(zext_ln222_reg_5969) + unsigned(zext_ln227_fu_3819_p1));
    add_ln250_fu_5185_p2 <= std_logic_vector(unsigned(zext_ln245_reg_6479) + unsigned(zext_ln250_fu_5181_p1));
    add_ln301_fu_4967_p2 <= std_logic_vector(unsigned(zext_ln288_reg_6380) + unsigned(zext_ln301_fu_4963_p1));
    add_ln33_fu_4897_p2 <= std_logic_vector(unsigned(zext_ln28_reg_6353) + unsigned(zext_ln33_fu_4893_p1));
    add_ln36_fu_4907_p2 <= std_logic_vector(unsigned(z_vec_coeffs_q0) + unsigned(ap_const_lv32_400000));
    add_ln381_fu_3539_p2 <= std_logic_vector(unsigned(sub_ln381_reg_5766) + unsigned(zext_ln380_fu_3524_p1));
    add_ln388_fu_2381_p2 <= std_logic_vector(unsigned(phi_ln388_reg_1237) + unsigned(ap_const_lv3_1));
    add_ln402_1_fu_2442_p2 <= std_logic_vector(unsigned(zext_ln401_fu_2403_p1) + unsigned(ap_const_lv5_6));
    add_ln402_2_fu_4018_p2 <= std_logic_vector(unsigned(zext_ln401_1_fu_3989_p1) + unsigned(ap_const_lv5_6));
    add_ln402_fu_2431_p2 <= std_logic_vector(unsigned(zext_ln402_fu_2427_p1) + unsigned(ap_const_lv12_974));
    add_ln404_fu_2453_p2 <= std_logic_vector(unsigned(mlen) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFA8));
    add_ln411_1_fu_2537_p2 <= std_logic_vector(unsigned(zext_ln411_fu_2533_p1) + unsigned(p_38_rec_i_i72_i_reg_1305));
    add_ln411_2_fu_4055_p2 <= std_logic_vector(unsigned(shl_ln411_1_fu_4047_p3) + unsigned(ap_const_lv8_58));
    add_ln411_3_fu_4065_p2 <= std_logic_vector(unsigned(p_38_rec_i_i_i_reg_1693) + unsigned(zext_ln411_2_fu_4061_p1));
    add_ln411_fu_2543_p2 <= std_logic_vector(unsigned(zext_ln409_1_reg_5395) + unsigned(add_ln411_1_fu_2537_p2));
    add_ln412_1_fu_4081_p2 <= std_logic_vector(unsigned(p_38_rec_i_i_i_reg_1693) + unsigned(ap_const_lv10_88));
    add_ln412_fu_2554_p2 <= std_logic_vector(unsigned(p_38_rec_i_i72_i_reg_1305) + unsigned(ap_const_lv64_88));
    add_ln415_1_fu_2560_p2 <= std_logic_vector(unsigned(indvars_iv_i_i71_i_reg_1294) + unsigned(ap_const_lv64_FFFFFFFFFFFFFF78));
    add_ln415_fu_4087_p2 <= std_logic_vector(unsigned(indvars_iv_i_i_i_reg_1681) + unsigned(ap_const_lv10_378));
    add_ln417_1_fu_2571_p2 <= std_logic_vector(unsigned(i_3_i_i78_i_reg_1328) + unsigned(ap_const_lv5_1));
    add_ln417_2_fu_3135_p2 <= std_logic_vector(unsigned(i_3_i_i_i_i_reg_1418) + unsigned(ap_const_lv4_1));
    add_ln417_3_fu_3964_p2 <= std_logic_vector(unsigned(i_3_i_i37_i_reg_1659) + unsigned(ap_const_lv3_1));
    add_ln417_4_fu_4322_p2 <= std_logic_vector(unsigned(i_3_i_i_i166_i_reg_1738) + unsigned(ap_const_lv3_1));
    add_ln417_fu_2352_p2 <= std_logic_vector(unsigned(i_3_i_i119_i_reg_1226) + unsigned(ap_const_lv3_1));
    add_ln418_1_fu_2593_p2 <= std_logic_vector(unsigned(zext_ln418_3_fu_2589_p1) + unsigned(p_38_rec_i_i72_i_reg_1305));
    add_ln418_2_fu_2599_p2 <= std_logic_vector(unsigned(zext_ln409_1_reg_5395) + unsigned(add_ln418_1_fu_2593_p2));
    add_ln418_3_fu_2605_p2 <= std_logic_vector(unsigned(zext_ln418_2_reg_5414) + unsigned(i_3_i_i78_i_reg_1328));
    add_ln418_4_fu_3153_p2 <= std_logic_vector(unsigned(zext_ln418_5_fu_3149_p1) + unsigned(ap_const_lv8_50));
    add_ln418_5_fu_3982_p2 <= std_logic_vector(unsigned(zext_ln418_6_fu_3978_p1) + unsigned(ap_const_lv8_70));
    add_ln418_fu_2370_p2 <= std_logic_vector(unsigned(zext_ln418_fu_2366_p1) + unsigned(ap_const_lv7_20));
    add_ln421_fu_2644_p2 <= std_logic_vector(unsigned(zext_ln409_2_reg_5401) + unsigned(zext_ln419_2_fu_2622_p1));
    add_ln427_1_fu_2703_p2 <= std_logic_vector(unsigned(zext_ln420_reg_5471) + unsigned(trunc_ln426_fu_2684_p1));
    add_ln427_2_fu_2708_p2 <= std_logic_vector(unsigned(add_ln427_1_fu_2703_p2) + unsigned(add_ln427_reg_5509));
    add_ln427_fu_2676_p2 <= std_logic_vector(unsigned(zext_ln409_reg_5390) + unsigned(trunc_ln409_reg_5409));
    add_ln429_fu_2791_p2 <= std_logic_vector(unsigned(trunc_ln429_reg_5550) + unsigned(zext_ln421_reg_5491));
    add_ln42_fu_3833_p2 <= std_logic_vector(unsigned(ap_const_lv32_7F) + unsigned(w1_vec_coeffs_q0));
    add_ln477_1_fu_4528_p2 <= std_logic_vector(unsigned(i_0_i_i10_i_i_0_reg_1853) + unsigned(ap_const_lv5_1));
    add_ln477_fu_4372_p2 <= std_logic_vector(unsigned(i_0_i_i14_i_i_0_reg_1749) + unsigned(ap_const_lv5_1));
    add_ln47_fu_3653_p2 <= std_logic_vector(unsigned(zext_ln47_fu_3649_p1) + unsigned(shl_ln47_reg_5851));
    add_ln48_1_fu_4590_p2 <= std_logic_vector(unsigned(shl_ln478_1_reg_6223) + unsigned(zext_ln48_9_fu_4586_p1));
    add_ln48_fu_4434_p2 <= std_logic_vector(unsigned(shl_ln19_reg_6165) + unsigned(zext_ln48_7_fu_4430_p1));
    add_ln542_1_fu_3192_p2 <= std_logic_vector(unsigned(i_3_i_i1_reg_1429) + unsigned(ap_const_lv3_1));
    add_ln542_2_fu_4125_p2 <= std_logic_vector(unsigned(i_3_i_i45_reg_1716) + unsigned(ap_const_lv3_1));
    add_ln542_fu_2861_p2 <= std_logic_vector(unsigned(i_3_i_i_reg_1395) + unsigned(ap_const_lv3_1));
    add_ln543_1_fu_3215_p2 <= std_logic_vector(signed(ap_const_lv8_A0) + signed(zext_ln543_2_fu_3211_p1));
    add_ln543_fu_2884_p2 <= std_logic_vector(unsigned(ap_const_lv8_70) + unsigned(zext_ln543_fu_2880_p1));
    add_ln544_1_fu_3247_p2 <= std_logic_vector(signed(ap_const_lv8_A0) + signed(zext_ln544_2_fu_3243_p1));
    add_ln544_fu_2916_p2 <= std_logic_vector(unsigned(ap_const_lv8_70) + unsigned(zext_ln544_fu_2912_p1));
    add_ln545_1_fu_3327_p2 <= std_logic_vector(signed(ap_const_lv8_A0) + signed(zext_ln545_2_fu_3323_p1));
    add_ln545_fu_2996_p2 <= std_logic_vector(unsigned(ap_const_lv8_70) + unsigned(zext_ln545_fu_2992_p1));
    add_ln546_1_fu_3347_p2 <= std_logic_vector(signed(ap_const_lv8_A0) + signed(zext_ln546_2_fu_3343_p1));
    add_ln546_fu_3016_p2 <= std_logic_vector(unsigned(ap_const_lv8_70) + unsigned(zext_ln546_fu_3012_p1));
    add_ln547_1_fu_3367_p2 <= std_logic_vector(signed(ap_const_lv8_A0) + signed(zext_ln547_2_fu_3363_p1));
    add_ln547_fu_3036_p2 <= std_logic_vector(unsigned(ap_const_lv8_70) + unsigned(zext_ln547_fu_3032_p1));
    add_ln548_1_fu_3387_p2 <= std_logic_vector(signed(ap_const_lv8_A0) + signed(zext_ln548_2_fu_3383_p1));
    add_ln548_fu_3056_p2 <= std_logic_vector(unsigned(ap_const_lv8_70) + unsigned(zext_ln548_fu_3052_p1));
    add_ln549_1_fu_3407_p2 <= std_logic_vector(signed(ap_const_lv8_A0) + signed(zext_ln549_2_fu_3403_p1));
    add_ln549_fu_3076_p2 <= std_logic_vector(unsigned(ap_const_lv8_70) + unsigned(zext_ln549_fu_3072_p1));
    add_ln550_1_fu_3427_p2 <= std_logic_vector(signed(ap_const_lv8_A0) + signed(zext_ln550_2_fu_3423_p1));
    add_ln550_fu_3096_p2 <= std_logic_vector(unsigned(ap_const_lv8_70) + unsigned(zext_ln550_fu_3092_p1));
    add_ln88_2_fu_5126_p2 <= std_logic_vector(unsigned(w0_vec_coeffs_q0) + unsigned(h_vec_coeffs_q0));
    add_ln88_3_fu_4835_p2 <= std_logic_vector(unsigned(zext_ln83_reg_6322) + unsigned(zext_ln88_fu_4831_p1));
    add_ln88_4_fu_5115_p2 <= std_logic_vector(unsigned(zext_ln83_1_reg_6448) + unsigned(zext_ln88_5_fu_5111_p1));
    add_ln88_fu_4850_p2 <= std_logic_vector(unsigned(z_vec_coeffs_q0) + unsigned(sext_ln88_fu_4846_p1));
    and_ln302_fu_4999_p2 <= (t_17_fu_4985_p3 and shl_ln302_fu_4993_p2);
    and_ln69_fu_5230_p2 <= (icmp_ln69_3_fu_5224_p2 and icmp_ln69_2_fu_5218_p2);
    and_ln_fu_2615_p3 <= (tmp_30_reg_5419 & ap_const_lv3_0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state100 <= ap_CS_fsm(99);
    ap_CS_fsm_state101 <= ap_CS_fsm(100);
    ap_CS_fsm_state102 <= ap_CS_fsm(101);
    ap_CS_fsm_state103 <= ap_CS_fsm(102);
    ap_CS_fsm_state104 <= ap_CS_fsm(103);
    ap_CS_fsm_state105 <= ap_CS_fsm(104);
    ap_CS_fsm_state106 <= ap_CS_fsm(105);
    ap_CS_fsm_state107 <= ap_CS_fsm(106);
    ap_CS_fsm_state108 <= ap_CS_fsm(107);
    ap_CS_fsm_state109 <= ap_CS_fsm(108);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state110 <= ap_CS_fsm(109);
    ap_CS_fsm_state111 <= ap_CS_fsm(110);
    ap_CS_fsm_state112 <= ap_CS_fsm(111);
    ap_CS_fsm_state113 <= ap_CS_fsm(112);
    ap_CS_fsm_state114 <= ap_CS_fsm(113);
    ap_CS_fsm_state115 <= ap_CS_fsm(114);
    ap_CS_fsm_state116 <= ap_CS_fsm(115);
    ap_CS_fsm_state117 <= ap_CS_fsm(116);
    ap_CS_fsm_state118 <= ap_CS_fsm(117);
    ap_CS_fsm_state119 <= ap_CS_fsm(118);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state120 <= ap_CS_fsm(119);
    ap_CS_fsm_state121 <= ap_CS_fsm(120);
    ap_CS_fsm_state122 <= ap_CS_fsm(121);
    ap_CS_fsm_state123 <= ap_CS_fsm(122);
    ap_CS_fsm_state124 <= ap_CS_fsm(123);
    ap_CS_fsm_state125 <= ap_CS_fsm(124);
    ap_CS_fsm_state126 <= ap_CS_fsm(125);
    ap_CS_fsm_state127 <= ap_CS_fsm(126);
    ap_CS_fsm_state128 <= ap_CS_fsm(127);
    ap_CS_fsm_state129 <= ap_CS_fsm(128);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state130 <= ap_CS_fsm(129);
    ap_CS_fsm_state131 <= ap_CS_fsm(130);
    ap_CS_fsm_state132 <= ap_CS_fsm(131);
    ap_CS_fsm_state133 <= ap_CS_fsm(132);
    ap_CS_fsm_state134 <= ap_CS_fsm(133);
    ap_CS_fsm_state135 <= ap_CS_fsm(134);
    ap_CS_fsm_state136 <= ap_CS_fsm(135);
    ap_CS_fsm_state137 <= ap_CS_fsm(136);
    ap_CS_fsm_state138 <= ap_CS_fsm(137);
    ap_CS_fsm_state139 <= ap_CS_fsm(138);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state140 <= ap_CS_fsm(139);
    ap_CS_fsm_state141 <= ap_CS_fsm(140);
    ap_CS_fsm_state142 <= ap_CS_fsm(141);
    ap_CS_fsm_state143 <= ap_CS_fsm(142);
    ap_CS_fsm_state144 <= ap_CS_fsm(143);
    ap_CS_fsm_state145 <= ap_CS_fsm(144);
    ap_CS_fsm_state146 <= ap_CS_fsm(145);
    ap_CS_fsm_state147 <= ap_CS_fsm(146);
    ap_CS_fsm_state148 <= ap_CS_fsm(147);
    ap_CS_fsm_state149 <= ap_CS_fsm(148);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state150 <= ap_CS_fsm(149);
    ap_CS_fsm_state151 <= ap_CS_fsm(150);
    ap_CS_fsm_state152 <= ap_CS_fsm(151);
    ap_CS_fsm_state153 <= ap_CS_fsm(152);
    ap_CS_fsm_state154 <= ap_CS_fsm(153);
    ap_CS_fsm_state155 <= ap_CS_fsm(154);
    ap_CS_fsm_state156 <= ap_CS_fsm(155);
    ap_CS_fsm_state157 <= ap_CS_fsm(156);
    ap_CS_fsm_state158 <= ap_CS_fsm(157);
    ap_CS_fsm_state159 <= ap_CS_fsm(158);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state160 <= ap_CS_fsm(159);
    ap_CS_fsm_state161 <= ap_CS_fsm(160);
    ap_CS_fsm_state162 <= ap_CS_fsm(161);
    ap_CS_fsm_state163 <= ap_CS_fsm(162);
    ap_CS_fsm_state164 <= ap_CS_fsm(163);
    ap_CS_fsm_state165 <= ap_CS_fsm(164);
    ap_CS_fsm_state166 <= ap_CS_fsm(165);
    ap_CS_fsm_state167 <= ap_CS_fsm(166);
    ap_CS_fsm_state168 <= ap_CS_fsm(167);
    ap_CS_fsm_state169 <= ap_CS_fsm(168);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state170 <= ap_CS_fsm(169);
    ap_CS_fsm_state171 <= ap_CS_fsm(170);
    ap_CS_fsm_state172 <= ap_CS_fsm(171);
    ap_CS_fsm_state173 <= ap_CS_fsm(172);
    ap_CS_fsm_state174 <= ap_CS_fsm(173);
    ap_CS_fsm_state175 <= ap_CS_fsm(174);
    ap_CS_fsm_state176 <= ap_CS_fsm(175);
    ap_CS_fsm_state177 <= ap_CS_fsm(176);
    ap_CS_fsm_state178 <= ap_CS_fsm(177);
    ap_CS_fsm_state179 <= ap_CS_fsm(178);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_CS_fsm_state82 <= ap_CS_fsm(81);
    ap_CS_fsm_state83 <= ap_CS_fsm(82);
    ap_CS_fsm_state84 <= ap_CS_fsm(83);
    ap_CS_fsm_state85 <= ap_CS_fsm(84);
    ap_CS_fsm_state86 <= ap_CS_fsm(85);
    ap_CS_fsm_state87 <= ap_CS_fsm(86);
    ap_CS_fsm_state88 <= ap_CS_fsm(87);
    ap_CS_fsm_state89 <= ap_CS_fsm(88);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_CS_fsm_state90 <= ap_CS_fsm(89);
    ap_CS_fsm_state91 <= ap_CS_fsm(90);
    ap_CS_fsm_state92 <= ap_CS_fsm(91);
    ap_CS_fsm_state93 <= ap_CS_fsm(92);
    ap_CS_fsm_state94 <= ap_CS_fsm(93);
    ap_CS_fsm_state95 <= ap_CS_fsm(94);
    ap_CS_fsm_state96 <= ap_CS_fsm(95);
    ap_CS_fsm_state97 <= ap_CS_fsm(96);
    ap_CS_fsm_state98 <= ap_CS_fsm(97);
    ap_CS_fsm_state99 <= ap_CS_fsm(98);

    ap_block_state11_on_subcall_done_assign_proc : process(icmp_ln400_reg_5368, grp_KeccakF1600_StatePer_1_fu_2102_ap_done)
    begin
                ap_block_state11_on_subcall_done <= ((grp_KeccakF1600_StatePer_1_fu_2102_ap_done = ap_const_logic_0) and (icmp_ln400_reg_5368 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(grp_pack_sig_fu_2149_ap_done, ap_CS_fsm_state179)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state179) and (grp_pack_sig_fu_2149_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_23_i_i68_i_phi_fu_1275_p4_assign_proc : process(icmp_ln400_reg_5368, ap_CS_fsm_state11, p_23_i_i68_i_reg_1271)
    begin
        if (((icmp_ln400_reg_5368 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_phi_mux_p_23_i_i68_i_phi_fu_1275_p4 <= ap_const_lv5_0;
        else 
            ap_phi_mux_p_23_i_i68_i_phi_fu_1275_p4 <= p_23_i_i68_i_reg_1271;
        end if; 
    end process;


    ap_phi_mux_p_2_i_i69_i_phi_fu_1287_p4_assign_proc : process(icmp_ln400_reg_5368, ap_CS_fsm_state11, add_ln404_fu_2453_p2, p_2_i_i69_i_reg_1284)
    begin
        if (((icmp_ln400_reg_5368 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_phi_mux_p_2_i_i69_i_phi_fu_1287_p4 <= add_ln404_fu_2453_p2;
        else 
            ap_phi_mux_p_2_i_i69_i_phi_fu_1287_p4 <= p_2_i_i69_i_reg_1284;
        end if; 
    end process;


    ap_phi_mux_phi_ln403_phi_fu_1263_p4_assign_proc : process(icmp_ln400_reg_5368, ap_CS_fsm_state11, phi_ln403_reg_1259)
    begin
        if (((icmp_ln400_reg_5368 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_phi_mux_phi_ln403_phi_fu_1263_p4 <= ap_const_lv12_9CC;
        else 
            ap_phi_mux_phi_ln403_phi_fu_1263_p4 <= phi_ln403_reg_1259;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_pack_sig_fu_2149_ap_done, ap_CS_fsm_state179)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state179) and (grp_pack_sig_fu_2149_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_const_lv32_0;

    buf_1_address0_assign_proc : process(ap_CS_fsm_state52, ap_CS_fsm_state66, icmp_ln380_fu_3528_p2, ap_CS_fsm_state70, grp_shake128_squeezebloc_fu_2089_out_r_address0, grp_rej_uniform_fu_2185_buf_r_address0, ap_CS_fsm_state67, ap_CS_fsm_state50, ap_CS_fsm_state68, zext_ln381_fu_3548_p1, zext_ln381_1_fu_3553_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_1_address0 <= zext_ln381_1_fu_3553_p1(10 - 1 downto 0);
        elsif (((icmp_ln380_fu_3528_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            buf_1_address0 <= zext_ln381_fu_3548_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state52))) then 
            buf_1_address0 <= grp_rej_uniform_fu_2185_buf_r_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            buf_1_address0 <= grp_shake128_squeezebloc_fu_2089_out_r_address0;
        else 
            buf_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    buf_1_ce0_assign_proc : process(ap_CS_fsm_state52, ap_CS_fsm_state66, icmp_ln380_fu_3528_p2, ap_CS_fsm_state70, grp_shake128_squeezebloc_fu_2089_out_r_ce0, grp_rej_uniform_fu_2185_buf_r_ce0, ap_CS_fsm_state67, ap_CS_fsm_state50, ap_CS_fsm_state68)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state67) or ((icmp_ln380_fu_3528_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state66)))) then 
            buf_1_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state52))) then 
            buf_1_ce0 <= grp_rej_uniform_fu_2185_buf_r_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            buf_1_ce0 <= grp_shake128_squeezebloc_fu_2089_out_r_ce0;
        else 
            buf_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_ce1_assign_proc : process(ap_CS_fsm_state52, ap_CS_fsm_state70, grp_rej_uniform_fu_2185_buf_r_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state52))) then 
            buf_1_ce1 <= grp_rej_uniform_fu_2185_buf_r_ce1;
        else 
            buf_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_d0_assign_proc : process(buf_1_q0, grp_shake128_squeezebloc_fu_2089_out_r_d0, ap_CS_fsm_state67, ap_CS_fsm_state50, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_1_d0 <= buf_1_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            buf_1_d0 <= grp_shake128_squeezebloc_fu_2089_out_r_d0;
        else 
            buf_1_d0 <= "XXXXXXXX";
        end if; 
    end process;


    buf_1_we0_assign_proc : process(grp_shake128_squeezebloc_fu_2089_out_r_we0, ap_CS_fsm_state67, ap_CS_fsm_state50, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            buf_1_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            buf_1_we0 <= grp_shake128_squeezebloc_fu_2089_out_r_we0;
        else 
            buf_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_address0_assign_proc : process(ap_CS_fsm_state127, ap_CS_fsm_state128, ap_CS_fsm_state136, ap_CS_fsm_state137, zext_ln48_8_fu_4439_p1, zext_ln526_fu_4456_p1, zext_ln48_10_fu_4595_p1, zext_ln538_fu_4606_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state137)) then 
            buf_address0 <= zext_ln538_fu_4606_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state136)) then 
            buf_address0 <= zext_ln48_10_fu_4595_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state128)) then 
            buf_address0 <= zext_ln526_fu_4456_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state127)) then 
            buf_address0 <= zext_ln48_8_fu_4439_p1(8 - 1 downto 0);
        else 
            buf_address0 <= "XXXXXXXX";
        end if; 
    end process;


    buf_ce0_assign_proc : process(ap_CS_fsm_state127, ap_CS_fsm_state128, ap_CS_fsm_state136, ap_CS_fsm_state137)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state137) or (ap_const_logic_1 = ap_CS_fsm_state136) or (ap_const_logic_1 = ap_CS_fsm_state128) or (ap_const_logic_1 = ap_CS_fsm_state127))) then 
            buf_ce0 <= ap_const_logic_1;
        else 
            buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_d0_assign_proc : process(ap_CS_fsm_state127, ap_CS_fsm_state136, trunc_ln48_3_fu_4425_p1, trunc_ln48_5_fu_4581_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state136)) then 
            buf_d0 <= trunc_ln48_5_fu_4581_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state127)) then 
            buf_d0 <= trunc_ln48_3_fu_4425_p1;
        else 
            buf_d0 <= "XXXXXXXX";
        end if; 
    end process;


    buf_we0_assign_proc : process(ap_CS_fsm_state127, ap_CS_fsm_state136, icmp_ln47_fu_4391_p2, icmp_ln47_1_fu_4547_p2)
    begin
        if ((((icmp_ln47_1_fu_4547_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state136)) or ((icmp_ln47_fu_4391_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state127)))) then 
            buf_we0 <= ap_const_logic_1;
        else 
            buf_we0 <= ap_const_logic_0;
        end if; 
    end process;

    buflen_fu_3558_p2 <= (trunc_ln379_reg_5755 or ap_const_lv8_A8);

    cp_coeffs_address0_assign_proc : process(ap_CS_fsm_state130, cp_coeffs_addr_2_reg_6250, ap_CS_fsm_state138, ap_CS_fsm_state139, ap_CS_fsm_state143, grp_ntt_fu_2157_a_address0, grp_polyveck_pointwise_p_fu_2209_a_coeffs_address0, ap_CS_fsm_state140, ap_CS_fsm_state141, ap_CS_fsm_state156, ap_CS_fsm_state165, zext_ln530_fu_4505_p1, zext_ln541_fu_4621_p1, zext_ln541_1_fu_4644_p1, zext_ln182_fu_4709_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state143)) then 
            cp_coeffs_address0 <= zext_ln182_fu_4709_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state140)) then 
            cp_coeffs_address0 <= cp_coeffs_addr_2_reg_6250;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state139)) then 
            cp_coeffs_address0 <= zext_ln541_1_fu_4644_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state138)) then 
            cp_coeffs_address0 <= zext_ln541_fu_4621_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state130)) then 
            cp_coeffs_address0 <= zext_ln530_fu_4505_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state165) or (ap_const_logic_1 = ap_CS_fsm_state156))) then 
            cp_coeffs_address0 <= grp_polyveck_pointwise_p_fu_2209_a_coeffs_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state141)) then 
            cp_coeffs_address0 <= grp_ntt_fu_2157_a_address0;
        else 
            cp_coeffs_address0 <= "XXXXXXXX";
        end if; 
    end process;


    cp_coeffs_ce0_assign_proc : process(ap_CS_fsm_state130, ap_CS_fsm_state138, ap_CS_fsm_state139, ap_CS_fsm_state143, grp_ntt_fu_2157_a_ce0, grp_polyveck_pointwise_p_fu_2209_a_coeffs_ce0, ap_CS_fsm_state140, ap_CS_fsm_state141, ap_CS_fsm_state156, ap_CS_fsm_state165)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state139) or (ap_const_logic_1 = ap_CS_fsm_state138) or (ap_const_logic_1 = ap_CS_fsm_state130) or (ap_const_logic_1 = ap_CS_fsm_state140) or (ap_const_logic_1 = ap_CS_fsm_state143))) then 
            cp_coeffs_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state165) or (ap_const_logic_1 = ap_CS_fsm_state156))) then 
            cp_coeffs_ce0 <= grp_polyveck_pointwise_p_fu_2209_a_coeffs_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state141)) then 
            cp_coeffs_ce0 <= grp_ntt_fu_2157_a_ce0;
        else 
            cp_coeffs_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cp_coeffs_ce1_assign_proc : process(grp_ntt_fu_2157_a_ce1, ap_CS_fsm_state141)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state141)) then 
            cp_coeffs_ce1 <= grp_ntt_fu_2157_a_ce1;
        else 
            cp_coeffs_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    cp_coeffs_d0_assign_proc : process(ap_CS_fsm_state130, ap_CS_fsm_state139, cp_coeffs_q0, grp_ntt_fu_2157_a_d0, ap_CS_fsm_state140, ap_CS_fsm_state141, sext_ln542_fu_4668_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state140)) then 
            cp_coeffs_d0 <= sext_ln542_fu_4668_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state139)) then 
            cp_coeffs_d0 <= cp_coeffs_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state130)) then 
            cp_coeffs_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state141)) then 
            cp_coeffs_d0 <= grp_ntt_fu_2157_a_d0;
        else 
            cp_coeffs_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    cp_coeffs_we0_assign_proc : process(ap_CS_fsm_state130, ap_CS_fsm_state139, grp_ntt_fu_2157_a_we0, icmp_ln529_fu_4493_p2, ap_CS_fsm_state140, ap_CS_fsm_state141)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state139) or (ap_const_logic_1 = ap_CS_fsm_state140) or ((icmp_ln529_fu_4493_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state130)))) then 
            cp_coeffs_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state141)) then 
            cp_coeffs_we0 <= grp_ntt_fu_2157_a_we0;
        else 
            cp_coeffs_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ctr_2_fu_3583_p2 <= std_logic_vector(unsigned(grp_rej_uniform_fu_2185_ap_return) + unsigned(ctr_0_i_reg_1465));
    grp_KeccakF1600_StatePer_1_fu_2102_ap_start <= grp_KeccakF1600_StatePer_1_fu_2102_ap_start_reg;

    grp_KeccakF1600_StatePer_1_fu_2102_state_q0_assign_proc : process(state_s_1_q0, icmp_ln400_reg_5368, ap_CS_fsm_state11, state_s_2_q0, ap_CS_fsm_state15, ap_CS_fsm_state29, ap_CS_fsm_state110, ap_CS_fsm_state106, ap_CS_fsm_state113, ap_CS_fsm_state124, ap_CS_fsm_state133)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state133) or (ap_const_logic_1 = ap_CS_fsm_state124))) then 
            grp_KeccakF1600_StatePer_1_fu_2102_state_q0 <= state_s_1_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((icmp_ln400_reg_5368 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            grp_KeccakF1600_StatePer_1_fu_2102_state_q0 <= state_s_2_q0;
        else 
            grp_KeccakF1600_StatePer_1_fu_2102_state_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_KeccakF1600_StatePer_1_fu_2102_state_q1_assign_proc : process(state_s_1_q1, icmp_ln400_reg_5368, ap_CS_fsm_state11, state_s_2_q1, ap_CS_fsm_state15, ap_CS_fsm_state29, ap_CS_fsm_state110, ap_CS_fsm_state106, ap_CS_fsm_state113, ap_CS_fsm_state124, ap_CS_fsm_state133)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state133) or (ap_const_logic_1 = ap_CS_fsm_state124))) then 
            grp_KeccakF1600_StatePer_1_fu_2102_state_q1 <= state_s_1_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((icmp_ln400_reg_5368 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            grp_KeccakF1600_StatePer_1_fu_2102_state_q1 <= state_s_2_q1;
        else 
            grp_KeccakF1600_StatePer_1_fu_2102_state_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_KeccakF1600_StatePer_fu_2109_ap_start <= grp_KeccakF1600_StatePer_fu_2109_ap_start_reg;
    grp_dilithium_shake128_s_fu_2126_ap_start <= grp_dilithium_shake128_s_fu_2126_ap_start_reg;
    grp_fu_2247_p2 <= (state_s_2_q0 xor grp_load64_2_fu_2223_ap_return);
    grp_fu_2254_p2 <= (state_s_2_q0 xor grp_load64_3_fu_2216_ap_return);

    grp_fu_3501_ap_start_assign_proc : process(ap_CS_fsm_state53, icmp_ln378_fu_3495_p2)
    begin
        if (((icmp_ln378_fu_3495_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            grp_fu_3501_ap_start <= ap_const_logic_1;
        else 
            grp_fu_3501_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_3501_p1 <= ap_const_lv9_3(3 - 1 downto 0);
    grp_fu_5269_p0 <= ap_const_lv32_2C0B(15 - 1 downto 0);
    grp_fu_5269_p2 <= ap_const_lv32_800000(25 - 1 downto 0);
    grp_fu_5278_p0 <= ap_const_lv27_7FD1800(19 - 1 downto 0);
    grp_fu_5288_p1 <= ap_const_lv32_FF801FFF(24 - 1 downto 0);
    grp_invntt_tomont_fu_2140_ap_start <= grp_invntt_tomont_fu_2140_ap_start_reg;
    grp_load64_2_fu_2223_ap_start <= grp_load64_2_fu_2223_ap_start_reg;

    grp_load64_2_fu_2223_x_offset_assign_proc : process(zext_ln418_1_reg_5350, add_ln418_4_reg_5645, add_ln418_5_reg_6008, ap_CS_fsm_state7, ap_CS_fsm_state37, ap_CS_fsm_state103)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            grp_load64_2_fu_2223_x_offset <= add_ln418_5_reg_6008;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_load64_2_fu_2223_x_offset <= add_ln418_4_reg_5645;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_load64_2_fu_2223_x_offset <= zext_ln418_1_reg_5350;
        else 
            grp_load64_2_fu_2223_x_offset <= "XXXXXXXX";
        end if; 
    end process;

    grp_load64_3_fu_2216_ap_start <= grp_load64_3_fu_2216_ap_start_reg;

    grp_load64_3_fu_2216_x_offset_assign_proc : process(zext_ln402_1_reg_5380, add_ln411_reg_5433, add_ln418_2_reg_5461, zext_ln402_3_reg_6026, zext_ln411_3_reg_6047, zext_ln418_7_reg_6141, ap_CS_fsm_state10, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state105, ap_CS_fsm_state109, ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            grp_load64_3_fu_2216_x_offset <= zext_ln418_7_reg_6141;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            grp_load64_3_fu_2216_x_offset <= zext_ln411_3_reg_6047;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            grp_load64_3_fu_2216_x_offset <= zext_ln402_3_reg_6026;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_load64_3_fu_2216_x_offset <= add_ln418_2_reg_5461;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_load64_3_fu_2216_x_offset <= add_ln411_reg_5433;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_load64_3_fu_2216_x_offset <= zext_ln402_1_reg_5380;
        else 
            grp_load64_3_fu_2216_x_offset <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ntt_1_fu_2164_a_offset_assign_proc : process(i_0_i65_reg_1499, ap_CS_fsm_state72, i_0_i67_reg_1511, ap_CS_fsm_state74, i_0_i69_reg_1523, ap_CS_fsm_state76, i_0_i76_reg_1602, ap_CS_fsm_state89)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            grp_ntt_1_fu_2164_a_offset <= i_0_i76_reg_1602;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            grp_ntt_1_fu_2164_a_offset <= i_0_i69_reg_1523;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            grp_ntt_1_fu_2164_a_offset <= i_0_i67_reg_1511;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            grp_ntt_1_fu_2164_a_offset <= i_0_i65_reg_1499;
        else 
            grp_ntt_1_fu_2164_a_offset <= "XXX";
        end if; 
    end process;


    grp_ntt_1_fu_2164_a_q0_assign_proc : process(s1_vec_coeffs_q0, z_vec_coeffs_q0, t0_vec_coeffs_q0, s2_vec_coeffs_q0, ap_CS_fsm_state72, ap_CS_fsm_state74, ap_CS_fsm_state76, ap_CS_fsm_state89)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            grp_ntt_1_fu_2164_a_q0 <= z_vec_coeffs_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            grp_ntt_1_fu_2164_a_q0 <= t0_vec_coeffs_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            grp_ntt_1_fu_2164_a_q0 <= s2_vec_coeffs_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            grp_ntt_1_fu_2164_a_q0 <= s1_vec_coeffs_q0;
        else 
            grp_ntt_1_fu_2164_a_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ntt_1_fu_2164_a_q1_assign_proc : process(s1_vec_coeffs_q1, z_vec_coeffs_q1, t0_vec_coeffs_q1, s2_vec_coeffs_q1, ap_CS_fsm_state72, ap_CS_fsm_state74, ap_CS_fsm_state76, ap_CS_fsm_state89)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            grp_ntt_1_fu_2164_a_q1 <= z_vec_coeffs_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            grp_ntt_1_fu_2164_a_q1 <= t0_vec_coeffs_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            grp_ntt_1_fu_2164_a_q1 <= s2_vec_coeffs_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            grp_ntt_1_fu_2164_a_q1 <= s1_vec_coeffs_q1;
        else 
            grp_ntt_1_fu_2164_a_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_ntt_1_fu_2164_ap_start <= grp_ntt_1_fu_2164_ap_start_reg;
    grp_ntt_fu_2157_ap_start <= grp_ntt_fu_2157_ap_start_reg;
    grp_pack_sig_fu_2149_ap_start <= grp_pack_sig_fu_2149_ap_start_reg;
    grp_poly_uniform_gamma1_fu_2078_ap_start <= grp_poly_uniform_gamma1_fu_2078_ap_start_reg;
    grp_polyveck_caddq_fu_2237_ap_start <= grp_polyveck_caddq_fu_2237_ap_start_reg;

    grp_polyveck_caddq_fu_2237_v_vec_coeffs_q0_assign_proc : process(w1_vec_coeffs_q0, w0_vec_coeffs_q0, ap_CS_fsm_state96, ap_CS_fsm_state175)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state175)) then 
            grp_polyveck_caddq_fu_2237_v_vec_coeffs_q0 <= w0_vec_coeffs_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            grp_polyveck_caddq_fu_2237_v_vec_coeffs_q0 <= w1_vec_coeffs_q0;
        else 
            grp_polyveck_caddq_fu_2237_v_vec_coeffs_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_polyveck_chknorm_fu_2229_ap_start <= grp_polyveck_chknorm_fu_2229_ap_start_reg;

    grp_polyveck_chknorm_fu_2229_bound_assign_proc : process(ap_CS_fsm_state164, ap_CS_fsm_state171)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state171)) then 
            grp_polyveck_chknorm_fu_2229_bound <= ap_const_lv18_17400;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state164)) then 
            grp_polyveck_chknorm_fu_2229_bound <= ap_const_lv18_173B2;
        else 
            grp_polyveck_chknorm_fu_2229_bound <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_polyveck_chknorm_fu_2229_v_vec_coeffs_q0_assign_proc : process(ap_CS_fsm_state164, ap_CS_fsm_state171, w0_vec_coeffs_q0, h_vec_coeffs_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state171)) then 
            grp_polyveck_chknorm_fu_2229_v_vec_coeffs_q0 <= h_vec_coeffs_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state164)) then 
            grp_polyveck_chknorm_fu_2229_v_vec_coeffs_q0 <= w0_vec_coeffs_q0;
        else 
            grp_polyveck_chknorm_fu_2229_v_vec_coeffs_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_polyveck_invntt_tomo_fu_2133_ap_start <= grp_polyveck_invntt_tomo_fu_2133_ap_start_reg;

    grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_q0_assign_proc : process(w1_vec_coeffs_q0, h_vec_coeffs_q0, ap_CS_fsm_state158, ap_CS_fsm_state94, ap_CS_fsm_state167)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state167) or (ap_const_logic_1 = ap_CS_fsm_state158))) then 
            grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_q0 <= h_vec_coeffs_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_q0 <= w1_vec_coeffs_q0;
        else 
            grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_q1_assign_proc : process(w1_vec_coeffs_q1, h_vec_coeffs_q1, ap_CS_fsm_state158, ap_CS_fsm_state94, ap_CS_fsm_state167)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state167) or (ap_const_logic_1 = ap_CS_fsm_state158))) then 
            grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_q1 <= h_vec_coeffs_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_q1 <= w1_vec_coeffs_q1;
        else 
            grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_polyveck_pack_w1_fu_2202_ap_start <= grp_polyveck_pack_w1_fu_2202_ap_start_reg;
    grp_polyveck_pointwise_p_fu_2209_ap_start <= grp_polyveck_pointwise_p_fu_2209_ap_start_reg;

    grp_polyveck_pointwise_p_fu_2209_v_vec_coeffs_q0_assign_proc : process(t0_vec_coeffs_q0, s2_vec_coeffs_q0, ap_CS_fsm_state156, ap_CS_fsm_state165)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state165)) then 
            grp_polyveck_pointwise_p_fu_2209_v_vec_coeffs_q0 <= t0_vec_coeffs_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state156)) then 
            grp_polyveck_pointwise_p_fu_2209_v_vec_coeffs_q0 <= s2_vec_coeffs_q0;
        else 
            grp_polyveck_pointwise_p_fu_2209_v_vec_coeffs_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_polyveck_reduce_fu_2242_ap_start <= grp_polyveck_reduce_fu_2242_ap_start_reg;

    grp_polyveck_reduce_fu_2242_v_vec_coeffs_q0_assign_proc : process(w1_vec_coeffs_q0, w0_vec_coeffs_q0, h_vec_coeffs_q0, ap_CS_fsm_state92, ap_CS_fsm_state162, ap_CS_fsm_state169)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state169)) then 
            grp_polyveck_reduce_fu_2242_v_vec_coeffs_q0 <= h_vec_coeffs_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state162)) then 
            grp_polyveck_reduce_fu_2242_v_vec_coeffs_q0 <= w0_vec_coeffs_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            grp_polyveck_reduce_fu_2242_v_vec_coeffs_q0 <= w1_vec_coeffs_q0;
        else 
            grp_polyveck_reduce_fu_2242_v_vec_coeffs_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_polyvecl_pointwise_a_fu_2176_ap_start <= grp_polyvecl_pointwise_a_fu_2176_ap_start_reg;

    grp_rej_uniform_fu_2185_a_offset2_assign_proc : process(ap_CS_fsm_state52, ap_CS_fsm_state70, ctr_0_i_reg_1465)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            grp_rej_uniform_fu_2185_a_offset2 <= ctr_0_i_reg_1465;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_rej_uniform_fu_2185_a_offset2 <= ap_const_lv32_0;
        else 
            grp_rej_uniform_fu_2185_a_offset2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_rej_uniform_fu_2185_ap_start <= grp_rej_uniform_fu_2185_ap_start_reg;

    grp_rej_uniform_fu_2185_buflen_assign_proc : process(ap_CS_fsm_state52, zext_ln385_reg_5794, ap_CS_fsm_state70)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            grp_rej_uniform_fu_2185_buflen <= zext_ln385_reg_5794;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_rej_uniform_fu_2185_buflen <= ap_const_lv11_348;
        else 
            grp_rej_uniform_fu_2185_buflen <= "XXXXXXXXXXX";
        end if; 
    end process;


    grp_rej_uniform_fu_2185_len_assign_proc : process(ap_CS_fsm_state52, sub_ln385_reg_5789, ap_CS_fsm_state70)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            grp_rej_uniform_fu_2185_len <= sub_ln385_reg_5789;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_rej_uniform_fu_2185_len <= ap_const_lv10_100;
        else 
            grp_rej_uniform_fu_2185_len <= "XXXXXXXXXX";
        end if; 
    end process;

    grp_shake128_squeezebloc_fu_2089_ap_start <= grp_shake128_squeezebloc_fu_2089_ap_start_reg;

    grp_shake128_squeezebloc_fu_2089_nblocks_assign_proc : process(ap_CS_fsm_state50, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            grp_shake128_squeezebloc_fu_2089_nblocks <= ap_const_lv4_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            grp_shake128_squeezebloc_fu_2089_nblocks <= ap_const_lv4_5;
        else 
            grp_shake128_squeezebloc_fu_2089_nblocks <= "XXXX";
        end if; 
    end process;


    grp_shake128_squeezebloc_fu_2089_out_offset_assign_proc : process(trunc_ln379_1_reg_5760, ap_CS_fsm_state50, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            grp_shake128_squeezebloc_fu_2089_out_offset <= trunc_ln379_1_reg_5760;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            grp_shake128_squeezebloc_fu_2089_out_offset <= ap_const_lv2_0;
        else 
            grp_shake128_squeezebloc_fu_2089_out_offset <= "XX";
        end if; 
    end process;

    grp_unpack_sk_fu_2116_ap_start <= grp_unpack_sk_fu_2116_ap_start_reg;

    h_vec_coeffs_address0_assign_proc : process(ap_CS_fsm_state160, ap_CS_fsm_state171, ap_CS_fsm_state173, zext_ln250_1_reg_6495, ap_CS_fsm_state178, grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_address0, grp_pack_sig_fu_2149_h_vec_coeffs_address0, grp_polyveck_pointwise_p_fu_2209_r_vec_coeffs_address0, grp_polyveck_chknorm_fu_2229_v_vec_coeffs_address0, grp_polyveck_reduce_fu_2242_v_vec_coeffs_address0, ap_CS_fsm_state158, ap_CS_fsm_state167, ap_CS_fsm_state179, ap_CS_fsm_state156, ap_CS_fsm_state165, ap_CS_fsm_state169, zext_ln109_1_fu_5062_p1, zext_ln88_6_fu_5120_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state178)) then 
            h_vec_coeffs_address0 <= zext_ln250_1_reg_6495(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state173)) then 
            h_vec_coeffs_address0 <= zext_ln88_6_fu_5120_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state160)) then 
            h_vec_coeffs_address0 <= zext_ln109_1_fu_5062_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state169)) then 
            h_vec_coeffs_address0 <= grp_polyveck_reduce_fu_2242_v_vec_coeffs_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state171)) then 
            h_vec_coeffs_address0 <= grp_polyveck_chknorm_fu_2229_v_vec_coeffs_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state165) or (ap_const_logic_1 = ap_CS_fsm_state156))) then 
            h_vec_coeffs_address0 <= grp_polyveck_pointwise_p_fu_2209_r_vec_coeffs_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state179)) then 
            h_vec_coeffs_address0 <= grp_pack_sig_fu_2149_h_vec_coeffs_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state167) or (ap_const_logic_1 = ap_CS_fsm_state158))) then 
            h_vec_coeffs_address0 <= grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_address0;
        else 
            h_vec_coeffs_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    h_vec_coeffs_ce0_assign_proc : process(ap_CS_fsm_state160, ap_CS_fsm_state171, ap_CS_fsm_state173, ap_CS_fsm_state178, grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_ce0, grp_pack_sig_fu_2149_h_vec_coeffs_ce0, grp_polyveck_pointwise_p_fu_2209_r_vec_coeffs_ce0, grp_polyveck_chknorm_fu_2229_v_vec_coeffs_ce0, grp_polyveck_reduce_fu_2242_v_vec_coeffs_ce0, ap_CS_fsm_state158, ap_CS_fsm_state167, ap_CS_fsm_state179, ap_CS_fsm_state156, ap_CS_fsm_state165, ap_CS_fsm_state169)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state178) or (ap_const_logic_1 = ap_CS_fsm_state173) or (ap_const_logic_1 = ap_CS_fsm_state160))) then 
            h_vec_coeffs_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state169)) then 
            h_vec_coeffs_ce0 <= grp_polyveck_reduce_fu_2242_v_vec_coeffs_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state171)) then 
            h_vec_coeffs_ce0 <= grp_polyveck_chknorm_fu_2229_v_vec_coeffs_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state165) or (ap_const_logic_1 = ap_CS_fsm_state156))) then 
            h_vec_coeffs_ce0 <= grp_polyveck_pointwise_p_fu_2209_r_vec_coeffs_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state179)) then 
            h_vec_coeffs_ce0 <= grp_pack_sig_fu_2149_h_vec_coeffs_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state167) or (ap_const_logic_1 = ap_CS_fsm_state158))) then 
            h_vec_coeffs_ce0 <= grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_ce0;
        else 
            h_vec_coeffs_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    h_vec_coeffs_ce1_assign_proc : process(grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_ce1, ap_CS_fsm_state158, ap_CS_fsm_state167)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state167) or (ap_const_logic_1 = ap_CS_fsm_state158))) then 
            h_vec_coeffs_ce1 <= grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_ce1;
        else 
            h_vec_coeffs_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    h_vec_coeffs_d0_assign_proc : process(ap_CS_fsm_state178, grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_d0, grp_polyveck_pointwise_p_fu_2209_r_vec_coeffs_d0, grp_polyveck_reduce_fu_2242_v_vec_coeffs_d0, ap_CS_fsm_state158, ap_CS_fsm_state167, ap_CS_fsm_state156, ap_CS_fsm_state165, ap_CS_fsm_state169, zext_ln69_1_fu_5258_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state178)) then 
            h_vec_coeffs_d0 <= zext_ln69_1_fu_5258_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state169)) then 
            h_vec_coeffs_d0 <= grp_polyveck_reduce_fu_2242_v_vec_coeffs_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state165) or (ap_const_logic_1 = ap_CS_fsm_state156))) then 
            h_vec_coeffs_d0 <= grp_polyveck_pointwise_p_fu_2209_r_vec_coeffs_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state167) or (ap_const_logic_1 = ap_CS_fsm_state158))) then 
            h_vec_coeffs_d0 <= grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_d0;
        else 
            h_vec_coeffs_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    h_vec_coeffs_we0_assign_proc : process(ap_CS_fsm_state178, grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_we0, grp_polyveck_pointwise_p_fu_2209_r_vec_coeffs_we0, grp_polyveck_reduce_fu_2242_v_vec_coeffs_we0, ap_CS_fsm_state158, ap_CS_fsm_state167, ap_CS_fsm_state156, ap_CS_fsm_state165, ap_CS_fsm_state169)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state178)) then 
            h_vec_coeffs_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state169)) then 
            h_vec_coeffs_we0 <= grp_polyveck_reduce_fu_2242_v_vec_coeffs_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state165) or (ap_const_logic_1 = ap_CS_fsm_state156))) then 
            h_vec_coeffs_we0 <= grp_polyveck_pointwise_p_fu_2209_r_vec_coeffs_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state167) or (ap_const_logic_1 = ap_CS_fsm_state158))) then 
            h_vec_coeffs_we0 <= grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_we0;
        else 
            h_vec_coeffs_we0 <= ap_const_logic_0;
        end if; 
    end process;

    i_100_fu_5023_p2 <= std_logic_vector(unsigned(i_0_i123_reg_1988) + unsigned(ap_const_lv3_1));
    i_101_fu_4957_p2 <= std_logic_vector(unsigned(i_0_i_i85_reg_1977) + unsigned(ap_const_lv9_1));
    i_102_fu_5047_p2 <= std_logic_vector(unsigned(i_0_i_i124_reg_1999) + unsigned(ap_const_lv9_1));
    i_103_fu_5081_p2 <= std_logic_vector(unsigned(i_0_i131_reg_2010) + unsigned(ap_const_lv3_1));
    i_104_fu_5105_p2 <= std_logic_vector(unsigned(i_0_i_i132_reg_2021) + unsigned(ap_const_lv9_1));
    i_105_fu_5139_p2 <= std_logic_vector(unsigned(i_0_i87_reg_2032) + unsigned(ap_const_lv3_1));
    i_106_fu_5175_p2 <= std_logic_vector(unsigned(i_0_i_i88_reg_2055) + unsigned(ap_const_lv9_1));
    i_33_fu_2330_p2 <= std_logic_vector(unsigned(i_0_i_i4_i_reg_1215) + unsigned(ap_const_lv5_1));
    i_34_fu_2413_p2 <= std_logic_vector(unsigned(i_1_i_i65_i_reg_1248) + unsigned(ap_const_lv4_1));
    i_35_fu_2519_p2 <= std_logic_vector(unsigned(i_2_i_i73_i_reg_1317) + unsigned(ap_const_lv5_1));
    i_36_fu_2665_p2 <= std_logic_vector(unsigned(i_4_i_i80_i_reg_1339) + unsigned(ap_const_lv4_1));
    i_37_fu_2697_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(i_5_i_i84_i_reg_1350));
    i_38_fu_2724_p2 <= std_logic_vector(unsigned(i_0_i_reg_1361) + unsigned(ap_const_lv4_1));
    i_39_fu_3113_p2 <= std_logic_vector(unsigned(i_0_i_i_i_i_reg_1407) + unsigned(ap_const_lv5_1));
    i_41_fu_3444_p2 <= std_logic_vector(unsigned(i_0_i_i_reg_1441) + unsigned(ap_const_lv3_1));
    i_74_fu_3595_p2 <= std_logic_vector(unsigned(i_0_i65_reg_1499) + unsigned(ap_const_lv3_1));
    i_75_fu_3607_p2 <= std_logic_vector(unsigned(i_0_i67_reg_1511) + unsigned(ap_const_lv3_1));
    i_76_fu_3619_p2 <= std_logic_vector(unsigned(i_0_i69_reg_1523) + unsigned(ap_const_lv3_1));
    i_77_fu_3533_p2 <= std_logic_vector(unsigned(i_0_i63_reg_1487) + unsigned(ap_const_lv2_1));
    i_78_fu_3643_p2 <= std_logic_vector(unsigned(i_0_i74_reg_1546) + unsigned(ap_const_lv3_1));
    i_79_fu_3765_p2 <= std_logic_vector(unsigned(i_0_i76_reg_1602) + unsigned(ap_const_lv3_1));
    i_80_fu_3777_p2 <= std_logic_vector(unsigned(i_0_i81_reg_1614) + unsigned(ap_const_lv3_1));
    i_81_fu_3789_p2 <= std_logic_vector(unsigned(i_0_i83_reg_1626) + unsigned(ap_const_lv3_1));
    i_82_fu_3942_p2 <= std_logic_vector(unsigned(i_0_i_i_i_reg_1648) + unsigned(ap_const_lv5_1));
    i_83_fu_3813_p2 <= std_logic_vector(unsigned(i_0_i_i84_reg_1637) + unsigned(ap_const_lv9_1));
    i_84_fu_3999_p2 <= std_logic_vector(unsigned(i_1_i_i_i_reg_1670) + unsigned(ap_const_lv4_1));
    i_85_fu_4041_p2 <= std_logic_vector(unsigned(i_2_i_i_i_reg_1705) + unsigned(ap_const_lv5_1));
    i_86_fu_4300_p2 <= std_logic_vector(unsigned(i_0_i_i_i136_i_reg_1727) + unsigned(ap_const_lv5_1));
    i_87_fu_4450_p2 <= std_logic_vector(unsigned(i_0_i177_i_reg_1772) + unsigned(ap_const_lv4_1));
    i_88_fu_4397_p2 <= std_logic_vector(unsigned(i_0_i86_reg_1761) + unsigned(ap_const_lv4_1));
    i_89_fu_4499_p2 <= std_logic_vector(unsigned(i_1_i_i_reg_1796) + unsigned(ap_const_lv9_1));
    i_90_fu_4679_p2 <= std_logic_vector(unsigned(i_0_i100_reg_1888) + unsigned(ap_const_lv3_1));
    i_91_fu_4789_p2 <= std_logic_vector(unsigned(i_0_i106_reg_1910) + unsigned(ap_const_lv3_1));
    i_92_fu_4703_p2 <= std_logic_vector(unsigned(i_0_i_i101_reg_1899) + unsigned(ap_const_lv9_1));
    i_93_fu_4801_p2 <= std_logic_vector(unsigned(i_0_i108_reg_1922) + unsigned(ap_const_lv3_1));
    i_94_fu_4649_p2 <= std_logic_vector(unsigned(ap_const_lv9_1) + unsigned(i_2_i_i_reg_1807));
    i_95_fu_4553_p2 <= std_logic_vector(unsigned(i_0_i89_reg_1865) + unsigned(ap_const_lv4_1));
    i_96_fu_4863_p2 <= std_logic_vector(unsigned(i_0_i116_reg_1944) + unsigned(ap_const_lv3_1));
    i_97_fu_4825_p2 <= std_logic_vector(unsigned(i_0_i_i109_reg_1933) + unsigned(ap_const_lv9_1));
    i_98_fu_4933_p2 <= std_logic_vector(unsigned(i_0_i84_reg_1966) + unsigned(ap_const_lv3_1));
    i_99_fu_4887_p2 <= std_logic_vector(unsigned(i_0_i_i117_reg_1955) + unsigned(ap_const_lv9_1));
    i_fu_2299_p2 <= std_logic_vector(unsigned(ap_const_lv64_1) + unsigned(i_0_reg_1204));
    icmp_ln100_1_fu_3759_p2 <= "1" when (i_0_i76_reg_1602 = ap_const_lv3_4) else "0";
    icmp_ln100_fu_3589_p2 <= "1" when (i_0_i65_reg_1499 = ap_const_lv3_4) else "0";
    icmp_ln107_fu_4783_p2 <= "1" when (i_0_i106_reg_1910 = ap_const_lv3_4) else "0";
    icmp_ln108_fu_5041_p2 <= "1" when (i_0_i_i124_reg_1999 = ap_const_lv9_100) else "0";
    icmp_ln114_fu_4673_p2 <= "1" when (i_0_i100_reg_1888 = ap_const_lv3_4) else "0";
    icmp_ln125_1_fu_3696_p2 <= "1" when (phi_ln125_1_reg_1569 = ap_const_lv8_FF) else "0";
    icmp_ln125_2_fu_3722_p2 <= "1" when (phi_ln125_2_reg_1580 = ap_const_lv8_FF) else "0";
    icmp_ln125_3_fu_3748_p2 <= "1" when (phi_ln125_3_reg_1591 = ap_const_lv8_FF) else "0";
    icmp_ln125_fu_3670_p2 <= "1" when (phi_ln125_reg_1558 = ap_const_lv8_FF) else "0";
    icmp_ln158_fu_4927_p2 <= "1" when (i_0_i84_reg_1966 = ap_const_lv3_4) else "0";
    icmp_ln173_fu_5157_p2 <= "1" when (unsigned(n_reg_2043) > unsigned(ap_const_lv11_50)) else "0";
    icmp_ln181_fu_4697_p2 <= "1" when (i_0_i_i101_reg_1899 = ap_const_lv9_100) else "0";
    icmp_ln207_fu_2294_p2 <= "1" when (i_0_reg_1204 = mlen) else "0";
    icmp_ln20_fu_3438_p2 <= "1" when (i_0_i_i_reg_1441 = ap_const_lv3_4) else "0";
    icmp_ln21_fu_3450_p2 <= "1" when (j_0_i_i_reg_1453 = ap_const_lv3_4) else "0";
    icmp_ln226_fu_3807_p2 <= "1" when (i_0_i_i84_reg_1637 = ap_const_lv9_100) else "0";
    icmp_ln234_fu_5075_p2 <= "1" when (i_0_i131_reg_2010 = ap_const_lv3_4) else "0";
    icmp_ln249_fu_5169_p2 <= "1" when (i_0_i_i88_reg_2055 = ap_const_lv9_100) else "0";
    icmp_ln252_fu_5017_p2 <= "1" when (i_0_i123_reg_1988 = ap_const_lv3_4) else "0";
    icmp_ln282_1_fu_3613_p2 <= "1" when (i_0_i69_reg_1523 = ap_const_lv3_4) else "0";
    icmp_ln282_fu_3601_p2 <= "1" when (i_0_i67_reg_1511 = ap_const_lv3_4) else "0";
    icmp_ln28_fu_3771_p2 <= "1" when (i_0_i81_reg_1614 = ap_const_lv3_4) else "0";
    icmp_ln299_fu_4951_p2 <= "1" when (i_0_i_i85_reg_1977 = ap_const_lv9_100) else "0";
    icmp_ln304_fu_5011_p2 <= "1" when (signed(t_18_fu_5005_p2) < signed(ap_const_lv32_1FFB2)) else "0";
    icmp_ln30_fu_2718_p2 <= "1" when (i_0_i_reg_1361 = ap_const_lv4_8) else "0";
    icmp_ln32_fu_4881_p2 <= "1" when (i_0_i_i117_reg_1955 = ap_const_lv9_100) else "0";
    icmp_ln362_1_fu_3107_p2 <= "1" when (i_0_i_i_i_i_reg_1407 = ap_const_lv5_19) else "0";
    icmp_ln362_2_fu_3936_p2 <= "1" when (i_0_i_i_i_reg_1648 = ap_const_lv5_19) else "0";
    icmp_ln362_3_fu_4294_p2 <= "1" when (i_0_i_i_i136_i_reg_1727 = ap_const_lv5_19) else "0";
    icmp_ln362_fu_2324_p2 <= "1" when (i_0_i_i4_i_reg_1215 = ap_const_lv5_19) else "0";
    icmp_ln371_fu_3783_p2 <= "1" when (i_0_i83_reg_1626 = ap_const_lv3_4) else "0";
    icmp_ln378_fu_3495_p2 <= "1" when (tmp_13_fu_3485_p4 = ap_const_lv24_0) else "0";
    icmp_ln380_fu_3528_p2 <= "1" when (i_0_i63_reg_1487 = trunc_ln379_1_reg_5760) else "0";
    icmp_ln388_fu_2392_p2 <= "1" when (phi_ln388_reg_1237 = ap_const_lv3_7) else "0";
    icmp_ln392_fu_5133_p2 <= "1" when (i_0_i87_reg_2032 = ap_const_lv3_4) else "0";
    icmp_ln400_fu_2398_p2 <= "1" when (unsigned(mlen) < unsigned(ap_const_lv64_58)) else "0";
    icmp_ln401_1_fu_3993_p2 <= "1" when (i_1_i_i_i_reg_1670 = ap_const_lv4_B) else "0";
    icmp_ln401_fu_2407_p2 <= "1" when (i_1_i_i65_i_reg_1248 = ap_const_lv4_B) else "0";
    icmp_ln409_1_fu_4029_p2 <= "1" when (unsigned(indvars_iv_i_i_i_reg_1681) < unsigned(ap_const_lv10_88)) else "0";
    icmp_ln409_fu_2475_p2 <= "1" when (unsigned(indvars_iv_i_i71_i_reg_1294) < unsigned(ap_const_lv64_88)) else "0";
    icmp_ln410_1_fu_4035_p2 <= "1" when (i_2_i_i_i_reg_1705 = ap_const_lv5_11) else "0";
    icmp_ln410_fu_2513_p2 <= "1" when (i_2_i_i73_i_reg_1317 = ap_const_lv5_11) else "0";
    icmp_ln417_1_fu_2566_p2 <= "1" when (i_3_i_i78_i_reg_1328 = tmp_30_reg_5419) else "0";
    icmp_ln417_2_fu_3129_p2 <= "1" when (i_3_i_i_i_i_reg_1418 = ap_const_lv4_A) else "0";
    icmp_ln417_3_fu_3958_p2 <= "1" when (i_3_i_i37_i_reg_1659 = ap_const_lv3_6) else "0";
    icmp_ln417_4_fu_4316_p2 <= "1" when (i_3_i_i_i166_i_reg_1738 = ap_const_lv3_4) else "0";
    icmp_ln417_fu_2346_p2 <= "1" when (i_3_i_i119_i_reg_1226 = ap_const_lv3_6) else "0";
    icmp_ln423_fu_2653_p2 <= "1" when (indvars_iv_i_i71_i_reg_1294 = zext_ln419_fu_2626_p1) else "0";
    icmp_ln424_fu_2659_p2 <= "1" when (i_4_i_i80_i_reg_1339 = ap_const_lv4_8) else "0";
    icmp_ln426_fu_2692_p2 <= "1" when (unsigned(zext_ln426_1_fu_2688_p1) < unsigned(trunc_ln420_reg_5481)) else "0";
    icmp_ln46_fu_3637_p2 <= "1" when (i_0_i74_reg_1546 = ap_const_lv3_4) else "0";
    icmp_ln477_1_fu_4522_p2 <= "1" when (i_0_i_i10_i_i_0_reg_1853 = ap_const_lv5_11) else "0";
    icmp_ln477_fu_4366_p2 <= "1" when (i_0_i_i14_i_i_0_reg_1749 = ap_const_lv5_11) else "0";
    icmp_ln47_1_fu_4547_p2 <= "1" when (i_0_i89_reg_1865 = ap_const_lv4_8) else "0";
    icmp_ln47_fu_4391_p2 <= "1" when (i_0_i86_reg_1761 = ap_const_lv4_8) else "0";
    icmp_ln525_fu_4444_p2 <= "1" when (i_0_i177_i_reg_1772 = ap_const_lv4_8) else "0";
    icmp_ln529_fu_4493_p2 <= "1" when (i_1_i_i_reg_1796 = ap_const_lv9_100) else "0";
    icmp_ln531_fu_4510_p2 <= "1" when (i_2_i_i_reg_1807 = ap_const_lv9_100) else "0";
    icmp_ln533_fu_4516_p2 <= "1" when (unsigned(pos_1_i_i_reg_1842) > unsigned(ap_const_lv32_87)) else "0";
    icmp_ln539_fu_4615_p2 <= "1" when (unsigned(zext_ln538_1_fu_4611_p1) > unsigned(i_2_i_i_reg_1807)) else "0";
    icmp_ln53_fu_4857_p2 <= "1" when (i_0_i116_reg_1944 = ap_const_lv3_4) else "0";
    icmp_ln542_1_fu_3186_p2 <= "1" when (i_3_i_i1_reg_1429 = ap_const_lv3_6) else "0";
    icmp_ln542_2_fu_4119_p2 <= "1" when (i_3_i_i45_reg_1716 = ap_const_lv3_4) else "0";
    icmp_ln542_fu_2855_p2 <= "1" when (i_3_i_i_reg_1395 = ap_const_lv3_6) else "0";
    icmp_ln69_1_fu_5212_p2 <= "1" when (signed(w0_vec_coeffs_q0) > signed(ap_const_lv32_7E6C01)) else "0";
    icmp_ln69_2_fu_5218_p2 <= "1" when (w0_vec_coeffs_q0 = ap_const_lv32_7E6C01) else "0";
    icmp_ln69_3_fu_5224_p2 <= "1" when (w1_vec_coeffs_q0 = ap_const_lv32_0) else "0";
    icmp_ln69_fu_5206_p2 <= "1" when (signed(w0_vec_coeffs_q0) < signed(ap_const_lv32_17401)) else "0";
    icmp_ln85_fu_4795_p2 <= "1" when (i_0_i108_reg_1922 = ap_const_lv3_4) else "0";
    icmp_ln87_1_fu_5099_p2 <= "1" when (i_0_i_i132_reg_2021 = ap_const_lv9_100) else "0";
    icmp_ln87_fu_4819_p2 <= "1" when (i_0_i_i109_reg_1933 = ap_const_lv9_100) else "0";
    j_fu_3456_p2 <= std_logic_vector(unsigned(j_0_i_i_reg_1453) + unsigned(ap_const_lv3_1));
    lshr_ln48_1_fu_4575_p2 <= std_logic_vector(shift_right(unsigned(reg_2261),to_integer(unsigned('0' & zext_ln48_4_fu_4571_p1(31-1 downto 0)))));
    lshr_ln48_fu_4419_p2 <= std_logic_vector(shift_right(unsigned(reg_2261),to_integer(unsigned('0' & zext_ln48_fu_4415_p1(31-1 downto 0)))));
    lshr_ln_fu_2735_p4 <= add_ln421_reg_5486(8 downto 3);
    m_address0 <= zext_ln208_fu_2310_p1(12 - 1 downto 0);

    m_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            m_ce0 <= ap_const_logic_1;
        else 
            m_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mat_vec_coeffs_address0_assign_proc : process(ap_CS_fsm_state52, ap_CS_fsm_state70, grp_polyvecl_pointwise_a_fu_2176_u_vec_coeffs_address0, grp_rej_uniform_fu_2185_a_address0, ap_CS_fsm_state91)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state52))) then 
            mat_vec_coeffs_address0 <= grp_rej_uniform_fu_2185_a_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            mat_vec_coeffs_address0 <= grp_polyvecl_pointwise_a_fu_2176_u_vec_coeffs_address0;
        else 
            mat_vec_coeffs_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    mat_vec_coeffs_ce0_assign_proc : process(ap_CS_fsm_state52, ap_CS_fsm_state70, grp_polyvecl_pointwise_a_fu_2176_u_vec_coeffs_ce0, grp_rej_uniform_fu_2185_a_ce0, ap_CS_fsm_state91)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state52))) then 
            mat_vec_coeffs_ce0 <= grp_rej_uniform_fu_2185_a_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            mat_vec_coeffs_ce0 <= grp_polyvecl_pointwise_a_fu_2176_u_vec_coeffs_ce0;
        else 
            mat_vec_coeffs_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mat_vec_coeffs_we0_assign_proc : process(ap_CS_fsm_state52, ap_CS_fsm_state70, grp_rej_uniform_fu_2185_a_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state52))) then 
            mat_vec_coeffs_we0 <= grp_rej_uniform_fu_2185_a_we0;
        else 
            mat_vec_coeffs_we0 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln182_fu_4736_p0 <= s1_vec_coeffs_q0;
    mul_ln182_fu_4736_p1 <= cp_coeffs_q0;
    mul_ln182_fu_4736_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln182_fu_4736_p0) * signed(mul_ln182_fu_4736_p1))), 64));
    mul_ln19_fu_4756_p1 <= t_13_fu_4746_p2;
    mul_ln19_fu_4756_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv55_7FFFFFFF801FFF) * signed(mul_ln19_fu_4756_p1))), 55));
    nonce_assign_fu_3466_p4 <= ((trunc_ln22_fu_3462_p1 & ap_const_lv5_0) & j_0_i_i_reg_1453);
    nonce_fu_3625_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(nonce_assign_1_reg_1535));
    or_ln544_1_fu_3237_p2 <= (shl_ln543_1_fu_3203_p3 or ap_const_lv6_1);
    or_ln544_2_fu_4163_p2 <= (shl_ln543_2_fu_4140_p3 or ap_const_lv5_1);
    or_ln544_fu_2906_p2 <= (shl_ln18_fu_2872_p3 or ap_const_lv6_1);
    or_ln545_1_fu_3318_p2 <= (shl_ln543_1_reg_5681 or ap_const_lv6_2);
    or_ln545_2_fu_4234_p2 <= (shl_ln543_2_reg_6085 or ap_const_lv5_2);
    or_ln545_fu_2987_p2 <= (shl_ln18_reg_5589 or ap_const_lv6_2);
    or_ln546_1_fu_3338_p2 <= (shl_ln543_1_reg_5681 or ap_const_lv6_3);
    or_ln546_2_fu_4244_p2 <= (shl_ln543_2_reg_6085 or ap_const_lv5_3);
    or_ln546_fu_3007_p2 <= (shl_ln18_reg_5589 or ap_const_lv6_3);
    or_ln547_1_fu_3358_p2 <= (shl_ln543_1_reg_5681 or ap_const_lv6_4);
    or_ln547_2_fu_4254_p2 <= (shl_ln543_2_reg_6085 or ap_const_lv5_4);
    or_ln547_fu_3027_p2 <= (shl_ln18_reg_5589 or ap_const_lv6_4);
    or_ln548_1_fu_3378_p2 <= (shl_ln543_1_reg_5681 or ap_const_lv6_5);
    or_ln548_2_fu_4264_p2 <= (shl_ln543_2_reg_6085 or ap_const_lv5_5);
    or_ln548_fu_3047_p2 <= (shl_ln18_reg_5589 or ap_const_lv6_5);
    or_ln549_1_fu_3398_p2 <= (shl_ln543_1_reg_5681 or ap_const_lv6_6);
    or_ln549_2_fu_4274_p2 <= (shl_ln543_2_reg_6085 or ap_const_lv5_6);
    or_ln549_fu_3067_p2 <= (shl_ln18_reg_5589 or ap_const_lv6_6);
    or_ln550_1_fu_3418_p2 <= (shl_ln543_1_reg_5681 or ap_const_lv6_7);
    or_ln550_2_fu_4284_p2 <= (shl_ln543_2_reg_6085 or ap_const_lv5_7);
    or_ln550_fu_3087_p2 <= (shl_ln18_reg_5589 or ap_const_lv6_7);
    or_ln69_1_fu_5242_p2 <= (or_ln69_fu_5236_p2 or icmp_ln69_fu_5206_p2);
    or_ln69_fu_5236_p2 <= (icmp_ln69_1_fu_5212_p2 or and_ln69_fu_5230_p2);
    pos_fu_4600_p2 <= std_logic_vector(unsigned(pos_2_i_i_reg_1876) + unsigned(ap_const_lv32_1));
    r_fu_2778_p2 <= (shl_ln31_fu_2772_p2 or r_0_i_reg_1373);

    s1_vec_coeffs_address0_assign_proc : process(ap_CS_fsm_state143, zext_ln182_17_fu_4723_p1, grp_unpack_sk_fu_2116_s1_vec_coeffs_address0, grp_ntt_1_fu_2164_a_address0, ap_CS_fsm_state4, ap_CS_fsm_state72)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state143)) then 
            s1_vec_coeffs_address0 <= zext_ln182_17_fu_4723_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            s1_vec_coeffs_address0 <= grp_ntt_1_fu_2164_a_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s1_vec_coeffs_address0 <= grp_unpack_sk_fu_2116_s1_vec_coeffs_address0;
        else 
            s1_vec_coeffs_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    s1_vec_coeffs_address1_assign_proc : process(grp_unpack_sk_fu_2116_s1_vec_coeffs_address1, grp_ntt_1_fu_2164_a_address1, ap_CS_fsm_state4, ap_CS_fsm_state72)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            s1_vec_coeffs_address1 <= grp_ntt_1_fu_2164_a_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s1_vec_coeffs_address1 <= grp_unpack_sk_fu_2116_s1_vec_coeffs_address1;
        else 
            s1_vec_coeffs_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    s1_vec_coeffs_ce0_assign_proc : process(ap_CS_fsm_state143, grp_unpack_sk_fu_2116_s1_vec_coeffs_ce0, grp_ntt_1_fu_2164_a_ce0, ap_CS_fsm_state4, ap_CS_fsm_state72)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state143)) then 
            s1_vec_coeffs_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            s1_vec_coeffs_ce0 <= grp_ntt_1_fu_2164_a_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s1_vec_coeffs_ce0 <= grp_unpack_sk_fu_2116_s1_vec_coeffs_ce0;
        else 
            s1_vec_coeffs_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    s1_vec_coeffs_ce1_assign_proc : process(grp_unpack_sk_fu_2116_s1_vec_coeffs_ce1, grp_ntt_1_fu_2164_a_ce1, ap_CS_fsm_state4, ap_CS_fsm_state72)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            s1_vec_coeffs_ce1 <= grp_ntt_1_fu_2164_a_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s1_vec_coeffs_ce1 <= grp_unpack_sk_fu_2116_s1_vec_coeffs_ce1;
        else 
            s1_vec_coeffs_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    s1_vec_coeffs_d0_assign_proc : process(grp_unpack_sk_fu_2116_s1_vec_coeffs_d0, grp_ntt_1_fu_2164_a_d0, ap_CS_fsm_state4, ap_CS_fsm_state72)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            s1_vec_coeffs_d0 <= grp_ntt_1_fu_2164_a_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s1_vec_coeffs_d0 <= grp_unpack_sk_fu_2116_s1_vec_coeffs_d0;
        else 
            s1_vec_coeffs_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    s1_vec_coeffs_we0_assign_proc : process(grp_unpack_sk_fu_2116_s1_vec_coeffs_we0, grp_ntt_1_fu_2164_a_we0, ap_CS_fsm_state4, ap_CS_fsm_state72)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            s1_vec_coeffs_we0 <= grp_ntt_1_fu_2164_a_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s1_vec_coeffs_we0 <= grp_unpack_sk_fu_2116_s1_vec_coeffs_we0;
        else 
            s1_vec_coeffs_we0 <= ap_const_logic_0;
        end if; 
    end process;


    s1_vec_coeffs_we1_assign_proc : process(grp_unpack_sk_fu_2116_s1_vec_coeffs_we1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s1_vec_coeffs_we1 <= grp_unpack_sk_fu_2116_s1_vec_coeffs_we1;
        else 
            s1_vec_coeffs_we1 <= ap_const_logic_0;
        end if; 
    end process;


    s2_vec_coeffs_address0_assign_proc : process(grp_unpack_sk_fu_2116_s2_vec_coeffs_address0, grp_ntt_1_fu_2164_a_address0, grp_polyveck_pointwise_p_fu_2209_v_vec_coeffs_address0, ap_CS_fsm_state4, ap_CS_fsm_state74, ap_CS_fsm_state156)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state156)) then 
            s2_vec_coeffs_address0 <= grp_polyveck_pointwise_p_fu_2209_v_vec_coeffs_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            s2_vec_coeffs_address0 <= grp_ntt_1_fu_2164_a_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s2_vec_coeffs_address0 <= grp_unpack_sk_fu_2116_s2_vec_coeffs_address0;
        else 
            s2_vec_coeffs_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    s2_vec_coeffs_address1_assign_proc : process(grp_unpack_sk_fu_2116_s2_vec_coeffs_address1, grp_ntt_1_fu_2164_a_address1, ap_CS_fsm_state4, ap_CS_fsm_state74)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            s2_vec_coeffs_address1 <= grp_ntt_1_fu_2164_a_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s2_vec_coeffs_address1 <= grp_unpack_sk_fu_2116_s2_vec_coeffs_address1;
        else 
            s2_vec_coeffs_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    s2_vec_coeffs_ce0_assign_proc : process(grp_unpack_sk_fu_2116_s2_vec_coeffs_ce0, grp_ntt_1_fu_2164_a_ce0, grp_polyveck_pointwise_p_fu_2209_v_vec_coeffs_ce0, ap_CS_fsm_state4, ap_CS_fsm_state74, ap_CS_fsm_state156)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state156)) then 
            s2_vec_coeffs_ce0 <= grp_polyveck_pointwise_p_fu_2209_v_vec_coeffs_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            s2_vec_coeffs_ce0 <= grp_ntt_1_fu_2164_a_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s2_vec_coeffs_ce0 <= grp_unpack_sk_fu_2116_s2_vec_coeffs_ce0;
        else 
            s2_vec_coeffs_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    s2_vec_coeffs_ce1_assign_proc : process(grp_unpack_sk_fu_2116_s2_vec_coeffs_ce1, grp_ntt_1_fu_2164_a_ce1, ap_CS_fsm_state4, ap_CS_fsm_state74)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            s2_vec_coeffs_ce1 <= grp_ntt_1_fu_2164_a_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s2_vec_coeffs_ce1 <= grp_unpack_sk_fu_2116_s2_vec_coeffs_ce1;
        else 
            s2_vec_coeffs_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    s2_vec_coeffs_d0_assign_proc : process(grp_unpack_sk_fu_2116_s2_vec_coeffs_d0, grp_ntt_1_fu_2164_a_d0, ap_CS_fsm_state4, ap_CS_fsm_state74)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            s2_vec_coeffs_d0 <= grp_ntt_1_fu_2164_a_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s2_vec_coeffs_d0 <= grp_unpack_sk_fu_2116_s2_vec_coeffs_d0;
        else 
            s2_vec_coeffs_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    s2_vec_coeffs_we0_assign_proc : process(grp_unpack_sk_fu_2116_s2_vec_coeffs_we0, grp_ntt_1_fu_2164_a_we0, ap_CS_fsm_state4, ap_CS_fsm_state74)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            s2_vec_coeffs_we0 <= grp_ntt_1_fu_2164_a_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s2_vec_coeffs_we0 <= grp_unpack_sk_fu_2116_s2_vec_coeffs_we0;
        else 
            s2_vec_coeffs_we0 <= ap_const_logic_0;
        end if; 
    end process;


    s2_vec_coeffs_we1_assign_proc : process(grp_unpack_sk_fu_2116_s2_vec_coeffs_we1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s2_vec_coeffs_we1 <= grp_unpack_sk_fu_2116_s2_vec_coeffs_we1;
        else 
            s2_vec_coeffs_we1 <= ap_const_logic_0;
        end if; 
    end process;

    s_1_fu_5263_p2 <= std_logic_vector(unsigned(s_0_i_i_reg_2066) + unsigned(zext_ln69_fu_5254_p1));
    s_fu_5200_p2 <= std_logic_vector(unsigned(zext_ln249_fu_5196_p1) + unsigned(n_reg_2043));

    seedbuf_address0_assign_proc : process(ap_CS_fsm_state31, ap_CS_fsm_state42, grp_poly_uniform_gamma1_fu_2078_seed_address0, grp_unpack_sk_fu_2116_rho_address0, grp_dilithium_shake128_s_fu_2126_seed_address0, grp_load64_2_fu_2223_x_address0, ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state34, ap_CS_fsm_state37, ap_CS_fsm_state45, ap_CS_fsm_state79, ap_CS_fsm_state103, ap_CS_fsm_state48, zext_ln543_1_fu_2890_p1, zext_ln545_1_fu_3002_p1, ap_CS_fsm_state32, zext_ln547_1_fu_3042_p1, ap_CS_fsm_state33, zext_ln549_1_fu_3082_p1, zext_ln543_3_fu_3221_p1, zext_ln545_3_fu_3333_p1, ap_CS_fsm_state43, zext_ln547_3_fu_3373_p1, ap_CS_fsm_state44, zext_ln549_3_fu_3413_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            seedbuf_address0 <= zext_ln549_3_fu_3413_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            seedbuf_address0 <= zext_ln547_3_fu_3373_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            seedbuf_address0 <= zext_ln545_3_fu_3333_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            seedbuf_address0 <= zext_ln543_3_fu_3221_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            seedbuf_address0 <= zext_ln549_1_fu_3082_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            seedbuf_address0 <= zext_ln547_1_fu_3042_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            seedbuf_address0 <= zext_ln545_1_fu_3002_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            seedbuf_address0 <= zext_ln543_1_fu_2890_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            seedbuf_address0 <= grp_load64_2_fu_2223_x_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            seedbuf_address0 <= grp_dilithium_shake128_s_fu_2126_seed_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            seedbuf_address0 <= grp_unpack_sk_fu_2116_rho_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            seedbuf_address0 <= grp_poly_uniform_gamma1_fu_2078_seed_address0;
        else 
            seedbuf_address0 <= "XXXXXXXX";
        end if; 
    end process;


    seedbuf_address1_assign_proc : process(ap_CS_fsm_state31, ap_CS_fsm_state42, ap_CS_fsm_state34, ap_CS_fsm_state45, zext_ln544_1_fu_2922_p1, ap_CS_fsm_state32, zext_ln546_1_fu_3022_p1, ap_CS_fsm_state33, zext_ln548_1_fu_3062_p1, zext_ln550_1_fu_3102_p1, zext_ln544_3_fu_3253_p1, ap_CS_fsm_state43, zext_ln546_3_fu_3353_p1, ap_CS_fsm_state44, zext_ln548_3_fu_3393_p1, zext_ln550_3_fu_3433_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            seedbuf_address1 <= zext_ln550_3_fu_3433_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            seedbuf_address1 <= zext_ln548_3_fu_3393_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            seedbuf_address1 <= zext_ln546_3_fu_3353_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            seedbuf_address1 <= zext_ln544_3_fu_3253_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            seedbuf_address1 <= zext_ln550_1_fu_3102_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            seedbuf_address1 <= zext_ln548_1_fu_3062_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            seedbuf_address1 <= zext_ln546_1_fu_3022_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            seedbuf_address1 <= zext_ln544_1_fu_2922_p1(8 - 1 downto 0);
        else 
            seedbuf_address1 <= "XXXXXXXX";
        end if; 
    end process;


    seedbuf_ce0_assign_proc : process(ap_CS_fsm_state31, ap_CS_fsm_state42, grp_poly_uniform_gamma1_fu_2078_seed_ce0, grp_unpack_sk_fu_2116_rho_ce0, grp_dilithium_shake128_s_fu_2126_seed_ce0, grp_load64_2_fu_2223_x_ce0, ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state34, ap_CS_fsm_state37, ap_CS_fsm_state45, ap_CS_fsm_state79, ap_CS_fsm_state103, ap_CS_fsm_state48, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state43, ap_CS_fsm_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state34))) then 
            seedbuf_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            seedbuf_ce0 <= grp_load64_2_fu_2223_x_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            seedbuf_ce0 <= grp_dilithium_shake128_s_fu_2126_seed_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            seedbuf_ce0 <= grp_unpack_sk_fu_2116_rho_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            seedbuf_ce0 <= grp_poly_uniform_gamma1_fu_2078_seed_ce0;
        else 
            seedbuf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    seedbuf_ce1_assign_proc : process(ap_CS_fsm_state31, ap_CS_fsm_state42, ap_CS_fsm_state34, ap_CS_fsm_state45, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state43, ap_CS_fsm_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state34))) then 
            seedbuf_ce1 <= ap_const_logic_1;
        else 
            seedbuf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    seedbuf_d0_assign_proc : process(ap_CS_fsm_state31, trunc_ln5_reg_5599, trunc_ln7_reg_5609, trunc_ln9_reg_5619, ap_CS_fsm_state42, trunc_ln545_1_reg_5691, trunc_ln547_1_reg_5701, trunc_ln549_1_reg_5711, grp_unpack_sk_fu_2116_rho_d0, ap_CS_fsm_state4, ap_CS_fsm_state34, ap_CS_fsm_state45, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state43, ap_CS_fsm_state44, trunc_ln543_fu_2867_p1, trunc_ln543_1_fu_3198_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            seedbuf_d0 <= trunc_ln549_1_reg_5711;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            seedbuf_d0 <= trunc_ln547_1_reg_5701;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            seedbuf_d0 <= trunc_ln545_1_reg_5691;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            seedbuf_d0 <= trunc_ln543_1_fu_3198_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            seedbuf_d0 <= trunc_ln9_reg_5619;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            seedbuf_d0 <= trunc_ln7_reg_5609;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            seedbuf_d0 <= trunc_ln5_reg_5599;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            seedbuf_d0 <= trunc_ln543_fu_2867_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            seedbuf_d0 <= grp_unpack_sk_fu_2116_rho_d0;
        else 
            seedbuf_d0 <= "XXXXXXXX";
        end if; 
    end process;


    seedbuf_d1_assign_proc : process(ap_CS_fsm_state31, trunc_ln6_reg_5604, trunc_ln8_reg_5614, trunc_ln10_reg_5624, ap_CS_fsm_state42, trunc_ln546_1_reg_5696, trunc_ln548_1_reg_5706, trunc_ln550_1_reg_5716, state_0_s_q1, state_s_2_q0, ap_CS_fsm_state34, ap_CS_fsm_state45, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state43, ap_CS_fsm_state44)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            seedbuf_d1 <= trunc_ln550_1_reg_5716;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            seedbuf_d1 <= trunc_ln548_1_reg_5706;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            seedbuf_d1 <= trunc_ln546_1_reg_5696;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            seedbuf_d1 <= state_0_s_q1(15 downto 8);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            seedbuf_d1 <= trunc_ln10_reg_5624;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            seedbuf_d1 <= trunc_ln8_reg_5614;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            seedbuf_d1 <= trunc_ln6_reg_5604;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            seedbuf_d1 <= state_s_2_q0(15 downto 8);
        else 
            seedbuf_d1 <= "XXXXXXXX";
        end if; 
    end process;


    seedbuf_we0_assign_proc : process(ap_CS_fsm_state31, ap_CS_fsm_state42, grp_unpack_sk_fu_2116_rho_we0, ap_CS_fsm_state4, ap_CS_fsm_state34, ap_CS_fsm_state45, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state43, ap_CS_fsm_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state34))) then 
            seedbuf_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            seedbuf_we0 <= grp_unpack_sk_fu_2116_rho_we0;
        else 
            seedbuf_we0 <= ap_const_logic_0;
        end if; 
    end process;


    seedbuf_we1_assign_proc : process(ap_CS_fsm_state31, ap_CS_fsm_state42, ap_CS_fsm_state34, ap_CS_fsm_state45, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state43, ap_CS_fsm_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state34))) then 
            seedbuf_we1 <= ap_const_logic_1;
        else 
            seedbuf_we1 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln48_fu_3886_p3 <= 
        ap_const_lv8_FF when (xor_ln48_fu_3880_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln52_fu_3922_p3 <= 
        ap_const_lv32_7FE001 when (tmp_15_fu_3914_p3(0) = '1') else 
        ap_const_lv32_0;
        sext_ln125_1_fu_3702_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(y_vec_coeffs_q0),32));

        sext_ln125_2_fu_3728_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(y_vec_coeffs_q0),32));

        sext_ln125_3_fu_3754_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(y_vec_coeffs_q0),32));

        sext_ln125_fu_3676_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(y_vec_coeffs_q0),32));

        sext_ln19_14_fu_4762_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln19_fu_4756_p2),64));

        sext_ln378_fu_3477_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(buflen_0_i_reg_1475),10));

        sext_ln381_fu_3544_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln381_fu_3539_p2),32));

        sext_ln409_fu_2459_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_p_23_i_i68_i_phi_fu_1275_p4),6));

        sext_ln418_fu_2495_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln418_1_fu_2485_p4),3));

        sext_ln449_fu_2805_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_2795_p4),29));

        sext_ln47_fu_3862_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln12_fu_3853_p4),9));

        sext_ln48_1_fu_3904_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(a1_1_fu_3894_p2),32));

        sext_ln542_fu_4668_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln542_fu_4662_p2),32));

        sext_ln88_fu_4846_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(y_vec_coeffs_q0),32));

    shl_ln14_fu_2419_p3 <= (i_1_i_i65_i_reg_1248 & ap_const_lv3_0);
    shl_ln15_fu_2525_p3 <= (i_2_i_i73_i_reg_1317 & ap_const_lv3_0);
    shl_ln16_fu_2760_p3 <= (trunc_ln31_4_fu_2756_p1 & ap_const_lv3_0);
    shl_ln17_fu_2818_p3 <= (trunc_ln451_fu_2814_p1 & ap_const_lv3_0);
    shl_ln18_fu_2872_p3 <= (i_3_i_i_reg_1395 & ap_const_lv3_0);
    shl_ln19_fu_4383_p3 <= (i_0_i_i14_i_i_0_reg_1749 & ap_const_lv3_0);
    shl_ln20_fu_4469_p3 <= (trunc_ln526_fu_4465_p1 & ap_const_lv3_0);
    shl_ln21_fu_4407_p3 <= (trunc_ln48_fu_4403_p1 & ap_const_lv3_0);
    shl_ln22_fu_4655_p3 <= (trunc_ln542_reg_6255 & ap_const_lv1_0);
    shl_ln302_fu_4993_p2 <= std_logic_vector(shift_left(unsigned(z_vec_coeffs_q0),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln31_fu_2772_p2 <= std_logic_vector(shift_left(unsigned(zext_ln31_6_fu_2752_p1),to_integer(unsigned('0' & zext_ln31_7_fu_2768_p1(31-1 downto 0)))));
    shl_ln402_1_fu_4005_p3 <= (i_1_i_i_i_reg_1670 & ap_const_lv3_0);
    shl_ln411_1_fu_4047_p3 <= (i_2_i_i_i_reg_1705 & ap_const_lv3_0);
    shl_ln418_1_fu_2581_p3 <= (trunc_ln418_fu_2577_p1 & ap_const_lv3_0);
    shl_ln418_2_fu_3141_p3 <= (i_3_i_i_i_i_reg_1418 & ap_const_lv3_0);
    shl_ln418_3_fu_3970_p3 <= (i_3_i_i37_i_reg_1659 & ap_const_lv3_0);
    shl_ln418_4_fu_4332_p3 <= (trunc_ln418_2_fu_4328_p1 & ap_const_lv3_0);
    shl_ln451_fu_2830_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv64_1F),to_integer(unsigned('0' & zext_ln451_fu_2826_p1(31-1 downto 0)))));
    shl_ln478_1_fu_4539_p3 <= (i_0_i_i10_i_i_0_reg_1853 & ap_const_lv3_0);
    shl_ln47_fu_3631_p2 <= std_logic_vector(shift_left(unsigned(nonce_assign_1_reg_1535),to_integer(unsigned('0' & ap_const_lv16_2(16-1 downto 0)))));
    shl_ln48_1_fu_4563_p3 <= (trunc_ln48_4_fu_4559_p1 & ap_const_lv3_0);
    shl_ln526_fu_4481_p2 <= std_logic_vector(shift_left(unsigned(zext_ln526_1_fu_4461_p1),to_integer(unsigned('0' & zext_ln526_2_fu_4477_p1(31-1 downto 0)))));
    shl_ln543_1_fu_3203_p3 <= (i_3_i_i1_reg_1429 & ap_const_lv3_0);
    shl_ln543_2_fu_4140_p3 <= (trunc_ln543_3_reg_6080 & ap_const_lv3_0);
    shl_ln_fu_2358_p3 <= (i_3_i_i119_i_reg_1226 & ap_const_lv3_0);
    signs_1_fu_4630_p4 <= signs_1_i_i_reg_1831(63 downto 1);
    signs_2_fu_4640_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(signs_1_fu_4630_p4),64));
    signs_fu_4487_p2 <= (signs_0_i_i_reg_1784 or shl_ln526_fu_4481_p2);
    sk_address0 <= grp_unpack_sk_fu_2116_sk_address0;
    sk_address1 <= grp_unpack_sk_fu_2116_sk_address1;
    sk_ce0 <= grp_unpack_sk_fu_2116_sk_ce0;
    sk_ce1 <= grp_unpack_sk_fu_2116_sk_ce1;

    sm_address0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state115, grp_pack_sig_fu_2149_sig_address0, grp_polyveck_pack_w1_fu_2202_r_address0, grp_load64_3_fu_2216_x_address0, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state100, ap_CS_fsm_state105, ap_CS_fsm_state109, ap_CS_fsm_state118, ap_CS_fsm_state121, ap_CS_fsm_state179, zext_ln208_1_fu_2320_p1, zext_ln427_fu_2713_p1, zext_ln543_4_fu_4147_p1, ap_CS_fsm_state116, zext_ln546_4_fu_4249_p1, ap_CS_fsm_state117, zext_ln548_4_fu_4269_p1, zext_ln550_4_fu_4289_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state118)) then 
            sm_address0 <= zext_ln550_4_fu_4289_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            sm_address0 <= zext_ln548_4_fu_4269_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state116)) then 
            sm_address0 <= zext_ln546_4_fu_4249_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            sm_address0 <= zext_ln543_4_fu_4147_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            sm_address0 <= zext_ln427_fu_2713_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sm_address0 <= zext_ln208_1_fu_2320_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state121) or (ap_const_logic_1 = ap_CS_fsm_state109) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sm_address0 <= grp_load64_3_fu_2216_x_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state100)) then 
            sm_address0 <= grp_polyveck_pack_w1_fu_2202_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state179)) then 
            sm_address0 <= grp_pack_sig_fu_2149_sig_address0;
        else 
            sm_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    sm_address1_assign_proc : process(ap_CS_fsm_state115, grp_polyveck_pack_w1_fu_2202_r_address1, ap_CS_fsm_state100, ap_CS_fsm_state118, zext_ln544_4_fu_4169_p1, zext_ln545_4_fu_4239_p1, ap_CS_fsm_state116, zext_ln547_4_fu_4259_p1, ap_CS_fsm_state117, zext_ln549_4_fu_4279_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state118)) then 
            sm_address1 <= zext_ln549_4_fu_4279_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            sm_address1 <= zext_ln547_4_fu_4259_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state116)) then 
            sm_address1 <= zext_ln545_4_fu_4239_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            sm_address1 <= zext_ln544_4_fu_4169_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state100)) then 
            sm_address1 <= grp_polyveck_pack_w1_fu_2202_r_address1;
        else 
            sm_address1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    sm_ce0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state115, grp_pack_sig_fu_2149_sig_ce0, grp_polyveck_pack_w1_fu_2202_r_ce0, grp_load64_3_fu_2216_x_ce0, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state100, ap_CS_fsm_state105, ap_CS_fsm_state109, ap_CS_fsm_state118, ap_CS_fsm_state121, ap_CS_fsm_state179, ap_CS_fsm_state116, ap_CS_fsm_state117)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state117) or (ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state118) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            sm_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state121) or (ap_const_logic_1 = ap_CS_fsm_state109) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sm_ce0 <= grp_load64_3_fu_2216_x_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state100)) then 
            sm_ce0 <= grp_polyveck_pack_w1_fu_2202_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state179)) then 
            sm_ce0 <= grp_pack_sig_fu_2149_sig_ce0;
        else 
            sm_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sm_ce1_assign_proc : process(ap_CS_fsm_state115, grp_polyveck_pack_w1_fu_2202_r_ce1, ap_CS_fsm_state100, ap_CS_fsm_state118, ap_CS_fsm_state116, ap_CS_fsm_state117)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state117) or (ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state118))) then 
            sm_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state100)) then 
            sm_ce1 <= grp_polyveck_pack_w1_fu_2202_r_ce1;
        else 
            sm_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sm_d0_assign_proc : process(m_q0, ap_CS_fsm_state115, trunc_ln546_2_reg_6100, trunc_ln548_2_reg_6110, trunc_ln550_2_reg_6120, grp_pack_sig_fu_2149_sig_d0, grp_polyveck_pack_w1_fu_2202_r_d0, ap_CS_fsm_state3, ap_CS_fsm_state100, ap_CS_fsm_state118, ap_CS_fsm_state179, ap_CS_fsm_state116, ap_CS_fsm_state117, trunc_ln543_2_fu_4135_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state118)) then 
            sm_d0 <= trunc_ln550_2_reg_6120;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            sm_d0 <= trunc_ln548_2_reg_6110;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state116)) then 
            sm_d0 <= trunc_ln546_2_reg_6100;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            sm_d0 <= trunc_ln543_2_fu_4135_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sm_d0 <= m_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state100)) then 
            sm_d0 <= grp_polyveck_pack_w1_fu_2202_r_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state179)) then 
            sm_d0 <= grp_pack_sig_fu_2149_sig_d0;
        else 
            sm_d0 <= "XXXXXXXX";
        end if; 
    end process;


    sm_d1_assign_proc : process(ap_CS_fsm_state115, trunc_ln545_2_reg_6095, trunc_ln547_2_reg_6105, trunc_ln549_2_reg_6115, state_s_2_q1, grp_polyveck_pack_w1_fu_2202_r_d1, ap_CS_fsm_state100, ap_CS_fsm_state118, ap_CS_fsm_state116, ap_CS_fsm_state117)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state118)) then 
            sm_d1 <= trunc_ln549_2_reg_6115;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
            sm_d1 <= trunc_ln547_2_reg_6105;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state116)) then 
            sm_d1 <= trunc_ln545_2_reg_6095;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state115)) then 
            sm_d1 <= state_s_2_q1(15 downto 8);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state100)) then 
            sm_d1 <= grp_polyveck_pack_w1_fu_2202_r_d1;
        else 
            sm_d1 <= "XXXXXXXX";
        end if; 
    end process;


    sm_we0_assign_proc : process(ap_CS_fsm_state115, grp_pack_sig_fu_2149_sig_we0, grp_polyveck_pack_w1_fu_2202_r_we0, ap_CS_fsm_state3, ap_CS_fsm_state100, ap_CS_fsm_state118, ap_CS_fsm_state179, ap_CS_fsm_state116, ap_CS_fsm_state117)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state117) or (ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state118) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            sm_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state100)) then 
            sm_we0 <= grp_polyveck_pack_w1_fu_2202_r_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state179)) then 
            sm_we0 <= grp_pack_sig_fu_2149_sig_we0;
        else 
            sm_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sm_we1_assign_proc : process(ap_CS_fsm_state115, grp_polyveck_pack_w1_fu_2202_r_we1, ap_CS_fsm_state100, ap_CS_fsm_state118, ap_CS_fsm_state116, ap_CS_fsm_state117)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state117) or (ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state118))) then 
            sm_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state100)) then 
            sm_we1 <= grp_polyveck_pack_w1_fu_2202_r_we1;
        else 
            sm_we1 <= ap_const_logic_0;
        end if; 
    end process;

    smlen <= std_logic_vector(unsigned(mlen) + unsigned(ap_const_lv64_974));

    smlen_ap_vld_assign_proc : process(icmp_ln158_reg_6371, tmp_11_reg_6432, tmp_12_reg_6436, ap_CS_fsm_state176, icmp_ln392_fu_5133_p2, icmp_ln173_fu_5157_p2)
    begin
        if (((icmp_ln392_fu_5133_p2 = ap_const_lv1_1) and (icmp_ln158_reg_6371 = ap_const_lv1_1) and (icmp_ln173_fu_5157_p2 = ap_const_lv1_0) and (tmp_12_reg_6436 = ap_const_lv1_0) and (tmp_11_reg_6432 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state176))) then 
            smlen_ap_vld <= ap_const_logic_1;
        else 
            smlen_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    state_0_s_address0_assign_proc : process(ap_CS_fsm_state35, ap_CS_fsm_state36, icmp_ln417_2_fu_3129_p2, grp_KeccakF1600_StatePer_fu_2109_state_0_address0, ap_CS_fsm_state40, zext_ln363_1_fu_3119_p1, zext_ln417_1_fu_3124_p1, ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            state_0_s_address0 <= ap_const_lv64_10(5 - 1 downto 0);
        elsif (((icmp_ln417_2_fu_3129_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            state_0_s_address0 <= ap_const_lv64_A(5 - 1 downto 0);
        elsif (((icmp_ln417_2_fu_3129_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            state_0_s_address0 <= zext_ln417_1_fu_3124_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            state_0_s_address0 <= zext_ln363_1_fu_3119_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            state_0_s_address0 <= grp_KeccakF1600_StatePer_fu_2109_state_0_address0;
        else 
            state_0_s_address0 <= "XXXXX";
        end if; 
    end process;


    state_0_s_address1_assign_proc : process(ap_CS_fsm_state36, state_0_s_addr_3_reg_5650, ap_CS_fsm_state41, grp_KeccakF1600_StatePer_fu_2109_state_0_address1, ap_CS_fsm_state37, ap_CS_fsm_state40, zext_ln542_1_fu_3181_p1, ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            state_0_s_address1 <= zext_ln542_1_fu_3181_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            state_0_s_address1 <= ap_const_lv64_A(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            state_0_s_address1 <= state_0_s_addr_3_reg_5650;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            state_0_s_address1 <= ap_const_lv64_10(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            state_0_s_address1 <= grp_KeccakF1600_StatePer_fu_2109_state_0_address1;
        else 
            state_0_s_address1 <= "XXXXX";
        end if; 
    end process;


    state_0_s_ce0_assign_proc : process(ap_CS_fsm_state35, ap_CS_fsm_state36, icmp_ln417_2_fu_3129_p2, grp_KeccakF1600_StatePer_fu_2109_state_0_ce0, ap_CS_fsm_state40, ap_CS_fsm_state38)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state38) or ((icmp_ln417_2_fu_3129_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((icmp_ln417_2_fu_3129_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36)))) then 
            state_0_s_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            state_0_s_ce0 <= grp_KeccakF1600_StatePer_fu_2109_state_0_ce0;
        else 
            state_0_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    state_0_s_ce1_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state41, grp_KeccakF1600_StatePer_fu_2109_state_0_ce1, grp_load64_2_fu_2223_ap_done, ap_CS_fsm_state37, ap_CS_fsm_state40, ap_CS_fsm_state38)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state38) or ((ap_const_logic_1 = ap_CS_fsm_state37) and (grp_load64_2_fu_2223_ap_done = ap_const_logic_1)))) then 
            state_0_s_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            state_0_s_ce1 <= grp_KeccakF1600_StatePer_fu_2109_state_0_ce1;
        else 
            state_0_s_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    state_0_s_d0_assign_proc : process(ap_CS_fsm_state35, grp_KeccakF1600_StatePer_fu_2109_state_0_d0, ap_CS_fsm_state40, ap_CS_fsm_state38, xor_ln452_1_fu_3174_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            state_0_s_d0 <= xor_ln452_1_fu_3174_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            state_0_s_d0 <= ap_const_lv64_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            state_0_s_d0 <= grp_KeccakF1600_StatePer_fu_2109_state_0_d0;
        else 
            state_0_s_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    state_0_s_d1_assign_proc : process(grp_KeccakF1600_StatePer_fu_2109_state_0_d1, ap_CS_fsm_state37, ap_CS_fsm_state40, xor_ln418_2_fu_3160_p2, ap_CS_fsm_state38, xor_ln451_1_fu_3167_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            state_0_s_d1 <= xor_ln451_1_fu_3167_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            state_0_s_d1 <= xor_ln418_2_fu_3160_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            state_0_s_d1 <= grp_KeccakF1600_StatePer_fu_2109_state_0_d1;
        else 
            state_0_s_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    state_0_s_we0_assign_proc : process(ap_CS_fsm_state35, grp_KeccakF1600_StatePer_fu_2109_state_0_we0, icmp_ln362_1_fu_3107_p2, ap_CS_fsm_state40, ap_CS_fsm_state38)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state38) or ((icmp_ln362_1_fu_3107_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35)))) then 
            state_0_s_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            state_0_s_we0 <= grp_KeccakF1600_StatePer_fu_2109_state_0_we0;
        else 
            state_0_s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    state_0_s_we1_assign_proc : process(grp_KeccakF1600_StatePer_fu_2109_state_0_we1, grp_load64_2_fu_2223_ap_done, ap_CS_fsm_state37, ap_CS_fsm_state40, ap_CS_fsm_state38)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state38) or ((ap_const_logic_1 = ap_CS_fsm_state37) and (grp_load64_2_fu_2223_ap_done = ap_const_logic_1)))) then 
            state_0_s_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            state_0_s_we1 <= grp_KeccakF1600_StatePer_fu_2109_state_0_we1;
        else 
            state_0_s_we1 <= ap_const_logic_0;
        end if; 
    end process;


    state_s_1_address0_assign_proc : process(ap_CS_fsm_state119, ap_CS_fsm_state120, icmp_ln417_4_fu_4316_p2, ap_CS_fsm_state134, grp_KeccakF1600_StatePer_1_fu_2102_state_address0, ap_CS_fsm_state124, ap_CS_fsm_state133, zext_ln363_3_fu_4306_p1, zext_ln417_3_fu_4311_p1, zext_ln478_1_fu_4534_p1, ap_CS_fsm_state122)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state134)) then 
            state_s_1_address0 <= zext_ln478_1_fu_4534_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state122)) then 
            state_s_1_address0 <= ap_const_lv64_10(5 - 1 downto 0);
        elsif (((icmp_ln417_4_fu_4316_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state120))) then 
            state_s_1_address0 <= ap_const_lv64_4(5 - 1 downto 0);
        elsif (((icmp_ln417_4_fu_4316_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state120))) then 
            state_s_1_address0 <= zext_ln417_3_fu_4311_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            state_s_1_address0 <= zext_ln363_3_fu_4306_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state133) or (ap_const_logic_1 = ap_CS_fsm_state124))) then 
            state_s_1_address0 <= grp_KeccakF1600_StatePer_1_fu_2102_state_address0;
        else 
            state_s_1_address0 <= "XXXXX";
        end if; 
    end process;


    state_s_1_address1_assign_proc : process(ap_CS_fsm_state120, state_s_1_addr_3_reg_6146, ap_CS_fsm_state125, grp_KeccakF1600_StatePer_1_fu_2102_state_address1, ap_CS_fsm_state121, ap_CS_fsm_state124, ap_CS_fsm_state133, zext_ln478_fu_4378_p1, ap_CS_fsm_state122)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state125)) then 
            state_s_1_address1 <= zext_ln478_fu_4378_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state122)) then 
            state_s_1_address1 <= ap_const_lv64_4(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            state_s_1_address1 <= state_s_1_addr_3_reg_6146;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state120)) then 
            state_s_1_address1 <= ap_const_lv64_10(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state133) or (ap_const_logic_1 = ap_CS_fsm_state124))) then 
            state_s_1_address1 <= grp_KeccakF1600_StatePer_1_fu_2102_state_address1;
        else 
            state_s_1_address1 <= "XXXXX";
        end if; 
    end process;


    state_s_1_ce0_assign_proc : process(ap_CS_fsm_state119, ap_CS_fsm_state120, icmp_ln417_4_fu_4316_p2, ap_CS_fsm_state134, grp_KeccakF1600_StatePer_1_fu_2102_state_ce0, ap_CS_fsm_state124, ap_CS_fsm_state133, ap_CS_fsm_state122)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state134) or (ap_const_logic_1 = ap_CS_fsm_state119) or (ap_const_logic_1 = ap_CS_fsm_state122) or ((icmp_ln417_4_fu_4316_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state120)) or ((icmp_ln417_4_fu_4316_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state120)))) then 
            state_s_1_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state133) or (ap_const_logic_1 = ap_CS_fsm_state124))) then 
            state_s_1_ce0 <= grp_KeccakF1600_StatePer_1_fu_2102_state_ce0;
        else 
            state_s_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    state_s_1_ce1_assign_proc : process(ap_CS_fsm_state120, ap_CS_fsm_state125, grp_KeccakF1600_StatePer_1_fu_2102_state_ce1, grp_load64_3_fu_2216_ap_done, ap_CS_fsm_state121, ap_CS_fsm_state124, ap_CS_fsm_state133, ap_CS_fsm_state122)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state125) or (ap_const_logic_1 = ap_CS_fsm_state120) or (ap_const_logic_1 = ap_CS_fsm_state122) or ((ap_const_logic_1 = ap_CS_fsm_state121) and (grp_load64_3_fu_2216_ap_done = ap_const_logic_1)))) then 
            state_s_1_ce1 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state133) or (ap_const_logic_1 = ap_CS_fsm_state124))) then 
            state_s_1_ce1 <= grp_KeccakF1600_StatePer_1_fu_2102_state_ce1;
        else 
            state_s_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    state_s_1_d0_assign_proc : process(ap_CS_fsm_state119, grp_KeccakF1600_StatePer_1_fu_2102_state_d0, ap_CS_fsm_state124, ap_CS_fsm_state133, ap_CS_fsm_state122, xor_ln452_3_fu_4359_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state122)) then 
            state_s_1_d0 <= xor_ln452_3_fu_4359_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
            state_s_1_d0 <= ap_const_lv64_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state133) or (ap_const_logic_1 = ap_CS_fsm_state124))) then 
            state_s_1_d0 <= grp_KeccakF1600_StatePer_1_fu_2102_state_d0;
        else 
            state_s_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    state_s_1_d1_assign_proc : process(grp_KeccakF1600_StatePer_1_fu_2102_state_d1, ap_CS_fsm_state121, ap_CS_fsm_state124, ap_CS_fsm_state133, xor_ln418_4_fu_4345_p2, ap_CS_fsm_state122, xor_ln451_3_fu_4352_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state122)) then 
            state_s_1_d1 <= xor_ln451_3_fu_4352_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            state_s_1_d1 <= xor_ln418_4_fu_4345_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state133) or (ap_const_logic_1 = ap_CS_fsm_state124))) then 
            state_s_1_d1 <= grp_KeccakF1600_StatePer_1_fu_2102_state_d1;
        else 
            state_s_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    state_s_1_we0_assign_proc : process(ap_CS_fsm_state119, grp_KeccakF1600_StatePer_1_fu_2102_state_we0, icmp_ln362_3_fu_4294_p2, ap_CS_fsm_state124, ap_CS_fsm_state133, ap_CS_fsm_state122)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state122) or ((icmp_ln362_3_fu_4294_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state119)))) then 
            state_s_1_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state133) or (ap_const_logic_1 = ap_CS_fsm_state124))) then 
            state_s_1_we0 <= grp_KeccakF1600_StatePer_1_fu_2102_state_we0;
        else 
            state_s_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    state_s_1_we1_assign_proc : process(grp_KeccakF1600_StatePer_1_fu_2102_state_we1, grp_load64_3_fu_2216_ap_done, ap_CS_fsm_state121, ap_CS_fsm_state124, ap_CS_fsm_state133, ap_CS_fsm_state122)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state122) or ((ap_const_logic_1 = ap_CS_fsm_state121) and (grp_load64_3_fu_2216_ap_done = ap_const_logic_1)))) then 
            state_s_1_we1 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state133) or (ap_const_logic_1 = ap_CS_fsm_state124))) then 
            state_s_1_we1 <= grp_KeccakF1600_StatePer_1_fu_2102_state_we1;
        else 
            state_s_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    state_s_2_addr_7_reg_5570 <= ap_const_lv64_10(5 - 1 downto 0);

    state_s_2_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, state_s_2_addr_1_reg_5355, icmp_ln400_reg_5368, ap_CS_fsm_state9, icmp_ln401_fu_2407_p2, state_s_2_addr_2_reg_5385, ap_CS_fsm_state11, ap_CS_fsm_state13, icmp_ln410_fu_2513_p2, state_s_2_addr_4_reg_5438, ap_CS_fsm_state16, state_s_2_addr_3_reg_5466, ap_CS_fsm_state21, state_s_2_addr_5_reg_5545, ap_CS_fsm_state23, state_s_2_addr_6_reg_5565, ap_CS_fsm_state24, state_s_2_addr_7_reg_5570, ap_CS_fsm_state26, ap_CS_fsm_state30, ap_CS_fsm_state101, ap_CS_fsm_state102, state_s_2_addr_11_reg_6013, ap_CS_fsm_state104, icmp_ln401_1_fu_3993_p2, state_s_2_addr_12_reg_6031, grp_KeccakF1600_StatePer_1_fu_2102_state_address0, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state15, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state29, ap_CS_fsm_state103, ap_CS_fsm_state105, ap_CS_fsm_state110, ap_CS_fsm_state106, ap_CS_fsm_state107, ap_CS_fsm_state113, zext_ln363_fu_2336_p1, zext_ln417_fu_2341_p1, zext_ln402_2_fu_2448_p1, zext_ln411_1_fu_2549_p1, zext_ln418_4_fu_2610_p1, zext_ln428_fu_2744_p1, zext_ln451_1_fu_2809_p1, zext_ln542_fu_2850_p1, zext_ln363_2_fu_3948_p1, zext_ln417_2_fu_3953_p1, zext_ln402_4_fu_4024_p1, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            state_s_2_address0 <= ap_const_lv64_0(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            state_s_2_address0 <= state_s_2_addr_12_reg_6031;
        elsif (((icmp_ln401_1_fu_3993_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state104))) then 
            state_s_2_address0 <= zext_ln402_4_fu_4024_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            state_s_2_address0 <= state_s_2_addr_11_reg_6013;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            state_s_2_address0 <= zext_ln417_2_fu_3953_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            state_s_2_address0 <= zext_ln363_2_fu_3948_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            state_s_2_address0 <= zext_ln542_fu_2850_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state111) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            state_s_2_address0 <= state_s_2_addr_7_reg_5570;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            state_s_2_address0 <= ap_const_lv64_10(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            state_s_2_address0 <= state_s_2_addr_6_reg_5565;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            state_s_2_address0 <= zext_ln451_1_fu_2809_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            state_s_2_address0 <= state_s_2_addr_5_reg_5545;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            state_s_2_address0 <= zext_ln428_fu_2744_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            state_s_2_address0 <= state_s_2_addr_3_reg_5466;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            state_s_2_address0 <= zext_ln418_4_fu_2610_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            state_s_2_address0 <= state_s_2_addr_4_reg_5438;
        elsif (((icmp_ln410_fu_2513_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            state_s_2_address0 <= zext_ln411_1_fu_2549_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            state_s_2_address0 <= state_s_2_addr_2_reg_5385;
        elsif (((icmp_ln401_fu_2407_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            state_s_2_address0 <= zext_ln402_2_fu_2448_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            state_s_2_address0 <= state_s_2_addr_1_reg_5355;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            state_s_2_address0 <= zext_ln417_fu_2341_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            state_s_2_address0 <= zext_ln363_fu_2336_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((icmp_ln400_reg_5368 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            state_s_2_address0 <= grp_KeccakF1600_StatePer_1_fu_2102_state_address0;
        else 
            state_s_2_address0 <= "XXXXX";
        end if; 
    end process;


    state_s_2_address1_assign_proc : process(icmp_ln400_reg_5368, ap_CS_fsm_state11, ap_CS_fsm_state108, icmp_ln410_1_fu_4035_p2, state_s_2_addr_14_reg_6052, ap_CS_fsm_state114, grp_KeccakF1600_StatePer_1_fu_2102_state_address1, ap_CS_fsm_state15, ap_CS_fsm_state29, ap_CS_fsm_state110, ap_CS_fsm_state106, ap_CS_fsm_state109, ap_CS_fsm_state107, ap_CS_fsm_state113, zext_ln411_4_fu_4076_p1, zext_ln542_2_fu_4114_p1, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state114)) then 
            state_s_2_address1 <= zext_ln542_2_fu_4114_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            state_s_2_address1 <= ap_const_lv64_0(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            state_s_2_address1 <= state_s_2_addr_14_reg_6052;
        elsif (((icmp_ln410_1_fu_4035_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state108))) then 
            state_s_2_address1 <= zext_ln411_4_fu_4076_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
            state_s_2_address1 <= ap_const_lv64_10(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((icmp_ln400_reg_5368 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            state_s_2_address1 <= grp_KeccakF1600_StatePer_1_fu_2102_state_address1;
        else 
            state_s_2_address1 <= "XXXXX";
        end if; 
    end process;


    state_s_2_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, icmp_ln400_reg_5368, ap_CS_fsm_state9, icmp_ln401_fu_2407_p2, ap_CS_fsm_state11, ap_CS_fsm_state13, icmp_ln410_fu_2513_p2, ap_CS_fsm_state16, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state30, ap_CS_fsm_state101, ap_CS_fsm_state102, ap_CS_fsm_state104, icmp_ln401_1_fu_3993_p2, grp_KeccakF1600_StatePer_1_fu_2102_state_ce0, grp_load64_3_fu_2216_ap_done, grp_load64_2_fu_2223_ap_done, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state15, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state29, ap_CS_fsm_state103, ap_CS_fsm_state105, ap_CS_fsm_state110, ap_CS_fsm_state106, ap_CS_fsm_state107, ap_CS_fsm_state113, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state111)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state111) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state107) or ((icmp_ln401_1_fu_3993_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state104)) or ((icmp_ln410_fu_2513_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((icmp_ln401_fu_2407_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_const_logic_1 = ap_CS_fsm_state105) and (grp_load64_3_fu_2216_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_load64_3_fu_2216_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (grp_load64_3_fu_2216_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_load64_3_fu_2216_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state103) and (grp_load64_2_fu_2223_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_load64_2_fu_2223_ap_done = ap_const_logic_1)))) then 
            state_s_2_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((icmp_ln400_reg_5368 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            state_s_2_ce0 <= grp_KeccakF1600_StatePer_1_fu_2102_state_ce0;
        else 
            state_s_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    state_s_2_ce1_assign_proc : process(icmp_ln400_reg_5368, ap_CS_fsm_state11, ap_CS_fsm_state108, icmp_ln410_1_fu_4035_p2, ap_CS_fsm_state114, grp_KeccakF1600_StatePer_1_fu_2102_state_ce1, grp_load64_3_fu_2216_ap_done, ap_CS_fsm_state15, ap_CS_fsm_state29, ap_CS_fsm_state110, ap_CS_fsm_state106, ap_CS_fsm_state109, ap_CS_fsm_state107, ap_CS_fsm_state113, ap_CS_fsm_state111)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state114) or (ap_const_logic_1 = ap_CS_fsm_state111) or (ap_const_logic_1 = ap_CS_fsm_state107) or ((icmp_ln410_1_fu_4035_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state108)) or ((ap_const_logic_1 = ap_CS_fsm_state109) and (grp_load64_3_fu_2216_ap_done = ap_const_logic_1)))) then 
            state_s_2_ce1 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((icmp_ln400_reg_5368 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            state_s_2_ce1 <= grp_KeccakF1600_StatePer_1_fu_2102_state_ce1;
        else 
            state_s_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    state_s_2_d0_assign_proc : process(ap_CS_fsm_state5, icmp_ln400_reg_5368, ap_CS_fsm_state11, ap_CS_fsm_state23, ap_CS_fsm_state101, grp_KeccakF1600_StatePer_1_fu_2102_state_d0, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state15, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state29, ap_CS_fsm_state103, ap_CS_fsm_state105, ap_CS_fsm_state110, ap_CS_fsm_state106, ap_CS_fsm_state113, grp_fu_2247_p2, grp_fu_2254_p2, xor_ln428_fu_2784_p2, ap_CS_fsm_state25, xor_ln451_fu_2836_p2, ap_CS_fsm_state27, xor_ln452_fu_2843_p2, ap_CS_fsm_state111, xor_ln452_2_fu_4107_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            state_s_2_d0 <= xor_ln452_2_fu_4107_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            state_s_2_d0 <= xor_ln452_fu_2843_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            state_s_2_d0 <= xor_ln451_fu_2836_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            state_s_2_d0 <= xor_ln428_fu_2784_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            state_s_2_d0 <= grp_fu_2254_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            state_s_2_d0 <= grp_fu_2247_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            state_s_2_d0 <= ap_const_lv64_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((icmp_ln400_reg_5368 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            state_s_2_d0 <= grp_KeccakF1600_StatePer_1_fu_2102_state_d0;
        else 
            state_s_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    state_s_2_d1_assign_proc : process(icmp_ln400_reg_5368, ap_CS_fsm_state11, grp_KeccakF1600_StatePer_1_fu_2102_state_d1, ap_CS_fsm_state15, ap_CS_fsm_state29, ap_CS_fsm_state110, ap_CS_fsm_state106, ap_CS_fsm_state109, ap_CS_fsm_state113, xor_ln411_1_fu_4093_p2, ap_CS_fsm_state111, xor_ln451_2_fu_4100_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            state_s_2_d1 <= xor_ln451_2_fu_4100_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state109)) then 
            state_s_2_d1 <= xor_ln411_1_fu_4093_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((icmp_ln400_reg_5368 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            state_s_2_d1 <= grp_KeccakF1600_StatePer_1_fu_2102_state_d1;
        else 
            state_s_2_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    state_s_2_we0_assign_proc : process(ap_CS_fsm_state5, icmp_ln400_reg_5368, ap_CS_fsm_state11, icmp_ln423_reg_5497, ap_CS_fsm_state23, ap_CS_fsm_state101, grp_KeccakF1600_StatePer_1_fu_2102_state_we0, grp_load64_3_fu_2216_ap_done, grp_load64_2_fu_2223_ap_done, icmp_ln362_fu_2324_p2, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state15, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state29, icmp_ln362_2_fu_3936_p2, ap_CS_fsm_state103, ap_CS_fsm_state105, ap_CS_fsm_state110, ap_CS_fsm_state106, ap_CS_fsm_state113, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state111)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state111) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state25) or ((icmp_ln362_2_fu_3936_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state101)) or ((icmp_ln423_reg_5497 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((icmp_ln362_fu_2324_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((ap_const_logic_1 = ap_CS_fsm_state105) and (grp_load64_3_fu_2216_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_load64_3_fu_2216_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (grp_load64_3_fu_2216_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_load64_3_fu_2216_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state103) and (grp_load64_2_fu_2223_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_load64_2_fu_2223_ap_done = ap_const_logic_1)))) then 
            state_s_2_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((icmp_ln400_reg_5368 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            state_s_2_we0 <= grp_KeccakF1600_StatePer_1_fu_2102_state_we0;
        else 
            state_s_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    state_s_2_we1_assign_proc : process(icmp_ln400_reg_5368, ap_CS_fsm_state11, grp_KeccakF1600_StatePer_1_fu_2102_state_we1, grp_load64_3_fu_2216_ap_done, ap_CS_fsm_state15, ap_CS_fsm_state29, ap_CS_fsm_state110, ap_CS_fsm_state106, ap_CS_fsm_state109, ap_CS_fsm_state113, ap_CS_fsm_state111)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state111) or ((ap_const_logic_1 = ap_CS_fsm_state109) and (grp_load64_3_fu_2216_ap_done = ap_const_logic_1)))) then 
            state_s_2_we1 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((icmp_ln400_reg_5368 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            state_s_2_we1 <= grp_KeccakF1600_StatePer_1_fu_2102_state_we1;
        else 
            state_s_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    state_s_address0_assign_proc : process(grp_shake128_squeezebloc_fu_2089_state_s_address0, grp_dilithium_shake128_s_fu_2126_state_s_address0, ap_CS_fsm_state50, ap_CS_fsm_state68, ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            state_s_address0 <= grp_dilithium_shake128_s_fu_2126_state_s_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            state_s_address0 <= grp_shake128_squeezebloc_fu_2089_state_s_address0;
        else 
            state_s_address0 <= "XXXXX";
        end if; 
    end process;


    state_s_address1_assign_proc : process(grp_shake128_squeezebloc_fu_2089_state_s_address1, grp_dilithium_shake128_s_fu_2126_state_s_address1, ap_CS_fsm_state50, ap_CS_fsm_state68, ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            state_s_address1 <= grp_dilithium_shake128_s_fu_2126_state_s_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            state_s_address1 <= grp_shake128_squeezebloc_fu_2089_state_s_address1;
        else 
            state_s_address1 <= "XXXXX";
        end if; 
    end process;


    state_s_ce0_assign_proc : process(grp_shake128_squeezebloc_fu_2089_state_s_ce0, grp_dilithium_shake128_s_fu_2126_state_s_ce0, ap_CS_fsm_state50, ap_CS_fsm_state68, ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            state_s_ce0 <= grp_dilithium_shake128_s_fu_2126_state_s_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            state_s_ce0 <= grp_shake128_squeezebloc_fu_2089_state_s_ce0;
        else 
            state_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    state_s_ce1_assign_proc : process(grp_shake128_squeezebloc_fu_2089_state_s_ce1, grp_dilithium_shake128_s_fu_2126_state_s_ce1, ap_CS_fsm_state50, ap_CS_fsm_state68, ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            state_s_ce1 <= grp_dilithium_shake128_s_fu_2126_state_s_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            state_s_ce1 <= grp_shake128_squeezebloc_fu_2089_state_s_ce1;
        else 
            state_s_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    state_s_d0_assign_proc : process(grp_shake128_squeezebloc_fu_2089_state_s_d0, grp_dilithium_shake128_s_fu_2126_state_s_d0, ap_CS_fsm_state50, ap_CS_fsm_state68, ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            state_s_d0 <= grp_dilithium_shake128_s_fu_2126_state_s_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            state_s_d0 <= grp_shake128_squeezebloc_fu_2089_state_s_d0;
        else 
            state_s_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    state_s_d1_assign_proc : process(grp_shake128_squeezebloc_fu_2089_state_s_d1, grp_dilithium_shake128_s_fu_2126_state_s_d1, ap_CS_fsm_state50, ap_CS_fsm_state68, ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            state_s_d1 <= grp_dilithium_shake128_s_fu_2126_state_s_d1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            state_s_d1 <= grp_shake128_squeezebloc_fu_2089_state_s_d1;
        else 
            state_s_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    state_s_we0_assign_proc : process(grp_shake128_squeezebloc_fu_2089_state_s_we0, grp_dilithium_shake128_s_fu_2126_state_s_we0, ap_CS_fsm_state50, ap_CS_fsm_state68, ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            state_s_we0 <= grp_dilithium_shake128_s_fu_2126_state_s_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            state_s_we0 <= grp_shake128_squeezebloc_fu_2089_state_s_we0;
        else 
            state_s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    state_s_we1_assign_proc : process(grp_shake128_squeezebloc_fu_2089_state_s_we1, grp_dilithium_shake128_s_fu_2126_state_s_we1, ap_CS_fsm_state50, ap_CS_fsm_state68, ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            state_s_we1 <= grp_dilithium_shake128_s_fu_2126_state_s_we1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            state_s_we1 <= grp_shake128_squeezebloc_fu_2089_state_s_we1;
        else 
            state_s_we1 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln109_fu_5068_p2 <= std_logic_vector(unsigned(w0_vec_coeffs_q0) - unsigned(h_vec_coeffs_q0));
    sub_ln208_1_fu_2315_p2 <= std_logic_vector(unsigned(add_ln208_1_reg_5311) - unsigned(trunc_ln207_fu_2286_p1));
    sub_ln208_fu_2305_p2 <= std_logic_vector(unsigned(add_ln208_reg_5306) - unsigned(trunc_ln207_1_fu_2290_p1));
    sub_ln381_fu_3519_p2 <= std_logic_vector(unsigned(zext_ln378_reg_5747) - unsigned(zext_ln379_fu_3515_p1));
    sub_ln385_fu_3571_p2 <= std_logic_vector(unsigned(ap_const_lv10_100) - unsigned(trunc_ln385_fu_3567_p1));
    sub_ln420_fu_2634_p2 <= std_logic_vector(unsigned(indvars_iv_i_i71_i_reg_1294) - unsigned(zext_ln419_fu_2626_p1));
    sub_ln48_fu_3866_p2 <= std_logic_vector(unsigned(ap_const_lv9_2B) - unsigned(sext_ln47_fu_3862_p1));
    sub_ln52_1_fu_3930_p2 <= std_logic_vector(signed(grp_fu_5278_p3) - signed(select_ln52_fu_3922_p3));
    sub_ln52_fu_3909_p2 <= std_logic_vector(unsigned(ap_const_lv32_3FF000) - unsigned(grp_fu_5278_p3));
    sub_ln542_fu_4662_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) - unsigned(shl_ln22_fu_4655_p3));

    t0_vec_coeffs_address0_assign_proc : process(grp_unpack_sk_fu_2116_t0_vec_coeffs_address0, grp_ntt_1_fu_2164_a_address0, grp_polyveck_pointwise_p_fu_2209_v_vec_coeffs_address0, ap_CS_fsm_state4, ap_CS_fsm_state76, ap_CS_fsm_state165)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state165)) then 
            t0_vec_coeffs_address0 <= grp_polyveck_pointwise_p_fu_2209_v_vec_coeffs_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            t0_vec_coeffs_address0 <= grp_ntt_1_fu_2164_a_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            t0_vec_coeffs_address0 <= grp_unpack_sk_fu_2116_t0_vec_coeffs_address0;
        else 
            t0_vec_coeffs_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    t0_vec_coeffs_address1_assign_proc : process(grp_unpack_sk_fu_2116_t0_vec_coeffs_address1, grp_ntt_1_fu_2164_a_address1, ap_CS_fsm_state4, ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            t0_vec_coeffs_address1 <= grp_ntt_1_fu_2164_a_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            t0_vec_coeffs_address1 <= grp_unpack_sk_fu_2116_t0_vec_coeffs_address1;
        else 
            t0_vec_coeffs_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    t0_vec_coeffs_ce0_assign_proc : process(grp_unpack_sk_fu_2116_t0_vec_coeffs_ce0, grp_ntt_1_fu_2164_a_ce0, grp_polyveck_pointwise_p_fu_2209_v_vec_coeffs_ce0, ap_CS_fsm_state4, ap_CS_fsm_state76, ap_CS_fsm_state165)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state165)) then 
            t0_vec_coeffs_ce0 <= grp_polyveck_pointwise_p_fu_2209_v_vec_coeffs_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            t0_vec_coeffs_ce0 <= grp_ntt_1_fu_2164_a_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            t0_vec_coeffs_ce0 <= grp_unpack_sk_fu_2116_t0_vec_coeffs_ce0;
        else 
            t0_vec_coeffs_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    t0_vec_coeffs_ce1_assign_proc : process(grp_unpack_sk_fu_2116_t0_vec_coeffs_ce1, grp_ntt_1_fu_2164_a_ce1, ap_CS_fsm_state4, ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            t0_vec_coeffs_ce1 <= grp_ntt_1_fu_2164_a_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            t0_vec_coeffs_ce1 <= grp_unpack_sk_fu_2116_t0_vec_coeffs_ce1;
        else 
            t0_vec_coeffs_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    t0_vec_coeffs_d0_assign_proc : process(grp_unpack_sk_fu_2116_t0_vec_coeffs_d0, grp_ntt_1_fu_2164_a_d0, ap_CS_fsm_state4, ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            t0_vec_coeffs_d0 <= grp_ntt_1_fu_2164_a_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            t0_vec_coeffs_d0 <= grp_unpack_sk_fu_2116_t0_vec_coeffs_d0;
        else 
            t0_vec_coeffs_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    t0_vec_coeffs_we0_assign_proc : process(grp_unpack_sk_fu_2116_t0_vec_coeffs_we0, grp_ntt_1_fu_2164_a_we0, ap_CS_fsm_state4, ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            t0_vec_coeffs_we0 <= grp_ntt_1_fu_2164_a_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            t0_vec_coeffs_we0 <= grp_unpack_sk_fu_2116_t0_vec_coeffs_we0;
        else 
            t0_vec_coeffs_we0 <= ap_const_logic_0;
        end if; 
    end process;


    t0_vec_coeffs_we1_assign_proc : process(grp_unpack_sk_fu_2116_t0_vec_coeffs_we1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            t0_vec_coeffs_we1 <= grp_unpack_sk_fu_2116_t0_vec_coeffs_we1;
        else 
            t0_vec_coeffs_we1 <= ap_const_logic_0;
        end if; 
    end process;

    t_13_fu_4746_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_3802001) * signed(trunc_ln18_fu_4742_p1))), 32));
    t_17_fu_4985_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_16_fu_4977_p3(0) = '1') else 
        ap_const_lv32_0;
    t_18_fu_5005_p2 <= std_logic_vector(unsigned(z_vec_coeffs_q0) - unsigned(and_ln302_fu_4999_p2));

    t_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state18, zext_ln426_reg_5514, ap_CS_fsm_state21, ap_CS_fsm_state20, zext_ln388_fu_2387_p1, zext_ln425_fu_2671_p1, zext_ln31_fu_2730_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            t_address0 <= zext_ln31_fu_2730_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            t_address0 <= zext_ln426_reg_5514(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            t_address0 <= zext_ln425_fu_2671_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            t_address0 <= zext_ln388_fu_2387_p1(3 - 1 downto 0);
        else 
            t_address0 <= "XXX";
        end if; 
    end process;


    t_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state18, ap_CS_fsm_state21, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            t_ce0 <= ap_const_logic_1;
        else 
            t_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    t_d0_assign_proc : process(sm_q0, ap_CS_fsm_state8, ap_CS_fsm_state18, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            t_d0 <= sm_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            t_d0 <= ap_const_lv8_0;
        else 
            t_d0 <= "XXXXXXXX";
        end if; 
    end process;


    t_we0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state18, icmp_ln424_fu_2659_p2, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state20) or ((icmp_ln424_fu_2659_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)))) then 
            t_we0 <= ap_const_logic_1;
        else 
            t_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_13_fu_3485_p4 <= ctr_0_i_reg_1465(31 downto 8);
    tmp_14_fu_3872_p3 <= sub_ln48_fu_3866_p2(8 downto 8);
    tmp_15_fu_3914_p3 <= sub_ln52_fu_3909_p2(31 downto 31);
    tmp_16_fu_4977_p3 <= z_vec_coeffs_q0(31 downto 31);
    tmp_31_fu_3687_p3 <= (ap_const_lv56_1 & phi_ln125_1_reg_1569);
    tmp_32_fu_3713_p3 <= (ap_const_lv56_2 & phi_ln125_2_reg_1580);
    tmp_33_fu_3739_p3 <= (ap_const_lv56_3 & phi_ln125_3_reg_1591);
    tmp_34_fu_3795_p3 <= (i_0_i83_reg_1626 & ap_const_lv8_0);
    tmp_35_fu_4685_p3 <= (i_0_i100_reg_1888 & ap_const_lv8_0);
    tmp_36_fu_4807_p3 <= (i_0_i108_reg_1922 & ap_const_lv8_0);
    tmp_37_fu_4869_p3 <= (i_0_i116_reg_1944 & ap_const_lv8_0);
    tmp_38_fu_4939_p3 <= (i_0_i84_reg_1966 & ap_const_lv8_0);
    tmp_39_fu_5029_p3 <= (i_0_i123_reg_1988 & ap_const_lv8_0);
    tmp_40_fu_5087_p3 <= (i_0_i131_reg_2010 & ap_const_lv8_0);
    tmp_41_fu_5145_p3 <= (i_0_i87_reg_2032 & ap_const_lv8_0);
    trunc_ln11_fu_3839_p4 <= add_ln42_fu_3833_p2(31 downto 7);
    trunc_ln12_fu_3853_p4 <= grp_fu_5269_p3(31 downto 24);
    trunc_ln13_fu_4913_p4 <= add_ln36_fu_4907_p2(31 downto 23);
    trunc_ln18_fu_4742_p1 <= mul_ln182_fu_4736_p2(32 - 1 downto 0);
    trunc_ln207_1_fu_2290_p1 <= i_0_reg_1204(13 - 1 downto 0);
    trunc_ln207_fu_2286_p1 <= i_0_reg_1204(14 - 1 downto 0);
    trunc_ln208_1_fu_2276_p1 <= mlen(14 - 1 downto 0);
    trunc_ln208_fu_2266_p1 <= mlen(13 - 1 downto 0);
    trunc_ln22_fu_3462_p1 <= i_0_i_i_reg_1441(2 - 1 downto 0);
    trunc_ln31_4_fu_2756_p1 <= i_0_i_reg_1361(3 - 1 downto 0);
    trunc_ln379_1_fu_3511_p1 <= grp_fu_3501_p2(2 - 1 downto 0);
    trunc_ln379_fu_3507_p1 <= grp_fu_3501_p2(8 - 1 downto 0);
    trunc_ln385_fu_3567_p1 <= ctr_0_i_reg_1465(10 - 1 downto 0);
    trunc_ln409_fu_2481_p1 <= p_38_rec_i_i72_i_reg_1305(14 - 1 downto 0);
    trunc_ln418_1_fu_2485_p4 <= p_23_i_i68_i_reg_1271(4 downto 3);
    trunc_ln418_2_fu_4328_p1 <= i_3_i_i_i166_i_reg_1738(2 - 1 downto 0);
    trunc_ln418_fu_2577_p1 <= i_3_i_i78_i_reg_1328(4 - 1 downto 0);
    trunc_ln420_fu_2640_p1 <= sub_ln420_fu_2634_p2(33 - 1 downto 0);
    trunc_ln426_fu_2684_p1 <= i_5_i_i84_i_reg_1350(14 - 1 downto 0);
    trunc_ln429_fu_2749_p1 <= sub_ln420_reg_5476(10 - 1 downto 0);
    trunc_ln451_fu_2814_p1 <= state_pos_reg_1385(3 - 1 downto 0);
    trunc_ln48_3_fu_4425_p1 <= lshr_ln48_fu_4419_p2(8 - 1 downto 0);
    trunc_ln48_4_fu_4559_p1 <= i_0_i89_reg_1865(3 - 1 downto 0);
    trunc_ln48_5_fu_4581_p1 <= lshr_ln48_1_fu_4575_p2(8 - 1 downto 0);
    trunc_ln48_fu_4403_p1 <= i_0_i86_reg_1761(3 - 1 downto 0);
    trunc_ln526_fu_4465_p1 <= i_0_i177_i_reg_1772(3 - 1 downto 0);
    trunc_ln542_fu_4626_p1 <= signs_1_i_i_reg_1831(1 - 1 downto 0);
    trunc_ln543_1_fu_3198_p1 <= state_0_s_q1(8 - 1 downto 0);
    trunc_ln543_2_fu_4135_p1 <= state_s_2_q1(8 - 1 downto 0);
    trunc_ln543_3_fu_4131_p1 <= i_3_i_i45_reg_1716(2 - 1 downto 0);
    trunc_ln543_fu_2867_p1 <= state_s_2_q0(8 - 1 downto 0);
    trunc_ln_fu_2795_p4 <= state_pos_reg_1385(9 downto 3);

    w0_vec_coeffs_address0_assign_proc : process(zext_ln227_1_reg_5982, ap_CS_fsm_state160, w0_vec_coeffs_addr_1_reg_6422, ap_CS_fsm_state164, ap_CS_fsm_state173, w0_vec_coeffs_addr_2_reg_6461, ap_CS_fsm_state177, zext_ln250_1_fu_5190_p1, grp_polyveck_chknorm_fu_2229_v_vec_coeffs_address0, grp_polyveck_caddq_fu_2237_v_vec_coeffs_address0, grp_polyveck_reduce_fu_2242_v_vec_coeffs_address0, ap_CS_fsm_state99, ap_CS_fsm_state161, ap_CS_fsm_state174, ap_CS_fsm_state175, ap_CS_fsm_state162, zext_ln109_1_fu_5062_p1, zext_ln88_6_fu_5120_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state177)) then 
            w0_vec_coeffs_address0 <= zext_ln250_1_fu_5190_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state174)) then 
            w0_vec_coeffs_address0 <= w0_vec_coeffs_addr_2_reg_6461;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state173)) then 
            w0_vec_coeffs_address0 <= zext_ln88_6_fu_5120_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state161)) then 
            w0_vec_coeffs_address0 <= w0_vec_coeffs_addr_1_reg_6422;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state160)) then 
            w0_vec_coeffs_address0 <= zext_ln109_1_fu_5062_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            w0_vec_coeffs_address0 <= zext_ln227_1_reg_5982(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state162)) then 
            w0_vec_coeffs_address0 <= grp_polyveck_reduce_fu_2242_v_vec_coeffs_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state175)) then 
            w0_vec_coeffs_address0 <= grp_polyveck_caddq_fu_2237_v_vec_coeffs_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state164)) then 
            w0_vec_coeffs_address0 <= grp_polyveck_chknorm_fu_2229_v_vec_coeffs_address0;
        else 
            w0_vec_coeffs_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    w0_vec_coeffs_ce0_assign_proc : process(ap_CS_fsm_state160, ap_CS_fsm_state164, ap_CS_fsm_state173, ap_CS_fsm_state177, grp_polyveck_chknorm_fu_2229_v_vec_coeffs_ce0, grp_polyveck_caddq_fu_2237_v_vec_coeffs_ce0, grp_polyveck_reduce_fu_2242_v_vec_coeffs_ce0, ap_CS_fsm_state99, ap_CS_fsm_state161, ap_CS_fsm_state174, ap_CS_fsm_state175, ap_CS_fsm_state162)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state174) or (ap_const_logic_1 = ap_CS_fsm_state161) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state177) or (ap_const_logic_1 = ap_CS_fsm_state173) or (ap_const_logic_1 = ap_CS_fsm_state160))) then 
            w0_vec_coeffs_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state162)) then 
            w0_vec_coeffs_ce0 <= grp_polyveck_reduce_fu_2242_v_vec_coeffs_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state175)) then 
            w0_vec_coeffs_ce0 <= grp_polyveck_caddq_fu_2237_v_vec_coeffs_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state164)) then 
            w0_vec_coeffs_ce0 <= grp_polyveck_chknorm_fu_2229_v_vec_coeffs_ce0;
        else 
            w0_vec_coeffs_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    w0_vec_coeffs_d0_assign_proc : process(grp_polyveck_caddq_fu_2237_v_vec_coeffs_d0, grp_polyveck_reduce_fu_2242_v_vec_coeffs_d0, ap_CS_fsm_state99, ap_CS_fsm_state161, ap_CS_fsm_state174, ap_CS_fsm_state175, ap_CS_fsm_state162, sub_ln52_1_fu_3930_p2, sub_ln109_fu_5068_p2, add_ln88_2_fu_5126_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state174)) then 
            w0_vec_coeffs_d0 <= add_ln88_2_fu_5126_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state161)) then 
            w0_vec_coeffs_d0 <= sub_ln109_fu_5068_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            w0_vec_coeffs_d0 <= sub_ln52_1_fu_3930_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state162)) then 
            w0_vec_coeffs_d0 <= grp_polyveck_reduce_fu_2242_v_vec_coeffs_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state175)) then 
            w0_vec_coeffs_d0 <= grp_polyveck_caddq_fu_2237_v_vec_coeffs_d0;
        else 
            w0_vec_coeffs_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w0_vec_coeffs_we0_assign_proc : process(grp_polyveck_caddq_fu_2237_v_vec_coeffs_we0, grp_polyveck_reduce_fu_2242_v_vec_coeffs_we0, ap_CS_fsm_state99, ap_CS_fsm_state161, ap_CS_fsm_state174, ap_CS_fsm_state175, ap_CS_fsm_state162)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state174) or (ap_const_logic_1 = ap_CS_fsm_state161) or (ap_const_logic_1 = ap_CS_fsm_state99))) then 
            w0_vec_coeffs_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state162)) then 
            w0_vec_coeffs_we0 <= grp_polyveck_reduce_fu_2242_v_vec_coeffs_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state175)) then 
            w0_vec_coeffs_we0 <= grp_polyveck_caddq_fu_2237_v_vec_coeffs_we0;
        else 
            w0_vec_coeffs_we0 <= ap_const_logic_0;
        end if; 
    end process;


    w1_vec_coeffs_address0_assign_proc : process(ap_CS_fsm_state98, zext_ln227_1_fu_3828_p1, w1_vec_coeffs_addr_reg_5987, ap_CS_fsm_state177, zext_ln250_1_fu_5190_p1, grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_address0, grp_polyvecl_pointwise_a_fu_2176_w_coeffs_address0, grp_polyveck_pack_w1_fu_2202_w1_vec_coeffs_address0, grp_polyveck_caddq_fu_2237_v_vec_coeffs_address0, grp_polyveck_reduce_fu_2242_v_vec_coeffs_address0, ap_CS_fsm_state91, ap_CS_fsm_state96, ap_CS_fsm_state99, ap_CS_fsm_state100, ap_CS_fsm_state94, ap_CS_fsm_state92)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state177)) then 
            w1_vec_coeffs_address0 <= zext_ln250_1_fu_5190_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            w1_vec_coeffs_address0 <= w1_vec_coeffs_addr_reg_5987;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
            w1_vec_coeffs_address0 <= zext_ln227_1_fu_3828_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            w1_vec_coeffs_address0 <= grp_polyveck_reduce_fu_2242_v_vec_coeffs_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            w1_vec_coeffs_address0 <= grp_polyveck_caddq_fu_2237_v_vec_coeffs_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state100)) then 
            w1_vec_coeffs_address0 <= grp_polyveck_pack_w1_fu_2202_w1_vec_coeffs_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            w1_vec_coeffs_address0 <= grp_polyvecl_pointwise_a_fu_2176_w_coeffs_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            w1_vec_coeffs_address0 <= grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_address0;
        else 
            w1_vec_coeffs_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    w1_vec_coeffs_address1_assign_proc : process(grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_address1, grp_polyveck_pack_w1_fu_2202_w1_vec_coeffs_address1, ap_CS_fsm_state100, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state100)) then 
            w1_vec_coeffs_address1 <= grp_polyveck_pack_w1_fu_2202_w1_vec_coeffs_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            w1_vec_coeffs_address1 <= grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_address1;
        else 
            w1_vec_coeffs_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    w1_vec_coeffs_ce0_assign_proc : process(ap_CS_fsm_state98, ap_CS_fsm_state177, grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_ce0, grp_polyvecl_pointwise_a_fu_2176_w_coeffs_ce0, grp_polyveck_pack_w1_fu_2202_w1_vec_coeffs_ce0, grp_polyveck_caddq_fu_2237_v_vec_coeffs_ce0, grp_polyveck_reduce_fu_2242_v_vec_coeffs_ce0, ap_CS_fsm_state91, ap_CS_fsm_state96, ap_CS_fsm_state99, ap_CS_fsm_state100, ap_CS_fsm_state94, ap_CS_fsm_state92)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state177))) then 
            w1_vec_coeffs_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            w1_vec_coeffs_ce0 <= grp_polyveck_reduce_fu_2242_v_vec_coeffs_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            w1_vec_coeffs_ce0 <= grp_polyveck_caddq_fu_2237_v_vec_coeffs_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state100)) then 
            w1_vec_coeffs_ce0 <= grp_polyveck_pack_w1_fu_2202_w1_vec_coeffs_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            w1_vec_coeffs_ce0 <= grp_polyvecl_pointwise_a_fu_2176_w_coeffs_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            w1_vec_coeffs_ce0 <= grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_ce0;
        else 
            w1_vec_coeffs_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    w1_vec_coeffs_ce1_assign_proc : process(grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_ce1, grp_polyveck_pack_w1_fu_2202_w1_vec_coeffs_ce1, ap_CS_fsm_state100, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state100)) then 
            w1_vec_coeffs_ce1 <= grp_polyveck_pack_w1_fu_2202_w1_vec_coeffs_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            w1_vec_coeffs_ce1 <= grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_ce1;
        else 
            w1_vec_coeffs_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    w1_vec_coeffs_d0_assign_proc : process(grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_d0, grp_polyvecl_pointwise_a_fu_2176_w_coeffs_d0, grp_polyveck_caddq_fu_2237_v_vec_coeffs_d0, grp_polyveck_reduce_fu_2242_v_vec_coeffs_d0, ap_CS_fsm_state91, ap_CS_fsm_state96, ap_CS_fsm_state99, ap_CS_fsm_state94, ap_CS_fsm_state92, sext_ln48_1_fu_3904_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            w1_vec_coeffs_d0 <= sext_ln48_1_fu_3904_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            w1_vec_coeffs_d0 <= grp_polyveck_reduce_fu_2242_v_vec_coeffs_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            w1_vec_coeffs_d0 <= grp_polyveck_caddq_fu_2237_v_vec_coeffs_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            w1_vec_coeffs_d0 <= grp_polyvecl_pointwise_a_fu_2176_w_coeffs_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            w1_vec_coeffs_d0 <= grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_d0;
        else 
            w1_vec_coeffs_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w1_vec_coeffs_we0_assign_proc : process(grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_we0, grp_polyvecl_pointwise_a_fu_2176_w_coeffs_we0, grp_polyveck_caddq_fu_2237_v_vec_coeffs_we0, grp_polyveck_reduce_fu_2242_v_vec_coeffs_we0, ap_CS_fsm_state91, ap_CS_fsm_state96, ap_CS_fsm_state99, ap_CS_fsm_state94, ap_CS_fsm_state92)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            w1_vec_coeffs_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            w1_vec_coeffs_we0 <= grp_polyveck_reduce_fu_2242_v_vec_coeffs_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            w1_vec_coeffs_we0 <= grp_polyveck_caddq_fu_2237_v_vec_coeffs_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            w1_vec_coeffs_we0 <= grp_polyvecl_pointwise_a_fu_2176_w_coeffs_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            w1_vec_coeffs_we0 <= grp_polyveck_invntt_tomo_fu_2133_v_vec_coeffs_we0;
        else 
            w1_vec_coeffs_we0 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln411_1_fu_4093_p2 <= (state_s_2_q1 xor grp_load64_3_fu_2216_ap_return);
    xor_ln418_2_fu_3160_p2 <= (state_0_s_q0 xor grp_load64_2_fu_2223_ap_return);
    xor_ln418_4_fu_4345_p2 <= (state_s_1_q0 xor grp_load64_3_fu_2216_ap_return);
    xor_ln428_fu_2784_p2 <= (state_s_2_q0 xor r_0_i_reg_1373);
    xor_ln451_1_fu_3167_p2 <= (state_0_s_q0 xor ap_const_lv64_1F);
    xor_ln451_2_fu_4100_p2 <= (state_s_2_q0 xor ap_const_lv64_1F);
    xor_ln451_3_fu_4352_p2 <= (state_s_1_q0 xor ap_const_lv64_1F);
    xor_ln451_fu_2836_p2 <= (state_s_2_q0 xor shl_ln451_fu_2830_p2);
    xor_ln452_1_fu_3174_p2 <= (state_0_s_q1 xor ap_const_lv64_8000000000000000);
    xor_ln452_2_fu_4107_p2 <= (state_s_2_q1 xor ap_const_lv64_8000000000000000);
    xor_ln452_3_fu_4359_p2 <= (state_s_1_q1 xor ap_const_lv64_8000000000000000);
    xor_ln452_fu_2843_p2 <= (state_s_2_q0 xor ap_const_lv64_8000000000000000);
    xor_ln48_fu_3880_p2 <= (tmp_14_fu_3872_p3 xor ap_const_lv1_1);
    xor_ln69_fu_5248_p2 <= (or_ln69_1_fu_5242_p2 xor ap_const_lv1_1);

    y_vec_coeffs_address0_assign_proc : process(ap_CS_fsm_state80, zext_ln125_fu_3665_p1, ap_CS_fsm_state82, tmp_31_fu_3687_p3, ap_CS_fsm_state84, tmp_32_fu_3713_p3, ap_CS_fsm_state86, tmp_33_fu_3739_p3, ap_CS_fsm_state148, grp_poly_uniform_gamma1_fu_2078_a_coeffs_address0, ap_CS_fsm_state79, zext_ln88_4_fu_4840_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state148)) then 
            y_vec_coeffs_address0 <= zext_ln88_4_fu_4840_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
            y_vec_coeffs_address0 <= tmp_33_fu_3739_p3(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            y_vec_coeffs_address0 <= tmp_32_fu_3713_p3(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            y_vec_coeffs_address0 <= tmp_31_fu_3687_p3(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            y_vec_coeffs_address0 <= zext_ln125_fu_3665_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            y_vec_coeffs_address0 <= grp_poly_uniform_gamma1_fu_2078_a_coeffs_address0;
        else 
            y_vec_coeffs_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    y_vec_coeffs_ce0_assign_proc : process(ap_CS_fsm_state80, ap_CS_fsm_state82, ap_CS_fsm_state84, ap_CS_fsm_state86, ap_CS_fsm_state148, grp_poly_uniform_gamma1_fu_2078_a_coeffs_ce0, ap_CS_fsm_state79)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state148))) then 
            y_vec_coeffs_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            y_vec_coeffs_ce0 <= grp_poly_uniform_gamma1_fu_2078_a_coeffs_ce0;
        else 
            y_vec_coeffs_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    y_vec_coeffs_we0_assign_proc : process(grp_poly_uniform_gamma1_fu_2078_a_coeffs_we0, ap_CS_fsm_state79)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            y_vec_coeffs_we0 <= grp_poly_uniform_gamma1_fu_2078_a_coeffs_we0;
        else 
            y_vec_coeffs_we0 <= ap_const_logic_0;
        end if; 
    end process;


    z_vec_coeffs_address0_assign_proc : process(zext_ln125_reg_5874, tmp_31_reg_5893, tmp_32_reg_5912, tmp_33_reg_5931, zext_ln182_17_reg_6291, ap_CS_fsm_state148, z_vec_coeffs_addr_5_reg_6340, ap_CS_fsm_state151, z_vec_coeffs_addr_6_reg_6366, ap_CS_fsm_state154, grp_invntt_tomont_fu_2140_a_address0, grp_pack_sig_fu_2149_z_vec_coeffs_address0, grp_ntt_1_fu_2164_a_address0, grp_polyvecl_pointwise_a_fu_2176_v_vec_coeffs_address0, ap_CS_fsm_state81, ap_CS_fsm_state83, ap_CS_fsm_state85, ap_CS_fsm_state87, ap_CS_fsm_state89, ap_CS_fsm_state91, ap_CS_fsm_state144, ap_CS_fsm_state146, ap_CS_fsm_state149, ap_CS_fsm_state152, ap_CS_fsm_state179, zext_ln88_4_fu_4840_p1, zext_ln33_2_fu_4902_p1, zext_ln301_2_fu_4972_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state154)) then 
            z_vec_coeffs_address0 <= zext_ln301_2_fu_4972_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state152)) then 
            z_vec_coeffs_address0 <= z_vec_coeffs_addr_6_reg_6366;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state151)) then 
            z_vec_coeffs_address0 <= zext_ln33_2_fu_4902_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state149)) then 
            z_vec_coeffs_address0 <= z_vec_coeffs_addr_5_reg_6340;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state148)) then 
            z_vec_coeffs_address0 <= zext_ln88_4_fu_4840_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state144)) then 
            z_vec_coeffs_address0 <= zext_ln182_17_reg_6291(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            z_vec_coeffs_address0 <= tmp_33_reg_5931(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            z_vec_coeffs_address0 <= tmp_32_reg_5912(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            z_vec_coeffs_address0 <= tmp_31_reg_5893(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            z_vec_coeffs_address0 <= zext_ln125_reg_5874(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            z_vec_coeffs_address0 <= grp_polyvecl_pointwise_a_fu_2176_v_vec_coeffs_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            z_vec_coeffs_address0 <= grp_ntt_1_fu_2164_a_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state179)) then 
            z_vec_coeffs_address0 <= grp_pack_sig_fu_2149_z_vec_coeffs_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            z_vec_coeffs_address0 <= grp_invntt_tomont_fu_2140_a_address0;
        else 
            z_vec_coeffs_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    z_vec_coeffs_address1_assign_proc : process(grp_invntt_tomont_fu_2140_a_address1, grp_ntt_1_fu_2164_a_address1, ap_CS_fsm_state89, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            z_vec_coeffs_address1 <= grp_ntt_1_fu_2164_a_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            z_vec_coeffs_address1 <= grp_invntt_tomont_fu_2140_a_address1;
        else 
            z_vec_coeffs_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    z_vec_coeffs_ce0_assign_proc : process(ap_CS_fsm_state148, ap_CS_fsm_state151, ap_CS_fsm_state154, grp_invntt_tomont_fu_2140_a_ce0, grp_pack_sig_fu_2149_z_vec_coeffs_ce0, grp_ntt_1_fu_2164_a_ce0, grp_polyvecl_pointwise_a_fu_2176_v_vec_coeffs_ce0, ap_CS_fsm_state81, ap_CS_fsm_state83, ap_CS_fsm_state85, ap_CS_fsm_state87, ap_CS_fsm_state89, ap_CS_fsm_state91, ap_CS_fsm_state144, ap_CS_fsm_state146, ap_CS_fsm_state149, ap_CS_fsm_state152, ap_CS_fsm_state179)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state152) or (ap_const_logic_1 = ap_CS_fsm_state149) or (ap_const_logic_1 = ap_CS_fsm_state144) or (ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state154) or (ap_const_logic_1 = ap_CS_fsm_state151) or (ap_const_logic_1 = ap_CS_fsm_state148))) then 
            z_vec_coeffs_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            z_vec_coeffs_ce0 <= grp_polyvecl_pointwise_a_fu_2176_v_vec_coeffs_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            z_vec_coeffs_ce0 <= grp_ntt_1_fu_2164_a_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state179)) then 
            z_vec_coeffs_ce0 <= grp_pack_sig_fu_2149_z_vec_coeffs_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            z_vec_coeffs_ce0 <= grp_invntt_tomont_fu_2140_a_ce0;
        else 
            z_vec_coeffs_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    z_vec_coeffs_ce1_assign_proc : process(grp_invntt_tomont_fu_2140_a_ce1, grp_ntt_1_fu_2164_a_ce1, ap_CS_fsm_state89, ap_CS_fsm_state146)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            z_vec_coeffs_ce1 <= grp_ntt_1_fu_2164_a_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            z_vec_coeffs_ce1 <= grp_invntt_tomont_fu_2140_a_ce1;
        else 
            z_vec_coeffs_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    z_vec_coeffs_d0_assign_proc : process(grp_invntt_tomont_fu_2140_a_d0, grp_ntt_1_fu_2164_a_d0, ap_CS_fsm_state81, ap_CS_fsm_state83, ap_CS_fsm_state85, ap_CS_fsm_state87, ap_CS_fsm_state89, ap_CS_fsm_state144, ap_CS_fsm_state146, ap_CS_fsm_state149, ap_CS_fsm_state152, sext_ln125_fu_3676_p1, sext_ln125_1_fu_3702_p1, sext_ln125_2_fu_3728_p1, sext_ln125_3_fu_3754_p1, add_ln88_fu_4850_p2, grp_fu_5288_p3, add_ln19_fu_4766_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state152)) then 
            z_vec_coeffs_d0 <= grp_fu_5288_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state149)) then 
            z_vec_coeffs_d0 <= add_ln88_fu_4850_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state144)) then 
            z_vec_coeffs_d0 <= add_ln19_fu_4766_p2(63 downto 32);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            z_vec_coeffs_d0 <= sext_ln125_3_fu_3754_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            z_vec_coeffs_d0 <= sext_ln125_2_fu_3728_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            z_vec_coeffs_d0 <= sext_ln125_1_fu_3702_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            z_vec_coeffs_d0 <= sext_ln125_fu_3676_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            z_vec_coeffs_d0 <= grp_ntt_1_fu_2164_a_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            z_vec_coeffs_d0 <= grp_invntt_tomont_fu_2140_a_d0;
        else 
            z_vec_coeffs_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    z_vec_coeffs_we0_assign_proc : process(grp_invntt_tomont_fu_2140_a_we0, grp_ntt_1_fu_2164_a_we0, ap_CS_fsm_state81, ap_CS_fsm_state83, ap_CS_fsm_state85, ap_CS_fsm_state87, ap_CS_fsm_state89, ap_CS_fsm_state144, ap_CS_fsm_state146, ap_CS_fsm_state149, ap_CS_fsm_state152)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state152) or (ap_const_logic_1 = ap_CS_fsm_state149) or (ap_const_logic_1 = ap_CS_fsm_state144) or (ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            z_vec_coeffs_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            z_vec_coeffs_we0 <= grp_ntt_1_fu_2164_a_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            z_vec_coeffs_we0 <= grp_invntt_tomont_fu_2140_a_we0;
        else 
            z_vec_coeffs_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln104_fu_5037_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_39_fu_5029_p3),12));
    zext_ln109_1_fu_5062_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln109_fu_5057_p2),64));
    zext_ln109_fu_5053_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i124_reg_1999),12));
    zext_ln125_fu_3665_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_ln125_reg_1558),64));
    zext_ln177_fu_4693_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_fu_4685_p3),12));
    zext_ln182_16_fu_4714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i101_reg_1899),12));
    zext_ln182_17_fu_4723_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln182_fu_4718_p2),64));
    zext_ln182_fu_4709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i101_reg_1899),64));
    zext_ln208_1_fu_2320_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln208_1_reg_5329),64));
    zext_ln208_fu_2310_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln208_fu_2305_p2),64));
    zext_ln222_fu_3803_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_fu_3795_p3),12));
    zext_ln227_1_fu_3828_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln227_fu_3823_p2),64));
    zext_ln227_fu_3819_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i84_reg_1637),12));
    zext_ln245_fu_5153_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_fu_5145_p3),12));
    zext_ln249_fu_5196_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(s_0_i_i_reg_2066),11));
    zext_ln250_1_fu_5190_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln250_fu_5185_p2),64));
    zext_ln250_fu_5181_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i88_reg_2055),12));
    zext_ln288_fu_4947_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_fu_4939_p3),12));
    zext_ln28_fu_4877_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_37_fu_4869_p3),12));
    zext_ln301_2_fu_4972_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln301_fu_4967_p2),64));
    zext_ln301_fu_4963_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i85_reg_1977),12));
    zext_ln31_6_fu_2752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_q0),64));
    zext_ln31_7_fu_2768_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln16_fu_2760_p3),64));
    zext_ln31_fu_2730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_reg_1361),64));
    zext_ln33_2_fu_4902_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln33_fu_4897_p2),64));
    zext_ln33_fu_4893_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i117_reg_1955),12));
    zext_ln363_1_fu_3119_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i_i_i_reg_1407),64));
    zext_ln363_2_fu_3948_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i_i_reg_1648),64));
    zext_ln363_3_fu_4306_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i_i136_i_reg_1727),64));
    zext_ln363_fu_2336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i4_i_reg_1215),64));
    zext_ln378_fu_3481_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln378_fu_3477_p1),11));
    zext_ln379_fu_3515_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_3501_p2),11));
    zext_ln380_fu_3524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i63_reg_1487),11));
    zext_ln381_1_fu_3553_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i63_reg_1487),64));
    zext_ln381_fu_3548_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln381_fu_3544_p1),64));
    zext_ln384_fu_3563_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buflen_fu_3558_p2),9));
    zext_ln385_fu_3578_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buflen_fu_3558_p2),11));
    zext_ln388_fu_2387_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_ln388_reg_1237),64));
    zext_ln401_1_fu_3989_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_i_i_i_reg_1670),5));
    zext_ln401_fu_2403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_i_i65_i_reg_1248),5));
    zext_ln402_1_fu_2437_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln402_fu_2431_p2),64));
    zext_ln402_2_fu_2448_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln402_1_fu_2442_p2),64));
    zext_ln402_3_fu_4013_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln402_1_fu_4005_p3),64));
    zext_ln402_4_fu_4024_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln402_2_fu_4018_p2),64));
    zext_ln402_fu_2427_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln14_fu_2419_p3),12));
    zext_ln409_1_fu_2467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_phi_ln403_phi_fu_1263_p4),64));
    zext_ln409_2_fu_2471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln409_fu_2459_p1),9));
    zext_ln409_fu_2463_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_phi_ln403_phi_fu_1263_p4),14));
    zext_ln411_1_fu_2549_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_2_i_i73_i_reg_1317),64));
    zext_ln411_2_fu_4061_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln411_2_fu_4055_p2),10));
    zext_ln411_3_fu_4071_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln411_3_fu_4065_p2),64));
    zext_ln411_4_fu_4076_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_2_i_i_i_reg_1705),64));
    zext_ln411_fu_2533_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln15_fu_2525_p3),64));
    zext_ln417_1_fu_3124_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_3_i_i_i_i_reg_1418),64));
    zext_ln417_2_fu_3953_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_3_i_i37_i_reg_1659),64));
    zext_ln417_3_fu_4311_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_3_i_i_i166_i_reg_1738),64));
    zext_ln417_fu_2341_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_3_i_i119_i_reg_1226),64));
    zext_ln418_1_fu_2376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln418_fu_2370_p2),8));
    zext_ln418_2_fu_2499_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln418_fu_2495_p1),5));
    zext_ln418_3_fu_2589_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln418_1_fu_2581_p3),64));
    zext_ln418_4_fu_2610_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln418_3_fu_2605_p2),64));
    zext_ln418_5_fu_3149_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln418_2_fu_3141_p3),8));
    zext_ln418_6_fu_3978_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln418_3_fu_3970_p3),8));
    zext_ln418_7_fu_4340_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln418_4_fu_4332_p3),64));
    zext_ln418_fu_2366_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_2358_p3),7));
    zext_ln419_2_fu_2622_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln_fu_2615_p3),9));
    zext_ln419_fu_2626_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln_fu_2615_p3),64));
    zext_ln420_fu_2630_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln_fu_2615_p3),14));
    zext_ln421_fu_2649_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln421_fu_2644_p2),10));
    zext_ln425_fu_2671_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_4_i_i80_i_reg_1339),64));
    zext_ln426_1_fu_2688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_5_i_i84_i_reg_1350),33));
    zext_ln426_fu_2680_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_5_i_i84_i_reg_1350),64));
    zext_ln427_fu_2713_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln427_2_fu_2708_p2),64));
    zext_ln428_fu_2744_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_2735_p4),64));
    zext_ln451_1_fu_2809_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln449_fu_2805_p1),64));
    zext_ln451_fu_2826_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln17_fu_2818_p3),64));
    zext_ln478_1_fu_4534_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i10_i_i_0_reg_1853),64));
    zext_ln478_fu_4378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i14_i_i_0_reg_1749),64));
    zext_ln47_fu_3649_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i74_reg_1546),16));
    zext_ln48_10_fu_4595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln48_1_fu_4590_p2),64));
    zext_ln48_4_fu_4571_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln48_1_fu_4563_p3),64));
    zext_ln48_7_fu_4430_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i86_reg_1761),8));
    zext_ln48_8_fu_4439_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln48_fu_4434_p2),64));
    zext_ln48_9_fu_4586_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i89_reg_1865),8));
    zext_ln48_fu_4415_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln21_fu_4407_p3),64));
    zext_ln526_1_fu_4461_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buf_q0),64));
    zext_ln526_2_fu_4477_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln20_fu_4469_p3),64));
    zext_ln526_fu_4456_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i177_i_reg_1772),64));
    zext_ln530_fu_4505_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_i_i_reg_1796),64));
    zext_ln538_1_fu_4611_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buf_q0),9));
    zext_ln538_fu_4606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_2_i_i_reg_1876),64));
    zext_ln541_1_fu_4644_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_2_i_i_reg_1807),64));
    zext_ln541_fu_4621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buf_q0),64));
    zext_ln542_1_fu_3181_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_3_i_i1_reg_1429),64));
    zext_ln542_2_fu_4114_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_3_i_i45_reg_1716),64));
    zext_ln542_fu_2850_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_3_i_i_reg_1395),64));
    zext_ln543_1_fu_2890_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln543_fu_2884_p2),64));
    zext_ln543_2_fu_3211_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln543_1_fu_3203_p3),8));
    zext_ln543_3_fu_3221_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln543_1_fu_3215_p2),64));
    zext_ln543_4_fu_4147_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln543_2_fu_4140_p3),64));
    zext_ln543_fu_2880_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln18_fu_2872_p3),8));
    zext_ln544_1_fu_2922_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln544_fu_2916_p2),64));
    zext_ln544_2_fu_3243_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln544_1_fu_3237_p2),8));
    zext_ln544_3_fu_3253_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln544_1_fu_3247_p2),64));
    zext_ln544_4_fu_4169_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln544_2_fu_4163_p2),64));
    zext_ln544_fu_2912_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln544_fu_2906_p2),8));
    zext_ln545_1_fu_3002_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln545_fu_2996_p2),64));
    zext_ln545_2_fu_3323_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln545_1_fu_3318_p2),8));
    zext_ln545_3_fu_3333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln545_1_fu_3327_p2),64));
    zext_ln545_4_fu_4239_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln545_2_fu_4234_p2),64));
    zext_ln545_fu_2992_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln545_fu_2987_p2),8));
    zext_ln546_1_fu_3022_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln546_fu_3016_p2),64));
    zext_ln546_2_fu_3343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln546_1_fu_3338_p2),8));
    zext_ln546_3_fu_3353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln546_1_fu_3347_p2),64));
    zext_ln546_4_fu_4249_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln546_2_fu_4244_p2),64));
    zext_ln546_fu_3012_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln546_fu_3007_p2),8));
    zext_ln547_1_fu_3042_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln547_fu_3036_p2),64));
    zext_ln547_2_fu_3363_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln547_1_fu_3358_p2),8));
    zext_ln547_3_fu_3373_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln547_1_fu_3367_p2),64));
    zext_ln547_4_fu_4259_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln547_2_fu_4254_p2),64));
    zext_ln547_fu_3032_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln547_fu_3027_p2),8));
    zext_ln548_1_fu_3062_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln548_fu_3056_p2),64));
    zext_ln548_2_fu_3383_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln548_1_fu_3378_p2),8));
    zext_ln548_3_fu_3393_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln548_1_fu_3387_p2),64));
    zext_ln548_4_fu_4269_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln548_2_fu_4264_p2),64));
    zext_ln548_fu_3052_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln548_fu_3047_p2),8));
    zext_ln549_1_fu_3082_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln549_fu_3076_p2),64));
    zext_ln549_2_fu_3403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln549_1_fu_3398_p2),8));
    zext_ln549_3_fu_3413_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln549_1_fu_3407_p2),64));
    zext_ln549_4_fu_4279_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln549_2_fu_4274_p2),64));
    zext_ln549_fu_3072_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln549_fu_3067_p2),8));
    zext_ln550_1_fu_3102_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln550_fu_3096_p2),64));
    zext_ln550_2_fu_3423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln550_1_fu_3418_p2),8));
    zext_ln550_3_fu_3433_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln550_1_fu_3427_p2),64));
    zext_ln550_4_fu_4289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln550_2_fu_4284_p2),64));
    zext_ln550_fu_3092_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln550_fu_3087_p2),8));
    zext_ln69_1_fu_5258_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln69_fu_5248_p2),32));
    zext_ln69_fu_5254_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln69_fu_5248_p2),9));
    zext_ln83_1_fu_5095_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_40_fu_5087_p3),12));
    zext_ln83_fu_4815_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_36_fu_4807_p3),12));
    zext_ln88_4_fu_4840_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln88_3_fu_4835_p2),64));
    zext_ln88_5_fu_5111_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i132_reg_2021),12));
    zext_ln88_6_fu_5120_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln88_4_fu_5115_p2),64));
    zext_ln88_fu_4831_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i109_reg_1933),12));
end behav;
